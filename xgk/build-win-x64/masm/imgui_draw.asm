; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS@@3QBDB DB '..-         -XXXXXXX-    X'
	DB	'    -           X           -XXXXXXX          -          XXXX'
	DB	'XXX-     XX          ..-         -X.....X-   X.X   -         '
	DB	' X.X          -X.....X          -          X.....X-    X..X  '
	DB	'       ---         -XXX.XXX-  X...X  -         X...X         '
	DB	'-X....X           -           X....X-    X..X         X      '
	DB	'     -  X.X  - X.....X -        X.....X        -X...X        '
	DB	'    -            X...X-    X..X         XX          -  X.X  -'
	DB	'X.......X-       X.......X       -X..X.X           -         '
	DB	'  X.X..X-    X..X         X.X         -  X.X  -XXXX.XXXX-    '
	DB	'   XXXX.XXXX       -X.X X.X          -          X.X X.X-    X'
	DB	'..XXX       X..X        -  X.X  -   X.X   -          X.X     '
	DB	'     -XX   X.X         -         X.X   XX-    X..X..XXX    X.'
	DB	'..X       -  X.X  -   X.X   -    XX    X.X    XX    -      X.'
	DB	'X        -        X.X      -    X..X..X..XX  X....X      -  X'
	DB	'.X  -   X.X   -   X.X    X.X    X.X   -       X.X       -    '
	DB	'   X.X       -    X..X..X..X.X X.....X     -  X.X  -   X.X   '
	DB	'-  X..X    X.X    X..X  -        X.X      -      X.X        -'
	DB	'XXX X..X..X..X..XX......X    -  X.X  -   X.X   - X...XXXXXX.X'
	DB	'XXXXX...X -         X.X   XX-XX   X.X         -X..XX........X'
	DB	'..XX.......X   -  X.X  -   X.X   -X.....................X-   '
	DB	'       X.X X.X-X.X X.X          -X...X...........XX........X '
	DB	' -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -           X.X..X'
	DB	'-X..X.X           - X..............XX.........X -XXX.XXX-   X'
	DB	'.X   -  X..X    X.X    X..X  -            X...X-X...X        '
	DB	'    -  X.............XX..........X-X.....X-   X.X   -   X.X  '
	DB	'  X.X    X.X   -           X....X-X....X           -  X......'
	DB	'.......XX......XXXXX-XXXXXXX-   X.X   -    XX    X.X    XX   '
	DB	' -          X.....X-X.....X          -   X............XX...X.'
	DB	'.X    ---------   X.X   -          X.X          -          XX'
	DB	'XXXXX-XXXXXXX          -   X...........X X..X X..X   -       '
	DB	'-XXXX.XXXX-       XXXX.XXXX       ---------------------------'
	DB	'----------    X..........X X.X  X..X   -       -X.......X-   '
	DB	'    X.......X       -    XX           XX    -           -    '
	DB	'X..........X XX    X..X  -       - X.....X -        X.....X  '
	DB	'      -   X.X           X.X   -           -     X........X   '
	DB	'     X..X          -  X...X  -         X...X         -  X..X '
	DB	'          X..X  -           -     X........X         XX      '
	DB	'     -   X.X   -          X.X          - X...XXXXXXXXXXXXX...'
	DB	'X -           -     XXXXXXXXXX  ------------        -    X   '
	DB	' -           X           -X.....................X-           '
	DB	'------------------                    -----------------------'
	DB	'------------ X...XXXXXXXXXXXXX...X -                         '
	DB	'                                                          -  '
	DB	'X..X           X..X  -                                       '
	DB	'                                            -   X.X          '
	DB	' X.X   -                                                     '
	DB	'                              -    XX           XX    -      '
	DB	'                       ', 00H		; FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS
	ORG $+11
?proggy_clean_ttf_compressed_data_base85@@3QBDB DB '7])#######hV0qs''/###'
	DB	'[),##/l:$#Q6>##5[n42>c-TH`->>#/e>11NNV=Bv(*:.F?uu#(gRU.o0XGH`'
	DB	'$vhLG1hxt9?W`#,5LsCp#-i>.r$<$6pD>Lb'';9Crc6tgXmKVeU2cD4Eo3R/2'
	DB	'*>]b(MC;$jPfY.;h^`IWM9<Lh2TlS+f-s$o6Q<BWH`YiU.xfLq$N;$0iR/GX:'
	DB	'U(jcW2p/W*q?-qmnUCI;jHSAiFWM.R*kU@C=GH?a9wp8f$e.-4^Qg1)Q-GL(l'
	DB	'f(r/7GrRgwV%MS=C#`8ND>Qo#t''X#(v#Y9w0#1D$CIf;W''#pWUPXOuxXuU('
	DB	'H9M(1<q-UE31#^-V''8IRUo7Qf./L>=Ke$$''5F%)]0^#0X@U.a<r:QLtFsLc'
	DB	'L6##lOj)#.Y5<-R&KgLwqJfLgN&;Q?gI^#DY2uLi@^rMl9t=cWq6##weg>$FB'
	DB	'jVQTSDgEKnIS7EM9>ZY9w0#L;>>#Mx&4Mvt//L[MkA#W@lK.N''[0#7RL_&#w'
	DB	'+F%HtG9M#XL`N&.,GM4Pg;-<nLENhvx>-VsM.M0rJfLH2eTM`*oJMHRC`Nkfi'
	DB	'mM2J,W-jXS:)r0wK#@Fge$U>`w''N7G#$#fB#$E^$#:9:hk+eOe--6x)F7*E%'
	DB	'?76%^GMHePW-Z5l''&GiF#$956:rS?dA#fiK:)Yr+`&#0j@''DbG&#^$PG.Ll'
	DB	'+DNa<XCMKEV*N)LN/N*b=%Q6pia-Xg8I$<MR&,VdJe$<(7G;Ckl''&hF;;$<_'
	DB	'=X(b.RS%%)###MPBuuE1V:v&cX&#2m#(&cV]`k9OhLMbn%s$G2,B$BfD3X*sp'
	DB	'5#l,$R#]x_X1xKX%b5U*[r5iMfUo9U`N99hG)tm+/Us9pG)XPu`<0s-)WTt(g'
	DB	'CRxIg(%6sfh=ktMKn3j)<6<b5Sk_/0(^]AaN#(p/L>&VZ>1i%h1S9u5o@YaaW'
	DB	'$e+b<TWFn/Z:Oh(Cx2$lNEoN^e)#CFY@@I;BOQ*sRwZtZxRcU7uW6CXow0i(?'
	DB	'$Q[cjOd[P4d)]>ROPOpxTO7Stwi1::iB1q)C_=dV26J;2,]7op$]uQr@_V7$q'
	DB	'^%lQwtuHY]=DX,n3L#0PHDO4f9>dC@O>HBuKPpP*E,N+b3L#lpR/MrTEH.IAQ'
	DB	'k.a>D[.e;mc.x]Ip.PH^''/aqUO/$1WxLoW0[iLA<QT;5HKD+@qQ''NQ(3_PL'
	DB	'hE48R.qAPSwQ0/WK?Z,[x?-J;jQTWA0X@KJ(_Y8N-:/M74:/-ZpKrUss?d#dZ'
	DB	'q]DAbkU*JqkL+nwX@@47`5>w=4h(9.`GCRUxHPeR`5Mjol(dUWxZa(>STrPkr'
	DB	'JiWx`5U7F#.g*jrohGg`cg:lSTvEY/EV_7H4Q9[Z%cnv;JQYZ5q.l7Zeas:HO'
	DB	'IZOB?G<Nald$qs]@]L<J7bR*>gv:[7MI2k).''2($5FNP&EQ(,)U]W]+fh18.'
	DB	'vsai00);D3@4ku5P?DP8aJt+;qUM]=+b''8@;mViBKx0DE[-auGl8:PJ&Dj+M'
	DB	'6OC]O^((##]`0i)drT;-7X`=-H3[igUnPG-NZlo.#k@h#=Ork$m>a>$-?Tm$U'
	DB	'V(?#P6YY#''/###xe7q.73rI3*pP/$1>s9)W,JrM7SN]''/4C#v$U`0#V.[0>'
	DB	'xQsH$fEmPMgY2u7Kh(G%siIfLSoS+MK2eTM$=5,M8p`A.;_R%#u[K#$x4AG8.'
	DB	'kK/HSB==-''Ie/QTtG?-.*^N-4B/ZM_3YlQC7(p7q)&](`6_c)$/*JL(L-^(]'
	DB	'$wIM`dPtOdGA,U3:w2M-0<q-]L_?^)1vw''.,MRsqVr.L;aN&#/EgJ)PBc[-f'
	DB	'>+WomX2u7lqM2iEumMTcsF?-aT=Z-97UEnXglEn1K-bnEO`guFt(c%=;Am_Qs'
	DB	'@jLooI&NX;]0#j4#F14;gl8-GQpgwhrq8''=l_f-b49''UOqkLu7-##oDY2L('
	DB	'te+Mch&gLYtJ,MEtJfLh''x''M=$CS-ZZ%P]8bZ>#S?YY#%Q&q''3^Fw&?D)U'
	DB	'DNrocM3A76//oL?#h7gl85[qW/NDOk%16ij;+:1a''iNIdb-ou8.P*w,v5#EI'
	DB	'$TWS>Pot-R*H''-SEpA:g)f+O$%%`kA#G=8RMmG1&O`>to8bC]T&$,n.LoO>2'
	DB	'9sp3dt-52U%VM#q7''DHpg+#Z9%H[K<L%a2E-grWVM3@2=-k22tL]4$##6We'''
	DB	'8UJCKE[d_=%wI;''6X-GsLX4j^SgJ$##R*w,vP3wK#iiW&#*h^D&R?jp7+/u&'
	DB	'#(AP##XU8c$fSYW-J95_-Dp[g9wcO&#M-h1OcJlc-*vpw0xUX&#OQFKNX@QI'''
	DB	'IoPp7nb,QU//MQ&ZDkKP)X<WSVL(68uVl&#c''[0#(s1X&xm$Y%B7*K:eDA32'
	DB	'3j998GXbA#pwMs-jgD$9QISB-A_(aN4xoFM^@C58D0+Q+q3n0#3U1InDjF682'
	DB	'-SjMXJK)(h$hxua_K]ul92%''BOU&#BRRh-slg8KDlr:%L71Ka:.A;%YULjDP'
	DB	'mL<LYs8i#XwJOYaKPKc1h:''9Ke,g)b),78=I39B;xiY$bgGw-&.Zi9InXDuY'
	DB	'a%G*f2Bq7mn9^#p1vv%#(Wi-;/Z5ho;#2:;%d&#x9v68C5g?ntX0X)pT`;%pB'
	DB	'3q7mgGN)3%(P8nTd5L7GeA-GL@+%J3u2:(Yf>et`e;)f#Km8&+DC$I46>#Kr]'
	DB	']u-[=99tts1.qb#q72g1WJO81q+eN''03''eM>&1XxY-caEnOj%2n8)),?ILR'
	DB	'5^.Ibn<-X-Mq7[a82Lq:F&#ce+S9wsCK*x`569E8ew''He]h:sI[2LM$[guka'
	DB	'3ZRd6:t%IG:;$%YiJ:Nq=?eAw;/:nnDq0(CYcMpG)qLN4$##&J<j$UpK<Q4a1'
	DB	']MupW^-sj_$%[HK%''F####QRZJ::Y3EGl4''@%FkiAOg#p[##O`gukTfBHag'
	DB	'L<LHw%q&OV0##F=6/:chIm0@eCP8X]:kFI%hl8hgO@RcBhS-@Qb$%+m=hPDLg'
	DB	'*%K8ln(wcf3/''DW-$.lR?n[nCH-eXOONTJlh:.RYF%3''p6sq:UIMA945&^H'
	DB	'FS87@$EP2iG<-lCO$%c`uKGD3rC$x0BL8aFn--`ke%#HMP''vh1/R&O_J9''u'
	DB	'm,.<tx[@%wsJk&bUT2`0uMv7gg#qp/ij.L56''hl;.s5CUrxjOM7-##.l+Au'''
	DB	'A&O:-T72L]P`&=;ctp''XScX*rU.>-XTt,%OVU4)S1+R-#dg0/Nn?Ku1^0f$B'
	DB	'*P:Rowwm-`0PKjYDDM''3]d39VZHEl4,.j'']Pk-M.h^&:0FACm$maq-&sgw0'
	DB	't7/6(^xtk%LuH88Fj-ekm>GA#_>568x6(OFRl-IZp`&b,_P''$M<Jnq79VsJW'
	DB	'/mWS*PUiq76;]/NM_>hLbxfc$mj`,O;&%W2m`Zh:/)Uetw:aJ%]K9h:TcF]u_'
	DB	'-Sj9,VK3M.*''&0D[Ca]J9gp8,kAW]%(?A%R$f<->Zts''^kn=-^@c4%-pY6q'
	DB	'I%J%1IGxfLU9CP8cbPlXv);C=b),<2mOvP8up,UVf3839acAWAW-W?#ao/^#%'
	DB	'KYo8fRULNd2.>%m]UK:n%r$''sw]J;5pAoO_#2mO3n,''=H5(etHg*`+RLgv>'
	DB	'=4U8guD$I%D:W>-r5V*%j*W:Kvej.Lp$<M-SGZ'':+Q_k+uvOSLiEo(<aD/K<'
	DB	'CCc`''Lx>''?;++O''>()jLR-^u68PHm8ZFWe+ej8h:9r6L*0//c&iH&R8pRb'
	DB	'A#Kjm%upV1g:a_#Ur7FuA#(tRh#.Y5K+@?3<-8m0$PEn;J:rh6?I6uG<-`wMU'
	DB	'''ircp0LaE_OtlMb&1#6T.#FDKu#1Lw%u%+GM+X''e?YLfjM[VO0MbuFp7;>Q'
	DB	'&#WIo)0@F%q7c#4XAXN-U&VB<HFF*qL($/V,;(kXZejWO`<[5??ewY(*9=%wD'
	DB	'c;,u<''9t3W-(H1th3+G]ucQ]kLs7df($/*JL]@*t7Bu_G3_7mp7<iaQjO@.k'
	DB	'Lg;x3B0lqp7Hf,^Ze7-##@/c58Mo(3;knp0%)A7?-W+eI''o8)b<nKnw''Ho8'
	DB	'C=Y>pqB>0ie&jhZ[?iLR@@_AvA-iQC(=ksRZRVp7`.=+NpBC%rh&3]R:8XDmE'
	DB	'5^V8O(x<<aG/1N$#FX$0V5Y6x''aErI3I$7x%E`v<-BY,)%-?Psf*l?%C3.mM'
	DB	'(=/M0:JxG''?7WhH%o''a<-80g0NBxoO(GH<dM]n.+%q@jH?f.UsJ2Ggs&4<-'
	DB	'e47&Kl+f//9@`b+?.TeN_&B8Ss?v;^Trk;f#YvJkl&w$]>-+k?''(<S:68tq*'
	DB	'WoDfZu'';mM?8X[ma8W%*`-=;D.(nc7/;)g:T1=^J$&BRV(-lTmNB6xqB[@0*'
	DB	'o.erM*<SWF]u2=st-*(6v>^](H.aREZSi,#1:[IXaZFOm<-ui#qUq2$##Ri;u'
	DB	'75OK#(RtaW-K-F`S+cF]uN`-KMQ%rP/Xri.LRcB##=YL3BgM/3MD?@f&1''BW'
	DB	'-)Ju<L25gl8uhVm1hL$##*8###''A3/LkKW+(^rWX?5W_8g)a(m&K8P>#bmmW'
	DB	'CMkk&#TR`C,5d>g)F;t,4:@_l8G/5h4vUd%&%950:VXD''QdWoY-F$BtUwmfe'
	DB	'$YqL''8(PWX(P?^@Po3$##`MSs?DWBZ/S>+4%>fX,VWv/w''KD`LP5IbH;rTV'
	DB	'>n3cEK8U#bX]l-/V+^lj3;vlMb&[5YQ8#pekX9JP3XUC72L,,?+Ni&co7ApnO'
	DB	'*5NK,((W-i:$,kp''UDAO(G0Sq7MVjJsbIu)''Z,*[>br5fX^:FPAWr-m2KgL'
	DB	'<LUN098kTF&#lvo58=/vjDo;.;)Ka*hLR#/k=rKbxuV`>Q_nN6''8uTG&#1T5'
	DB	'g)uLv:873UpTLgH+#FgpH''_o1780Ph8KmxQJ8#H72L4@768@Tm&Qh4CB/5Ov'
	DB	'mA&,Q&QbUoi$a_%3M01H)4x7I^&KQVgtFnV+;[Pc>[m4k//,]1?#`VY[Jr*3&'
	DB	'&slRfLiVZJ:]?=K3Sw=[$=uRB?3xk48@aeg<Z''<$#4H)6,>e0jT6''N#(q%.'
	DB	'O=?2S]u*(m<-V8J''(1)G][68hW$5''q[GC&5j`TE?m''esFGNRM)j,ffZ?-q'
	DB	'x8;->g4t*:CIP/[Qap7/9''#(1sao7w-.qNUdkJ)tCF&#B^;xGvn2r9FEPFFF'
	DB	'cL@.iFNkTve$m%#QvQS8U@)2Z+3K:AKM5isZ88+dKQ)W6>J%CL<KE>`.d*(B`'
	DB	'-n8D9oK<Up]c$X$(,)M8Zt7/[rdkqTgl-0cuGMv''?>-XV1q[''-5k''cAZ69'
	DB	'e;D_?$ZPP&s^+7])$*$#@QYi9,5P&#9r+$%CE=68>K8r0=dSC%%(@p7.m7jil'
	DB	'Q02''0-VWAg<a/''''3u.=4L$Y)6k/K:_[3=&jvL<L0C/2''v:^;-DIBW,B4E'
	DB	'68:kZ;%?8(Q8BH=kO65BW?xSG&#@uU,DS*,?.+(o(#1vCS8#CHF>TlGW''b)T'
	DB	'q7VT9q^*^$$.:&N@@$&)WHtPm*5_rO0&e%K&#-30j(E4#''Zb.o/(Tpm$>K'''
	DB	'f@[PvFl,hfINTNU6u''0pao7%XUp9]5.>%h`8_=VYbxuel.NTSsJfLacFu3B'''
	DB	'lQSu/m6-Oqem8T+oE--$0a/k]uj9EwsG>%veR*hv^BFpQj:K''#SJ,sB-''#]'
	DB	'(j.Lg92rTw-*n%@/;39rrJF,l#qV%OrtBeC6/,;qB3ebNW[?,Hqj2L.1NP&Gj'
	DB	'UR=1D8QaS3Up&@*9wP?+lo7b?@%''k4`p0Z$22%K3+iCZj?XJN4Nm&+YF]u@-'
	DB	'W$U%VEQ/,,>>#)D<h#`)h0:<Q6909ua+&VU%n2:cG3FJ-%@Bj-DgLr`Hw&HAK'
	DB	'jKjseK</xKT*)B,N9X3]krc12t''pgTV(Lv-tL[xg_%=M_q7a^x?7Ubd>#%8c'
	DB	'Y#YZ?=,`Wdxu/ae&#w6)R89tI#6@s''(6Bf7a&?S=^ZI_kS&ai`&=tE72L_D,'
	DB	';^R)7[$s<Eh#c&)q.MXI%#v9ROa5FZO%sF7q7Nwb&#ptUJ:aqJe$Sl68%.D##'
	DB	'#EC><?-aF&#RNQv>o8lKN%5/$(vdfq7+ebA#u1p]ovUKW&Y%q]''>$1@-[xfn'
	DB	'$7ZTp7mM,G,Ko7a&Gu%G[RMxJs[0MM%wci.LFDK)(<c`Q8N)jEIF*+?P2a8g%'
	DB	')$q]o2aH8C&<SibC/q,(e:v;-b#6[$NtDZ84Je2KNvB#$P5?tQ3nt(0d=j.LQ'
	DB	'f./Ll33+(;q3L-w=8dX$#WF&uIJ@-bfI>%:_i2B5CsR8&9Z&#=mPEnm0f`<&c'
	DB	')QL5uJ#%u%lJj+D-r;BoF&#4DoS97h5g)E#o:&S4weDF,9^Hoe`h*L+_a*NrL'
	DB	'W-1pG_&2UdB86e%B/:=>)N4xeW.*wft-;$''58-ESqr<b?UI(_%@[P46>#U`'''
	DB	'6AQ]m&6/`Z>#S?YY#Vc;r7U2&326d=w&H####?TZ`*4?&.MK?LP8Vxg>$[QXc'
	DB	'%QJv92.(Db*B)gb*BM9dM*hJMAo*c&#b0v=Pjer]$gG&JXDf->''StvU7505l'
	DB	'9$AFvgYRI^&<^b68?j#q9QX4SM''RO#&sL1IM.rJfLUAj221]d##DW=m83u5;'
	DB	'''bYx,*Sl0hL(W;;$doB&O/TQ:(Z^xBdLjL<Lni;''''X.`$#8+1GD:k$YUWs'
	DB	'bn8ogh6rxZ2Z9]%nd+>V#*8U_72Lh+2Q8Cj0i:6hp&$C/:p(HK>T8Y[gHQ4`4'
	DB	')''$Ab(Nof%V''8hL&#<NEdtg(n''=S1A(Q1/I&4([%dM`,Iu''1:_hL>SfD0'
	DB	'7&6D<fp8dHM7/g+tlPN9J*rKaPct&?''uBCem^jn%9_K)<,C5K3s=5g&GmJb*'
	DB	'[SYq7K;TRLGCsM-$$;S%:Y@r7AK0pprpL<Lrh,q7e/%KWK:50I^+m''vi`3?%'
	DB	'Zp+<-d+$L-Sv:@.o19n$s0&39;kn;S%BSq*$3WoJSCLweV[aZ''MQIjO<7;X-'
	DB	'X;&+dMLvu#^UsGEC9WEc[X(wI7#2.(F0jV*eZf<-Qv3J-c+J5AlrB#$p(H68L'
	DB	'vEA''q3n0#m,[`*8Ft)FcYgEud]CWfm68,(aLA$@EFTgLXoBq/UPlp7:d[/;r'
	DB	'_ix=:TF`S5H-b<LI&HY(K=h#)]Lk$K14lVfm:x$H<3^Ql<M`$OhapBnkup''D'
	DB	'#L$Pb_`N*g]2e;X/Dtg,bsj&K#2[-:iYr''_wgH)NUIR8a1n#S?Yej''h8^58'
	DB	'UbZd+^FKD*T@;6A7aQC[K8d-(v6GI$x:T<&''Gp5Uf>@M.*J:;$-rv29''M]8'
	DB	'qMv-tLp,''886iaC=Hb*YJoKJ,(j%K=H`K.v9HggqBIiZu''QvBT.#=)0ukru'
	DB	'V&.)3=(^1`o*Pj4<-<aN((^7(''#Z0wK#5GX@7u][`*S^43933A4rl][`*O4C'
	DB	'gLEl]v$1Q3AeF37dbXk,.)vj#x''d`;qgbQR%FW,2(?LO=s%Sc68%NP''##Ao'
	DB	'tl8x=BE#j1UD([3$M(]UI2LX3RpKN@;/#f''f/&_mt&F)XdF<9t4)Qa.*kTLw'
	DB	'Q''(TTB9.xH''>#MJ+gLq9-##@HuZPN0]u:h7.T..G:;$/Usj(T7`Q8tT72Ln'
	DB	'Yl<-qx8;-HV7Q-&Xdx%1a,hC=0u+HlsV>nuIQL-5<N?)NBS)QN*_I,?&)2''I'
	DB	'M%L3I)X((e/dl2&8''<M:^#M*Q+[T.Xri.LYS3v%fF`68h;b-X[/En''CR.q7'
	DB	'E)p''/kle2HM,u;^%OKC-N+Ll%F9CF<Nf''^#t2L,;27W:0O@6##U6W7:$rJf'
	DB	'LWHj$#)woqBefIZ.PK<b*t7ed;p*_m;4ExK#h@&]>_>@kXQtMacfD.m-VAb8;'
	DB	'IReM3$wf0''''hra*so568''Ip&vRs849''MRYSp%:t:h5qSgwpEr$B>Q,;s('
	DB	'C#$)`svQuF$##-D,##,g68@2[T;.XSdN9Qe)rpt._K-#5wF)sP''##p#C0c%-'
	DB	'Gb%hd+<-j''Ai*x&&HMkT]C''OSl##5RG[JXaHN;d''uA#x._U;.`PU@(Z3dt'
	DB	'4r152@:v,''R.Sj''w#0<-;kPI)FfJ&#AYJ&#//)>-k=m=*XnK$>=)72L]0I%'
	DB	'>.G690a:$##<,);?;72#?x9+d;^V''9;jY@;)br#q^YQpx:X#Te$Z^''=-=bG'
	DB	'hLf:D6&bNwZ9-ZD#n^9HhLMr5G;'']d&6''wYmTFmL<LD)F^%[tC''8;+9E#C'
	DB	'$g%#5Y>q9wI>P(9mI[>kC-ekLC/R&CH+s''B;K-M6$EB%is00:+A4[7xks.Lr'
	DB	'Nk0&E)wILYF@2L''0Nb$+pv<(2.768/FrY&h$^3i&@+G%JT''<-,v`3;_)I9M'
	DB	'^AE]CN?Cl2AZg+%4iTpT3<n-&%H%b<FDj2M<hH=&Eh<2Len$b*aTX=-8QxN)k'
	DB	'11IM1c^j%9s<L<NFSo)B?+<-(GxsF,^-Eh@$4dXhN$+#rxK8''je''D7k`e;)'
	DB	'2pYwPA''_p9&@^18ml1^[@g4t*[JOa*[=Qp7(qJ_oOL^(''7fB&Hq-:sf,sNj'
	DB	'8xq^>$U4O]GKx''m9)b@p7YsvK3w^YR-CdQ*:Ir<($u&)#(&?L9Rg3H)4fiEp'
	DB	'^iI9O8KnTj,]H?D*r7''M;PwZ9K0E^k&-cpI;.p/6_vwoFMV<->#%Xi.LxVnr'
	DB	'U(4&8/P+:hLSKj$#U%]49t''I:rgMi''FL@a:0Y-uA[39'',(vbma*hU%<-SR'
	DB	'F`Tt:542R_VV$p@[p8DV[A,?1839FWdF<TddF<9Ah-6&9tWoDlh]&1SpGMq>T'
	DB	'i1O*H&#(AL8[_P%.M>v^-))qOT*F5Cq0`Ye%+$B6i:7@0IX<N+T+0MlMBPQ*V'
	DB	'j>SsD<U4JHY8kD2)2fU/M#$e.)T4,_=8hLim[&);?UkK''-x?''(:siIfL<$p'
	DB	'FM`i<?%W(mGDHM%>iWP,##P`%/L<eXi:@Z9C.7o=@(pXdAO/NLQ8lPl+HPOQa'
	DB	'8wD8=^GlPa8TKI1CjhsCTSLJM''/Wl>-S(qw%sf/@%#B6;/U7K]uZbi^Oc^2n'
	DB	'<bhPmUkMw>%t<)''mEVE''''n`WnJra$^TKvX5B>;_aSEK'',(hwa0:i4G?.B'
	DB	'ci.(X[?b*($,=-n<.Q%`(X=?+@Am*Js0&=3bh8K]mL<LoNs''6,''85`0?t/'''
	DB	'_U59@]ddF<#LdF<eWdF<OuN/45rY<-L@&#+fm>69=Lb,OcZV/);TTm8VI;?%O'
	DB	'tJ<(b4mq7M6:u?KRdF<gR@2L=FNU-<b[(9c/ML3m;Z[$oF3g)GAWqpARc=<RO'
	DB	'u7cL5l;-[A]%/+fsd;l#SafT/f*W]0=O''$(Tb<[)*@e775R-:Yob%g*>l*:x'
	DB	'P?Yb.5)%w_I?7uk5JC+FS(m#i''k.''a0i)9<7b''fs''59hq$*5Uhv##pi^8'
	DB	'+hIEBF`nvo`;''l0.^S1<-wUK2/Coh58KKhLjM=SO*rfO`+qC`W-On.=AJ56>'
	DB	'>i2@2LH6A:&5q`?9I3@@''04&p2/LVa*T-4<-i3;M9UvZd+N7>b*eIwg:CC)c'
	DB	'<>nO&#<IGe;__.thjZl<%w(Wk2xmp4Q@I#I9,DF]u7-P=.-_:YJ]aS@V?6*C('
	DB	')dOp7:WL,b&3Rg/.cmM9&r^>$(>.Z-I&J(Q0Hd5Q%7Co-b`-c<N(6r@ip+Aur'
	DB	'K<m86QIth*#v;-OBqi+L7wDE-Ir8K[''m+DDSLwK&/.?-V%U_%3:qKNu$_b*B'
	DB	'-kp7NaD''QdWQPKYq[@>P)hI;*_F]u`Rb[.j8_Q/<&>uu+VsH$sM9TA%?)(vm'
	DB	'J80),P7E>)tjD%2L=-t#fK[%`v=Q8<FfNkgg^oIbah*#8/Qt$F&:K*-(N/''+'
	DB	'1vMB,u()-a.VUU*#[e%gAAO(S>WlA2);Sa>gXm8YB`1d@K#n]76-a$U,mF<fX'
	DB	']idqd)<3,]J7JmW4`6]uks=4-72L(jEk+:bJ0M^q-8Dm_Z?0olP1C9Sa&H[d&'
	DB	'c$ooQUj]Exd*3ZM@-WGW2%s'',B-_M%>%Ul:#/''xoFM9QX-$.QN''>[%$Z$u'
	DB	'F6pA6Ki2O5:8w*vP1<-1`[G,)-m#>0`P&#eb#.3i)rtB61(o''$?X3B</R90;'
	DB	'eZ]%Ncq;-Tl]#F>2Qft^ae_5tKL9MUe9b*sLEQ95C&`=G?@Mj=wh*''3E>=-<'
	DB	')Gt*Iw)''QG:`@IwOf7&]1i''S01B+Ev/Nac#9S;=;YQpg_6U`*kVY39xK,[/'
	DB	'6Aj7:''1Bm-_1EYfa1+o&o4hp7KN_Q(OlIo@S%;jVdn0''1<Vc52=u`3^o-n1'
	DB	'''g4v58Hj&6_t7$##?M)c<$bgQ_''SY((-xkA#Y(,p''H9rIVY-b,''%bCPF7'
	DB	'.J<Up^,(dU1VY*5#WkTU>h19w,WQhLI)3S#f$2(eb,jr*b;3Vw]*7NH%$c4Vs'
	DB	',eD9>XW8?N]o+(*pgC%/72LV-u<Hp,3@e^9UB1J+ak9-TN/mhKPg+AJYd$Mlv'
	DB	'AF_jCK*.O-^(63adMT->W%iewS8W6m2rtCpo''RS1R84=@paTKt)>=%&1[)*v'
	DB	'p''u+x,VrwN;&]kuO9JDbg=pO$J*.jVe;u''m0dr9l,<*wMK*Oe=g8lV_KEBF'
	DB	'kO''oU]^=[-792#ok,)i]lR8qQ2oA8wcRCZ^7w/Njh;?.stX?Q1>S1q4Bn$)K'
	DB	'1<-rGdO''$Wr.Lc.CG)$/*JL4tNR/,SVO3,aUw''DJN:)Ss;wGn9A32ijw%FL'
	DB	'+Z0Fn.U9;reSq)bmI32U==5ALuG&#Vf1398/pVo1*c-(aY168o<`JsSbk-,1N'
	DB	';$>0:OUas(3:8Z972LSfF8eb=c-;>SPw7.6hn3m`9^Xkn(r.qS[0;T%&Qc=+S'
	DB	'TRxX''q1BNk3&*eu2;&8q$&x>Q#Q7^Tf+6<(d%ZVmj2bDi%.3L2n+4W''$PiD'
	DB	'DG)g,r%+?,$@?uou5tSe2aN_AQU*<h`e-GI7)?OK2A.d7_c)?wQ5AS@DL3r#7'
	DB	'fSkgl6-++D:''A,uq7SvlB$pcpH''q3n0#_%dY#xCpr-l<F0NR@-##FEV6NTF'
	DB	'6##$l84N1w?AO>''IAOURQ##V^Fv-XFbGM7Fl(N<3DhLGF%q.1rC$#:T__&Pi'
	DB	'68%0xi_&[qFJ(77j_&JWoF.V735&T,[R*:xFR*K5>>#`bW-?4Ne_&6Ne_&6Ne'
	DB	'_&n`kr-#GJcM6X;uM6X;uM(.a..^2TkL%oR(#;u.T%fAr%4tJ8&><1=GHZ_+m'
	DB	'9/#H1F^R#SC#*N=BA9(D?v[UiFY>>^8p,KKF.W]L29uLkLlu/+4T<XoIB&hx='
	DB	'T1PcDaB&;HH+-AFr?(m9HZV)FKS8JCw;SD=6[^/DZUL`EUDf]GGlG&>w$)F./'
	DB	'^n3+rlo+DB;5sIYGNk+i1t-69Jg--0pao7Sm#K)pdHW&;LuDNH@H>#/X-TI(;'
	DB	'P>#,Gc>#0Su>#4`1?#8lC?#<xU?#@.i?#D:%@#HF7@#LRI@#P_[@#Tkn@#Xw*'
	DB	'A#]-=A#a9OA#d<F&#*;G##.GY##2Sl##6`($#:l:$#>xL$#B.`$#F:r$#JF.%'
	DB	'#NR@%#R_R%#Vke%#Zww%#_-4&#3^Rh%Sflr-k''MS.o?.5/sWel/wpEM0%3'''
	DB	'/1)K^f1-d>G21&v(35>V`39V7A4=onx4A1OY5EI0;6Ibgr6M$HS7Q<)58C5w,'
	DB	';WoA*#[%T*#`1g*#d=#+#hI5+#lUG+#pbY+#tnl+#x$),#&1;,#*=M,#.I`,#'
	DB	'2Ur,#6b.-#;w[H#iQtA#m^0B#qjBB#uvTB##-hB#''9$C#+E6C#/QHC#3^ZC#'
	DB	'7jmC#;v)D#?,<D#C8ND#GDaD#KPsD#O]/E#g1A5#KA*1#gC17#MGd;#8(02#L'
	DB	'-d3#rWM4#Hga1#,<w0#T.j<#O#''2#CYN1#qa^:#_4m3#o@/=#eG8=#t8J5#`'
	DB	'+78#4uI-#m3B2#SB[8#Q0@8#i[*9#iOn8#1Nm;#^sN9#qh<9#:=x-#P;K2#$%'
	DB	'X9#bC+.#Rg;<#mN=.#MTF.#RZO.#2?)4#Y#(/#[)1/#b;L/#dAU/#0Sv;#lY$'
	DB	'0#n`-0#sf60#(F24#wrH0#%/e0#TmD<#%JSMFove:CTBEXI:<eh2g)B,3h2^G'
	DB	'3i;#d3jD>)4kMYD4lVu`4m`:&5niUA5@(A5BA1]PBB:xlBCC=2CDLXMCEUtiC'
	DB	'f&0g2''tN?PGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CP'
	DB	'GT4CPGT4CPGT4CP-qekC`.9kEg^+F$kwViFJTB&5KTB&5KTB&5KTB&5KTB&5K'
	DB	'TB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5o,^<-28ZI''O'
	DB	'?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?'
	DB	';xpO?;xp;7q-#lLYI:xvD=#', 00H		; proggy_clean_ttf_compressed_data_base85
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0ImVec2@@QEAA@XZ				; ImVec2::ImVec2
PUBLIC	??0ImVec2@@QEAA@MM@Z				; ImVec2::ImVec2
PUBLIC	??0ImVec4@@QEAA@XZ				; ImVec4::ImVec4
PUBLIC	??0ImVec4@@QEAA@MMMM@Z				; ImVec4::ImVec4
PUBLIC	?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z	; ImGui::StyleColorsDark
PUBLIC	?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z ; ImGui::StyleColorsClassic
PUBLIC	?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z	; ImGui::StyleColorsLight
PUBLIC	??2@YAPEAX_KUImNewDummy@@PEAX@Z			; operator new
PUBLIC	??3@YAXPEAXUImNewDummy@@0@Z			; operator delete
PUBLIC	??0?$ImVector@G@@QEAA@XZ			; ImVector<unsigned short>::ImVector<unsigned short>
PUBLIC	??4?$ImVector@G@@QEAAAEAU0@AEBU0@@Z		; ImVector<unsigned short>::operator=
PUBLIC	??1?$ImVector@G@@QEAA@XZ			; ImVector<unsigned short>::~ImVector<unsigned short>
PUBLIC	?empty@?$ImVector@G@@QEBA_NXZ			; ImVector<unsigned short>::empty
PUBLIC	??A?$ImVector@G@@QEAAAEAGH@Z			; ImVector<unsigned short>::operator[]
PUBLIC	?clear@?$ImVector@G@@QEAAXXZ			; ImVector<unsigned short>::clear
PUBLIC	?_grow_capacity@?$ImVector@G@@QEBAHH@Z		; ImVector<unsigned short>::_grow_capacity
PUBLIC	?resize@?$ImVector@G@@QEAAXH@Z			; ImVector<unsigned short>::resize
PUBLIC	?resize@?$ImVector@G@@QEAAXHAEBG@Z		; ImVector<unsigned short>::resize
PUBLIC	?shrink@?$ImVector@G@@QEAAXH@Z			; ImVector<unsigned short>::shrink
PUBLIC	?reserve@?$ImVector@G@@QEAAXH@Z			; ImVector<unsigned short>::reserve
PUBLIC	?push_back@?$ImVector@G@@QEAAXAEBG@Z		; ImVector<unsigned short>::push_back
PUBLIC	??0ImDrawCmd@@QEAA@XZ				; ImDrawCmd::ImDrawCmd
PUBLIC	??0?$ImVector@UImDrawCmd@@@@QEAA@XZ		; ImVector<ImDrawCmd>::ImVector<ImDrawCmd>
PUBLIC	??4?$ImVector@UImDrawCmd@@@@QEAAAEAU0@AEBU0@@Z	; ImVector<ImDrawCmd>::operator=
PUBLIC	??1?$ImVector@UImDrawCmd@@@@QEAA@XZ		; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>
PUBLIC	??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z ; ImVector<ImDrawCmd>::operator[]
PUBLIC	?clear@?$ImVector@UImDrawCmd@@@@QEAAXXZ		; ImVector<ImDrawCmd>::clear
PUBLIC	?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ ; ImVector<ImDrawCmd>::back
PUBLIC	?_grow_capacity@?$ImVector@UImDrawCmd@@@@QEBAHH@Z ; ImVector<ImDrawCmd>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z	; ImVector<ImDrawCmd>::resize
PUBLIC	?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z	; ImVector<ImDrawCmd>::reserve
PUBLIC	?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z ; ImVector<ImDrawCmd>::push_back
PUBLIC	?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ	; ImVector<ImDrawCmd>::pop_back
PUBLIC	?erase@?$ImVector@UImDrawCmd@@@@QEAAPEAUImDrawCmd@@PEBU2@@Z ; ImVector<ImDrawCmd>::erase
PUBLIC	??0ImDrawChannel@@QEAA@XZ			; ImDrawChannel::ImDrawChannel
PUBLIC	??0?$ImVector@UImDrawChannel@@@@QEAA@XZ		; ImVector<ImDrawChannel>::ImVector<ImDrawChannel>
PUBLIC	??1?$ImVector@UImDrawChannel@@@@QEAA@XZ		; ImVector<ImDrawChannel>::~ImVector<ImDrawChannel>
PUBLIC	??A?$ImVector@UImDrawChannel@@@@QEAAAEAUImDrawChannel@@H@Z ; ImVector<ImDrawChannel>::operator[]
PUBLIC	?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ	; ImVector<ImDrawChannel>::clear
PUBLIC	?_grow_capacity@?$ImVector@UImDrawChannel@@@@QEBAHH@Z ; ImVector<ImDrawChannel>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z	; ImVector<ImDrawChannel>::resize
PUBLIC	?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z	; ImVector<ImDrawChannel>::reserve
PUBLIC	??0ImDrawListSplitter@@QEAA@XZ			; ImDrawListSplitter::ImDrawListSplitter
PUBLIC	??1ImDrawListSplitter@@QEAA@XZ			; ImDrawListSplitter::~ImDrawListSplitter
PUBLIC	?Clear@ImDrawListSplitter@@QEAAXXZ		; ImDrawListSplitter::Clear
PUBLIC	?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ	; ImDrawListSplitter::ClearFreeMemory
PUBLIC	?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z ; ImDrawListSplitter::Split
PUBLIC	?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z ; ImDrawListSplitter::Merge
PUBLIC	?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z ; ImDrawListSplitter::SetCurrentChannel
PUBLIC	??0?$ImVector@UImDrawVert@@@@QEAA@XZ		; ImVector<ImDrawVert>::ImVector<ImDrawVert>
PUBLIC	??4?$ImVector@UImDrawVert@@@@QEAAAEAU0@AEBU0@@Z	; ImVector<ImDrawVert>::operator=
PUBLIC	??1?$ImVector@UImDrawVert@@@@QEAA@XZ		; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
PUBLIC	??A?$ImVector@UImDrawVert@@@@QEAAAEAUImDrawVert@@H@Z ; ImVector<ImDrawVert>::operator[]
PUBLIC	?clear@?$ImVector@UImDrawVert@@@@QEAAXXZ	; ImVector<ImDrawVert>::clear
PUBLIC	?swap@?$ImVector@UImDrawVert@@@@QEAAXAEAU1@@Z	; ImVector<ImDrawVert>::swap
PUBLIC	?_grow_capacity@?$ImVector@UImDrawVert@@@@QEBAHH@Z ; ImVector<ImDrawVert>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z	; ImVector<ImDrawVert>::resize
PUBLIC	?shrink@?$ImVector@UImDrawVert@@@@QEAAXH@Z	; ImVector<ImDrawVert>::shrink
PUBLIC	?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z	; ImVector<ImDrawVert>::reserve
PUBLIC	??0?$ImVector@UImVec4@@@@QEAA@XZ		; ImVector<ImVec4>::ImVector<ImVec4>
PUBLIC	??1?$ImVector@UImVec4@@@@QEAA@XZ		; ImVector<ImVec4>::~ImVector<ImVec4>
PUBLIC	?clear@?$ImVector@UImVec4@@@@QEAAXXZ		; ImVector<ImVec4>::clear
PUBLIC	?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ	; ImVector<ImVec4>::back
PUBLIC	?_grow_capacity@?$ImVector@UImVec4@@@@QEBAHH@Z	; ImVector<ImVec4>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImVec4@@@@QEAAXH@Z		; ImVector<ImVec4>::resize
PUBLIC	?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z		; ImVector<ImVec4>::reserve
PUBLIC	?push_back@?$ImVector@UImVec4@@@@QEAAXAEBUImVec4@@@Z ; ImVector<ImVec4>::push_back
PUBLIC	?pop_back@?$ImVector@UImVec4@@@@QEAAXXZ		; ImVector<ImVec4>::pop_back
PUBLIC	??0?$ImVector@PEAX@@QEAA@XZ			; ImVector<void *>::ImVector<void *>
PUBLIC	??1?$ImVector@PEAX@@QEAA@XZ			; ImVector<void *>::~ImVector<void *>
PUBLIC	?empty@?$ImVector@PEAX@@QEBA_NXZ		; ImVector<void *>::empty
PUBLIC	?clear@?$ImVector@PEAX@@QEAAXXZ			; ImVector<void *>::clear
PUBLIC	?back@?$ImVector@PEAX@@QEAAAEAPEAXXZ		; ImVector<void *>::back
PUBLIC	?_grow_capacity@?$ImVector@PEAX@@QEBAHH@Z	; ImVector<void *>::_grow_capacity
PUBLIC	?resize@?$ImVector@PEAX@@QEAAXH@Z		; ImVector<void *>::resize
PUBLIC	?reserve@?$ImVector@PEAX@@QEAAXH@Z		; ImVector<void *>::reserve
PUBLIC	?push_back@?$ImVector@PEAX@@QEAAXAEBQEAX@Z	; ImVector<void *>::push_back
PUBLIC	?pop_back@?$ImVector@PEAX@@QEAAXXZ		; ImVector<void *>::pop_back
PUBLIC	??0?$ImVector@UImVec2@@@@QEAA@XZ		; ImVector<ImVec2>::ImVector<ImVec2>
PUBLIC	??1?$ImVector@UImVec2@@@@QEAA@XZ		; ImVector<ImVec2>::~ImVector<ImVec2>
PUBLIC	?clear@?$ImVector@UImVec2@@@@QEAAXXZ		; ImVector<ImVec2>::clear
PUBLIC	?back@?$ImVector@UImVec2@@@@QEAAAEAUImVec2@@XZ	; ImVector<ImVec2>::back
PUBLIC	?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z	; ImVector<ImVec2>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImVec2@@@@QEAAXH@Z		; ImVector<ImVec2>::resize
PUBLIC	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z		; ImVector<ImVec2>::reserve
PUBLIC	?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z ; ImVector<ImVec2>::push_back
PUBLIC	??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z ; ImDrawList::ImDrawList
PUBLIC	?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z	; ImDrawList::PushClipRect
PUBLIC	?PushClipRectFullScreen@ImDrawList@@QEAAXXZ	; ImDrawList::PushClipRectFullScreen
PUBLIC	?PopClipRect@ImDrawList@@QEAAXXZ		; ImDrawList::PopClipRect
PUBLIC	?PushTextureID@ImDrawList@@QEAAXPEAX@Z		; ImDrawList::PushTextureID
PUBLIC	?PopTextureID@ImDrawList@@QEAAXXZ		; ImDrawList::PopTextureID
PUBLIC	?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z	; ImDrawList::AddLine
PUBLIC	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z	; ImDrawList::AddRect
PUBLIC	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
PUBLIC	?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z ; ImDrawList::AddRectFilledMultiColor
PUBLIC	?AddQuad@ImDrawList@@QEAAXAEBUImVec2@@000IM@Z	; ImDrawList::AddQuad
PUBLIC	?AddQuadFilled@ImDrawList@@QEAAXAEBUImVec2@@000I@Z ; ImDrawList::AddQuadFilled
PUBLIC	?AddTriangle@ImDrawList@@QEAAXAEBUImVec2@@00IM@Z ; ImDrawList::AddTriangle
PUBLIC	?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z ; ImDrawList::AddTriangleFilled
PUBLIC	?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z	; ImDrawList::AddCircle
PUBLIC	?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z ; ImDrawList::AddCircleFilled
PUBLIC	?AddNgon@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z	; ImDrawList::AddNgon
PUBLIC	?AddNgonFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z ; ImDrawList::AddNgonFilled
PUBLIC	?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z	; ImDrawList::AddText
PUBLIC	?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z ; ImDrawList::AddText
PUBLIC	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
PUBLIC	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
PUBLIC	?AddBezierCurve@ImDrawList@@QEAAXAEBUImVec2@@000IMH@Z ; ImDrawList::AddBezierCurve
PUBLIC	?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z ; ImDrawList::AddImage
PUBLIC	?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z ; ImDrawList::AddImageQuad
PUBLIC	?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z ; ImDrawList::AddImageRounded
PUBLIC	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z	; ImDrawList::PathLineTo
PUBLIC	?PathFillConvex@ImDrawList@@QEAAXI@Z		; ImDrawList::PathFillConvex
PUBLIC	?PathStroke@ImDrawList@@QEAAXI_NM@Z		; ImDrawList::PathStroke
PUBLIC	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z	; ImDrawList::PathArcTo
PUBLIC	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
PUBLIC	?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z ; ImDrawList::PathBezierCurveTo
PUBLIC	?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z	; ImDrawList::PathRect
PUBLIC	?AddCallback@ImDrawList@@QEAAXP6AXPEBU1@PEBUImDrawCmd@@@ZPEAX@Z ; ImDrawList::AddCallback
PUBLIC	?AddDrawCmd@ImDrawList@@QEAAXXZ			; ImDrawList::AddDrawCmd
PUBLIC	?CloneOutput@ImDrawList@@QEBAPEAU1@XZ		; ImDrawList::CloneOutput
PUBLIC	?Clear@ImDrawList@@QEAAXXZ			; ImDrawList::Clear
PUBLIC	?ClearFreeMemory@ImDrawList@@QEAAXXZ		; ImDrawList::ClearFreeMemory
PUBLIC	?PrimReserve@ImDrawList@@QEAAXHH@Z		; ImDrawList::PrimReserve
PUBLIC	?PrimUnreserve@ImDrawList@@QEAAXHH@Z		; ImDrawList::PrimUnreserve
PUBLIC	?PrimRect@ImDrawList@@QEAAXAEBUImVec2@@0I@Z	; ImDrawList::PrimRect
PUBLIC	?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z	; ImDrawList::PrimRectUV
PUBLIC	?PrimQuadUV@ImDrawList@@QEAAXAEBUImVec2@@0000000I@Z ; ImDrawList::PrimQuadUV
PUBLIC	?PrimWriteVtx@ImDrawList@@QEAAXAEBUImVec2@@0I@Z	; ImDrawList::PrimWriteVtx
PUBLIC	?PrimWriteIdx@ImDrawList@@QEAAXG@Z		; ImDrawList::PrimWriteIdx
PUBLIC	?UpdateClipRect@ImDrawList@@QEAAXXZ		; ImDrawList::UpdateClipRect
PUBLIC	?UpdateTextureID@ImDrawList@@QEAAXXZ		; ImDrawList::UpdateTextureID
PUBLIC	?DeIndexAllBuffers@ImDrawData@@QEAAXXZ		; ImDrawData::DeIndexAllBuffers
PUBLIC	?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z	; ImDrawData::ScaleClipRects
PUBLIC	??0ImFontConfig@@QEAA@XZ			; ImFontConfig::ImFontConfig
PUBLIC	??1?$ImVector@I@@QEAA@XZ			; ImVector<unsigned int>::~ImVector<unsigned int>
PUBLIC	?empty@?$ImVector@I@@QEBA_NXZ			; ImVector<unsigned int>::empty
PUBLIC	??A?$ImVector@I@@QEAAAEAIH@Z			; ImVector<unsigned int>::operator[]
PUBLIC	??A?$ImVector@I@@QEBAAEBIH@Z			; ImVector<unsigned int>::operator[]
PUBLIC	?clear@?$ImVector@I@@QEAAXXZ			; ImVector<unsigned int>::clear
PUBLIC	?begin@?$ImVector@I@@QEBAPEBIXZ			; ImVector<unsigned int>::begin
PUBLIC	?end@?$ImVector@I@@QEBAPEBIXZ			; ImVector<unsigned int>::end
PUBLIC	?_grow_capacity@?$ImVector@I@@QEBAHH@Z		; ImVector<unsigned int>::_grow_capacity
PUBLIC	?resize@?$ImVector@I@@QEAAXH@Z			; ImVector<unsigned int>::resize
PUBLIC	?reserve@?$ImVector@I@@QEAAXH@Z			; ImVector<unsigned int>::reserve
PUBLIC	?GetBit@ImFontGlyphRangesBuilder@@QEBA_N_K@Z	; ImFontGlyphRangesBuilder::GetBit
PUBLIC	?SetBit@ImFontGlyphRangesBuilder@@QEAAX_K@Z	; ImFontGlyphRangesBuilder::SetBit
PUBLIC	?AddChar@ImFontGlyphRangesBuilder@@QEAAXG@Z	; ImFontGlyphRangesBuilder::AddChar
PUBLIC	?AddText@ImFontGlyphRangesBuilder@@QEAAXPEBD0@Z	; ImFontGlyphRangesBuilder::AddText
PUBLIC	?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z ; ImFontGlyphRangesBuilder::AddRanges
PUBLIC	?BuildRanges@ImFontGlyphRangesBuilder@@QEAAXPEAU?$ImVector@G@@@Z ; ImFontGlyphRangesBuilder::BuildRanges
PUBLIC	??0ImFontAtlasCustomRect@@QEAA@XZ		; ImFontAtlasCustomRect::ImFontAtlasCustomRect
PUBLIC	?IsPacked@ImFontAtlasCustomRect@@QEBA_NXZ	; ImFontAtlasCustomRect::IsPacked
PUBLIC	??0ImFontAtlas@@QEAA@XZ				; ImFontAtlas::ImFontAtlas
PUBLIC	??1ImFontAtlas@@QEAA@XZ				; ImFontAtlas::~ImFontAtlas
PUBLIC	?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z ; ImFontAtlas::AddFont
PUBLIC	?AddFontDefault@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z ; ImFontAtlas::AddFontDefault
PUBLIC	?AddFontFromFileTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromFileTTF
PUBLIC	?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromMemoryTTF
PUBLIC	?AddFontFromMemoryCompressedTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBXHMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromMemoryCompressedTTF
PUBLIC	?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromMemoryCompressedBase85TTF
PUBLIC	?ClearInputData@ImFontAtlas@@QEAAXXZ		; ImFontAtlas::ClearInputData
PUBLIC	?ClearTexData@ImFontAtlas@@QEAAXXZ		; ImFontAtlas::ClearTexData
PUBLIC	?ClearFonts@ImFontAtlas@@QEAAXXZ		; ImFontAtlas::ClearFonts
PUBLIC	?Clear@ImFontAtlas@@QEAAXXZ			; ImFontAtlas::Clear
PUBLIC	?Build@ImFontAtlas@@QEAA_NXZ			; ImFontAtlas::Build
PUBLIC	?GetTexDataAsAlpha8@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z ; ImFontAtlas::GetTexDataAsAlpha8
PUBLIC	?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z ; ImFontAtlas::GetTexDataAsRGBA32
PUBLIC	?GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ	; ImFontAtlas::GetGlyphRangesDefault
PUBLIC	?GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ	; ImFontAtlas::GetGlyphRangesKorean
PUBLIC	?GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ	; ImFontAtlas::GetGlyphRangesJapanese
PUBLIC	?GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ ; ImFontAtlas::GetGlyphRangesChineseFull
PUBLIC	?GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ ; ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon
PUBLIC	?GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ	; ImFontAtlas::GetGlyphRangesCyrillic
PUBLIC	?GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ	; ImFontAtlas::GetGlyphRangesThai
PUBLIC	?GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ ; ImFontAtlas::GetGlyphRangesVietnamese
PUBLIC	?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z	; ImFontAtlas::AddCustomRectRegular
PUBLIC	?AddCustomRectFontGlyph@ImFontAtlas@@QEAAHPEAUImFont@@GHHMAEBUImVec2@@@Z ; ImFontAtlas::AddCustomRectFontGlyph
PUBLIC	?CalcCustomRectUV@ImFontAtlas@@QEBAXPEBUImFontAtlasCustomRect@@PEAUImVec2@@1@Z ; ImFontAtlas::CalcCustomRectUV
PUBLIC	?GetMouseCursorTexData@ImFontAtlas@@QEAA_NHPEAUImVec2@@0QEAU2@1@Z ; ImFontAtlas::GetMouseCursorTexData
PUBLIC	??0?$ImVector@PEAUImFont@@@@QEAA@XZ		; ImVector<ImFont *>::ImVector<ImFont *>
PUBLIC	??1?$ImVector@PEAUImFont@@@@QEAA@XZ		; ImVector<ImFont *>::~ImVector<ImFont *>
PUBLIC	?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ	; ImVector<ImFont *>::empty
PUBLIC	?size@?$ImVector@PEAUImFont@@@@QEBAHXZ		; ImVector<ImFont *>::size
PUBLIC	??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z ; ImVector<ImFont *>::operator[]
PUBLIC	?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ		; ImVector<ImFont *>::clear
PUBLIC	?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ ; ImVector<ImFont *>::back
PUBLIC	?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z ; ImVector<ImFont *>::_grow_capacity
PUBLIC	?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z	; ImVector<ImFont *>::reserve
PUBLIC	?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z ; ImVector<ImFont *>::push_back
PUBLIC	??0?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ	; ImVector<ImFontAtlasCustomRect>::ImVector<ImFontAtlasCustomRect>
PUBLIC	??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ	; ImVector<ImFontAtlasCustomRect>::~ImVector<ImFontAtlasCustomRect>
PUBLIC	??A?$ImVector@UImFontAtlasCustomRect@@@@QEAAAEAUImFontAtlasCustomRect@@H@Z ; ImVector<ImFontAtlasCustomRect>::operator[]
PUBLIC	?clear@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXXZ ; ImVector<ImFontAtlasCustomRect>::clear
PUBLIC	?_grow_capacity@?$ImVector@UImFontAtlasCustomRect@@@@QEBAHH@Z ; ImVector<ImFontAtlasCustomRect>::_grow_capacity
PUBLIC	?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z ; ImVector<ImFontAtlasCustomRect>::reserve
PUBLIC	?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z ; ImVector<ImFontAtlasCustomRect>::push_back
PUBLIC	??0?$ImVector@UImFontConfig@@@@QEAA@XZ		; ImVector<ImFontConfig>::ImVector<ImFontConfig>
PUBLIC	??1?$ImVector@UImFontConfig@@@@QEAA@XZ		; ImVector<ImFontConfig>::~ImVector<ImFontConfig>
PUBLIC	?empty@?$ImVector@UImFontConfig@@@@QEBA_NXZ	; ImVector<ImFontConfig>::empty
PUBLIC	??A?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@H@Z ; ImVector<ImFontConfig>::operator[]
PUBLIC	?clear@?$ImVector@UImFontConfig@@@@QEAAXXZ	; ImVector<ImFontConfig>::clear
PUBLIC	?back@?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@XZ ; ImVector<ImFontConfig>::back
PUBLIC	?_grow_capacity@?$ImVector@UImFontConfig@@@@QEBAHH@Z ; ImVector<ImFontConfig>::_grow_capacity
PUBLIC	?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z	; ImVector<ImFontConfig>::reserve
PUBLIC	?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z ; ImVector<ImFontConfig>::push_back
PUBLIC	??0?$ImVector@M@@QEAA@XZ			; ImVector<float>::ImVector<float>
PUBLIC	??1?$ImVector@M@@QEAA@XZ			; ImVector<float>::~ImVector<float>
PUBLIC	??A?$ImVector@M@@QEAAAEAMH@Z			; ImVector<float>::operator[]
PUBLIC	?clear@?$ImVector@M@@QEAAXXZ			; ImVector<float>::clear
PUBLIC	?_grow_capacity@?$ImVector@M@@QEBAHH@Z		; ImVector<float>::_grow_capacity
PUBLIC	?resize@?$ImVector@M@@QEAAXHAEBM@Z		; ImVector<float>::resize
PUBLIC	?reserve@?$ImVector@M@@QEAAXH@Z			; ImVector<float>::reserve
PUBLIC	??0?$ImVector@UImFontGlyph@@@@QEAA@XZ		; ImVector<ImFontGlyph>::ImVector<ImFontGlyph>
PUBLIC	??1?$ImVector@UImFontGlyph@@@@QEAA@XZ		; ImVector<ImFontGlyph>::~ImVector<ImFontGlyph>
PUBLIC	??A?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@H@Z ; ImVector<ImFontGlyph>::operator[]
PUBLIC	?clear@?$ImVector@UImFontGlyph@@@@QEAAXXZ	; ImVector<ImFontGlyph>::clear
PUBLIC	?back@?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@XZ ; ImVector<ImFontGlyph>::back
PUBLIC	?_grow_capacity@?$ImVector@UImFontGlyph@@@@QEBAHH@Z ; ImVector<ImFontGlyph>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z	; ImVector<ImFontGlyph>::resize
PUBLIC	?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z	; ImVector<ImFontGlyph>::reserve
PUBLIC	??0ImFont@@QEAA@XZ				; ImFont::ImFont
PUBLIC	??1ImFont@@QEAA@XZ				; ImFont::~ImFont
PUBLIC	?FindGlyph@ImFont@@QEBAPEBUImFontGlyph@@G@Z	; ImFont::FindGlyph
PUBLIC	?FindGlyphNoFallback@ImFont@@QEBAPEBUImFontGlyph@@G@Z ; ImFont::FindGlyphNoFallback
PUBLIC	?IsLoaded@ImFont@@QEBA_NXZ			; ImFont::IsLoaded
PUBLIC	?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z ; ImFont::CalcTextSizeA
PUBLIC	?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z ; ImFont::CalcWordWrapPositionA
PUBLIC	?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z ; ImFont::RenderChar
PUBLIC	?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z ; ImFont::RenderText
PUBLIC	?BuildLookupTable@ImFont@@QEAAXXZ		; ImFont::BuildLookupTable
PUBLIC	?ClearOutputData@ImFont@@QEAAXXZ		; ImFont::ClearOutputData
PUBLIC	?GrowIndex@ImFont@@QEAAXH@Z			; ImFont::GrowIndex
PUBLIC	?AddGlyph@ImFont@@QEAAXGMMMMMMMMM@Z		; ImFont::AddGlyph
PUBLIC	?AddRemapChar@ImFont@@QEAAXGG_N@Z		; ImFont::AddRemapChar
PUBLIC	?SetGlyphVisible@ImFont@@QEAAXG_N@Z		; ImFont::SetGlyphVisible
PUBLIC	?SetFallbackChar@ImFont@@QEAAXG@Z		; ImFont::SetFallbackChar
PUBLIC	?IsGlyphRangeUnused@ImFont@@QEAA_NII@Z		; ImFont::IsGlyphRangeUnused
PUBLIC	??_GImFont@@QEAAPEAXI@Z				; ImFont::`scalar deleting destructor'
PUBLIC	fabsf
PUBLIC	?ImBezierCalc@@YA?AUImVec2@@AEBU1@000M@Z	; ImBezierCalc
PUBLIC	?ImBitArrayTestBit@@YA_NPEBIH@Z			; ImBitArrayTestBit
PUBLIC	?ImBitArraySetBit@@YAXPEAIH@Z			; ImBitArraySetBit
PUBLIC	?Create@ImBitVector@@QEAAXH@Z			; ImBitVector::Create
PUBLIC	?Clear@ImBitVector@@QEAAXXZ			; ImBitVector::Clear
PUBLIC	?TestBit@ImBitVector@@QEBA_NH@Z			; ImBitVector::TestBit
PUBLIC	?SetBit@ImBitVector@@QEAAXH@Z			; ImBitVector::SetBit
PUBLIC	??1ImBitVector@@QEAA@XZ				; ImBitVector::~ImBitVector
PUBLIC	??0ImDrawListSharedData@@QEAA@XZ		; ImDrawListSharedData::ImDrawListSharedData
PUBLIC	?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z ; ImDrawListSharedData::SetCircleSegmentMaxError
PUBLIC	??1?$ImVector@H@@QEAA@XZ			; ImVector<int>::~ImVector<int>
PUBLIC	??A?$ImVector@H@@QEAAAEAHH@Z			; ImVector<int>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@H@@QEBAHH@Z		; ImVector<int>::_grow_capacity
PUBLIC	?reserve@?$ImVector@H@@QEAAXH@Z			; ImVector<int>::reserve
PUBLIC	?push_back@?$ImVector@H@@QEAAXAEBH@Z		; ImVector<int>::push_back
PUBLIC	?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z ; ImGui::RenderColorRectWithAlphaCheckerboard
PUBLIC	?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z ; ImGui::RenderArrow
PUBLIC	?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z ; ImGui::RenderBullet
PUBLIC	?RenderCheckMark@ImGui@@YAXPEAUImDrawList@@UImVec2@@IM@Z ; ImGui::RenderCheckMark
PUBLIC	?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z ; ImGui::RenderMouseCursor
PUBLIC	?RenderArrowPointingAt@ImGui@@YAXPEAUImDrawList@@UImVec2@@1HI@Z ; ImGui::RenderArrowPointingAt
PUBLIC	?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z ; ImGui::RenderRectFilledRangeH
PUBLIC	?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z ; ImGui::ShadeVertsLinearColorGradientKeepAlpha
PUBLIC	?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z ; ImGui::ShadeVertsLinearUV
PUBLIC	?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z ; ImFontAtlasBuildWithStbTruetype
PUBLIC	?ImFontAtlasBuildInit@@YAXPEAUImFontAtlas@@@Z	; ImFontAtlasBuildInit
PUBLIC	?ImFontAtlasBuildSetupFont@@YAXPEAUImFontAtlas@@PEAUImFont@@PEAUImFontConfig@@MM@Z ; ImFontAtlasBuildSetupFont
PUBLIC	?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z ; ImFontAtlasBuildPackCustomRects
PUBLIC	?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z	; ImFontAtlasBuildFinish
PUBLIC	?ImFontAtlasBuildMultiplyCalcLookupTable@@YAXQEAEM@Z ; ImFontAtlasBuildMultiplyCalcLookupTable
PUBLIC	?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z ; ImFontAtlasBuildMultiplyRectAlpha8
PUBLIC	??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z	; IM_DELETE<ImFont>
PUBLIC	??1ImFontBuildSrcData@@QEAA@XZ			; ImFontBuildSrcData::~ImFontBuildSrcData
PUBLIC	??_GImFontBuildSrcData@@QEAAPEAXI@Z		; ImFontBuildSrcData::`scalar deleting destructor'
PUBLIC	??0?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ	; ImVector<ImFontBuildSrcData>::ImVector<ImFontBuildSrcData>
PUBLIC	??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ	; ImVector<ImFontBuildSrcData>::~ImVector<ImFontBuildSrcData>
PUBLIC	?size_in_bytes@?$ImVector@UImFontBuildSrcData@@@@QEBAHXZ ; ImVector<ImFontBuildSrcData>::size_in_bytes
PUBLIC	??A?$ImVector@UImFontBuildSrcData@@@@QEAAAEAUImFontBuildSrcData@@H@Z ; ImVector<ImFontBuildSrcData>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@UImFontBuildSrcData@@@@QEBAHH@Z ; ImVector<ImFontBuildSrcData>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z ; ImVector<ImFontBuildSrcData>::resize
PUBLIC	?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z ; ImVector<ImFontBuildSrcData>::reserve
PUBLIC	??0?$ImVector@UImFontBuildDstData@@@@QEAA@XZ	; ImVector<ImFontBuildDstData>::ImVector<ImFontBuildDstData>
PUBLIC	??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ	; ImVector<ImFontBuildDstData>::~ImVector<ImFontBuildDstData>
PUBLIC	?size_in_bytes@?$ImVector@UImFontBuildDstData@@@@QEBAHXZ ; ImVector<ImFontBuildDstData>::size_in_bytes
PUBLIC	??A?$ImVector@UImFontBuildDstData@@@@QEAAAEAUImFontBuildDstData@@H@Z ; ImVector<ImFontBuildDstData>::operator[]
PUBLIC	?clear@?$ImVector@UImFontBuildDstData@@@@QEAAXXZ ; ImVector<ImFontBuildDstData>::clear
PUBLIC	?_grow_capacity@?$ImVector@UImFontBuildDstData@@@@QEBAHH@Z ; ImVector<ImFontBuildDstData>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z ; ImVector<ImFontBuildDstData>::resize
PUBLIC	?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z ; ImVector<ImFontBuildDstData>::reserve
PUBLIC	??0?$ImVector@Ustbrp_rect@@@@QEAA@XZ		; ImVector<stbrp_rect>::ImVector<stbrp_rect>
PUBLIC	??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ		; ImVector<stbrp_rect>::~ImVector<stbrp_rect>
PUBLIC	?size_in_bytes@?$ImVector@Ustbrp_rect@@@@QEBAHXZ ; ImVector<stbrp_rect>::size_in_bytes
PUBLIC	??A?$ImVector@Ustbrp_rect@@@@QEAAAEAUstbrp_rect@@H@Z ; ImVector<stbrp_rect>::operator[]
PUBLIC	?clear@?$ImVector@Ustbrp_rect@@@@QEAAXXZ	; ImVector<stbrp_rect>::clear
PUBLIC	?_grow_capacity@?$ImVector@Ustbrp_rect@@@@QEBAHH@Z ; ImVector<stbrp_rect>::_grow_capacity
PUBLIC	?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z	; ImVector<stbrp_rect>::resize
PUBLIC	?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z	; ImVector<stbrp_rect>::reserve
PUBLIC	??0?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ	; ImVector<stbtt_packedchar>::ImVector<stbtt_packedchar>
PUBLIC	??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ	; ImVector<stbtt_packedchar>::~ImVector<stbtt_packedchar>
PUBLIC	?size_in_bytes@?$ImVector@Ustbtt_packedchar@@@@QEBAHXZ ; ImVector<stbtt_packedchar>::size_in_bytes
PUBLIC	??A?$ImVector@Ustbtt_packedchar@@@@QEAAAEAUstbtt_packedchar@@H@Z ; ImVector<stbtt_packedchar>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@Ustbtt_packedchar@@@@QEBAHH@Z ; ImVector<stbtt_packedchar>::_grow_capacity
PUBLIC	?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z ; ImVector<stbtt_packedchar>::resize
PUBLIC	?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z ; ImVector<stbtt_packedchar>::reserve
PUBLIC	??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_1EO@FHOHIDNF@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi@ ; `string'
PUBLIC	??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_1EI@NNJKMECF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf@ ; `string'
PUBLIC	??_C@_1BO@KBODBKOH@?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0@ ; `string'
PUBLIC	??_C@_1CG@BDIGDJGP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO@ ; `string'
PUBLIC	??_C@_1BM@JHJLEEND@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0@ ; `string'
PUBLIC	??_C@_1CM@LEHAODMI@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CF?$AA?5?$AAc?$AA?9?$AA?$DO?$AAa?$AAl?$AAi?$AAg@ ; `string'
PUBLIC	??_C@_1BE@MNLKNDNL@?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1FA@GPDJEJHP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO@ ; `string'
PUBLIC	??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@ ; `string'
PUBLIC	??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1CE@EPOLDKHI@?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx?$AA4?$AA0?$AA0?$AA0?$AA0?$AA0@ ; `string'
PUBLIC	??_C@_1DK@IJDIOPHB@?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG@ ; `string'
PUBLIC	??_C@_1BC@KDMJFGHG@?$AAb?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA8@ ; `string'
PUBLIC	??_C@_1CI@PFMEGAIA@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_04EICJPCEA@cmap@				; `string'
PUBLIC	??_C@_04DACNFKGE@loca@				; `string'
PUBLIC	??_C@_04NEODDMOL@head@				; `string'
PUBLIC	??_C@_04LLIHEPK@glyf@				; `string'
PUBLIC	??_C@_04FMPHLIKP@hhea@				; `string'
PUBLIC	??_C@_04ONMNCIMC@hmtx@				; `string'
PUBLIC	??_C@_04HHMMLDJI@kern@				; `string'
PUBLIC	??_C@_04PCFDEHHD@GPOS@				; `string'
PUBLIC	??_C@_04HJGCPIEK@CFF?5@				; `string'
PUBLIC	??_C@_04KODIGLGG@maxp@				; `string'
PUBLIC	??_C@_1HA@EBGBJFDE@?$AAu?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAc?$AAo?$AAd?$AAe?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_C@_1CA@MDABGEPC@?$AA?$CB?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAc?$AAf?$AAf?$AA?4?$AAs?$AAi?$AAz?$AAe@ ; `string'
PUBLIC	??_C@_1GE@KABFAMEA@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA_?$AAc?$AAt?$AAx?$AA?4?$AAn?$AAu?$AAm?$AA_@ ; `string'
PUBLIC	??_C@_1O@EHPNOHML@?$AAz?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BA@ENLNFFAM@?$AAy?$AA0?$AA?5?$AA?$DM?$AA?5?$AAy?$AA1@ ; `string'
PUBLIC	??_C@_1BO@JGPMADBG@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy@ ; `string'
PUBLIC	??_C@_1BE@DHAKMBPL@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1@ ; `string'
PUBLIC	??_C@_1BA@FAAMJPKE@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx@ ; `string'
PUBLIC	??_C@_1BA@FEPJEPJJ@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx@ ; `string'
PUBLIC	??_C@_1BE@NGGEAFFG@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1@ ; `string'
PUBLIC	??_C@_1CK@NILBPPPH@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DM@ ; `string'
PUBLIC	??_C@_1FK@JPMIPNJF@?$AAx?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA0?$AA?5?$AA?$DM@ ; `string'
PUBLIC	??_C@_1BO@MDBOACOJ@?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_?$AAt?$AAo?$AAp@ ; `string'
PUBLIC	??_C@_1EI@KOIFPDFH@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAy?$AA_?$AAb?$AAo?$AAt?$AAt@ ; `string'
PUBLIC	??_C@_1CE@GDDDMDCC@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl@ ; `string'
PUBLIC	??_C@_1CK@PHOJNIKI@?$AAf?$AAa?$AAb?$AAs?$AAf?$AA?$CI?$AAa?$AAr?$AAe?$AAa?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1BK@LMAHJHLI@?$AAz?$AA?9?$AA?$DO?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1CI@PMJHELI@?$AAz?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAc?$AAa?$AAn?$AA_?$AAy@ ; `string'
PUBLIC	??_C@_1BO@BDJAMAMF@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DO@LAPBLJ@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$CK?$AAs?$AAt?$AAr?$AAi?$AAd?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_1LC@MAEAJCLC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe@ ; `string'
PUBLIC	??_C@_1DA@MJAOFGMF@?$AA_?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe?$AAc?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4@ ; `string'
PUBLIC	??_C@_1DC@CKLENJON@?$AA_?$AAT?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AAI?$AAd?$AAS?$AAt?$AAa?$AAc?$AAk@ ; `string'
PUBLIC	??_C@_1GM@DGBHKFGF@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1BAE@LAENHIMB@?$AA_?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1DC@ILGGLBID@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx@ ; `string'
PUBLIC	??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@ ; `string'
PUBLIC	??_C@_1GM@FAHJAOLI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AAD@ ; `string'
PUBLIC	??_C@_1DI@LEOIHPJH@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAS?$AAi?$AAz?$AAe?$AAP@ ; `string'
PUBLIC	??_C@_1HI@KOOOLAEJ@?$AA?$CB?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5@ ; `string'
PUBLIC	??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx@	; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_1EG@KCPDJPKE@?$AA?$CI?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn@ ; `string'
PUBLIC	??_C@_0L@EPCGLJHG@?$CFs?0?5?$CF?40fpx@		; `string'
PUBLIC	??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa@ ; `string'
PUBLIC	??_C@_1DK@GHLOFHKF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAi@ ; `string'
PUBLIC	??_C@_1DO@CAIIJEKF@?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAh@ ; `string'
PUBLIC	??_C@_1BE@PBFICKNN@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DM@CMBJAGBP@?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG@ ; `string'
PUBLIC	??_C@_1CC@DEJIAPCP@?$AAr?$AAe?$AAc?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI@ ; `string'
PUBLIC	??_C@_1CO@OOJMDEAG@?$AAC?$AAu?$AAs?$AAt?$AAo?$AAm?$AAR?$AAe?$AAc?$AAt?$AAI?$AAd?$AAs?$AA?$FL?$AA0@ ; `string'
PUBLIC	??_C@_1DG@BBHAKCJP@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAD?$AAa@ ; `string'
PUBLIC	??_C@_1KE@NPGLPIC@?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1CO@NKKOCLPN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAD?$AAs?$AAt?$AAI?$AAn?$AAd?$AAe@ ; `string'
PUBLIC	??_C@_1JA@MENENCJI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1FO@GJGKHCEN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AAL@ ; `string'
PUBLIC	??_C@_1DC@ENBGOGEF@?$AAg?$AAl?$AAy?$AAp?$AAh?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA_?$AAi?$AAn?$AA_@ ; `string'
PUBLIC	??_C@_1CE@FMMHMDCM@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CB?$AA?$DN@ ; `string'
PUBLIC	??_C@_1CK@POMOOFJC@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe@ ; `string'
PUBLIC	??_C@_1KE@CBAIECN@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAw@ ; `string'
PUBLIC	??_C@_1DK@CIPOCJML@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAu?$AAs?$AAt?$AAo?$AAm?$AAR?$AAe@ ; `string'
PUBLIC	??_C@_1DI@LKIOFBD@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAP?$AAi?$AAx?$AAe?$AAl@ ; `string'
PUBLIC	??_C@_1BK@MDHNDFCJ@?$AAr?$AA?4?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ@ ; `string'
PUBLIC	??_C@_1MG@KMJKJDJG@?$AAr?$AA?4?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAF?$AAO?$AAN?$AAT@ ; `string'
PUBLIC	??_C@_1DM@OOPIKMMI@?$AAr?$AA?4?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$CG?$AA?$CG@ ; `string'
PUBLIC	??_C@_1EA@GJDLMPMC@?$AAr?$AA?4?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@FHBHHKB@?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1EO@HLFAHELG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAX?$AA?4?$AAS@ ; `string'
PUBLIC	??_C@_1CK@OHOOGJPG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu?$AAp?$AA?4?$AAS?$AAi?$AAz@ ; `string'
PUBLIC	??_C@_1JM@LKKCKIOL@?$AAm?$AAo?$AAu?$AAs?$AAe?$AA_?$AAc?$AAu?$AAr?$AAs?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5@ ; `string'
PUBLIC	??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_1DG@GCANDLHA@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu@ ; `string'
PUBLIC	??_C@_1DG@EGIPGKEG@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAo?$AAu@ ; `string'
PUBLIC	??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@ ; `string'
PUBLIC	??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz@ ; `string'
PUBLIC	??_C@_1DK@JJGEFOJO@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ ; `string'
PUBLIC	__isa_available_default
PUBLIC	__real@37800000
PUBLIC	__real@38800000
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e800000
PUBLIC	__real@3eb33333
PUBLIC	__real@3ecccccd
PUBLIC	__real@3efae148
PUBLIC	__real@3f000000
PUBLIC	__real@3f19999a
PUBLIC	__real@3f400000
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f5db22d
PUBLIC	__real@3f666666
PUBLIC	__real@3f800000
PUBLIC	__real@3f8147ae
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3ffeb852
PUBLIC	__real@40400000
PUBLIC	__real@40490fdb
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@40afede0
PUBLIC	__real@40c90fdb
PUBLIC	__real@41400000
PUBLIC	__real@41500000
PUBLIC	__real@42da0000
PUBLIC	__real@437f0000
PUBLIC	__real@44333333
PUBLIC	__real@44b33333
PUBLIC	__real@45333333
PUBLIC	__real@7f7fffff
PUBLIC	__real@bf400000
PUBLIC	__real@bf5db22d
PUBLIC	__real@bf800000
PUBLIC	__xmm@00000001000000010000000100000001
PUBLIC	__xmm@00000003000000020000000100000000
PUBLIC	__xmm@3e23d70a3f8000003f8000003f800000
PUBLIC	__xmm@3e4ccccd3e4ccccd3e4ccccd3e4ccccd
PUBLIC	__xmm@3e4ccccd3f4ccccd3ecccccd3ecccccd
PUBLIC	__xmm@3e4ccccd3f4ccccd3f4ccccd3f4ccccd
PUBLIC	__xmm@3e8000003f7ae1483f170a3d3e851eb8
PUBLIC	__xmm@3e99999a000000000000000000000000
PUBLIC	__xmm@3e99999a3f4ccccd3ecccccd3ecccccd
PUBLIC	__xmm@3e99999a3f8000003f8000003f800000
PUBLIC	__xmm@3e9eb8523f7ae1483f170a3d3e851eb8
PUBLIC	__xmm@3eb333333e4ccccd3e4ccccd3e4ccccd
PUBLIC	__xmm@3eb333333f4ccccd3f4ccccd3f4ccccd
PUBLIC	__xmm@3eb333333f7ae1483f170a3d3e851eb8
PUBLIC	__xmm@3eb333333f8000000000000000000000
PUBLIC	__xmm@3ec7ae143edc28f63edc28f63edc28f6
PUBLIC	__xmm@3ecccccd3f30a3d73ef0a3d73ef0a3d7
PUBLIC	__xmm@3ecccccd3f4ccccd3ecccccd3ecccccd
PUBLIC	__xmm@3ecccccd3f7ae1483f170a3d3e851eb8
PUBLIC	__xmm@3ee666663f6666663ecccccd3ecccccd
PUBLIC	__xmm@3f0000003f0000003edc28f63edc28f6
PUBLIC	__xmm@3f0000003f0000003f0000003f000000
PUBLIC	__xmm@3f0000003f6666663f6666663f666666
PUBLIC	__xmm@3f028f5c000000000000000000000000
PUBLIC	__xmm@3f028f5c3f8000003f8000003f800000
PUBLIC	__xmm@3f07ae143ca3d70a3ca3d70a3ca3d70a
PUBLIC	__xmm@3f07ae143f7ae1483f7ae1483f7ae148
PUBLIC	__xmm@3f0a3d713ef5c28f3e947ae13e23d70a
PUBLIC	__xmm@3f0f5c293f4ccccd3f4ccccd3f4ccccd
PUBLIC	__xmm@3f19999a3e99999a3e8000003e4ccccd
PUBLIC	__xmm@3f19999a3f0000003f0000003f000000
PUBLIC	__xmm@3f19999a3f4ccccd3ec7ae143ed1eb85
PUBLIC	__xmm@3f19999a3f4ccccd3f0a3d713eeb851f
PUBLIC	__xmm@3f19999a3f8000003f51eb853f47ae14
PUBLIC	__xmm@3f1eb8523ec7ae143ec7ae143ec7ae14
PUBLIC	__xmm@3f1eb8523f1c28f63ecccccd3eb33333
PUBLIC	__xmm@3f2b851f3f7ae1483f170a3d3e851eb8
PUBLIC	__xmm@3f30a3d73f23d70a3ed1eb853ed70a3d
PUBLIC	__xmm@3f333333000000000000000000000000
PUBLIC	__xmm@3f3333333f3333333f3333333f333333
PUBLIC	__xmm@3f3333333f8000003f8000003f800000
PUBLIC	__xmm@3f47ae143f4000003ecccccd3dcccccd
PUBLIC	__xmm@3f47ae143f4ccccd3ee147ae3e0f5c29
PUBLIC	__xmm@3f47ae143f7ae1483f170a3d3e851eb8
PUBLIC	__xmm@3f4a3d713f35c28f3ef5c28f3ecccccd
PUBLIC	__xmm@3f4ccccd3efae1483efae1483efae148
PUBLIC	__xmm@3f4ccccd3f0ccccd3ecccccd3ecccccd
PUBLIC	__xmm@3f4ccccd3f30a3d73f30a3d73f30a3d7
PUBLIC	__xmm@3f4ccccd3f5eb8523f07ae143f07ae14
PUBLIC	__xmm@3f4ccccd3f6666663ee666663ee66666
PUBLIC	__xmm@3f4ccccd3f7ae1483f170a3d3e851eb8
PUBLIC	__xmm@3f547ae13f0a3d713e8a3d713e8a3d71
PUBLIC	__xmm@3f5eb8523f2147ae3ea3d70a3ea3d70a
PUBLIC	__xmm@3f666666000000003f8000003f800000
PUBLIC	__xmm@3f6666663f8000003f51eb853f47ae14
PUBLIC	__xmm@3f6b851f3e0f5c293de147ae3de147ae
PUBLIC	__xmm@3f70a3d73d75c28f3d75c28f3d75c28f
PUBLIC	__xmm@3f70a3d73da3d70a3da3d70a3da3d70a
PUBLIC	__xmm@3f7333333f7ae1483f170a3d3e851eb8
PUBLIC	__xmm@3f7ae1483f8000003f8000003f800000
PUBLIC	__xmm@3f800000000000000000000000000000
PUBLIC	__xmm@3f80000000000000000000003f800000
PUBLIC	__xmm@3f800000000000003ee666663f800000
PUBLIC	__xmm@3f800000000000003f19999a3f800000
PUBLIC	__xmm@3f800000000000003f3333333f666666
PUBLIC	__xmm@3f8000003d23d70a3d23d70a3d23d70a
PUBLIC	__xmm@3f8000003e0f5c293e0f5c293e0f5c29
PUBLIC	__xmm@3f8000003e9eb8523e9eb8523e9eb852
PUBLIC	__xmm@3f8000003eb333333edc28f63f800000
PUBLIC	__xmm@3f8000003ec7ae143ec7ae143ec7ae14
PUBLIC	__xmm@3f8000003ed1eb853ed1eb853ed1eb85
PUBLIC	__xmm@3f8000003ef5c28f3e947ae13e23d70a
PUBLIC	__xmm@3f8000003efae1483efae1483efae148
PUBLIC	__xmm@3f8000003f0000003f0000003f000000
PUBLIC	__xmm@3f8000003f028f5c3f028f5c3f028f5c
PUBLIC	__xmm@3f8000003f19999a3f19999a3f19999a
PUBLIC	__xmm@3f8000003f1c28f63f1c28f63f1c28f6
PUBLIC	__xmm@3f8000003f3333333f19999a3f19999a
PUBLIC	__xmm@3f8000003f4000003ecccccd3dcccccd
PUBLIC	__xmm@3f8000003f4ccccd3ee147ae3e0f5c29
PUBLIC	__xmm@3f8000003f4ccccd3f0a3d713eeb851f
PUBLIC	__xmm@3f8000003f51eb853f51eb853f51eb85
PUBLIC	__xmm@3f8000003f5c28f63f5c28f63f5c28f6
PUBLIC	__xmm@3f8000003f6147ae3f051eb83e75c28f
PUBLIC	__xmm@3f8000003f6666663f3333333f333333
PUBLIC	__xmm@3f8000003f6666663f6666663f666666
PUBLIC	__xmm@3f8000003f70a3d73f70a3d73f70a3d7
PUBLIC	__xmm@3f8000003f75c28f3f75c28f3f75c28f
PUBLIC	__xmm@3f8000003f7ae1483f07ae143d75c28f
PUBLIC	__xmm@3f8000003f7ae1483f170a3d3e851eb8
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
PUBLIC	__xmm@4600000046000000c6000000c6000000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__std_terminate:PROC
EXTRN	__imp__wassert:PROC
EXTRN	?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ:PROC	; ImGui::GetStyle
EXTRN	?GetColorU32@ImGui@@YAII@Z:PROC			; ImGui::GetColorU32
EXTRN	?MemAlloc@ImGui@@YAPEAX_K@Z:PROC		; ImGui::MemAlloc
EXTRN	?MemFree@ImGui@@YAXPEAX@Z:PROC			; ImGui::MemFree
EXTRN	__imp_qsort:PROC
EXTRN	?ImAlphaBlendColors@@YAIII@Z:PROC		; ImAlphaBlendColors
EXTRN	?ImFormatString@@YAHPEAD_KPEBDZZ:PROC		; ImFormatString
EXTRN	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z:PROC	; ImTextCharFromUtf8
EXTRN	?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z:PROC	; ImFileLoadToMemory
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	acosf:PROC
EXTRN	ceilf:PROC
EXTRN	cosf:PROC
EXTRN	floorf:PROC
EXTRN	memchr:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	sinf:PROC
EXTRN	sqrtf:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__isa_available:DWORD
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA
_BSS	SEGMENT
?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA DW 01393H DUP (?) ; `ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon'::`2'::full_ranges
_BSS	ENDS
;	COMDAT ?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA
_BSS	SEGMENT
?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA DW 0f3dH DUP (?) ; `ImFontAtlas::GetGlyphRangesJapanese'::`2'::full_ranges
_BSS	ENDS
_BSS	SEGMENT
?stb__barrier_out_e@@3PEAEEA DQ 01H DUP (?)		; stb__barrier_out_e
?stb__barrier_out_b@@3PEAEEA DQ 01H DUP (?)		; stb__barrier_out_b
?stb__barrier_in_b@@3PEBEEB DQ 01H DUP (?)		; stb__barrier_in_b
?stb__dout@@3PEAEEA DQ 01H DUP (?)			; stb__dout
_BSS	ENDS
;	COMDAT __isa_available_default
_BSS	SEGMENT
__isa_available_default DD 01H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN12
	DD	imagerel $LN12+72
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z DD imagerel $LN106
	DD	imagerel $LN106+1231
	DD	imagerel $unwind$?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z DD imagerel $LN106
	DD	imagerel $LN106+1237
	DD	imagerel $unwind$?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z DD imagerel $LN106
	DD	imagerel $LN106+1242
	DD	imagerel $unwind$?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$ImVector@G@@QEAAAEAU0@AEBU0@@Z DD imagerel $LN7
	DD	imagerel $LN7+88
	DD	imagerel $unwind$??4?$ImVector@G@@QEAAAEAU0@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@G@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@G@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@G@@QEAAAEAGH@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@G@@QEAAAEAGH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@G@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@G@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@G@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@G@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+143
	DD	imagerel $chain$1$?resize@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@G@@QEAAXH@Z DD imagerel $LN16+143
	DD	imagerel $LN16+161
	DD	imagerel $chain$3$?resize@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@G@@QEAAXH@Z DD imagerel $LN16+161
	DD	imagerel $LN16+174
	DD	imagerel $chain$4$?resize@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD imagerel $LN24
	DD	imagerel $LN24+32
	DD	imagerel $unwind$?resize@?$ImVector@G@@QEAAXHAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD imagerel $LN24+32
	DD	imagerel $LN24+74
	DD	imagerel $chain$0$?resize@?$ImVector@G@@QEAAXHAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD imagerel $LN24+74
	DD	imagerel $LN24+131
	DD	imagerel $chain$1$?resize@?$ImVector@G@@QEAAXHAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD imagerel $LN24+131
	DD	imagerel $LN24+136
	DD	imagerel $chain$2$?resize@?$ImVector@G@@QEAAXHAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD imagerel $LN24+136
	DD	imagerel $LN24+199
	DD	imagerel $chain$3$?resize@?$ImVector@G@@QEAAXHAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?shrink@?$ImVector@G@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+71
	DD	imagerel $unwind$?shrink@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@G@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@G@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+84
	DD	imagerel $chain$0$?reserve@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@G@@QEAAXH@Z DD imagerel $LN6+84
	DD	imagerel $LN6+95
	DD	imagerel $chain$1$?reserve@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD imagerel $LN14
	DD	imagerel $LN14+28
	DD	imagerel $unwind$?push_back@?$ImVector@G@@QEAAXAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD imagerel $LN14+28
	DD	imagerel $LN14+75
	DD	imagerel $chain$0$?push_back@?$ImVector@G@@QEAAXAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD imagerel $LN14+75
	DD	imagerel $LN14+134
	DD	imagerel $chain$1$?push_back@?$ImVector@G@@QEAAXAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD imagerel $LN14+134
	DD	imagerel $LN14+139
	DD	imagerel $chain$2$?push_back@?$ImVector@G@@QEAAXAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD imagerel $LN14+139
	DD	imagerel $LN14+168
	DD	imagerel $chain$3$?push_back@?$ImVector@G@@QEAAXAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$ImVector@UImDrawCmd@@@@QEAAAEAU0@AEBU0@@Z DD imagerel $LN7
	DD	imagerel $LN7+89
	DD	imagerel $unwind$??4?$ImVector@UImDrawCmd@@@@QEAAAEAU0@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImDrawCmd@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@UImDrawCmd@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+145
	DD	imagerel $chain$1$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD imagerel $LN16+145
	DD	imagerel $LN16+163
	DD	imagerel $chain$3$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD imagerel $LN16+163
	DD	imagerel $LN16+176
	DD	imagerel $chain$4$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD imagerel $LN6+25
	DD	imagerel $LN6+83
	DD	imagerel $chain$0$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD imagerel $LN6+83
	DD	imagerel $LN6+94
	DD	imagerel $chain$1$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD imagerel $LN14
	DD	imagerel $LN14+27
	DD	imagerel $unwind$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD imagerel $LN14+27
	DD	imagerel $LN14+75
	DD	imagerel $chain$0$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD imagerel $LN14+75
	DD	imagerel $LN14+135
	DD	imagerel $chain$1$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD imagerel $LN14+135
	DD	imagerel $LN14+140
	DD	imagerel $chain$2$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD imagerel $LN14+140
	DD	imagerel $LN14+201
	DD	imagerel $chain$3$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+59
	DD	imagerel $unwind$?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$ImVector@UImDrawCmd@@@@QEAAPEAUImDrawCmd@@PEBU2@@Z DD imagerel $LN8
	DD	imagerel $LN8+150
	DD	imagerel $unwind$?erase@?$ImVector@UImDrawCmd@@@@QEAAPEAUImDrawCmd@@PEBU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImDrawChannel@@@@QEAAAEAUImDrawChannel@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$??A?$ImVector@UImDrawChannel@@@@QEAAAEAUImDrawChannel@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+145
	DD	imagerel $chain$1$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD imagerel $LN16+145
	DD	imagerel $LN16+163
	DD	imagerel $chain$3$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD imagerel $LN16+163
	DD	imagerel $LN16+176
	DD	imagerel $chain$4$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImDrawListSplitter@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+36
	DD	imagerel $unwind$??1ImDrawListSplitter@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD imagerel $LN34
	DD	imagerel $LN34+15
	DD	imagerel $unwind$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD imagerel $LN34+15
	DD	imagerel $LN34+33
	DD	imagerel $chain$0$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD imagerel $LN34+33
	DD	imagerel $LN34+249
	DD	imagerel $chain$2$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD imagerel $LN34+249
	DD	imagerel $LN34+272
	DD	imagerel $chain$3$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD imagerel $LN34+272
	DD	imagerel $LN34+296
	DD	imagerel $chain$4$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z DD imagerel $LN99
	DD	imagerel $LN99+253
	DD	imagerel $unwind$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z DD imagerel $LN99+253
	DD	imagerel $LN99+1060
	DD	imagerel $chain$2$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z DD imagerel $LN99+1060
	DD	imagerel $LN99+1085
	DD	imagerel $chain$3$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z DD imagerel $LN85
	DD	imagerel $LN85+31
	DD	imagerel $unwind$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z DD imagerel $LN85+31
	DD	imagerel $LN85+1102
	DD	imagerel $chain$5$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z DD imagerel $LN85+1102
	DD	imagerel $LN85+1111
	DD	imagerel $chain$6$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z DD imagerel $LN7
	DD	imagerel $LN7+170
	DD	imagerel $unwind$?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$ImVector@UImDrawVert@@@@QEAAAEAU0@AEBU0@@Z DD imagerel $LN7
	DD	imagerel $LN7+93
	DD	imagerel $unwind$??4?$ImVector@UImDrawVert@@@@QEAAAEAU0@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImDrawVert@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImDrawVert@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImDrawVert@@@@QEAAAEAUImDrawVert@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+69
	DD	imagerel $unwind$??A?$ImVector@UImDrawVert@@@@QEAAAEAUImDrawVert@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImDrawVert@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@UImDrawVert@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+153
	DD	imagerel $chain$1$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD imagerel $LN16+153
	DD	imagerel $LN16+171
	DD	imagerel $chain$3$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD imagerel $LN16+171
	DD	imagerel $LN16+184
	DD	imagerel $chain$4$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?shrink@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+71
	DD	imagerel $unwind$?shrink@?$ImVector@UImDrawVert@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD imagerel $LN6+25
	DD	imagerel $LN6+91
	DD	imagerel $chain$0$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD imagerel $LN6+91
	DD	imagerel $LN6+102
	DD	imagerel $chain$1$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImVec4@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImVec4@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImVec4@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@UImVec4@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImVec4@@@@QEAAXH@Z DD imagerel $LN10
	DD	imagerel $LN10+70
	DD	imagerel $unwind$?resize@?$ImVector@UImVec4@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImVec4@@@@QEAAXAEBUImVec4@@@Z DD imagerel $LN9
	DD	imagerel $LN9+99
	DD	imagerel $unwind$?push_back@?$ImVector@UImVec4@@@@QEAAXAEBUImVec4@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@UImVec4@@@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+59
	DD	imagerel $unwind$?pop_back@?$ImVector@UImVec4@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@PEAX@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@PEAX@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@PEAX@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@PEAX@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@PEAX@@QEAAAEAPEAXXZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$?back@?$ImVector@PEAX@@QEAAAEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@PEAX@@QEAAXH@Z DD imagerel $LN10
	DD	imagerel $LN10+70
	DD	imagerel $unwind$?resize@?$ImVector@PEAX@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@PEAX@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@PEAX@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@PEAX@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@PEAX@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@PEAX@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@PEAX@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@PEAX@@QEAAXAEBQEAX@Z DD imagerel $LN9
	DD	imagerel $LN9+96
	DD	imagerel $unwind$?push_back@?$ImVector@PEAX@@QEAAXAEBQEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@PEAX@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+59
	DD	imagerel $unwind$?pop_back@?$ImVector@PEAX@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImVec2@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImVec2@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImVec2@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@UImVec2@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImVec2@@@@QEAAAEAUImVec2@@XZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$?back@?$ImVector@UImVec2@@@@QEAAAEAUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImVec2@@@@QEAAXH@Z DD imagerel $LN10
	DD	imagerel $LN10+70
	DD	imagerel $unwind$?resize@?$ImVector@UImVec2@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z DD imagerel $LN9
	DD	imagerel $LN9+96
	DD	imagerel $unwind$?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DD imagerel $LN57
	DD	imagerel $LN57+339
	DD	imagerel $unwind$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z DD imagerel $LN26
	DD	imagerel $LN26+296
	DD	imagerel $unwind$?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushClipRectFullScreen@ImDrawList@@QEAAXXZ DD imagerel $LN32
	DD	imagerel $LN32+179
	DD	imagerel $unwind$?PushClipRectFullScreen@ImDrawList@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopClipRect@ImDrawList@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+95
	DD	imagerel $unwind$?PopClipRect@ImDrawList@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushTextureID@ImDrawList@@QEAAXPEAX@Z DD imagerel $LN11
	DD	imagerel $LN11+119
	DD	imagerel $unwind$?PushTextureID@ImDrawList@@QEAAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopTextureID@ImDrawList@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+95
	DD	imagerel $unwind$?PopTextureID@ImDrawList@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD imagerel $LN38
	DD	imagerel $LN38+44
	DD	imagerel $unwind$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD imagerel $LN38+44
	DD	imagerel $LN38+61
	DD	imagerel $chain$1$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD imagerel $LN38+61
	DD	imagerel $LN38+215
	DD	imagerel $chain$2$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD imagerel $LN38+215
	DD	imagerel $LN38+343
	DD	imagerel $chain$3$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD imagerel $LN38+343
	DD	imagerel $LN38+344
	DD	imagerel $chain$4$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z DD imagerel $LN35
	DD	imagerel $LN35+250
	DD	imagerel $unwind$?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z DD imagerel $LN16
	DD	imagerel $LN16+117
	DD	imagerel $unwind$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z DD imagerel $LN16+117
	DD	imagerel $LN16+381
	DD	imagerel $chain$0$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z DD imagerel $LN16+381
	DD	imagerel $LN16+402
	DD	imagerel $chain$1$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z DD imagerel $LN29
	DD	imagerel $LN29+94
	DD	imagerel $unwind$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z DD imagerel $LN29+94
	DD	imagerel $LN29+443
	DD	imagerel $chain$1$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z DD imagerel $LN29+443
	DD	imagerel $LN29+474
	DD	imagerel $chain$2$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddQuad@ImDrawList@@QEAAXAEBUImVec2@@000IM@Z DD imagerel $LN7
	DD	imagerel $LN7+144
	DD	imagerel $unwind$?AddQuad@ImDrawList@@QEAAXAEBUImVec2@@000IM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddQuadFilled@ImDrawList@@QEAAXAEBUImVec2@@000I@Z DD imagerel $LN7
	DD	imagerel $LN7+127
	DD	imagerel $unwind$?AddQuadFilled@ImDrawList@@QEAAXAEBUImVec2@@000I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddTriangle@ImDrawList@@QEAAXAEBUImVec2@@00IM@Z DD imagerel $LN7
	DD	imagerel $LN7+131
	DD	imagerel $unwind$?AddTriangle@ImDrawList@@QEAAXAEBUImVec2@@00IM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z DD imagerel $LN7
	DD	imagerel $LN7+114
	DD	imagerel $unwind$?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD imagerel $LN25
	DD	imagerel $LN25+36
	DD	imagerel $unwind$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD imagerel $LN25+36
	DD	imagerel $LN25+321
	DD	imagerel $chain$0$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD imagerel $LN25+321
	DD	imagerel $LN25+322
	DD	imagerel $chain$1$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD imagerel $LN25+322
	DD	imagerel $LN25+379
	DD	imagerel $chain$2$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z DD imagerel $LN25
	DD	imagerel $LN25+36
	DD	imagerel $unwind$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z DD imagerel $LN25+36
	DD	imagerel $LN25+311
	DD	imagerel $chain$0$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z DD imagerel $LN25+311
	DD	imagerel $LN25+312
	DD	imagerel $chain$1$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddNgon@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD imagerel $LN9
	DD	imagerel $LN9+159
	DD	imagerel $unwind$?AddNgon@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddNgonFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z DD imagerel $LN9
	DD	imagerel $LN9+130
	DD	imagerel $unwind$?AddNgonFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z DD imagerel $LN40
	DD	imagerel $LN40+90
	DD	imagerel $unwind$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z DD imagerel $LN40+90
	DD	imagerel $LN40+321
	DD	imagerel $chain$1$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z DD imagerel $LN40+321
	DD	imagerel $LN40+343
	DD	imagerel $chain$2$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z DD imagerel $LN39
	DD	imagerel $LN39+53
	DD	imagerel $unwind$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z DD imagerel $LN39+53
	DD	imagerel $LN39+464
	DD	imagerel $chain$1$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z DD imagerel $LN39+464
	DD	imagerel $LN39+487
	DD	imagerel $chain$2$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z DD imagerel $LN223
	DD	imagerel $LN223+3507
	DD	imagerel $unwind$?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z DD imagerel $LN70
	DD	imagerel $LN70+1531
	DD	imagerel $unwind$?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddBezierCurve@ImDrawList@@QEAAXAEBUImVec2@@000IMH@Z DD imagerel $LN7
	DD	imagerel $LN7+136
	DD	imagerel $unwind$?AddBezierCurve@ImDrawList@@QEAAXAEBUImVec2@@000IMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z DD imagerel $LN15
	DD	imagerel $LN15+53
	DD	imagerel $unwind$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z DD imagerel $LN15+53
	DD	imagerel $LN15+186
	DD	imagerel $chain$0$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z DD imagerel $LN15+186
	DD	imagerel $LN15+214
	DD	imagerel $chain$1$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z DD imagerel $LN17
	DD	imagerel $LN17+53
	DD	imagerel $unwind$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z DD imagerel $LN17+53
	DD	imagerel $LN17+397
	DD	imagerel $chain$0$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z DD imagerel $LN17+397
	DD	imagerel $LN17+425
	DD	imagerel $chain$1$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD imagerel $LN17
	DD	imagerel $LN17+53
	DD	imagerel $unwind$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD imagerel $LN17+53
	DD	imagerel $LN17+94
	DD	imagerel $chain$0$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD imagerel $LN17+94
	DD	imagerel $LN17+262
	DD	imagerel $chain$1$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD imagerel $LN17+262
	DD	imagerel $LN17+312
	DD	imagerel $chain$2$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD imagerel $LN17+312
	DD	imagerel $LN17+332
	DD	imagerel $chain$3$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z DD imagerel $LN11
	DD	imagerel $LN11+100
	DD	imagerel $unwind$?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathFillConvex@ImDrawList@@QEAAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$?PathFillConvex@ImDrawList@@QEAAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathStroke@ImDrawList@@QEAAXI_NM@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?PathStroke@ImDrawList@@QEAAXI_NM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD imagerel $LN27
	DD	imagerel $LN27+62
	DD	imagerel $unwind$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD imagerel $LN27+62
	DD	imagerel $LN27+111
	DD	imagerel $chain$1$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD imagerel $LN27+111
	DD	imagerel $LN27+405
	DD	imagerel $chain$6$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD imagerel $LN27+405
	DD	imagerel $LN27+421
	DD	imagerel $chain$7$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD imagerel $LN27+421
	DD	imagerel $LN27+443
	DD	imagerel $chain$8$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z DD imagerel $LN34
	DD	imagerel $LN34+101
	DD	imagerel $unwind$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z DD imagerel $LN34+101
	DD	imagerel $LN34+329
	DD	imagerel $chain$1$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z DD imagerel $LN34+329
	DD	imagerel $LN34+436
	DD	imagerel $chain$2$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD imagerel $LN34
	DD	imagerel $LN34+233
	DD	imagerel $unwind$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD imagerel $LN34+233
	DD	imagerel $LN34+297
	DD	imagerel $chain$2$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD imagerel $LN34+297
	DD	imagerel $LN34+663
	DD	imagerel $chain$5$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD imagerel $LN34+663
	DD	imagerel $LN34+688
	DD	imagerel $chain$6$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD imagerel $LN34+688
	DD	imagerel $LN34+723
	DD	imagerel $chain$7$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD imagerel $LN81
	DD	imagerel $LN81+217
	DD	imagerel $unwind$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD imagerel $LN81+217
	DD	imagerel $LN81+521
	DD	imagerel $chain$1$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD imagerel $LN81+521
	DD	imagerel $LN81+525
	DD	imagerel $chain$2$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD imagerel $LN81+525
	DD	imagerel $LN81+858
	DD	imagerel $chain$3$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD imagerel $LN81+858
	DD	imagerel $LN81+882
	DD	imagerel $chain$4$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddCallback@ImDrawList@@QEAAXP6AXPEBU1@PEBUImDrawCmd@@@ZPEAX@Z DD imagerel $LN14
	DD	imagerel $LN14+173
	DD	imagerel $unwind$?AddCallback@ImDrawList@@QEAAXP6AXPEBU1@PEBUImDrawCmd@@@ZPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddDrawCmd@ImDrawList@@QEAAXXZ DD imagerel $LN14
	DD	imagerel $LN14+180
	DD	imagerel $unwind$?AddDrawCmd@ImDrawList@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CloneOutput@ImDrawList@@QEBAPEAU1@XZ DD imagerel $LN23
	DD	imagerel $LN23+251
	DD	imagerel $unwind$?CloneOutput@ImDrawList@@QEBAPEAU1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA DD imagerel ?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA
	DD	imagerel ?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ImDrawList@@QEAAXXZ DD imagerel $LN29
	DD	imagerel $LN29+226
	DD	imagerel $unwind$?Clear@ImDrawList@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearFreeMemory@ImDrawList@@QEAAXXZ DD imagerel $LN22
	DD	imagerel $LN22+188
	DD	imagerel $unwind$?ClearFreeMemory@ImDrawList@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PrimReserve@ImDrawList@@QEAAXHH@Z DD imagerel $LN5
	DD	imagerel $LN5+163
	DD	imagerel $unwind$?PrimReserve@ImDrawList@@QEAAXHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PrimUnreserve@ImDrawList@@QEAAXHH@Z DD imagerel $LN11
	DD	imagerel $LN11+131
	DD	imagerel $unwind$?PrimUnreserve@ImDrawList@@QEAAXHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PrimRect@ImDrawList@@QEAAXAEBUImVec2@@0I@Z DD imagerel $LN8
	DD	imagerel $LN8+284
	DD	imagerel $unwind$?PrimRect@ImDrawList@@QEAAXAEBUImVec2@@0I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z DD imagerel $LN12
	DD	imagerel $LN12+334
	DD	imagerel $unwind$?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PrimQuadUV@ImDrawList@@QEAAXAEBUImVec2@@0000000I@Z DD imagerel $LN4
	DD	imagerel $LN4+261
	DD	imagerel $unwind$?PrimQuadUV@ImDrawList@@QEAAXAEBUImVec2@@0000000I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateClipRect@ImDrawList@@QEAAXXZ DD imagerel $LN17
	DD	imagerel $LN17+236
	DD	imagerel $unwind$?UpdateClipRect@ImDrawList@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateTextureID@ImDrawList@@QEAAXXZ DD imagerel $LN20
	DD	imagerel $LN20+283
	DD	imagerel $unwind$?UpdateTextureID@ImDrawList@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeIndexAllBuffers@ImDrawData@@QEAAXXZ DD imagerel $LN65
	DD	imagerel $LN65+586
	DD	imagerel $unwind$?DeIndexAllBuffers@ImDrawData@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z DD imagerel $LN26
	DD	imagerel $LN26+27
	DD	imagerel $unwind$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z DD imagerel $LN26+27
	DD	imagerel $LN26+226
	DD	imagerel $chain$3$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z DD imagerel $LN26+226
	DD	imagerel $LN26+236
	DD	imagerel $chain$4$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@I@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@I@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@I@@QEAAAEAIH@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@I@@QEAAAEAIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@I@@QEBAAEBIH@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@I@@QEBAAEBIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@I@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@I@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@I@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@I@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@I@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+145
	DD	imagerel $chain$1$?resize@?$ImVector@I@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@I@@QEAAXH@Z DD imagerel $LN16+145
	DD	imagerel $LN16+163
	DD	imagerel $chain$3$?resize@?$ImVector@I@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@I@@QEAAXH@Z DD imagerel $LN16+163
	DD	imagerel $LN16+176
	DD	imagerel $chain$4$?resize@?$ImVector@I@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@I@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@I@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@I@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@I@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@I@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@I@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBit@ImFontGlyphRangesBuilder@@QEBA_N_K@Z DD imagerel $LN7
	DD	imagerel $LN7+97
	DD	imagerel $unwind$?GetBit@ImFontGlyphRangesBuilder@@QEBA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetBit@ImFontGlyphRangesBuilder@@QEAAX_K@Z DD imagerel $LN7
	DD	imagerel $LN7+94
	DD	imagerel $unwind$?SetBit@ImFontGlyphRangesBuilder@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddChar@ImFontGlyphRangesBuilder@@QEAAXG@Z DD imagerel $LN9
	DD	imagerel $LN9+94
	DD	imagerel $unwind$?AddChar@ImFontGlyphRangesBuilder@@QEAAXG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddText@ImFontGlyphRangesBuilder@@QEAAXPEBD0@Z DD imagerel $LN20
	DD	imagerel $LN20+180
	DD	imagerel $unwind$?AddText@ImFontGlyphRangesBuilder@@QEAAXPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z DD imagerel $LN27
	DD	imagerel $LN27+26
	DD	imagerel $unwind$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z DD imagerel $LN27+26
	DD	imagerel $LN27+162
	DD	imagerel $chain$2$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z DD imagerel $LN27+162
	DD	imagerel $LN27+174
	DD	imagerel $chain$3$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BuildRanges@ImFontGlyphRangesBuilder@@QEAAXPEAU?$ImVector@G@@@Z DD imagerel $LN51
	DD	imagerel $LN51+492
	DD	imagerel $unwind$?BuildRanges@ImFontGlyphRangesBuilder@@QEAAXPEAU?$ImVector@G@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImFontAtlas@@QEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+182
	DD	imagerel $unwind$??1ImFontAtlas@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD imagerel $LN68
	DD	imagerel $LN68+16
	DD	imagerel $unwind$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD imagerel $LN68+16
	DD	imagerel $LN68+324
	DD	imagerel $chain$2$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD imagerel $LN68+324
	DD	imagerel $LN68+386
	DD	imagerel $chain$3$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD imagerel $LN68+386
	DD	imagerel $LN68+666
	DD	imagerel $chain$4$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD imagerel $LN68+666
	DD	imagerel $LN68+834
	DD	imagerel $chain$5$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD imagerel $LN68+834
	DD	imagerel $LN68+854
	DD	imagerel $chain$6$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD imagerel $LN68+854
	DD	imagerel $LN68+931
	DD	imagerel $chain$7$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddFontDefault@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD imagerel $LN26
	DD	imagerel $LN26+495
	DD	imagerel $unwind$?AddFontDefault@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddFontFromFileTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z DD imagerel $LN31
	DD	imagerel $LN31+629
	DD	imagerel $unwind$?AddFontFromFileTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z DD imagerel $LN21
	DD	imagerel $LN21+498
	DD	imagerel $unwind$?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddFontFromMemoryCompressedTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBXHMPEBUImFontConfig@@PEBG@Z DD imagerel $LN20
	DD	imagerel $LN20+536
	DD	imagerel $unwind$?AddFontFromMemoryCompressedTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBXHMPEBUImFontConfig@@PEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z DD imagerel $LN51
	DD	imagerel $LN51+771
	DD	imagerel $unwind$?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearInputData@ImFontAtlas@@QEAAXXZ DD imagerel $LN66
	DD	imagerel $LN66+16
	DD	imagerel $unwind$?ClearInputData@ImFontAtlas@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?ClearInputData@ImFontAtlas@@QEAAXXZ DD imagerel $LN66+16
	DD	imagerel $LN66+521
	DD	imagerel $chain$1$?ClearInputData@ImFontAtlas@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?ClearInputData@ImFontAtlas@@QEAAXXZ DD imagerel $LN66+521
	DD	imagerel $LN66+578
	DD	imagerel $chain$2$?ClearInputData@ImFontAtlas@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearTexData@ImFontAtlas@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+84
	DD	imagerel $unwind$?ClearTexData@ImFontAtlas@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearFonts@ImFontAtlas@@QEAAXXZ DD imagerel $LN53
	DD	imagerel $LN53+332
	DD	imagerel $unwind$?ClearFonts@ImFontAtlas@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ImFontAtlas@@QEAAXXZ DD imagerel $LN10
	DD	imagerel $LN10+96
	DD	imagerel $unwind$?Clear@ImFontAtlas@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Build@ImFontAtlas@@QEAA_NXZ DD imagerel $LN6
	DD	imagerel $LN6+53
	DD	imagerel $unwind$?Build@ImFontAtlas@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTexDataAsAlpha8@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD imagerel $LN38
	DD	imagerel $LN38+523
	DD	imagerel $unwind$?GetTexDataAsAlpha8@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD imagerel $LN53
	DD	imagerel $LN53+45
	DD	imagerel $unwind$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD imagerel $LN53+45
	DD	imagerel $LN53+52
	DD	imagerel $chain$0$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD imagerel $LN53+52
	DD	imagerel $LN53+84
	DD	imagerel $chain$3$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD imagerel $LN53+84
	DD	imagerel $LN53+567
	DD	imagerel $chain$4$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD imagerel $LN53+567
	DD	imagerel $LN53+588
	DD	imagerel $chain$5$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD imagerel $LN53+588
	DD	imagerel $LN53+607
	DD	imagerel $chain$6$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD imagerel $LN53+607
	DD	imagerel $LN53+634
	DD	imagerel $chain$7$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD imagerel $LN53+634
	DD	imagerel $LN53+662
	DD	imagerel $chain$8$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z DD imagerel $LN16
	DD	imagerel $LN16+165
	DD	imagerel $unwind$?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddCustomRectFontGlyph@ImFontAtlas@@QEAAHPEAUImFont@@GHHMAEBUImVec2@@@Z DD imagerel $LN17
	DD	imagerel $LN17+250
	DD	imagerel $unwind$?AddCustomRectFontGlyph@ImFontAtlas@@QEAAHPEAUImFont@@GHHMAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcCustomRectUV@ImFontAtlas@@QEBAXPEBUImFontAtlasCustomRect@@PEAUImVec2@@1@Z DD imagerel $LN13
	DD	imagerel $LN13+224
	DD	imagerel $unwind$?CalcCustomRectUV@ImFontAtlas@@QEBAXPEBUImFontAtlasCustomRect@@PEAUImVec2@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMouseCursorTexData@ImFontAtlas@@QEAA_NHPEAUImVec2@@0QEAU2@1@Z DD imagerel $LN38
	DD	imagerel $LN38+329
	DD	imagerel $unwind$?GetMouseCursorTexData@ImFontAtlas@@QEAA_NHPEAUImVec2@@0QEAU2@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@PEAUImFont@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@PEAUImFont@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD imagerel $LN14
	DD	imagerel $LN14+28
	DD	imagerel $unwind$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD imagerel $LN14+28
	DD	imagerel $LN14+76
	DD	imagerel $chain$0$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD imagerel $LN14+76
	DD	imagerel $LN14+136
	DD	imagerel $chain$1$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD imagerel $LN14+136
	DD	imagerel $LN14+141
	DD	imagerel $chain$2$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD imagerel $LN14+141
	DD	imagerel $LN14+169
	DD	imagerel $chain$3$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImFontAtlasCustomRect@@@@QEAAAEAUImFontAtlasCustomRect@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$??A?$ImVector@UImFontAtlasCustomRect@@@@QEAAAEAUImFontAtlasCustomRect@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD imagerel $LN14
	DD	imagerel $LN14+27
	DD	imagerel $unwind$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD imagerel $LN14+27
	DD	imagerel $LN14+75
	DD	imagerel $chain$0$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD imagerel $LN14+75
	DD	imagerel $LN14+135
	DD	imagerel $chain$1$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD imagerel $LN14+135
	DD	imagerel $LN14+140
	DD	imagerel $chain$2$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD imagerel $LN14+140
	DD	imagerel $LN14+181
	DD	imagerel $chain$3$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImFontConfig@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImFontConfig@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$??A?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImFontConfig@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@UImFontConfig@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@XZ DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$?back@?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z DD imagerel $LN6+28
	DD	imagerel $LN6+89
	DD	imagerel $chain$0$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z DD imagerel $LN6+89
	DD	imagerel $LN6+100
	DD	imagerel $chain$1$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD imagerel $LN14
	DD	imagerel $LN14+27
	DD	imagerel $unwind$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD imagerel $LN14+27
	DD	imagerel $LN14+78
	DD	imagerel $chain$0$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD imagerel $LN14+78
	DD	imagerel $LN14+141
	DD	imagerel $chain$1$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD imagerel $LN14+141
	DD	imagerel $LN14+146
	DD	imagerel $chain$2$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD imagerel $LN14+146
	DD	imagerel $LN14+260
	DD	imagerel $chain$3$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@M@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@M@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@M@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@M@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@M@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@M@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD imagerel $LN24
	DD	imagerel $LN24+32
	DD	imagerel $unwind$?resize@?$ImVector@M@@QEAAXHAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD imagerel $LN24+32
	DD	imagerel $LN24+75
	DD	imagerel $chain$0$?resize@?$ImVector@M@@QEAAXHAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD imagerel $LN24+75
	DD	imagerel $LN24+133
	DD	imagerel $chain$1$?resize@?$ImVector@M@@QEAAXHAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD imagerel $LN24+133
	DD	imagerel $LN24+138
	DD	imagerel $chain$2$?resize@?$ImVector@M@@QEAAXHAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD imagerel $LN24+138
	DD	imagerel $LN24+197
	DD	imagerel $chain$3$?resize@?$ImVector@M@@QEAAXHAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@M@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@M@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@M@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@M@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@M@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@M@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImFontGlyph@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImFontGlyph@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+69
	DD	imagerel $unwind$??A?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImFontGlyph@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@UImFontGlyph@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@XZ DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$?back@?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+153
	DD	imagerel $chain$1$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD imagerel $LN16+153
	DD	imagerel $LN16+171
	DD	imagerel $chain$3$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD imagerel $LN16+171
	DD	imagerel $LN16+184
	DD	imagerel $chain$4$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD imagerel $LN6+25
	DD	imagerel $LN6+91
	DD	imagerel $chain$0$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD imagerel $LN6+91
	DD	imagerel $LN6+102
	DD	imagerel $chain$1$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImFont@@QEAA@XZ DD imagerel $LN18
	DD	imagerel $LN18+66
	DD	imagerel $unwind$??1ImFont@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD imagerel $LN62
	DD	imagerel $LN62+23
	DD	imagerel $unwind$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD imagerel $LN62+23
	DD	imagerel $LN62+162
	DD	imagerel $chain$9$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD imagerel $LN62+162
	DD	imagerel $LN62+473
	DD	imagerel $chain$10$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$11$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD imagerel $LN62+473
	DD	imagerel $LN62+528
	DD	imagerel $chain$11$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$12$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD imagerel $LN62+528
	DD	imagerel $LN62+546
	DD	imagerel $chain$12$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$13$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD imagerel $LN62+546
	DD	imagerel $LN62+593
	DD	imagerel $chain$13$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$14$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD imagerel $LN62+593
	DD	imagerel $LN62+609
	DD	imagerel $chain$14$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD imagerel $LN44
	DD	imagerel $LN44+92
	DD	imagerel $unwind$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD imagerel $LN44+92
	DD	imagerel $LN44+376
	DD	imagerel $chain$0$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD imagerel $LN44+376
	DD	imagerel $LN44+422
	DD	imagerel $chain$1$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD imagerel $LN44+422
	DD	imagerel $LN44+445
	DD	imagerel $chain$2$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD imagerel $LN44+445
	DD	imagerel $LN44+450
	DD	imagerel $chain$3$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z DD imagerel $LN30
	DD	imagerel $LN30+108
	DD	imagerel $unwind$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z DD imagerel $LN30+108
	DD	imagerel $LN30+525
	DD	imagerel $chain$2$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z DD imagerel $LN30+525
	DD	imagerel $LN30+545
	DD	imagerel $chain$3$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD imagerel $LN90
	DD	imagerel $LN90+182
	DD	imagerel $unwind$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD imagerel $LN90+182
	DD	imagerel $LN90+487
	DD	imagerel $chain$4$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD imagerel $LN90+487
	DD	imagerel $LN90+559
	DD	imagerel $chain$6$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD imagerel $LN90+559
	DD	imagerel $LN90+1517
	DD	imagerel $chain$9$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD imagerel $LN90+1517
	DD	imagerel $LN90+1661
	DD	imagerel $chain$10$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$11$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD imagerel $LN90+1661
	DD	imagerel $LN90+1701
	DD	imagerel $chain$11$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$12$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD imagerel $LN90+1701
	DD	imagerel $LN90+1735
	DD	imagerel $chain$12$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BuildLookupTable@ImFont@@QEAAXXZ DD imagerel $LN103
	DD	imagerel $LN103+22
	DD	imagerel $unwind$?BuildLookupTable@ImFont@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?BuildLookupTable@ImFont@@QEAAXXZ DD imagerel $LN103+22
	DD	imagerel $LN103+29
	DD	imagerel $chain$0$?BuildLookupTable@ImFont@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?BuildLookupTable@ImFont@@QEAAXXZ DD imagerel $LN103+29
	DD	imagerel $LN103+36
	DD	imagerel $chain$1$?BuildLookupTable@ImFont@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?BuildLookupTable@ImFont@@QEAAXXZ DD imagerel $LN103+36
	DD	imagerel $LN103+874
	DD	imagerel $chain$3$?BuildLookupTable@ImFont@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?BuildLookupTable@ImFont@@QEAAXXZ DD imagerel $LN103+874
	DD	imagerel $LN103+1048
	DD	imagerel $chain$4$?BuildLookupTable@ImFont@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?BuildLookupTable@ImFont@@QEAAXXZ DD imagerel $LN103+1048
	DD	imagerel $LN103+1076
	DD	imagerel $chain$5$?BuildLookupTable@ImFont@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?BuildLookupTable@ImFont@@QEAAXXZ DD imagerel $LN103+1076
	DD	imagerel $LN103+1183
	DD	imagerel $chain$6$?BuildLookupTable@ImFont@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearOutputData@ImFont@@QEAAXXZ DD imagerel $LN13
	DD	imagerel $LN13+114
	DD	imagerel $unwind$?ClearOutputData@ImFont@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GrowIndex@ImFont@@QEAAXH@Z DD imagerel $LN44
	DD	imagerel $LN44+68
	DD	imagerel $unwind$?GrowIndex@ImFont@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?GrowIndex@ImFont@@QEAAXH@Z DD imagerel $LN44+68
	DD	imagerel $LN44+332
	DD	imagerel $chain$2$?GrowIndex@ImFont@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?GrowIndex@ImFont@@QEAAXH@Z DD imagerel $LN44+332
	DD	imagerel $LN44+376
	DD	imagerel $chain$3$?GrowIndex@ImFont@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?GrowIndex@ImFont@@QEAAXH@Z DD imagerel $LN44+376
	DD	imagerel $LN44+383
	DD	imagerel $chain$4$?GrowIndex@ImFont@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddGlyph@ImFont@@QEAAXGMMMMMMMMM@Z DD imagerel $LN12
	DD	imagerel $LN12+423
	DD	imagerel $unwind$?AddGlyph@ImFont@@QEAAXGMMMMMMMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddRemapChar@ImFont@@QEAAXGG_N@Z DD imagerel $LN17
	DD	imagerel $LN17+126
	DD	imagerel $unwind$?AddRemapChar@ImFont@@QEAAXGG_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?AddRemapChar@ImFont@@QEAAXGG_N@Z DD imagerel $LN17+126
	DD	imagerel $LN17+262
	DD	imagerel $chain$0$?AddRemapChar@ImFont@@QEAAXGG_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?AddRemapChar@ImFont@@QEAAXGG_N@Z DD imagerel $LN17+262
	DD	imagerel $LN17+293
	DD	imagerel $chain$1$?AddRemapChar@ImFont@@QEAAXGG_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImFont@@QEAAPEAXI@Z DD imagerel $LN22
	DD	imagerel $LN22+100
	DD	imagerel $unwind$??_GImFont@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z DD imagerel ?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z
	DD	imagerel ?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z+74
	DD	imagerel $unwind$?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImBezierCalc@@YA?AUImVec2@@AEBU1@000M@Z DD imagerel $LN6
	DD	imagerel $LN6+180
	DD	imagerel $unwind$?ImBezierCalc@@YA?AUImVec2@@AEBU1@000M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Create@ImBitVector@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$?Create@ImBitVector@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ImBitVector@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+44
	DD	imagerel $unwind$?Clear@ImBitVector@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TestBit@ImBitVector@@QEBA_NH@Z DD imagerel $LN7
	DD	imagerel $LN7+86
	DD	imagerel $unwind$?TestBit@ImBitVector@@QEBA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetBit@ImBitVector@@QEAAXH@Z DD imagerel $LN7
	DD	imagerel $LN7+88
	DD	imagerel $unwind$?SetBit@ImBitVector@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImBitVector@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+24
	DD	imagerel $unwind$??1ImBitVector@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImDrawListSharedData@@QEAA@XZ DD imagerel $LN41
	DD	imagerel $LN41+276
	DD	imagerel $unwind$??0ImDrawListSharedData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z DD imagerel $LN19
	DD	imagerel $LN19+25
	DD	imagerel $unwind$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z DD imagerel $LN19+25
	DD	imagerel $LN19+202
	DD	imagerel $chain$4$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z DD imagerel $LN19+202
	DD	imagerel $LN19+208
	DD	imagerel $chain$5$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@H@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@H@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@H@@QEAAAEAHH@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@H@@QEAAAEAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@H@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@H@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@H@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@H@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@H@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@H@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@H@@QEAAXAEBH@Z DD imagerel $LN9
	DD	imagerel $LN9+94
	DD	imagerel $unwind$?push_back@?$ImVector@H@@QEAAXAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD imagerel $LN59
	DD	imagerel $LN59+47
	DD	imagerel $unwind$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD imagerel $LN59+47
	DD	imagerel $LN59+206
	DD	imagerel $chain$4$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$12$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD imagerel $LN59+206
	DD	imagerel $LN59+677
	DD	imagerel $chain$12$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$13$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD imagerel $LN59+677
	DD	imagerel $LN59+724
	DD	imagerel $chain$13$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$14$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD imagerel $LN59+724
	DD	imagerel $LN59+775
	DD	imagerel $chain$14$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z DD imagerel $LN105
	DD	imagerel $LN105+12
	DD	imagerel $unwind$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z DD imagerel $LN105+12
	DD	imagerel $LN105+532
	DD	imagerel $chain$7$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z DD imagerel $LN105+532
	DD	imagerel $LN105+813
	DD	imagerel $chain$10$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z DD imagerel $LN105+813
	DD	imagerel $LN105+848
	DD	imagerel $chain$8$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z DD imagerel $LN25
	DD	imagerel $LN25+133
	DD	imagerel $unwind$?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderCheckMark@ImGui@@YAXPEAUImDrawList@@UImVec2@@IM@Z DD imagerel $LN47
	DD	imagerel $LN47+538
	DD	imagerel $unwind$?RenderCheckMark@ImGui@@YAXPEAUImDrawList@@UImVec2@@IM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD imagerel $LN167
	DD	imagerel $LN167+59
	DD	imagerel $unwind$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD imagerel $LN167+59
	DD	imagerel $LN167+128
	DD	imagerel $chain$0$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD imagerel $LN167+128
	DD	imagerel $LN167+136
	DD	imagerel $chain$1$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD imagerel $LN167+136
	DD	imagerel $LN167+764
	DD	imagerel $chain$7$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD imagerel $LN167+764
	DD	imagerel $LN167+1072
	DD	imagerel $chain$8$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD imagerel $LN167+1072
	DD	imagerel $LN167+1080
	DD	imagerel $chain$9$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD imagerel $LN167+1080
	DD	imagerel $LN167+1112
	DD	imagerel $chain$10$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderArrowPointingAt@ImGui@@YAXPEAUImDrawList@@UImVec2@@1HI@Z DD imagerel $LN161
	DD	imagerel $LN161+693
	DD	imagerel $unwind$?RenderArrowPointingAt@ImGui@@YAXPEAUImDrawList@@UImVec2@@1HI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD imagerel $LN131
	DD	imagerel $LN131+50
	DD	imagerel $unwind$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD imagerel $LN131+50
	DD	imagerel $LN131+261
	DD	imagerel $chain$6$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$11$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD imagerel $LN131+261
	DD	imagerel $LN131+1597
	DD	imagerel $chain$11$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$12$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD imagerel $LN131+1597
	DD	imagerel $LN131+1649
	DD	imagerel $chain$12$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$13$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD imagerel $LN131+1649
	DD	imagerel $LN131+1670
	DD	imagerel $chain$13$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z DD imagerel $LN56
	DD	imagerel $LN56+152
	DD	imagerel $unwind$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z DD imagerel $LN56+152
	DD	imagerel $LN56+1168
	DD	imagerel $chain$7$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z DD imagerel $LN56+1168
	DD	imagerel $LN56+1200
	DD	imagerel $chain$8$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z DD imagerel $LN116
	DD	imagerel $LN116+1059
	DD	imagerel $unwind$?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z DD imagerel $LN596
	DD	imagerel $LN596+5673
	DD	imagerel $unwind$?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFontAtlasBuildInit@@YAXPEAUImFontAtlas@@@Z DD imagerel $LN8
	DD	imagerel $LN8+68
	DD	imagerel $unwind$?ImFontAtlasBuildInit@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFontAtlasBuildSetupFont@@YAXPEAUImFontAtlas@@PEAUImFont@@PEAUImFontConfig@@MM@Z DD imagerel $LN6
	DD	imagerel $LN6+108
	DD	imagerel $unwind$?ImFontAtlasBuildSetupFont@@YAXPEAUImFontAtlas@@PEAUImFont@@PEAUImFontConfig@@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z DD imagerel $LN87
	DD	imagerel $LN87+920
	DD	imagerel $unwind$?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD imagerel $LN76
	DD	imagerel $LN76+48
	DD	imagerel $unwind$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD imagerel $LN76+48
	DD	imagerel $LN76+453
	DD	imagerel $chain$2$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD imagerel $LN76+453
	DD	imagerel $LN76+583
	DD	imagerel $chain$3$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD imagerel $LN76+583
	DD	imagerel $LN76+739
	DD	imagerel $chain$4$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD imagerel $LN76+739
	DD	imagerel $LN76+763
	DD	imagerel $chain$5$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z DD imagerel $LN18
	DD	imagerel $LN18+41
	DD	imagerel $unwind$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z DD imagerel $LN18+41
	DD	imagerel $LN18+101
	DD	imagerel $chain$0$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z DD imagerel $LN18+101
	DD	imagerel $LN18+103
	DD	imagerel $chain$1$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbrp_pack_rects DD imagerel stbrp_pack_rects
	DD	imagerel stbrp_pack_rects+20
	DD	imagerel $unwind$stbrp_pack_rects
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$stbrp_pack_rects DD imagerel stbrp_pack_rects+20
	DD	imagerel stbrp_pack_rects+105
	DD	imagerel $chain$0$stbrp_pack_rects
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$stbrp_pack_rects DD imagerel stbrp_pack_rects+105
	DD	imagerel stbrp_pack_rects+448
	DD	imagerel $chain$2$stbrp_pack_rects
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$stbrp_pack_rects DD imagerel stbrp_pack_rects+448
	DD	imagerel stbrp_pack_rects+483
	DD	imagerel $chain$3$stbrp_pack_rects
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$stbrp_pack_rects DD imagerel stbrp_pack_rects+483
	DD	imagerel stbrp_pack_rects+547
	DD	imagerel $chain$4$stbrp_pack_rects
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbrp_init_target DD imagerel stbrp_init_target
	DD	imagerel stbrp_init_target+24
	DD	imagerel $unwind$stbrp_init_target
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$stbrp_init_target DD imagerel stbrp_init_target+24
	DD	imagerel stbrp_init_target+141
	DD	imagerel $chain$0$stbrp_init_target
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$stbrp_init_target DD imagerel stbrp_init_target+141
	DD	imagerel stbrp_init_target+329
	DD	imagerel $chain$1$stbrp_init_target
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$stbrp_init_target DD imagerel stbrp_init_target+329
	DD	imagerel stbrp_init_target+345
	DD	imagerel $chain$2$stbrp_init_target
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$stbrp_init_target DD imagerel stbrp_init_target+345
	DD	imagerel stbrp_init_target+517
	DD	imagerel $chain$3$stbrp_init_target
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z DD imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z
	DD	imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z+160
	DD	imagerel $unwind$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z DD imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z+160
	DD	imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z+294
	DD	imagerel $chain$0$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z DD imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z+294
	DD	imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z+325
	DD	imagerel $chain$1$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z DD imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
	DD	imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z+146
	DD	imagerel $unwind$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z DD imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z+146
	DD	imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z+712
	DD	imagerel $chain$1$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z DD imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z+712
	DD	imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z+737
	DD	imagerel $chain$2$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z DD imagerel ?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
	DD	imagerel ?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z+240
	DD	imagerel $unwind$?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_PackBegin DD imagerel stbtt_PackBegin
	DD	imagerel stbtt_PackBegin+264
	DD	imagerel $unwind$stbtt_PackBegin
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_PackEnd DD imagerel stbtt_PackEnd
	DD	imagerel stbtt_PackEnd+32
	DD	imagerel $unwind$stbtt_PackEnd
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_GetPackedQuad DD imagerel stbtt_GetPackedQuad
	DD	imagerel stbtt_GetPackedQuad+118
	DD	imagerel $unwind$stbtt_GetPackedQuad
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$stbtt_GetPackedQuad DD imagerel stbtt_GetPackedQuad+118
	DD	imagerel stbtt_GetPackedQuad+221
	DD	imagerel $chain$0$stbtt_GetPackedQuad
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$stbtt_GetPackedQuad DD imagerel stbtt_GetPackedQuad+221
	DD	imagerel stbtt_GetPackedQuad+399
	DD	imagerel $chain$1$stbtt_GetPackedQuad
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_PackFontRangesRenderIntoRects DD imagerel stbtt_PackFontRangesRenderIntoRects
	DD	imagerel stbtt_PackFontRangesRenderIntoRects+62
	DD	imagerel $unwind$stbtt_PackFontRangesRenderIntoRects
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$14$stbtt_PackFontRangesRenderIntoRects DD imagerel stbtt_PackFontRangesRenderIntoRects+62
	DD	imagerel stbtt_PackFontRangesRenderIntoRects+1659
	DD	imagerel $chain$14$stbtt_PackFontRangesRenderIntoRects
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$15$stbtt_PackFontRangesRenderIntoRects DD imagerel stbtt_PackFontRangesRenderIntoRects+1659
	DD	imagerel stbtt_PackFontRangesRenderIntoRects+1688
	DD	imagerel $chain$15$stbtt_PackFontRangesRenderIntoRects
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_GetFontOffsetForIndex DD imagerel stbtt_GetFontOffsetForIndex
	DD	imagerel stbtt_GetFontOffsetForIndex+209
	DD	imagerel $unwind$stbtt_GetFontOffsetForIndex
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_FindGlyphIndex DD imagerel stbtt_FindGlyphIndex
	DD	imagerel stbtt_FindGlyphIndex+377
	DD	imagerel $unwind$stbtt_FindGlyphIndex
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$stbtt_FindGlyphIndex DD imagerel stbtt_FindGlyphIndex+377
	DD	imagerel stbtt_FindGlyphIndex+526
	DD	imagerel $chain$0$stbtt_FindGlyphIndex
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$stbtt_FindGlyphIndex DD imagerel stbtt_FindGlyphIndex+526
	DD	imagerel stbtt_FindGlyphIndex+993
	DD	imagerel $chain$1$stbtt_FindGlyphIndex
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_GetFontVMetrics DD imagerel stbtt_GetFontVMetrics
	DD	imagerel stbtt_GetFontVMetrics+169
	DD	imagerel $unwind$stbtt_GetFontVMetrics
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_GetGlyphHMetrics DD imagerel stbtt_GetGlyphHMetrics
	DD	imagerel stbtt_GetGlyphHMetrics+299
	DD	imagerel $unwind$stbtt_GetGlyphHMetrics
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_GetGlyphBox DD imagerel stbtt_GetGlyphBox
	DD	imagerel stbtt_GetGlyphBox+381
	DD	imagerel $unwind$stbtt_GetGlyphBox
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_GetGlyphShape DD imagerel stbtt_GetGlyphShape
	DD	imagerel stbtt_GetGlyphShape+45
	DD	imagerel $unwind$stbtt_GetGlyphShape
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$stbtt_GetGlyphShape DD imagerel stbtt_GetGlyphShape+45
	DD	imagerel stbtt_GetGlyphShape+222
	DD	imagerel $chain$0$stbtt_GetGlyphShape
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$stbtt_GetGlyphShape DD imagerel stbtt_GetGlyphShape+222
	DD	imagerel stbtt_GetGlyphShape+243
	DD	imagerel $chain$1$stbtt_GetGlyphShape
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_MakeGlyphBitmapSubpixel DD imagerel stbtt_MakeGlyphBitmapSubpixel
	DD	imagerel stbtt_MakeGlyphBitmapSubpixel+52
	DD	imagerel $unwind$stbtt_MakeGlyphBitmapSubpixel
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$stbtt_MakeGlyphBitmapSubpixel DD imagerel stbtt_MakeGlyphBitmapSubpixel+52
	DD	imagerel stbtt_MakeGlyphBitmapSubpixel+400
	DD	imagerel $chain$1$stbtt_MakeGlyphBitmapSubpixel
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$stbtt_MakeGlyphBitmapSubpixel DD imagerel stbtt_MakeGlyphBitmapSubpixel+400
	DD	imagerel stbtt_MakeGlyphBitmapSubpixel+529
	DD	imagerel $chain$2$stbtt_MakeGlyphBitmapSubpixel
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_GetGlyphBitmapBox DD imagerel stbtt_GetGlyphBitmapBox
	DD	imagerel stbtt_GetGlyphBitmapBox+81
	DD	imagerel $unwind$stbtt_GetGlyphBitmapBox
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_GetGlyphBitmapBoxSubpixel DD imagerel stbtt_GetGlyphBitmapBoxSubpixel
	DD	imagerel stbtt_GetGlyphBitmapBoxSubpixel+255
	DD	imagerel $unwind$stbtt_GetGlyphBitmapBoxSubpixel
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$stbtt_GetGlyphBitmapBoxSubpixel DD imagerel stbtt_GetGlyphBitmapBoxSubpixel+255
	DD	imagerel stbtt_GetGlyphBitmapBoxSubpixel+449
	DD	imagerel $chain$0$stbtt_GetGlyphBitmapBoxSubpixel
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$stbtt_GetGlyphBitmapBoxSubpixel DD imagerel stbtt_GetGlyphBitmapBoxSubpixel+449
	DD	imagerel stbtt_GetGlyphBitmapBoxSubpixel+548
	DD	imagerel $chain$1$stbtt_GetGlyphBitmapBoxSubpixel
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbtt_Rasterize DD imagerel stbtt_Rasterize
	DD	imagerel stbtt_Rasterize+270
	DD	imagerel $unwind$stbtt_Rasterize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__buf_seek@@YAXPEAUstbtt__buf@@H@Z DD imagerel ?stbtt__buf_seek@@YAXPEAUstbtt__buf@@H@Z
	DD	imagerel ?stbtt__buf_seek@@YAXPEAUstbtt__buf@@H@Z+91
	DD	imagerel $unwind$?stbtt__buf_seek@@YAXPEAUstbtt__buf@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__buf_skip@@YAXPEAUstbtt__buf@@H@Z DD imagerel ?stbtt__buf_skip@@YAXPEAUstbtt__buf@@H@Z
	DD	imagerel ?stbtt__buf_skip@@YAXPEAUstbtt__buf@@H@Z+94
	DD	imagerel $unwind$?stbtt__buf_skip@@YAXPEAUstbtt__buf@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z DD imagerel ?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z
	DD	imagerel ?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z+126
	DD	imagerel $unwind$?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__new_buf@@YA?AUstbtt__buf@@PEBX_K@Z DD imagerel ?stbtt__new_buf@@YA?AUstbtt__buf@@PEBX_K@Z
	DD	imagerel ?stbtt__new_buf@@YA?AUstbtt__buf@@PEBX_K@Z+91
	DD	imagerel $unwind$?stbtt__new_buf@@YA?AUstbtt__buf@@PEBX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z DD imagerel ?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z
	DD	imagerel ?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z+80
	DD	imagerel $unwind$?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+26
	DD	imagerel $unwind$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+26
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+95
	DD	imagerel $chain$0$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+95
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+256
	DD	imagerel $chain$1$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+256
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+334
	DD	imagerel $chain$2$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+334
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+402
	DD	imagerel $chain$3$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z DD imagerel ?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z
	DD	imagerel ?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z+348
	DD	imagerel $unwind$?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__cff_skip_operand@@YAXPEAUstbtt__buf@@@Z DD imagerel ?stbtt__cff_skip_operand@@YAXPEAUstbtt__buf@@@Z
	DD	imagerel ?stbtt__cff_skip_operand@@YAXPEAUstbtt__buf@@@Z+232
	DD	imagerel $unwind$?stbtt__cff_skip_operand@@YAXPEAUstbtt__buf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z DD imagerel ?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z
	DD	imagerel ?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z+576
	DD	imagerel $unwind$?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z DD imagerel ?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z
	DD	imagerel ?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z+101
	DD	imagerel $unwind$?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__cff_index_count@@YAHPEAUstbtt__buf@@@Z DD imagerel ?stbtt__cff_index_count@@YAHPEAUstbtt__buf@@@Z
	DD	imagerel ?stbtt__cff_index_count@@YAHPEAUstbtt__buf@@@Z+139
	DD	imagerel $unwind$?stbtt__cff_index_count@@YAHPEAUstbtt__buf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z DD imagerel ?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z
	DD	imagerel ?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z+420
	DD	imagerel $unwind$?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__find_table@@YAIPEAEIPEBD@Z DD imagerel ?stbtt__find_table@@YAIPEAEIPEBD@Z
	DD	imagerel ?stbtt__find_table@@YAIPEAEIPEBD@Z+182
	DD	imagerel $unwind$?stbtt__find_table@@YAIPEAEIPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt_GetFontOffsetForIndex_internal@@YAHPEAEH@Z DD imagerel ?stbtt_GetFontOffsetForIndex_internal@@YAHPEAEH@Z
	DD	imagerel ?stbtt_GetFontOffsetForIndex_internal@@YAHPEAEH@Z+209
	DD	imagerel $unwind$?stbtt_GetFontOffsetForIndex_internal@@YAHPEAEH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z DD imagerel ?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z
	DD	imagerel ?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z+305
	DD	imagerel $unwind$?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z DD imagerel ?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z
	DD	imagerel ?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z+1407
	DD	imagerel $unwind$?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z DD imagerel ?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z
	DD	imagerel ?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z+290
	DD	imagerel $unwind$?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__GetGlyphInfoT2@@YAHPEBUstbtt_fontinfo@@HPEAH111@Z DD imagerel ?stbtt__GetGlyphInfoT2@@YAHPEBUstbtt_fontinfo@@HPEAH111@Z
	DD	imagerel ?stbtt__GetGlyphInfoT2@@YAHPEBUstbtt_fontinfo@@HPEAH111@Z+170
	DD	imagerel $unwind$?stbtt__GetGlyphInfoT2@@YAHPEBUstbtt_fontinfo@@HPEAH111@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z DD imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z
	DD	imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z+24
	DD	imagerel $unwind$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z DD imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z+24
	DD	imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z+151
	DD	imagerel $chain$0$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z DD imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z+151
	DD	imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z+240
	DD	imagerel $chain$1$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z DD imagerel ?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z
	DD	imagerel ?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z+3222
	DD	imagerel $unwind$?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z DD imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+21
	DD	imagerel $unwind$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z DD imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+21
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+231
	DD	imagerel $chain$1$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z DD imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+231
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+246
	DD	imagerel $chain$3$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z DD imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+246
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+339
	DD	imagerel $chain$4$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z DD imagerel ?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z
	DD	imagerel ?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z+223
	DD	imagerel $unwind$?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z DD imagerel ?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z
	DD	imagerel ?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z+145
	DD	imagerel $unwind$?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z DD imagerel ?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z
	DD	imagerel ?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z+240
	DD	imagerel $unwind$?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z DD imagerel ?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z
	DD	imagerel ?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z+509
	DD	imagerel $unwind$?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z DD imagerel ?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z
	DD	imagerel ?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z+3384
	DD	imagerel $unwind$?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__GetGlyphShapeT2@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z DD imagerel ?stbtt__GetGlyphShapeT2@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z
	DD	imagerel ?stbtt__GetGlyphShapeT2@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z+214
	DD	imagerel $unwind$?stbtt__GetGlyphShapeT2@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z DD imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z
	DD	imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z+43
	DD	imagerel $unwind$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z DD imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z+43
	DD	imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z+127
	DD	imagerel $chain$0$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z DD imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z+127
	DD	imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z+175
	DD	imagerel $chain$2$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z DD imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z
	DD	imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z+12
	DD	imagerel $unwind$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z DD imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z+12
	DD	imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z+38
	DD	imagerel $chain$0$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z DD imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z+38
	DD	imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z+43
	DD	imagerel $chain$1$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__new_active@@YAPEAUstbtt__active_edge@@PEAUstbtt__hheap@@PEAUstbtt__edge@@HMPEAX@Z DD imagerel ?stbtt__new_active@@YAPEAUstbtt__active_edge@@PEAUstbtt__hheap@@PEAUstbtt__edge@@HMPEAX@Z
	DD	imagerel ?stbtt__new_active@@YAPEAUstbtt__active_edge@@PEAUstbtt__hheap@@PEAUstbtt__edge@@HMPEAX@Z+306
	DD	imagerel $unwind$?stbtt__new_active@@YAPEAUstbtt__active_edge@@PEAUstbtt__hheap@@PEAUstbtt__edge@@HMPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z DD imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z
	DD	imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z+181
	DD	imagerel $unwind$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z DD imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z+181
	DD	imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z+639
	DD	imagerel $chain$2$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z DD imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z+639
	DD	imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z+675
	DD	imagerel $chain$3$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z DD imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z
	DD	imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z+80
	DD	imagerel $unwind$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z DD imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z+80
	DD	imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z+1808
	DD	imagerel $chain$9$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z DD imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z+1808
	DD	imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z+1839
	DD	imagerel $chain$10$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+30
	DD	imagerel $unwind$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+30
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+34
	DD	imagerel $chain$0$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+34
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+210
	DD	imagerel $chain$8$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$15$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+210
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+1119
	DD	imagerel $chain$15$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$16$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+1119
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+1184
	DD	imagerel $chain$16$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$17$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+1184
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+1234
	DD	imagerel $chain$17$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$18$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+1234
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+1263
	DD	imagerel $chain$18$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z DD imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z
	DD	imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z+31
	DD	imagerel $unwind$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z DD imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z+31
	DD	imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z+192
	DD	imagerel $chain$0$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z DD imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z+192
	DD	imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z+193
	DD	imagerel $chain$1$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z DD imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z
	DD	imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z+15
	DD	imagerel $unwind$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z DD imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z+15
	DD	imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z+465
	DD	imagerel $chain$3$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z DD imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z+465
	DD	imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z+466
	DD	imagerel $chain$4$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__sort_edges@@YAXPEAUstbtt__edge@@H@Z DD imagerel ?stbtt__sort_edges@@YAXPEAUstbtt__edge@@H@Z
	DD	imagerel ?stbtt__sort_edges@@YAXPEAUstbtt__edge@@H@Z+192
	DD	imagerel $unwind$?stbtt__sort_edges@@YAXPEAUstbtt__edge@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+304
	DD	imagerel $unwind$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+304
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+315
	DD	imagerel $chain$0$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+315
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+368
	DD	imagerel $chain$1$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+368
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+666
	DD	imagerel $chain$2$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+666
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+694
	DD	imagerel $chain$3$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+694
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+880
	DD	imagerel $chain$4$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+880
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+912
	DD	imagerel $chain$5$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z DD imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z
	DD	imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z+220
	DD	imagerel $unwind$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z DD imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z+220
	DD	imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z+431
	DD	imagerel $chain$0$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z DD imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z+431
	DD	imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z+492
	DD	imagerel $chain$1$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z DD imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z
	DD	imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z+346
	DD	imagerel $unwind$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z DD imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z+346
	DD	imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z+958
	DD	imagerel $chain$0$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z DD imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z+958
	DD	imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z+1026
	DD	imagerel $chain$1$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z DD imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+150
	DD	imagerel $unwind$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z DD imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+150
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+846
	DD	imagerel $chain$4$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z DD imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+846
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+870
	DD	imagerel $chain$5$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z DD imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+870
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+906
	DD	imagerel $chain$6$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__h_prefilter@@YAXPEAEHHHI@Z DD imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z
	DD	imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z+71
	DD	imagerel $unwind$?stbtt__h_prefilter@@YAXPEAEHHHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?stbtt__h_prefilter@@YAXPEAEHHHI@Z DD imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z+71
	DD	imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z+691
	DD	imagerel $chain$3$?stbtt__h_prefilter@@YAXPEAEHHHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?stbtt__h_prefilter@@YAXPEAEHHHI@Z DD imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z+691
	DD	imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z+716
	DD	imagerel $chain$4$?stbtt__h_prefilter@@YAXPEAEHHHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbtt__v_prefilter@@YAXPEAEHHHI@Z DD imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z
	DD	imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z+76
	DD	imagerel $unwind$?stbtt__v_prefilter@@YAXPEAEHHHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?stbtt__v_prefilter@@YAXPEAEHHHI@Z DD imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z+76
	DD	imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z+696
	DD	imagerel $chain$2$?stbtt__v_prefilter@@YAXPEAEHHHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?stbtt__v_prefilter@@YAXPEAEHHHI@Z DD imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z+696
	DD	imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z+722
	DD	imagerel $chain$3$?stbtt__v_prefilter@@YAXPEAEHHHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z DD imagerel ?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z
	DD	imagerel ?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z+825
	DD	imagerel $unwind$?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z DD imagerel $LN25
	DD	imagerel $LN25+78
	DD	imagerel $unwind$??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stb_decompress@@YAIPEAEPEBEI@Z DD imagerel ?stb_decompress@@YAIPEAEPEBEI@Z
	DD	imagerel ?stb_decompress@@YAIPEAEPEBEI@Z+752
	DD	imagerel $unwind$?stb_decompress@@YAIPEAEPEBEI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Decode85@@YAXPEBEPEAE@Z DD imagerel ?Decode85@@YAXPEBEPEAE@Z
	DD	imagerel ?Decode85@@YAXPEBEPEAE@Z+198
	DD	imagerel $unwind$?Decode85@@YAXPEBEPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImFontBuildSrcData@@QEAA@XZ DD imagerel $LN17
	DD	imagerel $LN17+51
	DD	imagerel $unwind$??1ImFontBuildSrcData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImFontBuildSrcData@@QEAAPEAXI@Z DD imagerel $LN21
	DD	imagerel $LN21+85
	DD	imagerel $unwind$??_GImFontBuildSrcData@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z DD imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z
	DD	imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z+44
	DD	imagerel $unwind$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z DD imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z+44
	DD	imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z+317
	DD	imagerel $chain$5$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z DD imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z+317
	DD	imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z+325
	DD	imagerel $chain$6$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImFontBuildSrcData@@@@QEAAAEAUImFontBuildSrcData@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$??A?$ImVector@UImFontBuildSrcData@@@@QEAAAEAUImFontBuildSrcData@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+151
	DD	imagerel $chain$1$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD imagerel $LN16+151
	DD	imagerel $LN16+169
	DD	imagerel $chain$3$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD imagerel $LN16+169
	DD	imagerel $LN16+182
	DD	imagerel $chain$4$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD imagerel $LN6+28
	DD	imagerel $LN6+89
	DD	imagerel $chain$0$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD imagerel $LN6+89
	DD	imagerel $LN6+100
	DD	imagerel $chain$1$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImFontBuildDstData@@@@QEAAAEAUImFontBuildDstData@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$??A?$ImVector@UImFontBuildDstData@@@@QEAAAEAUImFontBuildDstData@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImFontBuildDstData@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@UImFontBuildDstData@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+145
	DD	imagerel $chain$1$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD imagerel $LN16+145
	DD	imagerel $LN16+163
	DD	imagerel $chain$3$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD imagerel $LN16+163
	DD	imagerel $LN16+176
	DD	imagerel $chain$4$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@Ustbrp_rect@@@@QEAAAEAUstbrp_rect@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$??A?$ImVector@Ustbrp_rect@@@@QEAAAEAUstbrp_rect@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@Ustbrp_rect@@@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?clear@?$ImVector@Ustbrp_rect@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+145
	DD	imagerel $chain$1$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD imagerel $LN16+145
	DD	imagerel $LN16+163
	DD	imagerel $chain$3$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD imagerel $LN16+163
	DD	imagerel $LN16+176
	DD	imagerel $chain$4$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@Ustbtt_packedchar@@@@QEAAAEAUstbtt_packedchar@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@Ustbtt_packedchar@@@@QEAAAEAUstbtt_packedchar@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+145
	DD	imagerel $chain$1$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD imagerel $LN16+145
	DD	imagerel $LN16+163
	DD	imagerel $chain$3$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD imagerel $LN16+163
	DD	imagerel $LN16+176
	DD	imagerel $chain$4$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD imagerel $LN6+25
	DD	imagerel $LN6+83
	DD	imagerel $chain$0$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD imagerel $LN6+83
	DD	imagerel $LN6+94
	DD	imagerel $chain$1$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z DD imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z
	DD	imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z+186
	DD	imagerel $unwind$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z DD imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z+186
	DD	imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z+1116
	DD	imagerel $chain$2$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z DD imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z+1116
	DD	imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z+1289
	DD	imagerel $chain$3$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stb__match@@YAXPEBEI@Z DD imagerel ?stb__match@@YAXPEBEI@Z
	DD	imagerel ?stb__match@@YAXPEBEI@Z+181
	DD	imagerel $unwind$?stb__match@@YAXPEBEI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stb__lit@@YAXPEBEI@Z DD imagerel ?stb__lit@@YAXPEBEI@Z
	DD	imagerel ?stb__lit@@YAXPEBEI@Z+162
	DD	imagerel $unwind$?stb__lit@@YAXPEBEI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stb_decompress_token@@YAPEBEPEBE@Z DD imagerel ?stb_decompress_token@@YAPEBEPEBE@Z
	DD	imagerel ?stb_decompress_token@@YAPEBEPEBE@Z+583
	DD	imagerel $unwind$?stb_decompress_token@@YAPEBEPEBE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stb_adler32@@YAIIPEAEI@Z DD imagerel ?stb_adler32@@YAIIPEAEI@Z
	DD	imagerel ?stb_adler32@@YAIIPEAEI@Z+50
	DD	imagerel $unwind$?stb_adler32@@YAIIPEAEI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?stb_adler32@@YAIIPEAEI@Z DD imagerel ?stb_adler32@@YAIIPEAEI@Z+50
	DD	imagerel ?stb_adler32@@YAIIPEAEI@Z+318
	DD	imagerel $chain$0$?stb_adler32@@YAIIPEAEI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?stb_adler32@@YAIIPEAEI@Z DD imagerel ?stb_adler32@@YAIIPEAEI@Z+318
	DD	imagerel ?stb_adler32@@YAIIPEAEI@Z+332
	DD	imagerel $chain$1$?stb_adler32@@YAIIPEAEI@Z
pdata	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@4600000046000000c6000000c6000000
CONST	SEGMENT
__xmm@4600000046000000c6000000c6000000 DB 00H, 00H, 00H, 0c6H, 00H, 00H, 00H
	DB	0c6H, 00H, 00H, 00H, 'F', 00H, 00H, 00H, 'F'
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f7ae1483f170a3d3e851eb8
CONST	SEGMENT
__xmm@3f8000003f7ae1483f170a3d3e851eb8 DB 0b8H, 01eH, 085H, '>=', 0aH, 017H
	DB	'?H', 0e1H, 'z?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f7ae1483f07ae143d75c28f
CONST	SEGMENT
__xmm@3f8000003f7ae1483f07ae143d75c28f DB 08fH, 0c2H, 'u=', 014H, 0aeH, 07H
	DB	'?H', 0e1H, 'z?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f75c28f3f75c28f3f75c28f
CONST	SEGMENT
__xmm@3f8000003f75c28f3f75c28f3f75c28f DB 08fH, 0c2H, 'u?', 08fH, 0c2H, 'u'
	DB	'?', 08fH, 0c2H, 'u?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f70a3d73f70a3d73f70a3d7
CONST	SEGMENT
__xmm@3f8000003f70a3d73f70a3d73f70a3d7 DB 0d7H, 0a3H, 'p?', 0d7H, 0a3H, 'p'
	DB	'?', 0d7H, 0a3H, 'p?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f6666663f6666663f666666
CONST	SEGMENT
__xmm@3f8000003f6666663f6666663f666666 DB 'fff?fff?fff?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f6666663f3333333f333333
CONST	SEGMENT
__xmm@3f8000003f6666663f3333333f333333 DB '333?333?fff?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f6147ae3f051eb83e75c28f
CONST	SEGMENT
__xmm@3f8000003f6147ae3f051eb83e75c28f DB 08fH, 0c2H, 'u>', 0b8H, 01eH, 05H
	DB	'?', 0aeH, 'Ga?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f5c28f63f5c28f63f5c28f6
CONST	SEGMENT
__xmm@3f8000003f5c28f63f5c28f63f5c28f6 DB 0f6H, '(\?', 0f6H, '(\?', 0f6H, '('
	DB	'\?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f51eb853f51eb853f51eb85
CONST	SEGMENT
__xmm@3f8000003f51eb853f51eb853f51eb85 DB 085H, 0ebH, 'Q?', 085H, 0ebH, 'Q'
	DB	'?', 085H, 0ebH, 'Q?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f4ccccd3f0a3d713eeb851f
CONST	SEGMENT
__xmm@3f8000003f4ccccd3f0a3d713eeb851f DB 01fH, 085H, 0ebH, '>q=', 0aH, '?'
	DB	0cdH, 0ccH, 'L?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f4ccccd3ee147ae3e0f5c29
CONST	SEGMENT
__xmm@3f8000003f4ccccd3ee147ae3e0f5c29 DB ')\', 0fH, '>', 0aeH, 'G', 0e1H
	DB	'>', 0cdH, 0ccH, 'L?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f4000003ecccccd3dcccccd
CONST	SEGMENT
__xmm@3f8000003f4000003ecccccd3dcccccd DB 0cdH, 0ccH, 0ccH, '=', 0cdH, 0ccH
	DB	0ccH, '>', 00H, 00H, '@?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f3333333f19999a3f19999a
CONST	SEGMENT
__xmm@3f8000003f3333333f19999a3f19999a DB 09aH, 099H, 019H, '?', 09aH, 099H
	DB	019H, '?333?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f1c28f63f1c28f63f1c28f6
CONST	SEGMENT
__xmm@3f8000003f1c28f63f1c28f63f1c28f6 DB 0f6H, '(', 01cH, '?', 0f6H, '(', 01cH
	DB	'?', 0f6H, '(', 01cH, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f19999a3f19999a3f19999a
CONST	SEGMENT
__xmm@3f8000003f19999a3f19999a3f19999a DB 09aH, 099H, 019H, '?', 09aH, 099H
	DB	019H, '?', 09aH, 099H, 019H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f028f5c3f028f5c3f028f5c
CONST	SEGMENT
__xmm@3f8000003f028f5c3f028f5c3f028f5c DB '\', 08fH, 02H, '?\', 08fH, 02H
	DB	'?\', 08fH, 02H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f0000003f0000003f000000
CONST	SEGMENT
__xmm@3f8000003f0000003f0000003f000000 DB 00H, 00H, 00H, '?', 00H, 00H, 00H
	DB	'?', 00H, 00H, 00H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003efae1483efae1483efae148
CONST	SEGMENT
__xmm@3f8000003efae1483efae1483efae148 DB 'H', 0e1H, 0faH, '>H', 0e1H, 0faH
	DB	'>H', 0e1H, 0faH, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003ef5c28f3e947ae13e23d70a
CONST	SEGMENT
__xmm@3f8000003ef5c28f3e947ae13e23d70a DB 0aH, 0d7H, '#>', 0e1H, 'z', 094H
	DB	'>', 08fH, 0c2H, 0f5H, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003ed1eb853ed1eb853ed1eb85
CONST	SEGMENT
__xmm@3f8000003ed1eb853ed1eb853ed1eb85 DB 085H, 0ebH, 0d1H, '>', 085H, 0ebH
	DB	0d1H, '>', 085H, 0ebH, 0d1H, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003ec7ae143ec7ae143ec7ae14
CONST	SEGMENT
__xmm@3f8000003ec7ae143ec7ae143ec7ae14 DB 014H, 0aeH, 0c7H, '>', 014H, 0aeH
	DB	0c7H, '>', 014H, 0aeH, 0c7H, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003eb333333edc28f63f800000
CONST	SEGMENT
__xmm@3f8000003eb333333edc28f63f800000 DB 00H, 00H, 080H, '?', 0f6H, '(', 0dcH
	DB	'>33', 0b3H, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003e9eb8523e9eb8523e9eb852
CONST	SEGMENT
__xmm@3f8000003e9eb8523e9eb8523e9eb852 DB 'R', 0b8H, 09eH, '>R', 0b8H, 09eH
	DB	'>R', 0b8H, 09eH, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003e0f5c293e0f5c293e0f5c29
CONST	SEGMENT
__xmm@3f8000003e0f5c293e0f5c293e0f5c29 DB ')\', 0fH, '>)\', 0fH, '>)\', 0fH
	DB	'>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003d23d70a3d23d70a3d23d70a
CONST	SEGMENT
__xmm@3f8000003d23d70a3d23d70a3d23d70a DB 0aH, 0d7H, '#=', 0aH, 0d7H, '#='
	DB	0aH, 0d7H, '#=', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000003f3333333f666666
CONST	SEGMENT
__xmm@3f800000000000003f3333333f666666 DB 'fff?333?', 00H, 00H, 00H, 00H, 00H
	DB	00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000003f19999a3f800000
CONST	SEGMENT
__xmm@3f800000000000003f19999a3f800000 DB 00H, 00H, 080H, '?', 09aH, 099H
	DB	019H, '?', 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000003ee666663f800000
CONST	SEGMENT
__xmm@3f800000000000003ee666663f800000 DB 00H, 00H, 080H, '?ff', 0e6H, '>'
	DB	00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f80000000000000000000003f800000
CONST	SEGMENT
__xmm@3f80000000000000000000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000000000000000000000
CONST	SEGMENT
__xmm@3f800000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f7ae1483f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f7ae1483f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?H', 0e1H, 'z?'
CONST	ENDS
;	COMDAT __xmm@3f7333333f7ae1483f170a3d3e851eb8
CONST	SEGMENT
__xmm@3f7333333f7ae1483f170a3d3e851eb8 DB 0b8H, 01eH, 085H, '>=', 0aH, 017H
	DB	'?H', 0e1H, 'z?33s?'
CONST	ENDS
;	COMDAT __xmm@3f70a3d73da3d70a3da3d70a3da3d70a
CONST	SEGMENT
__xmm@3f70a3d73da3d70a3da3d70a3da3d70a DB 0aH, 0d7H, 0a3H, '=', 0aH, 0d7H
	DB	0a3H, '=', 0aH, 0d7H, 0a3H, '=', 0d7H, 0a3H, 'p?'
CONST	ENDS
;	COMDAT __xmm@3f70a3d73d75c28f3d75c28f3d75c28f
CONST	SEGMENT
__xmm@3f70a3d73d75c28f3d75c28f3d75c28f DB 08fH, 0c2H, 'u=', 08fH, 0c2H, 'u'
	DB	'=', 08fH, 0c2H, 'u=', 0d7H, 0a3H, 'p?'
CONST	ENDS
;	COMDAT __xmm@3f6b851f3e0f5c293de147ae3de147ae
CONST	SEGMENT
__xmm@3f6b851f3e0f5c293de147ae3de147ae DB 0aeH, 'G', 0e1H, '=', 0aeH, 'G', 0e1H
	DB	'=)\', 0fH, '>', 01fH, 085H, 'k?'
CONST	ENDS
;	COMDAT __xmm@3f6666663f8000003f51eb853f47ae14
CONST	SEGMENT
__xmm@3f6666663f8000003f51eb853f47ae14 DB 014H, 0aeH, 'G?', 085H, 0ebH, 'Q'
	DB	'?', 00H, 00H, 080H, '?fff?'
CONST	ENDS
;	COMDAT __xmm@3f666666000000003f8000003f800000
CONST	SEGMENT
__xmm@3f666666000000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 00H, 00H, 'fff?'
CONST	ENDS
;	COMDAT __xmm@3f5eb8523f2147ae3ea3d70a3ea3d70a
CONST	SEGMENT
__xmm@3f5eb8523f2147ae3ea3d70a3ea3d70a DB 0aH, 0d7H, 0a3H, '>', 0aH, 0d7H
	DB	0a3H, '>', 0aeH, 'G!?R', 0b8H, '^?'
CONST	ENDS
;	COMDAT __xmm@3f547ae13f0a3d713e8a3d713e8a3d71
CONST	SEGMENT
__xmm@3f547ae13f0a3d713e8a3d713e8a3d71 DB 'q=', 08aH, '>q=', 08aH, '>q=', 0aH
	DB	'?', 0e1H, 'zT?'
CONST	ENDS
;	COMDAT __xmm@3f4ccccd3f7ae1483f170a3d3e851eb8
CONST	SEGMENT
__xmm@3f4ccccd3f7ae1483f170a3d3e851eb8 DB 0b8H, 01eH, 085H, '>=', 0aH, 017H
	DB	'?H', 0e1H, 'z?', 0cdH, 0ccH, 'L?'
CONST	ENDS
;	COMDAT __xmm@3f4ccccd3f6666663ee666663ee66666
CONST	SEGMENT
__xmm@3f4ccccd3f6666663ee666663ee66666 DB 'ff', 0e6H, '>ff', 0e6H, '>fff?'
	DB	0cdH, 0ccH, 'L?'
CONST	ENDS
;	COMDAT __xmm@3f4ccccd3f5eb8523f07ae143f07ae14
CONST	SEGMENT
__xmm@3f4ccccd3f5eb8523f07ae143f07ae14 DB 014H, 0aeH, 07H, '?', 014H, 0aeH
	DB	07H, '?R', 0b8H, '^?', 0cdH, 0ccH, 'L?'
CONST	ENDS
;	COMDAT __xmm@3f4ccccd3f30a3d73f30a3d73f30a3d7
CONST	SEGMENT
__xmm@3f4ccccd3f30a3d73f30a3d73f30a3d7 DB 0d7H, 0a3H, '0?', 0d7H, 0a3H, '0'
	DB	'?', 0d7H, 0a3H, '0?', 0cdH, 0ccH, 'L?'
CONST	ENDS
;	COMDAT __xmm@3f4ccccd3f0ccccd3ecccccd3ecccccd
CONST	SEGMENT
__xmm@3f4ccccd3f0ccccd3ecccccd3ecccccd DB 0cdH, 0ccH, 0ccH, '>', 0cdH, 0ccH
	DB	0ccH, '>', 0cdH, 0ccH, 0cH, '?', 0cdH, 0ccH, 'L?'
CONST	ENDS
;	COMDAT __xmm@3f4ccccd3efae1483efae1483efae148
CONST	SEGMENT
__xmm@3f4ccccd3efae1483efae1483efae148 DB 'H', 0e1H, 0faH, '>H', 0e1H, 0faH
	DB	'>H', 0e1H, 0faH, '>', 0cdH, 0ccH, 'L?'
CONST	ENDS
;	COMDAT __xmm@3f4a3d713f35c28f3ef5c28f3ecccccd
CONST	SEGMENT
__xmm@3f4a3d713f35c28f3ef5c28f3ecccccd DB 0cdH, 0ccH, 0ccH, '>', 08fH, 0c2H
	DB	0f5H, '>', 08fH, 0c2H, '5?q=J?'
CONST	ENDS
;	COMDAT __xmm@3f47ae143f7ae1483f170a3d3e851eb8
CONST	SEGMENT
__xmm@3f47ae143f7ae1483f170a3d3e851eb8 DB 0b8H, 01eH, 085H, '>=', 0aH, 017H
	DB	'?H', 0e1H, 'z?', 014H, 0aeH, 'G?'
CONST	ENDS
;	COMDAT __xmm@3f47ae143f4ccccd3ee147ae3e0f5c29
CONST	SEGMENT
__xmm@3f47ae143f4ccccd3ee147ae3e0f5c29 DB ')\', 0fH, '>', 0aeH, 'G', 0e1H
	DB	'>', 0cdH, 0ccH, 'L?', 014H, 0aeH, 'G?'
CONST	ENDS
;	COMDAT __xmm@3f47ae143f4000003ecccccd3dcccccd
CONST	SEGMENT
__xmm@3f47ae143f4000003ecccccd3dcccccd DB 0cdH, 0ccH, 0ccH, '=', 0cdH, 0ccH
	DB	0ccH, '>', 00H, 00H, '@?', 014H, 0aeH, 'G?'
CONST	ENDS
;	COMDAT __xmm@3f3333333f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f3333333f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?333?'
CONST	ENDS
;	COMDAT __xmm@3f3333333f3333333f3333333f333333
CONST	SEGMENT
__xmm@3f3333333f3333333f3333333f333333 DB '333?333?333?333?'
CONST	ENDS
;	COMDAT __xmm@3f333333000000000000000000000000
CONST	SEGMENT
__xmm@3f333333000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, '333?'
CONST	ENDS
;	COMDAT __xmm@3f30a3d73f23d70a3ed1eb853ed70a3d
CONST	SEGMENT
__xmm@3f30a3d73f23d70a3ed1eb853ed70a3d DB '=', 0aH, 0d7H, '>', 085H, 0ebH
	DB	0d1H, '>', 0aH, 0d7H, '#?', 0d7H, 0a3H, '0?'
CONST	ENDS
;	COMDAT __xmm@3f2b851f3f7ae1483f170a3d3e851eb8
CONST	SEGMENT
__xmm@3f2b851f3f7ae1483f170a3d3e851eb8 DB 0b8H, 01eH, 085H, '>=', 0aH, 017H
	DB	'?H', 0e1H, 'z?', 01fH, 085H, '+?'
CONST	ENDS
;	COMDAT __xmm@3f1eb8523f1c28f63ecccccd3eb33333
CONST	SEGMENT
__xmm@3f1eb8523f1c28f63ecccccd3eb33333 DB '33', 0b3H, '>', 0cdH, 0ccH, 0ccH
	DB	'>', 0f6H, '(', 01cH, '?R', 0b8H, 01eH, '?'
CONST	ENDS
;	COMDAT __xmm@3f1eb8523ec7ae143ec7ae143ec7ae14
CONST	SEGMENT
__xmm@3f1eb8523ec7ae143ec7ae143ec7ae14 DB 014H, 0aeH, 0c7H, '>', 014H, 0aeH
	DB	0c7H, '>', 014H, 0aeH, 0c7H, '>R', 0b8H, 01eH, '?'
CONST	ENDS
;	COMDAT __xmm@3f19999a3f8000003f51eb853f47ae14
CONST	SEGMENT
__xmm@3f19999a3f8000003f51eb853f47ae14 DB 014H, 0aeH, 'G?', 085H, 0ebH, 'Q'
	DB	'?', 00H, 00H, 080H, '?', 09aH, 099H, 019H, '?'
CONST	ENDS
;	COMDAT __xmm@3f19999a3f4ccccd3f0a3d713eeb851f
CONST	SEGMENT
__xmm@3f19999a3f4ccccd3f0a3d713eeb851f DB 01fH, 085H, 0ebH, '>q=', 0aH, '?'
	DB	0cdH, 0ccH, 'L?', 09aH, 099H, 019H, '?'
CONST	ENDS
;	COMDAT __xmm@3f19999a3f4ccccd3ec7ae143ed1eb85
CONST	SEGMENT
__xmm@3f19999a3f4ccccd3ec7ae143ed1eb85 DB 085H, 0ebH, 0d1H, '>', 014H, 0aeH
	DB	0c7H, '>', 0cdH, 0ccH, 'L?', 09aH, 099H, 019H, '?'
CONST	ENDS
;	COMDAT __xmm@3f19999a3f0000003f0000003f000000
CONST	SEGMENT
__xmm@3f19999a3f0000003f0000003f000000 DB 00H, 00H, 00H, '?', 00H, 00H, 00H
	DB	'?', 00H, 00H, 00H, '?', 09aH, 099H, 019H, '?'
CONST	ENDS
;	COMDAT __xmm@3f19999a3e99999a3e8000003e4ccccd
CONST	SEGMENT
__xmm@3f19999a3e99999a3e8000003e4ccccd DB 0cdH, 0ccH, 'L>', 00H, 00H, 080H
	DB	'>', 09aH, 099H, 099H, '>', 09aH, 099H, 019H, '?'
CONST	ENDS
;	COMDAT __xmm@3f0f5c293f4ccccd3f4ccccd3f4ccccd
CONST	SEGMENT
__xmm@3f0f5c293f4ccccd3f4ccccd3f4ccccd DB 0cdH, 0ccH, 'L?', 0cdH, 0ccH, 'L'
	DB	'?', 0cdH, 0ccH, 'L?)\', 0fH, '?'
CONST	ENDS
;	COMDAT __xmm@3f0a3d713ef5c28f3e947ae13e23d70a
CONST	SEGMENT
__xmm@3f0a3d713ef5c28f3e947ae13e23d70a DB 0aH, 0d7H, '#>', 0e1H, 'z', 094H
	DB	'>', 08fH, 0c2H, 0f5H, '>q=', 0aH, '?'
CONST	ENDS
;	COMDAT __xmm@3f07ae143f7ae1483f7ae1483f7ae148
CONST	SEGMENT
__xmm@3f07ae143f7ae1483f7ae1483f7ae148 DB 'H', 0e1H, 'z?H', 0e1H, 'z?H', 0e1H
	DB	'z?', 014H, 0aeH, 07H, '?'
CONST	ENDS
;	COMDAT __xmm@3f07ae143ca3d70a3ca3d70a3ca3d70a
CONST	SEGMENT
__xmm@3f07ae143ca3d70a3ca3d70a3ca3d70a DB 0aH, 0d7H, 0a3H, '<', 0aH, 0d7H
	DB	0a3H, '<', 0aH, 0d7H, 0a3H, '<', 014H, 0aeH, 07H, '?'
CONST	ENDS
;	COMDAT __xmm@3f028f5c3f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f028f5c3f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?\', 08fH, 02H, '?'
CONST	ENDS
;	COMDAT __xmm@3f028f5c000000000000000000000000
CONST	SEGMENT
__xmm@3f028f5c000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, '\', 08fH, 02H, '?'
CONST	ENDS
;	COMDAT __xmm@3f0000003f6666663f6666663f666666
CONST	SEGMENT
__xmm@3f0000003f6666663f6666663f666666 DB 'fff?fff?fff?', 00H, 00H, 00H, '?'
CONST	ENDS
;	COMDAT __xmm@3f0000003f0000003f0000003f000000
CONST	SEGMENT
__xmm@3f0000003f0000003f0000003f000000 DB 00H, 00H, 00H, '?', 00H, 00H, 00H
	DB	'?', 00H, 00H, 00H, '?', 00H, 00H, 00H, '?'
CONST	ENDS
;	COMDAT __xmm@3f0000003f0000003edc28f63edc28f6
CONST	SEGMENT
__xmm@3f0000003f0000003edc28f63edc28f6 DB 0f6H, '(', 0dcH, '>', 0f6H, '(', 0dcH
	DB	'>', 00H, 00H, 00H, '?', 00H, 00H, 00H, '?'
CONST	ENDS
;	COMDAT __xmm@3ee666663f6666663ecccccd3ecccccd
CONST	SEGMENT
__xmm@3ee666663f6666663ecccccd3ecccccd DB 0cdH, 0ccH, 0ccH, '>', 0cdH, 0ccH
	DB	0ccH, '>fff?ff', 0e6H, '>'
CONST	ENDS
;	COMDAT __xmm@3ecccccd3f7ae1483f170a3d3e851eb8
CONST	SEGMENT
__xmm@3ecccccd3f7ae1483f170a3d3e851eb8 DB 0b8H, 01eH, 085H, '>=', 0aH, 017H
	DB	'?H', 0e1H, 'z?', 0cdH, 0ccH, 0ccH, '>'
CONST	ENDS
;	COMDAT __xmm@3ecccccd3f4ccccd3ecccccd3ecccccd
CONST	SEGMENT
__xmm@3ecccccd3f4ccccd3ecccccd3ecccccd DB 0cdH, 0ccH, 0ccH, '>', 0cdH, 0ccH
	DB	0ccH, '>', 0cdH, 0ccH, 'L?', 0cdH, 0ccH, 0ccH, '>'
CONST	ENDS
;	COMDAT __xmm@3ecccccd3f30a3d73ef0a3d73ef0a3d7
CONST	SEGMENT
__xmm@3ecccccd3f30a3d73ef0a3d73ef0a3d7 DB 0d7H, 0a3H, 0f0H, '>', 0d7H, 0a3H
	DB	0f0H, '>', 0d7H, 0a3H, '0?', 0cdH, 0ccH, 0ccH, '>'
CONST	ENDS
;	COMDAT __xmm@3ec7ae143edc28f63edc28f63edc28f6
CONST	SEGMENT
__xmm@3ec7ae143edc28f63edc28f63edc28f6 DB 0f6H, '(', 0dcH, '>', 0f6H, '(', 0dcH
	DB	'>', 0f6H, '(', 0dcH, '>', 014H, 0aeH, 0c7H, '>'
CONST	ENDS
;	COMDAT __xmm@3eb333333f8000000000000000000000
CONST	SEGMENT
__xmm@3eb333333f8000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 080H, '?33', 0b3H, '>'
CONST	ENDS
;	COMDAT __xmm@3eb333333f7ae1483f170a3d3e851eb8
CONST	SEGMENT
__xmm@3eb333333f7ae1483f170a3d3e851eb8 DB 0b8H, 01eH, 085H, '>=', 0aH, 017H
	DB	'?H', 0e1H, 'z?33', 0b3H, '>'
CONST	ENDS
;	COMDAT __xmm@3eb333333f4ccccd3f4ccccd3f4ccccd
CONST	SEGMENT
__xmm@3eb333333f4ccccd3f4ccccd3f4ccccd DB 0cdH, 0ccH, 'L?', 0cdH, 0ccH, 'L'
	DB	'?', 0cdH, 0ccH, 'L?33', 0b3H, '>'
CONST	ENDS
;	COMDAT __xmm@3eb333333e4ccccd3e4ccccd3e4ccccd
CONST	SEGMENT
__xmm@3eb333333e4ccccd3e4ccccd3e4ccccd DB 0cdH, 0ccH, 'L>', 0cdH, 0ccH, 'L'
	DB	'>', 0cdH, 0ccH, 'L>33', 0b3H, '>'
CONST	ENDS
;	COMDAT __xmm@3e9eb8523f7ae1483f170a3d3e851eb8
CONST	SEGMENT
__xmm@3e9eb8523f7ae1483f170a3d3e851eb8 DB 0b8H, 01eH, 085H, '>=', 0aH, 017H
	DB	'?H', 0e1H, 'z?R', 0b8H, 09eH, '>'
CONST	ENDS
;	COMDAT __xmm@3e99999a3f8000003f8000003f800000
CONST	SEGMENT
__xmm@3e99999a3f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 09aH, 099H, 099H, '>'
CONST	ENDS
;	COMDAT __xmm@3e99999a3f4ccccd3ecccccd3ecccccd
CONST	SEGMENT
__xmm@3e99999a3f4ccccd3ecccccd3ecccccd DB 0cdH, 0ccH, 0ccH, '>', 0cdH, 0ccH
	DB	0ccH, '>', 0cdH, 0ccH, 'L?', 09aH, 099H, 099H, '>'
CONST	ENDS
;	COMDAT __xmm@3e99999a000000000000000000000000
CONST	SEGMENT
__xmm@3e99999a000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 09aH, 099H, 099H, '>'
CONST	ENDS
;	COMDAT __xmm@3e8000003f7ae1483f170a3d3e851eb8
CONST	SEGMENT
__xmm@3e8000003f7ae1483f170a3d3e851eb8 DB 0b8H, 01eH, 085H, '>=', 0aH, 017H
	DB	'?H', 0e1H, 'z?', 00H, 00H, 080H, '>'
CONST	ENDS
;	COMDAT __xmm@3e4ccccd3f4ccccd3f4ccccd3f4ccccd
CONST	SEGMENT
__xmm@3e4ccccd3f4ccccd3f4ccccd3f4ccccd DB 0cdH, 0ccH, 'L?', 0cdH, 0ccH, 'L'
	DB	'?', 0cdH, 0ccH, 'L?', 0cdH, 0ccH, 'L>'
CONST	ENDS
;	COMDAT __xmm@3e4ccccd3f4ccccd3ecccccd3ecccccd
CONST	SEGMENT
__xmm@3e4ccccd3f4ccccd3ecccccd3ecccccd DB 0cdH, 0ccH, 0ccH, '>', 0cdH, 0ccH
	DB	0ccH, '>', 0cdH, 0ccH, 'L?', 0cdH, 0ccH, 'L>'
CONST	ENDS
;	COMDAT __xmm@3e4ccccd3e4ccccd3e4ccccd3e4ccccd
CONST	SEGMENT
__xmm@3e4ccccd3e4ccccd3e4ccccd3e4ccccd DB 0cdH, 0ccH, 'L>', 0cdH, 0ccH, 'L'
	DB	'>', 0cdH, 0ccH, 'L>', 0cdH, 0ccH, 'L>'
CONST	ENDS
;	COMDAT __xmm@3e23d70a3f8000003f8000003f800000
CONST	SEGMENT
__xmm@3e23d70a3f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 0aH, 0d7H, '#>'
CONST	ENDS
;	COMDAT __xmm@00000003000000020000000100000000
CONST	SEGMENT
__xmm@00000003000000020000000100000000 DB 00H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 02H, 00H, 00H, 00H, 03H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000001000000010000000100000001
CONST	SEGMENT
__xmm@00000001000000010000000100000001 DB 01H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 01H, 00H, 00H, 00H, 01H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bf5db22d
CONST	SEGMENT
__real@bf5db22d DD 0bf5db22dr			; -0.866
CONST	ENDS
;	COMDAT __real@bf400000
CONST	SEGMENT
__real@bf400000 DD 0bf400000r			; -0.75
CONST	ENDS
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT __real@45333333
CONST	SEGMENT
__real@45333333 DD 045333333r			; 2867.2
CONST	ENDS
;	COMDAT __real@44b33333
CONST	SEGMENT
__real@44b33333 DD 044b33333r			; 1433.6
CONST	ENDS
;	COMDAT __real@44333333
CONST	SEGMENT
__real@44333333 DD 044333333r			; 716.8
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@42da0000
CONST	SEGMENT
__real@42da0000 DD 042da0000r			; 109
CONST	ENDS
;	COMDAT __real@41500000
CONST	SEGMENT
__real@41500000 DD 041500000r			; 13
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40afede0
CONST	SEGMENT
__real@40afede0 DD 040afede0r			; 5.49779
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@3ffeb852
CONST	SEGMENT
__real@3ffeb852 DD 03ffeb852r			; 1.99
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3f8147ae
CONST	SEGMENT
__real@3f8147ae DD 03f8147aer			; 1.01
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f5db22d
CONST	SEGMENT
__real@3f5db22d DD 03f5db22dr			; 0.866
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3efae148
CONST	SEGMENT
__real@3efae148 DD 03efae148r			; 0.49
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3eb33333
CONST	SEGMENT
__real@3eb33333 DD 03eb33333r			; 0.35
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@38800000
CONST	SEGMENT
__real@38800000 DD 038800000r			; 6.10352e-05
CONST	ENDS
;	COMDAT __real@37800000
CONST	SEGMENT
__real@37800000 DD 037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ??_C@_1DK@JJGEFOJO@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1DK@JJGEFOJO@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ DB 'i'
	DB	00H, 't', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '+', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz@
CONST	SEGMENT
??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz@ DB 'n'
	DB	00H, 'e', 00H, 'w', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@ DB 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
CONST	SEGMENT
??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@ DB 'i', 00H
	DB	' ', 00H, '<', 00H, ' ', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@EGIPGKEG@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAo?$AAu@
CONST	SEGMENT
??_C@_1DG@EGIPGKEG@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAo?$AAu@ DB 's'
	DB	00H, 't', 00H, 'b', 00H, '_', 00H, '_', 00H, 'd', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'o'
	DB	00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H
	DB	'+', 00H, ' ', 00H, 'o', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@GCANDLHA@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu@
CONST	SEGMENT
??_C@_1DG@GCANDLHA@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu@ DB 's'
	DB	00H, 't', 00H, 'b', 00H, '_', 00H, '_', 00H, 'd', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'o'
	DB	00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H
	DB	'+', 00H, ' ', 00H, 'o', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn@
CONST	SEGMENT
??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn@ DB 's'
	DB	00H, 't', 00H, 'b', 00H, '_', 00H, '_', 00H, 'd', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, 's', 00H, 't', 00H, 'b', 00H, '_', 00H, '_'
	DB	00H, 'b', 00H, 'a', 00H, 'r', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	'r', 00H, '_', 00H, 'o', 00H, 'u', 00H, 't', 00H, '_', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JM@LKKCKIOL@?$AAm?$AAo?$AAu?$AAs?$AAe?$AA_?$AAc?$AAu?$AAr?$AAs?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5@
CONST	SEGMENT
??_C@_1JM@LKKCKIOL@?$AAm?$AAo?$AAu?$AAs?$AAe?$AA_?$AAc?$AAu?$AAr?$AAs?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5@ DB 'm'
	DB	00H, 'o', 00H, 'u', 00H, 's', 00H, 'e', 00H, '_', 00H, 'c', 00H
	DB	'u', 00H, 'r', 00H, 's', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H
	DB	'M', 00H, 'o', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'u'
	DB	00H, 'r', 00H, 's', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'N', 00H
	DB	'o', 00H, 'n', 00H, 'e', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'm', 00H, 'o', 00H, 'u', 00H, 's', 00H, 'e', 00H, '_', 00H
	DB	'c', 00H, 'u', 00H, 'r', 00H, 's', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '<', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H
	DB	'i', 00H, 'M', 00H, 'o', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'C'
	DB	00H, 'u', 00H, 'r', 00H, 's', 00H, 'o', 00H, 'r', 00H, '_', 00H
	DB	'C', 00H, 'O', 00H, 'U', 00H, 'N', 00H, 'T', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@OHOOGJPG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu?$AAp?$AA?4?$AAS?$AAi?$AAz@
CONST	SEGMENT
??_C@_1CK@OHOOGJPG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu?$AAp?$AA?4?$AAS?$AAi?$AAz@ DB 'I'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, 'L', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@HLFAHELG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAX?$AA?4?$AAS@
CONST	SEGMENT
??_C@_1EO@HLFAHELG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAX?$AA?4?$AAS@ DB 'I'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'X', 00H, '.'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x'
	DB	00H, 'L', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'u', 00H, 'p', 00H
	DB	'.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@FHBHHKB@?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CK@FHBHHKB@?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0@ DB 'G'
	DB	00H, 'l', 00H, 'y', 00H, 'p', 00H, 'h', 00H, 's', 00H, '.', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, '0', 00H, 'x', 00H, 'F', 00H, 'F', 00H, 'F', 00H, 'F', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?ranges@?1??GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ@4QBGB
CONST	SEGMENT
?ranges@?1??GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ@4QBGB DW 020H ; `ImFontAtlas::GetGlyphRangesVietnamese'::`2'::ranges
	DW	0ffH
	DW	0102H
	DW	0103H
	DW	0110H
	DW	0111H
	DW	0128H
	DW	0129H
	DW	0168H
	DW	0169H
	DW	01a0H
	DW	01a1H
	DW	01afH
	DW	01b0H
	DW	01ea0H
	DW	01ef9H
	DW	00H
CONST	ENDS
;	COMDAT ?ranges@?1??GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ@4QBGB
CONST	SEGMENT
?ranges@?1??GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ@4QBGB DW 020H ; `ImFontAtlas::GetGlyphRangesThai'::`2'::ranges
	DW	0ffH
	DW	02010H
	DW	0205eH
	DW	0e00H
	DW	0e7fH
	DW	00H
CONST	ENDS
;	COMDAT ?ranges@?1??GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ@4QBGB
CONST	SEGMENT
?ranges@?1??GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ@4QBGB DW 020H ; `ImFontAtlas::GetGlyphRangesCyrillic'::`2'::ranges
	DW	0ffH
	DW	0400H
	DW	052fH
	DW	02de0H
	DW	02dffH
	DW	0a640H
	DW	0a69fH
	DW	00H
CONST	ENDS
;	COMDAT ?base_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA
_DATA	SEGMENT
?base_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA DW 020H ; `ImFontAtlas::GetGlyphRangesJapanese'::`2'::base_ranges
	DW	0ffH
	DW	03000H
	DW	030ffH
	DW	031f0H
	DW	031ffH
	DW	0ff00H
	DW	0ffefH
_DATA	ENDS
;	COMDAT ?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4QBFB
CONST	SEGMENT
?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4QBFB DW 00H ; `ImFontAtlas::GetGlyphRangesJapanese'::`2'::accumulative_offsets_from_0x4E00
	DW	01H
	DW	02H
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	06H
	DW	02H
	DW	02H
	DW	01H
	DW	08H
	DW	05H
	DW	07H
	DW	0bH
	DW	01H
	DW	02H
	DW	0aH
	DW	0aH
	DW	08H
	DW	02H
	DW	04H
	DW	014H
	DW	02H
	DW	0bH
	DW	08H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	06H
	DW	02H
	DW	01H
	DW	07H
	DW	05H
	DW	03H
	DW	07H
	DW	01H
	DW	01H
	DW	0dH
	DW	07H
	DW	09H
	DW	01H
	DW	04H
	DW	06H
	DW	01H
	DW	02H
	DW	01H
	DW	0aH
	DW	01H
	DW	01H
	DW	09H
	DW	02H
	DW	02H
	DW	04H
	DW	05H
	DW	06H
	DW	0eH
	DW	01H
	DW	01H
	DW	09H
	DW	03H
	DW	012H
	DW	05H
	DW	04H
	DW	02H
	DW	02H
	DW	0aH
	DW	07H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	02H
	DW	04H
	DW	03H
	DW	017H
	DW	02H
	DW	0aH
	DW	0cH
	DW	02H
	DW	0eH
	DW	02H
	DW	04H
	DW	0dH
	DW	01H
	DW	06H
	DW	0aH
	DW	03H
	DW	01H
	DW	07H
	DW	0dH
	DW	06H
	DW	04H
	DW	0dH
	DW	05H
	DW	02H
	DW	03H
	DW	011H
	DW	02H
	DW	02H
	DW	05H
	DW	07H
	DW	06H
	DW	04H
	DW	01H
	DW	07H
	DW	0eH
	DW	010H
	DW	06H
	DW	0dH
	DW	09H
	DW	0fH
	DW	01H
	DW	01H
	DW	07H
	DW	010H
	DW	04H
	DW	07H
	DW	01H
	DW	013H
	DW	09H
	DW	02H
	DW	07H
	DW	0fH
	DW	02H
	DW	06H
	DW	05H
	DW	0dH
	DW	019H
	DW	04H
	DW	0eH
	DW	0dH
	DW	0bH
	DW	019H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	02H
	DW	03H
	DW	0aH
	DW	0bH
	DW	03H
	DW	03H
	DW	01H
	DW	01H
	DW	04H
	DW	04H
	DW	02H
	DW	01H
	DW	04H
	DW	09H
	DW	01H
	DW	04H
	DW	03H
	DW	05H
	DW	05H
	DW	02H
	DW	07H
	DW	0cH
	DW	0bH
	DW	0fH
	DW	07H
	DW	010H
	DW	04H
	DW	05H
	DW	010H
	DW	02H
	DW	01H
	DW	01H
	DW	06H
	DW	03H
	DW	03H
	DW	01H
	DW	01H
	DW	02H
	DW	07H
	DW	06H
	DW	06H
	DW	07H
	DW	01H
	DW	04H
	DW	07H
	DW	06H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	0cH
	DW	03H
	DW	03H
	DW	09H
	DW	05H
	DW	08H
	DW	01H
	DW	0bH
	DW	01H
	DW	02H
	DW	03H
	DW	012H
	DW	014H
	DW	04H
	DW	01H
	DW	03H
	DW	06H
	DW	01H
	DW	07H
	DW	03H
	DW	05H
	DW	05H
	DW	07H
	DW	02H
	DW	02H
	DW	0cH
	DW	03H
	DW	01H
	DW	04H
	DW	02H
	DW	03H
	DW	02H
	DW	03H
	DW	0bH
	DW	08H
	DW	07H
	DW	04H
	DW	011H
	DW	01H
	DW	09H
	DW	019H
	DW	01H
	DW	01H
	DW	04H
	DW	02H
	DW	02H
	DW	04H
	DW	01H
	DW	02H
	DW	07H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	02H
	DW	06H
	DW	010H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	03H
	DW	0cH
	DW	014H
	DW	02H
	DW	05H
	DW	014H
	DW	08H
	DW	07H
	DW	06H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	06H
	DW	02H
	DW	01H
	DW	02H
	DW	0aH
	DW	01H
	DW	01H
	DW	06H
	DW	01H
	DW	03H
	DW	01H
	DW	02H
	DW	01H
	DW	04H
	DW	01H
	DW	0cH
	DW	04H
	DW	01H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	0aH
	DW	04H
	DW	07H
	DW	05H
	DW	0dH
	DW	01H
	DW	0fH
	DW	01H
	DW	01H
	DW	01eH
	DW	0bH
	DW	09H
	DW	01H
	DW	0fH
	DW	026H
	DW	0eH
	DW	01H
	DW	020H
	DW	011H
	DW	014H
	DW	01H
	DW	09H
	DW	01fH
	DW	02H
	DW	015H
	DW	09H
	DW	04H
	DW	031H
	DW	016H
	DW	02H
	DW	01H
	DW	0dH
	DW	01H
	DW	0bH
	DW	02dH
	DW	023H
	DW	02bH
	DW	037H
	DW	0cH
	DW	013H
	DW	053H
	DW	01H
	DW	03H
	DW	02H
	DW	03H
	DW	0dH
	DW	02H
	DW	01H
	DW	07H
	DW	03H
	DW	012H
	DW	03H
	DW	0dH
	DW	08H
	DW	01H
	DW	08H
	DW	012H
	DW	05H
	DW	03H
	DW	07H
	DW	019H
	DW	018H
	DW	09H
	DW	018H
	DW	028H
	DW	03H
	DW	011H
	DW	018H
	DW	02H
	DW	01H
	DW	06H
	DW	02H
	DW	03H
	DW	010H
	DW	0fH
	DW	06H
	DW	07H
	DW	03H
	DW	0cH
	DW	01H
	DW	09H
	DW	07H
	DW	03H
	DW	03H
	DW	03H
	DW	0fH
	DW	015H
	DW	05H
	DW	010H
	DW	04H
	DW	05H
	DW	0cH
	DW	0bH
	DW	0bH
	DW	03H
	DW	06H
	DW	03H
	DW	02H
	DW	01fH
	DW	03H
	DW	02H
	DW	01H
	DW	01H
	DW	017H
	DW	06H
	DW	06H
	DW	01H
	DW	04H
	DW	02H
	DW	06H
	DW	05H
	DW	02H
	DW	01H
	DW	01H
	DW	03H
	DW	03H
	DW	016H
	DW	02H
	DW	06H
	DW	02H
	DW	03H
	DW	011H
	DW	03H
	DW	02H
	DW	04H
	DW	05H
	DW	01H
	DW	09H
	DW	05H
	DW	01H
	DW	01H
	DW	06H
	DW	0fH
	DW	0cH
	DW	03H
	DW	011H
	DW	02H
	DW	0eH
	DW	02H
	DW	08H
	DW	01H
	DW	017H
	DW	010H
	DW	04H
	DW	02H
	DW	017H
	DW	08H
	DW	0fH
	DW	017H
	DW	014H
	DW	0cH
	DW	019H
	DW	013H
	DW	02fH
	DW	0bH
	DW	015H
	DW	041H
	DW	02eH
	DW	04H
	DW	03H
	DW	01H
	DW	05H
	DW	06H
	DW	01H
	DW	02H
	DW	05H
	DW	01aH
	DW	02H
	DW	01H
	DW	01H
	DW	03H
	DW	0bH
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	03H
	DW	01H
	DW	01H
	DW	0aH
	DW	02H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	06H
	DW	03H
	DW	02H
	DW	02H
	DW	06H
	DW	06H
	DW	09H
	DW	02H
	DW	02H
	DW	02H
	DW	06H
	DW	02H
	DW	05H
	DW	0aH
	DW	02H
	DW	04H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	02H
	DW	03H
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	02H
	DW	09H
	DW	017H
	DW	09H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	03H
	DW	02H
	DW	01H
	DW	0aH
	DW	09H
	DW	06H
	DW	01H
	DW	0aH
	DW	02H
	DW	01fH
	DW	019H
	DW	03H
	DW	07H
	DW	05H
	DW	028H
	DW	01H
	DW	0fH
	DW	06H
	DW	011H
	DW	07H
	DW	01bH
	DW	0b4H
	DW	01H
	DW	03H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	06H
	DW	03H
	DW	0aH
	DW	07H
	DW	01H
	DW	03H
	DW	06H
	DW	011H
	DW	08H
	DW	06H
	DW	02H
	DW	02H
	DW	01H
	DW	03H
	DW	05H
	DW	05H
	DW	08H
	DW	010H
	DW	0eH
	DW	0fH
	DW	01H
	DW	01H
	DW	04H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	02H
	DW	07H
	DW	05H
	DW	06H
	DW	02H
	DW	05H
	DW	0aH
	DW	01H
	DW	04H
	DW	02H
	DW	09H
	DW	01H
	DW	01H
	DW	0bH
	DW	06H
	DW	01H
	DW	02cH
	DW	01H
	DW	03H
	DW	07H
	DW	09H
	DW	05H
	DW	01H
	DW	03H
	DW	01H
	DW	01H
	DW	0aH
	DW	07H
	DW	01H
	DW	0aH
	DW	04H
	DW	02H
	DW	07H
	DW	015H
	DW	0fH
	DW	07H
	DW	02H
	DW	05H
	DW	01H
	DW	08H
	DW	03H
	DW	04H
	DW	01H
	DW	03H
	DW	01H
	DW	06H
	DW	01H
	DW	04H
	DW	02H
	DW	01H
	DW	04H
	DW	0aH
	DW	08H
	DW	01H
	DW	04H
	DW	05H
	DW	01H
	DW	05H
	DW	0aH
	DW	02H
	DW	07H
	DW	01H
	DW	0aH
	DW	01H
	DW	01H
	DW	03H
	DW	04H
	DW	0bH
	DW	0aH
	DW	01dH
	DW	04H
	DW	07H
	DW	03H
	DW	05H
	DW	02H
	DW	03H
	DW	021H
	DW	05H
	DW	02H
	DW	013H
	DW	03H
	DW	01H
	DW	04H
	DW	02H
	DW	06H
	DW	01fH
	DW	0bH
	DW	01H
	DW	03H
	DW	03H
	DW	03H
	DW	01H
	DW	08H
	DW	0aH
	DW	09H
	DW	0cH
	DW	0bH
	DW	0cH
	DW	08H
	DW	03H
	DW	0eH
	DW	08H
	DW	06H
	DW	0bH
	DW	01H
	DW	04H
	DW	029H
	DW	03H
	DW	01H
	DW	02H
	DW	07H
	DW	0dH
	DW	01H
	DW	05H
	DW	06H
	DW	02H
	DW	06H
	DW	0cH
	DW	0cH
	DW	016H
	DW	05H
	DW	09H
	DW	04H
	DW	08H
	DW	09H
	DW	09H
	DW	022H
	DW	06H
	DW	018H
	DW	01H
	DW	01H
	DW	014H
	DW	09H
	DW	09H
	DW	03H
	DW	04H
	DW	01H
	DW	07H
	DW	02H
	DW	02H
	DW	02H
	DW	06H
	DW	02H
	DW	01cH
	DW	05H
	DW	03H
	DW	06H
	DW	01H
	DW	04H
	DW	06H
	DW	07H
	DW	04H
	DW	02H
	DW	01H
	DW	04H
	DW	02H
	DW	0dH
	DW	06H
	DW	04H
	DW	04H
	DW	03H
	DW	01H
	DW	08H
	DW	08H
	DW	03H
	DW	02H
	DW	01H
	DW	05H
	DW	01H
	DW	02H
	DW	02H
	DW	03H
	DW	01H
	DW	0bH
	DW	0bH
	DW	07H
	DW	03H
	DW	06H
	DW	0aH
	DW	08H
	DW	06H
	DW	010H
	DW	010H
	DW	016H
	DW	07H
	DW	0cH
	DW	06H
	DW	015H
	DW	05H
	DW	04H
	DW	06H
	DW	06H
	DW	03H
	DW	06H
	DW	01H
	DW	03H
	DW	02H
	DW	01H
	DW	02H
	DW	08H
	DW	01dH
	DW	01H
	DW	0aH
	DW	01H
	DW	06H
	DW	0dH
	DW	06H
	DW	06H
	DW	013H
	DW	01fH
	DW	01H
	DW	0dH
	DW	04H
	DW	04H
	DW	016H
	DW	011H
	DW	01aH
	DW	021H
	DW	0aH
	DW	04H
	DW	0fH
	DW	0cH
	DW	019H
	DW	06H
	DW	043H
	DW	0aH
	DW	02H
	DW	03H
	DW	01H
	DW	06H
	DW	0aH
	DW	02H
	DW	06H
	DW	02H
	DW	09H
	DW	01H
	DW	09H
	DW	04H
	DW	04H
	DW	01H
	DW	02H
	DW	010H
	DW	02H
	DW	05H
	DW	09H
	DW	02H
	DW	03H
	DW	08H
	DW	01H
	DW	08H
	DW	03H
	DW	09H
	DW	04H
	DW	08H
	DW	06H
	DW	04H
	DW	08H
	DW	0bH
	DW	03H
	DW	02H
	DW	01H
	DW	01H
	DW	03H
	DW	01aH
	DW	01H
	DW	07H
	DW	05H
	DW	01H
	DW	0bH
	DW	01H
	DW	05H
	DW	03H
	DW	05H
	DW	02H
	DW	0dH
	DW	06H
	DW	027H
	DW	05H
	DW	01H
	DW	05H
	DW	02H
	DW	0bH
	DW	06H
	DW	0aH
	DW	05H
	DW	01H
	DW	0fH
	DW	05H
	DW	03H
	DW	06H
	DW	013H
	DW	015H
	DW	016H
	DW	02H
	DW	04H
	DW	01H
	DW	06H
	DW	01H
	DW	08H
	DW	01H
	DW	04H
	DW	08H
	DW	02H
	DW	04H
	DW	02H
	DW	02H
	DW	09H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	03H
	DW	06H
	DW	03H
	DW	0cH
	DW	07H
	DW	01H
	DW	0eH
	DW	02H
	DW	04H
	DW	0aH
	DW	02H
	DW	0dH
	DW	01H
	DW	011H
	DW	07H
	DW	03H
	DW	02H
	DW	01H
	DW	03H
	DW	02H
	DW	0dH
	DW	07H
	DW	0eH
	DW	0cH
	DW	03H
	DW	01H
	DW	01dH
	DW	02H
	DW	08H
	DW	09H
	DW	0fH
	DW	0eH
	DW	09H
	DW	0eH
	DW	01H
	DW	03H
	DW	01H
	DW	06H
	DW	05H
	DW	09H
	DW	0bH
	DW	03H
	DW	026H
	DW	02bH
	DW	014H
	DW	07H
	DW	07H
	DW	08H
	DW	05H
	DW	0fH
	DW	0cH
	DW	013H
	DW	0fH
	DW	051H
	DW	08H
	DW	07H
	DW	01H
	DW	05H
	DW	049H
	DW	0dH
	DW	025H
	DW	01cH
	DW	08H
	DW	08H
	DW	01H
	DW	0fH
	DW	012H
	DW	014H
	DW	0a5H
	DW	01cH
	DW	01H
	DW	06H
	DW	0bH
	DW	08H
	DW	04H
	DW	0eH
	DW	07H
	DW	0fH
	DW	01H
	DW	03H
	DW	03H
	DW	06H
	DW	04H
	DW	01H
	DW	07H
	DW	0eH
	DW	01H
	DW	01H
	DW	0bH
	DW	01eH
	DW	01H
	DW	05H
	DW	01H
	DW	04H
	DW	0eH
	DW	01H
	DW	04H
	DW	02H
	DW	07H
	DW	034H
	DW	02H
	DW	06H
	DW	01dH
	DW	03H
	DW	01H
	DW	09H
	DW	01H
	DW	015H
	DW	03H
	DW	05H
	DW	01H
	DW	01aH
	DW	03H
	DW	0bH
	DW	0eH
	DW	0bH
	DW	01H
	DW	011H
	DW	05H
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	02H
	DW	08H
	DW	01H
	DW	02H
	DW	09H
	DW	0cH
	DW	01H
	DW	01H
	DW	02H
	DW	03H
	DW	08H
	DW	03H
	DW	018H
	DW	0cH
	DW	07H
	DW	07H
	DW	05H
	DW	011H
	DW	03H
	DW	03H
	DW	03H
	DW	01H
	DW	017H
	DW	0aH
	DW	04H
	DW	04H
	DW	06H
	DW	03H
	DW	01H
	DW	010H
	DW	011H
	DW	016H
	DW	03H
	DW	0aH
	DW	015H
	DW	010H
	DW	010H
	DW	06H
	DW	04H
	DW	0aH
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	08H
	DW	08H
	DW	06H
	DW	05H
	DW	03H
	DW	03H
	DW	03H
	DW	027H
	DW	019H
	DW	0fH
	DW	01H
	DW	01H
	DW	010H
	DW	06H
	DW	07H
	DW	019H
	DW	0fH
	DW	06H
	DW	06H
	DW	0cH
	DW	01H
	DW	016H
	DW	0dH
	DW	01H
	DW	04H
	DW	09H
	DW	05H
	DW	0cH
	DW	02H
	DW	09H
	DW	01H
	DW	0cH
	DW	01cH
	DW	08H
	DW	03H
	DW	05H
	DW	0aH
	DW	016H
	DW	03cH
	DW	01H
	DW	02H
	DW	028H
	DW	04H
	DW	03dH
	DW	03fH
	DW	04H
	DW	01H
	DW	0dH
	DW	0cH
	DW	01H
	DW	04H
	DW	01fH
	DW	0cH
	DW	01H
	DW	0eH
	DW	059H
	DW	05H
	DW	010H
	DW	06H
	DW	01dH
	DW	0eH
	DW	02H
	DW	05H
	DW	031H
	DW	012H
	DW	012H
	DW	05H
	DW	01dH
	DW	021H
	DW	02fH
	DW	01H
	DW	011H
	DW	01H
	DW	013H
	DW	0cH
	DW	02H
	DW	09H
	DW	07H
	DW	027H
	DW	0cH
	DW	03H
	DW	07H
	DW	0cH
	DW	027H
	DW	03H
	DW	01H
	DW	02eH
	DW	04H
	DW	0cH
	DW	03H
	DW	08H
	DW	09H
	DW	05H
	DW	01fH
	DW	0fH
	DW	012H
	DW	03H
	DW	02H
	DW	02H
	DW	042H
	DW	013H
	DW	0dH
	DW	011H
	DW	05H
	DW	03H
	DW	02eH
	DW	07cH
	DW	0dH
	DW	039H
	DW	022H
	DW	02H
	DW	05H
	DW	04H
	DW	05H
	DW	08H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	03H
	DW	01H
	DW	011H
	DW	05H
	DW	03H
	DW	05H
	DW	03H
	DW	01H
	DW	08H
	DW	05H
	DW	06H
	DW	03H
	DW	01bH
	DW	03H
	DW	01aH
	DW	07H
	DW	0cH
	DW	07H
	DW	02H
	DW	011H
	DW	03H
	DW	07H
	DW	012H
	DW	04eH
	DW	010H
	DW	04H
	DW	024H
	DW	01H
	DW	02H
	DW	01H
	DW	06H
	DW	02H
	DW	01H
	DW	027H
	DW	011H
	DW	07H
	DW	04H
	DW	0dH
	DW	04H
	DW	04H
	DW	04H
	DW	01H
	DW	0aH
	DW	04H
	DW	02H
	DW	04H
	DW	06H
	DW	03H
	DW	0aH
	DW	01H
	DW	013H
	DW	01H
	DW	01aH
	DW	02H
	DW	04H
	DW	021H
	DW	02H
	DW	049H
	DW	02fH
	DW	07H
	DW	03H
	DW	08H
	DW	02H
	DW	04H
	DW	0fH
	DW	012H
	DW	01H
	DW	01dH
	DW	02H
	DW	029H
	DW	0eH
	DW	01H
	DW	015H
	DW	010H
	DW	029H
	DW	07H
	DW	027H
	DW	019H
	DW	0dH
	DW	02cH
	DW	02H
	DW	02H
	DW	0aH
	DW	01H
	DW	0dH
	DW	07H
	DW	01H
	DW	07H
	DW	03H
	DW	05H
	DW	014H
	DW	04H
	DW	08H
	DW	02H
	DW	031H
	DW	01H
	DW	0aH
	DW	06H
	DW	01H
	DW	06H
	DW	07H
	DW	0aH
	DW	07H
	DW	0bH
	DW	010H
	DW	03H
	DW	0cH
	DW	014H
	DW	04H
	DW	0aH
	DW	03H
	DW	01H
	DW	02H
	DW	0bH
	DW	02H
	DW	01cH
	DW	09H
	DW	02H
	DW	04H
	DW	07H
	DW	02H
	DW	0fH
	DW	01H
	DW	01bH
	DW	01H
	DW	01cH
	DW	011H
	DW	04H
	DW	05H
	DW	0aH
	DW	07H
	DW	03H
	DW	018H
	DW	0aH
	DW	0bH
	DW	06H
	DW	01aH
	DW	03H
	DW	02H
	DW	07H
	DW	02H
	DW	02H
	DW	031H
	DW	010H
	DW	0aH
	DW	010H
	DW	0fH
	DW	04H
	DW	05H
	DW	01bH
	DW	03dH
	DW	01eH
	DW	0eH
	DW	026H
	DW	016H
	DW	02H
	DW	07H
	DW	05H
	DW	01H
	DW	03H
	DW	0cH
	DW	017H
	DW	018H
	DW	011H
	DW	011H
	DW	03H
	DW	03H
	DW	02H
	DW	04H
	DW	01H
	DW	06H
	DW	02H
	DW	07H
	DW	05H
	DW	01H
	DW	01H
	DW	05H
	DW	01H
	DW	01H
	DW	09H
	DW	04H
	DW	01H
	DW	03H
	DW	06H
	DW	01H
	DW	08H
	DW	02H
	DW	08H
	DW	04H
	DW	0eH
	DW	03H
	DW	05H
	DW	0bH
	DW	04H
	DW	01H
	DW	03H
	DW	020H
	DW	01H
	DW	013H
	DW	04H
	DW	01H
	DW	0dH
	DW	0bH
	DW	05H
	DW	02H
	DW	01H
	DW	08H
	DW	06H
	DW	08H
	DW	01H
	DW	06H
	DW	05H
	DW	0dH
	DW	03H
	DW	017H
	DW	0bH
	DW	05H
	DW	03H
	DW	010H
	DW	03H
	DW	09H
	DW	0aH
	DW	01H
	DW	018H
	DW	03H
	DW	0c6H
	DW	034H
	DW	04H
	DW	02H
	DW	02H
	DW	05H
	DW	0eH
	DW	05H
	DW	04H
	DW	016H
	DW	05H
	DW	014H
	DW	04H
	DW	0bH
	DW	06H
	DW	029H
	DW	01H
	DW	05H
	DW	02H
	DW	02H
	DW	0bH
	DW	05H
	DW	02H
	DW	01cH
	DW	023H
	DW	08H
	DW	016H
	DW	03H
	DW	012H
	DW	03H
	DW	0aH
	DW	07H
	DW	05H
	DW	03H
	DW	04H
	DW	01H
	DW	05H
	DW	03H
	DW	08H
	DW	09H
	DW	03H
	DW	06H
	DW	02H
	DW	010H
	DW	016H
	DW	04H
	DW	05H
	DW	05H
	DW	03H
	DW	03H
	DW	012H
	DW	017H
	DW	02H
	DW	06H
	DW	017H
	DW	05H
	DW	01bH
	DW	08H
	DW	01H
	DW	021H
	DW	02H
	DW	0cH
	DW	02bH
	DW	010H
	DW	05H
	DW	02H
	DW	03H
	DW	06H
	DW	01H
	DW	014H
	DW	04H
	DW	02H
	DW	09H
	DW	07H
	DW	01H
	DW	0bH
	DW	02H
	DW	0aH
	DW	03H
	DW	0eH
	DW	01fH
	DW	09H
	DW	03H
	DW	019H
	DW	012H
	DW	014H
	DW	02H
	DW	05H
	DW	05H
	DW	01aH
	DW	0eH
	DW	01H
	DW	0bH
	DW	011H
	DW	0cH
	DW	028H
	DW	013H
	DW	09H
	DW	06H
	DW	01fH
	DW	053H
	DW	02H
	DW	07H
	DW	09H
	DW	013H
	DW	04eH
	DW	0cH
	DW	0eH
	DW	015H
	DW	04cH
	DW	0cH
	DW	071H
	DW	04fH
	DW	022H
	DW	04H
	DW	01H
	DW	01H
	DW	03dH
	DW	012H
	DW	055H
	DW	0aH
	DW	02H
	DW	02H
	DW	0dH
	DW	01fH
	DW	0bH
	DW	032H
	DW	06H
	DW	021H
	DW	09fH
	DW	0b3H
	DW	06H
	DW	06H
	DW	07H
	DW	04H
	DW	04H
	DW	02H
	DW	04H
	DW	02H
	DW	05H
	DW	08H
	DW	07H
	DW	014H
	DW	020H
	DW	016H
	DW	01H
	DW	03H
	DW	0aH
	DW	06H
	DW	07H
	DW	01cH
	DW	05H
	DW	0aH
	DW	09H
	DW	02H
	DW	04dH
	DW	013H
	DW	0dH
	DW	02H
	DW	05H
	DW	01H
	DW	04H
	DW	04H
	DW	07H
	DW	04H
	DW	0dH
	DW	03H
	DW	09H
	DW	01fH
	DW	011H
	DW	03H
	DW	01aH
	DW	02H
	DW	06H
	DW	06H
	DW	05H
	DW	04H
	DW	01H
	DW	07H
	DW	0bH
	DW	03H
	DW	04H
	DW	02H
	DW	01H
	DW	06H
	DW	02H
	DW	014H
	DW	04H
	DW	01H
	DW	09H
	DW	02H
	DW	06H
	DW	03H
	DW	07H
	DW	01H
	DW	01H
	DW	01H
	DW	014H
	DW	02H
	DW	03H
	DW	01H
	DW	06H
	DW	02H
	DW	03H
	DW	06H
	DW	02H
	DW	04H
	DW	08H
	DW	01H
	DW	05H
	DW	0dH
	DW	08H
	DW	04H
	DW	0bH
	DW	017H
	DW	01H
	DW	0aH
	DW	06H
	DW	02H
	DW	01H
	DW	03H
	DW	015H
	DW	02H
	DW	02H
	DW	04H
	DW	018H
	DW	01fH
	DW	04H
	DW	0aH
	DW	0aH
	DW	02H
	DW	05H
	DW	0c0H
	DW	0fH
	DW	04H
	DW	010H
	DW	07H
	DW	09H
	DW	033H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	05H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	05H
	DW	03H
	DW	01H
	DW	03H
	DW	04H
	DW	01H
	DW	03H
	DW	01H
	DW	03H
	DW	03H
	DW	09H
	DW	08H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	04H
	DW	04H
	DW	012H
	DW	0cH
	DW	05cH
	DW	02H
	DW	0aH
	DW	04H
	DW	03H
	DW	0eH
	DW	05H
	DW	019H
	DW	010H
	DW	02aH
	DW	04H
	DW	0eH
	DW	04H
	DW	02H
	DW	015H
	DW	05H
	DW	07eH
	DW	01eH
	DW	01fH
	DW	02H
	DW	01H
	DW	05H
	DW	0dH
	DW	03H
	DW	016H
	DW	05H
	DW	06H
	DW	06H
	DW	014H
	DW	0cH
	DW	01H
	DW	0eH
	DW	0cH
	DW	057H
	DW	03H
	DW	013H
	DW	01H
	DW	08H
	DW	02H
	DW	09H
	DW	09H
	DW	03H
	DW	03H
	DW	017H
	DW	02H
	DW	03H
	DW	07H
	DW	06H
	DW	03H
	DW	01H
	DW	02H
	DW	03H
	DW	09H
	DW	01H
	DW	03H
	DW	01H
	DW	06H
	DW	03H
	DW	02H
	DW	01H
	DW	03H
	DW	0bH
	DW	03H
	DW	01H
	DW	06H
	DW	0aH
	DW	03H
	DW	02H
	DW	03H
	DW	01H
	DW	02H
	DW	01H
	DW	05H
	DW	01H
	DW	01H
	DW	0bH
	DW	03H
	DW	06H
	DW	04H
	DW	01H
	DW	07H
	DW	02H
	DW	01H
	DW	02H
	DW	05H
	DW	05H
	DW	022H
	DW	04H
	DW	0eH
	DW	012H
	DW	04H
	DW	013H
	DW	07H
	DW	05H
	DW	08H
	DW	02H
	DW	06H
	DW	04fH
	DW	01H
	DW	05H
	DW	02H
	DW	0eH
	DW	08H
	DW	02H
	DW	09H
	DW	02H
	DW	01H
	DW	024H
	DW	01cH
	DW	010H
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	0cH
	DW	06H
	DW	02aH
	DW	027H
	DW	010H
	DW	017H
	DW	07H
	DW	0fH
	DW	0fH
	DW	03H
	DW	02H
	DW	0cH
	DW	07H
	DW	015H
	DW	040H
	DW	06H
	DW	09H
	DW	01cH
	DW	08H
	DW	0cH
	DW	03H
	DW	03H
	DW	029H
	DW	03bH
	DW	018H
	DW	033H
	DW	037H
	DW	039H
	DW	0126H
	DW	09H
	DW	09H
	DW	02H
	DW	06H
	DW	02H
	DW	0fH
	DW	01H
	DW	02H
	DW	0dH
	DW	026H
	DW	05aH
	DW	09H
	DW	09H
	DW	09H
	DW	03H
	DW	0bH
	DW	07H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	06H
	DW	03H
	DW	02H
	DW	01H
	DW	02H
	DW	02H
	DW	03H
	DW	08H
	DW	01H
	DW	04H
	DW	04H
	DW	01H
	DW	05H
	DW	07H
	DW	01H
	DW	04H
	DW	03H
	DW	014H
	DW	04H
	DW	09H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	05H
	DW	011H
	DW	01H
	DW	05H
	DW	02H
	DW	06H
	DW	02H
	DW	04H
	DW	01H
	DW	04H
	DW	05H
	DW	07H
	DW	03H
	DW	012H
	DW	0bH
	DW	0bH
	DW	020H
	DW	07H
	DW	05H
	DW	04H
	DW	07H
	DW	0bH
	DW	07fH
	DW	08H
	DW	04H
	DW	03H
	DW	03H
	DW	01H
	DW	0aH
	DW	01H
	DW	01H
	DW	06H
	DW	015H
	DW	0eH
	DW	01H
	DW	010H
	DW	01H
	DW	07H
	DW	01H
	DW	03H
	DW	06H
	DW	09H
	DW	041H
	DW	033H
	DW	04H
	DW	03H
	DW	0dH
	DW	03H
	DW	0aH
	DW	01H
	DW	01H
	DW	0cH
	DW	09H
	DW	015H
	DW	06eH
	DW	03H
	DW	013H
	DW	018H
	DW	01H
	DW	01H
	DW	0aH
	DW	03eH
	DW	04H
	DW	01H
	DW	01dH
	DW	02aH
	DW	04eH
	DW	01cH
	DW	014H
	DW	012H
	DW	052H
	DW	06H
	DW	03H
	DW	0fH
	DW	06H
	DW	054H
	DW	03aH
	DW	0fdH
	DW	0fH
	DW	09bH
	DW	0108H
	DW	0fH
	DW	015H
	DW	09H
	DW	0eH
	DW	07H
	DW	03aH
	DW	028H
	DW	027H
CONST	ENDS
;	COMDAT ?base_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA
_DATA	SEGMENT
?base_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA DW 020H ; `ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon'::`2'::base_ranges
	DW	0ffH
	DW	02000H
	DW	0206fH
	DW	03000H
	DW	030ffH
	DW	031f0H
	DW	031ffH
	DW	0ff00H
	DW	0ffefH
_DATA	ENDS
;	COMDAT ?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4QBFB
CONST	SEGMENT
?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4QBFB DW 00H ; `ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon'::`2'::accumulative_offsets_from_0x4E00
	DW	01H
	DW	02H
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	02H
	DW	01H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	02H
	DW	01H
	DW	02H
	DW	03H
	DW	03H
	DW	03H
	DW	02H
	DW	02H
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	05H
	DW	02H
	DW	03H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	01H
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	0aH
	DW	01H
	DW	02H
	DW	013H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	05H
	DW	01H
	DW	06H
	DW	03H
	DW	02H
	DW	01H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	08H
	DW	05H
	DW	01H
	DW	01H
	DW	04H
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	02H
	DW	01H
	DW	05H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	0aH
	DW	01H
	DW	01H
	DW	05H
	DW	02H
	DW	04H
	DW	06H
	DW	01H
	DW	04H
	DW	02H
	DW	02H
	DW	02H
	DW	0cH
	DW	02H
	DW	01H
	DW	01H
	DW	06H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	01H
	DW	01H
	DW	04H
	DW	06H
	DW	05H
	DW	01H
	DW	04H
	DW	02H
	DW	02H
	DW	04H
	DW	0aH
	DW	07H
	DW	01H
	DW	01H
	DW	04H
	DW	02H
	DW	04H
	DW	02H
	DW	01H
	DW	04H
	DW	03H
	DW	06H
	DW	0aH
	DW	0cH
	DW	05H
	DW	07H
	DW	02H
	DW	0eH
	DW	02H
	DW	09H
	DW	01H
	DW	01H
	DW	06H
	DW	07H
	DW	0aH
	DW	04H
	DW	07H
	DW	0dH
	DW	01H
	DW	05H
	DW	04H
	DW	08H
	DW	04H
	DW	01H
	DW	01H
	DW	02H
	DW	01cH
	DW	05H
	DW	06H
	DW	01H
	DW	01H
	DW	05H
	DW	02H
	DW	05H
	DW	014H
	DW	02H
	DW	02H
	DW	09H
	DW	08H
	DW	0bH
	DW	02H
	DW	09H
	DW	011H
	DW	01H
	DW	08H
	DW	06H
	DW	08H
	DW	01bH
	DW	04H
	DW	06H
	DW	09H
	DW	014H
	DW	0bH
	DW	01bH
	DW	06H
	DW	044H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	02H
	DW	07H
	DW	06H
	DW	0bH
	DW	03H
	DW	03H
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	01H
	DW	08H
	DW	03H
	DW	04H
	DW	01H
	DW	05H
	DW	07H
	DW	02H
	DW	01H
	DW	04H
	DW	04H
	DW	08H
	DW	04H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	04H
	DW	05H
	DW	06H
	DW	03H
	DW	06H
	DW	02H
	DW	0cH
	DW	03H
	DW	01H
	DW	03H
	DW	09H
	DW	02H
	DW	04H
	DW	03H
	DW	04H
	DW	01H
	DW	05H
	DW	03H
	DW	03H
	DW	01H
	DW	03H
	DW	07H
	DW	01H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	03H
	DW	04H
	DW	05H
	DW	02H
	DW	03H
	DW	02H
	DW	06H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	07H
	DW	01H
	DW	07H
	DW	03H
	DW	04H
	DW	05H
	DW	0fH
	DW	02H
	DW	02H
	DW	01H
	DW	05H
	DW	03H
	DW	016H
	DW	013H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	06H
	DW	01H
	DW	01H
	DW	0cH
	DW	08H
	DW	02H
	DW	09H
	DW	012H
	DW	016H
	DW	04H
	DW	01H
	DW	01H
	DW	05H
	DW	01H
	DW	010H
	DW	01H
	DW	02H
	DW	07H
	DW	0aH
	DW	0fH
	DW	01H
	DW	01H
	DW	06H
	DW	02H
	DW	04H
	DW	01H
	DW	02H
	DW	04H
	DW	01H
	DW	06H
	DW	01H
	DW	01H
	DW	03H
	DW	02H
	DW	04H
	DW	01H
	DW	06H
	DW	04H
	DW	05H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	0aH
	DW	03H
	DW	01H
	DW	03H
	DW	02H
	DW	01H
	DW	09H
	DW	03H
	DW	02H
	DW	05H
	DW	07H
	DW	02H
	DW	013H
	DW	04H
	DW	03H
	DW	06H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	03H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	05H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	07H
	DW	01H
	DW	04H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	04H
	DW	04H
	DW	03H
	DW	08H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	05H
	DW	01H
	DW	03H
	DW	01H
	DW	03H
	DW	04H
	DW	06H
	DW	02H
	DW	02H
	DW	0eH
	DW	04H
	DW	06H
	DW	06H
	DW	0bH
	DW	09H
	DW	01H
	DW	0fH
	DW	03H
	DW	01H
	DW	01cH
	DW	05H
	DW	02H
	DW	05H
	DW	05H
	DW	03H
	DW	01H
	DW	03H
	DW	04H
	DW	05H
	DW	04H
	DW	06H
	DW	0eH
	DW	03H
	DW	02H
	DW	03H
	DW	05H
	DW	015H
	DW	02H
	DW	07H
	DW	014H
	DW	0aH
	DW	01H
	DW	02H
	DW	013H
	DW	02H
	DW	04H
	DW	01cH
	DW	01cH
	DW	02H
	DW	03H
	DW	02H
	DW	01H
	DW	0eH
	DW	04H
	DW	01H
	DW	01aH
	DW	01cH
	DW	02aH
	DW	0cH
	DW	028H
	DW	03H
	DW	034H
	DW	04fH
	DW	05H
	DW	0eH
	DW	011H
	DW	03H
	DW	02H
	DW	02H
	DW	0bH
	DW	03H
	DW	04H
	DW	06H
	DW	03H
	DW	01H
	DW	08H
	DW	02H
	DW	017H
	DW	04H
	DW	05H
	DW	08H
	DW	0aH
	DW	04H
	DW	02H
	DW	07H
	DW	03H
	DW	05H
	DW	01H
	DW	01H
	DW	06H
	DW	03H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	05H
	DW	01cH
	DW	01H
	DW	01H
	DW	07H
	DW	07H
	DW	014H
	DW	05H
	DW	03H
	DW	01dH
	DW	03H
	DW	011H
	DW	01aH
	DW	01H
	DW	08H
	DW	04H
	DW	01bH
	DW	03H
	DW	06H
	DW	0bH
	DW	017H
	DW	05H
	DW	03H
	DW	04H
	DW	06H
	DW	0dH
	DW	018H
	DW	010H
	DW	06H
	DW	05H
	DW	0aH
	DW	019H
	DW	023H
	DW	07H
	DW	03H
	DW	02H
	DW	03H
	DW	03H
	DW	0eH
	DW	03H
	DW	06H
	DW	02H
	DW	06H
	DW	01H
	DW	04H
	DW	02H
	DW	03H
	DW	08H
	DW	02H
	DW	01H
	DW	01H
	DW	03H
	DW	03H
	DW	03H
	DW	04H
	DW	01H
	DW	01H
	DW	0dH
	DW	02H
	DW	02H
	DW	04H
	DW	05H
	DW	02H
	DW	01H
	DW	0eH
	DW	0eH
	DW	01H
	DW	02H
	DW	02H
	DW	01H
	DW	04H
	DW	05H
	DW	02H
	DW	03H
	DW	01H
	DW	0eH
	DW	03H
	DW	0cH
	DW	03H
	DW	011H
	DW	02H
	DW	010H
	DW	05H
	DW	01H
	DW	02H
	DW	01H
	DW	08H
	DW	09H
	DW	03H
	DW	013H
	DW	04H
	DW	02H
	DW	02H
	DW	04H
	DW	011H
	DW	019H
	DW	015H
	DW	014H
	DW	01cH
	DW	04bH
	DW	01H
	DW	0aH
	DW	01dH
	DW	067H
	DW	04H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	04H
	DW	02H
	DW	04H
	DW	01H
	DW	02H
	DW	03H
	DW	018H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	08H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	06H
	DW	01H
	DW	05H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	04H
	DW	01H
	DW	01H
	DW	05H
	DW	02H
	DW	01H
	DW	05H
	DW	06H
	DW	0dH
	DW	09H
	DW	010H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	02H
	DW	03H
	DW	02H
	DW	04H
	DW	05H
	DW	02H
	DW	05H
	DW	02H
	DW	02H
	DW	03H
	DW	07H
	DW	0dH
	DW	07H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	03H
	DW	03H
	DW	02H
	DW	01H
	DW	06H
	DW	04H
	DW	09H
	DW	02H
	DW	01H
	DW	0eH
	DW	02H
	DW	0eH
	DW	02H
	DW	01H
	DW	012H
	DW	03H
	DW	04H
	DW	0eH
	DW	04H
	DW	0bH
	DW	029H
	DW	0fH
	DW	017H
	DW	0fH
	DW	017H
	DW	0b0H
	DW	01H
	DW	03H
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	03H
	DW	01H
	DW	02H
	DW	03H
	DW	07H
	DW	03H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	04H
	DW	04H
	DW	06H
	DW	02H
	DW	04H
	DW	01H
	DW	09H
	DW	07H
	DW	01H
	DW	0aH
	DW	05H
	DW	08H
	DW	010H
	DW	01dH
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	03H
	DW	01H
	DW	03H
	DW	05H
	DW	02H
	DW	04H
	DW	05H
	DW	04H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	03H
	DW	03H
	DW	07H
	DW	01H
	DW	06H
	DW	0aH
	DW	01H
	DW	011H
	DW	01H
	DW	02cH
	DW	04H
	DW	06H
	DW	02H
	DW	01H
	DW	01H
	DW	06H
	DW	05H
	DW	04H
	DW	02H
	DW	0aH
	DW	01H
	DW	06H
	DW	09H
	DW	02H
	DW	08H
	DW	01H
	DW	018H
	DW	01H
	DW	02H
	DW	0dH
	DW	07H
	DW	08H
	DW	08H
	DW	02H
	DW	01H
	DW	04H
	DW	01H
	DW	03H
	DW	01H
	DW	03H
	DW	03H
	DW	05H
	DW	02H
	DW	05H
	DW	0aH
	DW	09H
	DW	04H
	DW	09H
	DW	0cH
	DW	02H
	DW	01H
	DW	06H
	DW	01H
	DW	0aH
	DW	01H
	DW	01H
	DW	07H
	DW	07H
	DW	04H
	DW	0aH
	DW	08H
	DW	03H
	DW	01H
	DW	0dH
	DW	04H
	DW	03H
	DW	01H
	DW	06H
	DW	01H
	DW	03H
	DW	05H
	DW	02H
	DW	01H
	DW	02H
	DW	011H
	DW	010H
	DW	05H
	DW	02H
	DW	010H
	DW	06H
	DW	01H
	DW	04H
	DW	02H
	DW	01H
	DW	03H
	DW	03H
	DW	06H
	DW	08H
	DW	05H
	DW	0bH
	DW	0bH
	DW	01H
	DW	03H
	DW	03H
	DW	02H
	DW	04H
	DW	06H
	DW	0aH
	DW	09H
	DW	05H
	DW	07H
	DW	04H
	DW	07H
	DW	04H
	DW	07H
	DW	01H
	DW	01H
	DW	04H
	DW	02H
	DW	01H
	DW	03H
	DW	06H
	DW	08H
	DW	07H
	DW	01H
	DW	06H
	DW	0bH
	DW	05H
	DW	05H
	DW	03H
	DW	018H
	DW	09H
	DW	04H
	DW	02H
	DW	07H
	DW	0dH
	DW	05H
	DW	01H
	DW	08H
	DW	052H
	DW	010H
	DW	03dH
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	02H
	DW	02H
	DW	010H
	DW	0aH
	DW	03H
	DW	08H
	DW	01H
	DW	01H
	DW	06H
	DW	04H
	DW	02H
	DW	01H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	03H
	DW	08H
	DW	04H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	06H
	DW	03H
	DW	05H
	DW	01H
	DW	01H
	DW	04H
	DW	06H
	DW	09H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	07H
	DW	02H
	DW	01H
	DW	06H
	DW	01H
	DW	05H
	DW	04H
	DW	04H
	DW	03H
	DW	01H
	DW	08H
	DW	01H
	DW	03H
	DW	03H
	DW	01H
	DW	03H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	03H
	DW	01H
	DW	06H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	07H
	DW	01H
	DW	08H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	05H
	DW	02H
	DW	05H
	DW	03H
	DW	05H
	DW	0aH
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	03H
	DW	02H
	DW	05H
	DW	0bH
	DW	03H
	DW	09H
	DW	03H
	DW	05H
	DW	01H
	DW	01H
	DW	05H
	DW	09H
	DW	01H
	DW	02H
	DW	01H
	DW	05H
	DW	07H
	DW	09H
	DW	09H
	DW	08H
	DW	01H
	DW	03H
	DW	03H
	DW	03H
	DW	06H
	DW	08H
	DW	02H
	DW	03H
	DW	02H
	DW	01H
	DW	01H
	DW	020H
	DW	06H
	DW	01H
	DW	02H
	DW	0fH
	DW	09H
	DW	03H
	DW	07H
	DW	0dH
	DW	01H
	DW	03H
	DW	0aH
	DW	0dH
	DW	02H
	DW	0eH
	DW	01H
	DW	0dH
	DW	0aH
	DW	02H
	DW	01H
	DW	03H
	DW	0aH
	DW	04H
	DW	0fH
	DW	02H
	DW	0fH
	DW	0fH
	DW	0aH
	DW	01H
	DW	03H
	DW	09H
	DW	06H
	DW	09H
	DW	020H
	DW	019H
	DW	01aH
	DW	02fH
	DW	07H
	DW	03H
	DW	02H
	DW	03H
	DW	01H
	DW	06H
	DW	03H
	DW	04H
	DW	03H
	DW	02H
	DW	08H
	DW	05H
	DW	04H
	DW	01H
	DW	09H
	DW	04H
	DW	02H
	DW	02H
	DW	013H
	DW	0aH
	DW	06H
	DW	02H
	DW	03H
	DW	08H
	DW	01H
	DW	02H
	DW	02H
	DW	04H
	DW	02H
	DW	01H
	DW	09H
	DW	04H
	DW	04H
	DW	04H
	DW	06H
	DW	04H
	DW	08H
	DW	09H
	DW	02H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	05H
	DW	05H
	DW	01H
	DW	03H
	DW	08H
	DW	04H
	DW	06H
	DW	02H
	DW	01H
	DW	04H
	DW	0cH
	DW	01H
	DW	05H
	DW	03H
	DW	07H
	DW	0dH
	DW	02H
	DW	05H
	DW	08H
	DW	01H
	DW	06H
	DW	01H
	DW	02H
	DW	05H
	DW	0eH
	DW	06H
	DW	01H
	DW	05H
	DW	02H
	DW	04H
	DW	08H
	DW	0fH
	DW	05H
	DW	01H
	DW	017H
	DW	06H
	DW	03eH
	DW	02H
	DW	0aH
	DW	01H
	DW	01H
	DW	08H
	DW	01H
	DW	02H
	DW	02H
	DW	0aH
	DW	04H
	DW	02H
	DW	02H
	DW	09H
	DW	02H
	DW	01H
	DW	01H
	DW	03H
	DW	02H
	DW	03H
	DW	01H
	DW	05H
	DW	03H
	DW	03H
	DW	02H
	DW	01H
	DW	03H
	DW	08H
	DW	01H
	DW	01H
	DW	01H
	DW	0bH
	DW	03H
	DW	01H
	DW	01H
	DW	04H
	DW	03H
	DW	07H
	DW	01H
	DW	0eH
	DW	01H
	DW	02H
	DW	03H
	DW	0cH
	DW	05H
	DW	02H
	DW	05H
	DW	01H
	DW	06H
	DW	07H
	DW	05H
	DW	07H
	DW	0eH
	DW	0bH
	DW	01H
	DW	03H
	DW	01H
	DW	08H
	DW	09H
	DW	0cH
	DW	02H
	DW	01H
	DW	0bH
	DW	08H
	DW	04H
	DW	04H
	DW	02H
	DW	06H
	DW	0aH
	DW	09H
	DW	0dH
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	05H
	DW	01H
	DW	03H
	DW	02H
	DW	04H
	DW	04H
	DW	01H
	DW	012H
	DW	02H
	DW	03H
	DW	0eH
	DW	0bH
	DW	04H
	DW	01dH
	DW	04H
	DW	02H
	DW	07H
	DW	01H
	DW	03H
	DW	0dH
	DW	09H
	DW	02H
	DW	02H
	DW	05H
	DW	03H
	DW	05H
	DW	014H
	DW	07H
	DW	010H
	DW	08H
	DW	05H
	DW	048H
	DW	022H
	DW	06H
	DW	04H
	DW	016H
	DW	0cH
	DW	0cH
	DW	01cH
	DW	02dH
	DW	024H
	DW	09H
	DW	07H
	DW	027H
	DW	09H
	DW	0bfH
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	0bH
	DW	08H
	DW	04H
	DW	09H
	DW	02H
	DW	03H
	DW	016H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	011H
	DW	01H
	DW	07H
	DW	07H
	DW	01H
	DW	0bH
	DW	01fH
	DW	0aH
	DW	02H
	DW	04H
	DW	08H
	DW	02H
	DW	03H
	DW	02H
	DW	01H
	DW	04H
	DW	02H
	DW	010H
	DW	04H
	DW	020H
	DW	02H
	DW	03H
	DW	013H
	DW	0dH
	DW	04H
	DW	09H
	DW	01H
	DW	05H
	DW	02H
	DW	0eH
	DW	08H
	DW	01H
	DW	01H
	DW	03H
	DW	06H
	DW	013H
	DW	06H
	DW	05H
	DW	01H
	DW	010H
	DW	06H
	DW	02H
	DW	0aH
	DW	08H
	DW	05H
	DW	01H
	DW	02H
	DW	03H
	DW	01H
	DW	05H
	DW	05H
	DW	01H
	DW	0bH
	DW	06H
	DW	06H
	DW	01H
	DW	03H
	DW	03H
	DW	02H
	DW	06H
	DW	03H
	DW	08H
	DW	01H
	DW	01H
	DW	04H
	DW	0aH
	DW	07H
	DW	05H
	DW	07H
	DW	07H
	DW	05H
	DW	08H
	DW	09H
	DW	02H
	DW	01H
	DW	03H
	DW	04H
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	03H
	DW	03H
	DW	02H
	DW	06H
	DW	010H
	DW	01H
	DW	04H
	DW	06H
	DW	03H
	DW	01H
	DW	0aH
	DW	06H
	DW	01H
	DW	03H
	DW	0fH
	DW	02H
	DW	09H
	DW	02H
	DW	0aH
	DW	019H
	DW	0dH
	DW	09H
	DW	010H
	DW	06H
	DW	02H
	DW	02H
	DW	0aH
	DW	0bH
	DW	04H
	DW	03H
	DW	09H
	DW	01H
	DW	02H
	DW	06H
	DW	06H
	DW	05H
	DW	04H
	DW	01eH
	DW	028H
	DW	01H
	DW	0aH
	DW	07H
	DW	0cH
	DW	0eH
	DW	021H
	DW	06H
	DW	03H
	DW	06H
	DW	07H
	DW	03H
	DW	01H
	DW	03H
	DW	01H
	DW	0bH
	DW	0eH
	DW	04H
	DW	09H
	DW	05H
	DW	0cH
	DW	0bH
	DW	031H
	DW	012H
	DW	033H
	DW	01fH
	DW	08cH
	DW	01fH
	DW	02H
	DW	02H
	DW	01H
	DW	05H
	DW	01H
	DW	08H
	DW	01H
	DW	0aH
	DW	01H
	DW	04H
	DW	04H
	DW	03H
	DW	018H
	DW	01H
	DW	0aH
	DW	01H
	DW	03H
	DW	06H
	DW	06H
	DW	010H
	DW	03H
	DW	04H
	DW	05H
	DW	02H
	DW	01H
	DW	04H
	DW	02H
	DW	039H
	DW	0aH
	DW	06H
	DW	016H
	DW	02H
	DW	016H
	DW	03H
	DW	07H
	DW	016H
	DW	06H
	DW	0aH
	DW	0bH
	DW	024H
	DW	012H
	DW	010H
	DW	021H
	DW	024H
	DW	02H
	DW	05H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	0aH
	DW	01H
	DW	04H
	DW	0dH
	DW	02H
	DW	07H
	DW	05H
	DW	02H
	DW	09H
	DW	03H
	DW	04H
	DW	01H
	DW	07H
	DW	02bH
	DW	03H
	DW	07H
	DW	03H
	DW	09H
	DW	0eH
	DW	07H
	DW	09H
	DW	01H
	DW	0bH
	DW	01H
	DW	01H
	DW	03H
	DW	07H
	DW	04H
	DW	012H
	DW	0dH
	DW	01H
	DW	0eH
	DW	01H
	DW	03H
	DW	06H
	DW	0aH
	DW	049H
	DW	02H
	DW	02H
	DW	01eH
	DW	06H
	DW	01H
	DW	0bH
	DW	012H
	DW	013H
	DW	0dH
	DW	016H
	DW	03H
	DW	02eH
	DW	02aH
	DW	025H
	DW	059H
	DW	07H
	DW	03H
	DW	010H
	DW	022H
	DW	02H
	DW	02H
	DW	03H
	DW	09H
	DW	01H
	DW	07H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	04H
	DW	0aH
	DW	07H
	DW	03H
	DW	0aH
	DW	03H
	DW	09H
	DW	05H
	DW	01cH
	DW	09H
	DW	02H
	DW	06H
	DW	0dH
	DW	07H
	DW	03H
	DW	01H
	DW	03H
	DW	0aH
	DW	02H
	DW	07H
	DW	02H
	DW	0bH
	DW	03H
	DW	06H
	DW	015H
	DW	036H
	DW	055H
	DW	02H
	DW	01H
	DW	04H
	DW	02H
	DW	02H
	DW	01H
	DW	027H
	DW	03H
	DW	015H
	DW	02H
	DW	02H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	01H
	DW	01H
	DW	03H
	DW	04H
	DW	0fH
	DW	01H
	DW	03H
	DW	02H
	DW	04H
	DW	04H
	DW	02H
	DW	03H
	DW	08H
	DW	02H
	DW	014H
	DW	01H
	DW	08H
	DW	07H
	DW	0dH
	DW	04H
	DW	01H
	DW	01aH
	DW	06H
	DW	02H
	DW	09H
	DW	022H
	DW	04H
	DW	015H
	DW	034H
	DW	0aH
	DW	04H
	DW	04H
	DW	01H
	DW	05H
	DW	0cH
	DW	02H
	DW	0bH
	DW	01H
	DW	07H
	DW	02H
	DW	01eH
	DW	0cH
	DW	02cH
	DW	02H
	DW	01eH
	DW	01H
	DW	01H
	DW	03H
	DW	06H
	DW	010H
	DW	09H
	DW	011H
	DW	027H
	DW	052H
	DW	02H
	DW	02H
	DW	018H
	DW	07H
	DW	01H
	DW	07H
	DW	03H
	DW	010H
	DW	09H
	DW	0eH
	DW	02cH
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	03H
	DW	05H
	DW	02H
	DW	04H
	DW	01H
	DW	06H
	DW	07H
	DW	05H
	DW	03H
	DW	02H
	DW	06H
	DW	01H
	DW	0bH
	DW	05H
	DW	0bH
	DW	02H
	DW	01H
	DW	012H
	DW	013H
	DW	08H
	DW	01H
	DW	03H
	DW	018H
	DW	01dH
	DW	02H
	DW	01H
	DW	03H
	DW	05H
	DW	02H
	DW	02H
	DW	01H
	DW	0dH
	DW	06H
	DW	05H
	DW	01H
	DW	02eH
	DW	0bH
	DW	03H
	DW	05H
	DW	01H
	DW	01H
	DW	05H
	DW	08H
	DW	02H
	DW	0aH
	DW	06H
	DW	0cH
	DW	06H
	DW	03H
	DW	07H
	DW	0bH
	DW	02H
	DW	04H
	DW	010H
	DW	0dH
	DW	02H
	DW	05H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	05H
	DW	02H
	DW	01cH
	DW	05H
	DW	02H
	DW	017H
	DW	0aH
	DW	08H
	DW	04H
	DW	04H
	DW	016H
	DW	027H
	DW	05fH
	DW	026H
	DW	08H
	DW	0eH
	DW	09H
	DW	05H
	DW	01H
	DW	0dH
	DW	05H
	DW	04H
	DW	03H
	DW	0dH
	DW	0cH
	DW	0bH
	DW	01H
	DW	09H
	DW	01H
	DW	01bH
	DW	025H
	DW	02H
	DW	05H
	DW	04H
	DW	04H
	DW	03fH
	DW	0d3H
	DW	05fH
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	03H
	DW	05H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	02H
	DW	04H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	05H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	03H
	DW	01H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	04H
	DW	02H
	DW	01H
	DW	03H
	DW	06H
	DW	01H
	DW	01H
	DW	03H
	DW	07H
	DW	0fH
	DW	05H
	DW	03H
	DW	02H
	DW	05H
	DW	03H
	DW	09H
	DW	0bH
	DW	04H
	DW	02H
	DW	016H
	DW	01H
	DW	06H
	DW	03H
	DW	08H
	DW	07H
	DW	01H
	DW	04H
	DW	01cH
	DW	04H
	DW	010H
	DW	03H
	DW	03H
	DW	019H
	DW	04H
	DW	04H
	DW	01bH
	DW	01bH
	DW	01H
	DW	04H
	DW	01H
	DW	02H
	DW	02H
	DW	07H
	DW	01H
	DW	03H
	DW	05H
	DW	02H
	DW	01cH
	DW	08H
	DW	02H
	DW	0eH
	DW	01H
	DW	08H
	DW	06H
	DW	010H
	DW	019H
	DW	03H
	DW	03H
	DW	03H
	DW	0eH
	DW	03H
	DW	03H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	04H
	DW	06H
	DW	03H
	DW	08H
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	03H
	DW	06H
	DW	0aH
	DW	06H
	DW	02H
	DW	03H
	DW	012H
	DW	03H
	DW	02H
	DW	05H
	DW	05H
	DW	04H
	DW	03H
	DW	01H
	DW	05H
	DW	02H
	DW	05H
	DW	04H
	DW	017H
	DW	07H
	DW	06H
	DW	0cH
	DW	06H
	DW	04H
	DW	011H
	DW	0bH
	DW	09H
	DW	05H
	DW	01H
	DW	01H
	DW	0aH
	DW	05H
	DW	0cH
	DW	01H
	DW	01H
	DW	0bH
	DW	01aH
	DW	021H
	DW	07H
	DW	03H
	DW	06H
	DW	01H
	DW	011H
	DW	07H
	DW	01H
	DW	05H
	DW	0cH
	DW	01H
	DW	0bH
	DW	02H
	DW	04H
	DW	01H
	DW	08H
	DW	0eH
	DW	011H
	DW	017H
	DW	01H
	DW	02H
	DW	01H
	DW	07H
	DW	08H
	DW	010H
	DW	0bH
	DW	09H
	DW	06H
	DW	05H
	DW	02H
	DW	06H
	DW	04H
	DW	010H
	DW	02H
	DW	08H
	DW	0eH
	DW	01H
	DW	0bH
	DW	08H
	DW	09H
	DW	01H
	DW	01H
	DW	01H
	DW	09H
	DW	019H
	DW	04H
	DW	0bH
	DW	013H
	DW	07H
	DW	02H
	DW	0fH
	DW	02H
	DW	0cH
	DW	08H
	DW	034H
	DW	07H
	DW	05H
	DW	013H
	DW	02H
	DW	010H
	DW	04H
	DW	024H
	DW	08H
	DW	01H
	DW	010H
	DW	08H
	DW	018H
	DW	01aH
	DW	04H
	DW	06H
	DW	02H
	DW	09H
	DW	05H
	DW	04H
	DW	024H
	DW	03H
	DW	01cH
	DW	0cH
	DW	019H
	DW	0fH
	DW	025H
	DW	01bH
	DW	011H
	DW	0cH
	DW	03bH
	DW	026H
	DW	05H
	DW	020H
	DW	07fH
	DW	01H
	DW	02H
	DW	09H
	DW	011H
	DW	0eH
	DW	04H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	08H
	DW	0bH
	DW	032H
	DW	04H
	DW	0eH
	DW	02H
	DW	013H
	DW	010H
	DW	04H
	DW	011H
	DW	05H
	DW	04H
	DW	05H
	DW	01aH
	DW	0cH
	DW	02dH
	DW	02H
	DW	017H
	DW	02dH
	DW	068H
	DW	01eH
	DW	0cH
	DW	08H
	DW	03H
	DW	0aH
	DW	02H
	DW	02H
	DW	03H
	DW	03H
	DW	01H
	DW	04H
	DW	014H
	DW	07H
	DW	02H
	DW	09H
	DW	06H
	DW	0fH
	DW	02H
	DW	014H
	DW	01H
	DW	03H
	DW	010H
	DW	04H
	DW	0bH
	DW	0fH
	DW	06H
	DW	086H
	DW	02H
	DW	05H
	DW	03bH
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	09H
	DW	011H
	DW	03H
	DW	01aH
	DW	089H
	DW	0aH
	DW	0d3H
	DW	03bH
	DW	01H
	DW	02H
	DW	04H
	DW	01H
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	06H
	DW	02H
	DW	03H
	DW	01H
	DW	01H
	DW	02H
	DW	03H
	DW	02H
	DW	03H
	DW	01H
	DW	03H
	DW	04H
	DW	04H
	DW	02H
	DW	03H
	DW	03H
	DW	01H
	DW	04H
	DW	03H
	DW	01H
	DW	07H
	DW	02H
	DW	02H
	DW	03H
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	03H
	DW	03H
	DW	02H
	DW	02H
	DW	03H
	DW	02H
	DW	01H
	DW	03H
	DW	0eH
	DW	06H
	DW	01H
	DW	03H
	DW	02H
	DW	09H
	DW	06H
	DW	0fH
	DW	01bH
	DW	09H
	DW	022H
	DW	091H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	03H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	03H
	DW	05H
	DW	08H
	DW	03H
	DW	05H
	DW	02H
	DW	04H
	DW	01H
	DW	03H
	DW	02H
	DW	02H
	DW	02H
	DW	0cH
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	0aH
	DW	04H
	DW	05H
	DW	01H
	DW	014H
	DW	04H
	DW	010H
	DW	01H
	DW	0fH
	DW	09H
	DW	05H
	DW	0cH
	DW	02H
	DW	09H
	DW	02H
	DW	05H
	DW	04H
	DW	02H
	DW	01aH
	DW	013H
	DW	07H
	DW	01H
	DW	01aH
	DW	04H
	DW	01eH
	DW	0cH
	DW	0fH
	DW	02aH
	DW	01H
	DW	06H
	DW	08H
	DW	0acH
	DW	01H
	DW	01H
	DW	04H
	DW	02H
	DW	01H
	DW	01H
	DW	0bH
	DW	02H
	DW	02H
	DW	04H
	DW	02H
	DW	01H
	DW	02H
	DW	01H
	DW	0aH
	DW	08H
	DW	01H
	DW	02H
	DW	01H
	DW	04H
	DW	05H
	DW	01H
	DW	02H
	DW	05H
	DW	01H
	DW	08H
	DW	04H
	DW	01H
	DW	03H
	DW	04H
	DW	02H
	DW	01H
	DW	06H
	DW	02H
	DW	01H
	DW	03H
	DW	04H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	0cH
	DW	05H
	DW	07H
	DW	02H
	DW	04H
	DW	03H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	03H
	DW	06H
	DW	01H
	DW	02H
	DW	02H
	DW	03H
	DW	03H
	DW	03H
	DW	02H
	DW	01H
	DW	02H
	DW	0cH
	DW	0eH
	DW	0bH
	DW	06H
	DW	06H
	DW	04H
	DW	0cH
	DW	02H
	DW	08H
	DW	01H
	DW	07H
	DW	0aH
	DW	01H
	DW	023H
	DW	07H
	DW	04H
	DW	0dH
	DW	0fH
	DW	04H
	DW	03H
	DW	017H
	DW	015H
	DW	01cH
	DW	034H
	DW	05H
	DW	01aH
	DW	05H
	DW	06H
	DW	01H
	DW	07H
	DW	0aH
	DW	02H
	DW	07H
	DW	035H
	DW	03H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	02H
	DW	0a3H
	DW	0214H
	DW	01H
	DW	0aH
	DW	0bH
	DW	01H
	DW	03H
	DW	03H
	DW	04H
	DW	08H
	DW	02H
	DW	08H
	DW	06H
	DW	02H
	DW	02H
	DW	017H
	DW	016H
	DW	04H
	DW	02H
	DW	02H
	DW	04H
	DW	02H
	DW	01H
	DW	03H
	DW	01H
	DW	03H
	DW	03H
	DW	05H
	DW	09H
	DW	08H
	DW	02H
	DW	01H
	DW	02H
	DW	08H
	DW	01H
	DW	0aH
	DW	02H
	DW	0cH
	DW	015H
	DW	014H
	DW	0fH
	DW	069H
	DW	02H
	DW	03H
	DW	01H
	DW	01H
	DW	03H
	DW	02H
	DW	03H
	DW	01H
	DW	01H
	DW	02H
	DW	05H
	DW	01H
	DW	04H
	DW	0fH
	DW	0bH
	DW	013H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	05H
	DW	04H
	DW	05H
	DW	01H
	DW	01H
	DW	02H
	DW	05H
	DW	03H
	DW	05H
	DW	0cH
	DW	01H
	DW	02H
	DW	05H
	DW	01H
	DW	0bH
	DW	01H
	DW	01H
	DW	0fH
	DW	09H
	DW	01H
	DW	04H
	DW	05H
	DW	03H
	DW	01aH
	DW	08H
	DW	02H
	DW	01H
	DW	03H
	DW	01H
	DW	01H
	DW	0fH
	DW	013H
	DW	02H
	DW	0cH
	DW	01H
	DW	02H
	DW	05H
	DW	02H
	DW	07H
	DW	02H
	DW	013H
	DW	02H
	DW	014H
	DW	06H
	DW	01aH
	DW	07H
	DW	05H
	DW	02H
	DW	02H
	DW	07H
	DW	022H
	DW	015H
	DW	0dH
	DW	046H
	DW	02H
	DW	080H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	03H
	DW	02H
	DW	02H
	DW	02H
	DW	0fH
	DW	01H
	DW	04H
	DW	01H
	DW	03H
	DW	04H
	DW	02aH
	DW	0aH
	DW	06H
	DW	01H
	DW	031H
	DW	055H
	DW	08H
	DW	01H
	DW	02H
	DW	01H
	DW	01H
	DW	04H
	DW	04H
	DW	02H
	DW	03H
	DW	06H
	DW	01H
	DW	05H
	DW	07H
	DW	04H
	DW	03H
	DW	0d3H
	DW	04H
	DW	01H
	DW	02H
	DW	01H
	DW	02H
	DW	05H
	DW	01H
	DW	02H
	DW	04H
	DW	02H
	DW	02H
	DW	06H
	DW	05H
	DW	06H
	DW	0aH
	DW	03H
	DW	04H
	DW	030H
	DW	064H
	DW	06H
	DW	02H
	DW	010H
	DW	0128H
	DW	05H
	DW	01bH
	DW	0183H
	DW	02H
	DW	02H
	DW	03H
	DW	07H
	DW	010H
	DW	08H
	DW	05H
	DW	026H
	DW	0fH
	DW	027H
	DW	015H
	DW	09H
	DW	0aH
	DW	03H
	DW	07H
	DW	03bH
	DW	0dH
	DW	01bH
	DW	015H
	DW	02fH
	DW	05H
	DW	015H
	DW	06H
CONST	ENDS
;	COMDAT ?ranges@?1??GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ@4QBGB
CONST	SEGMENT
?ranges@?1??GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ@4QBGB DW 020H ; `ImFontAtlas::GetGlyphRangesChineseFull'::`2'::ranges
	DW	0ffH
	DW	02000H
	DW	0206fH
	DW	03000H
	DW	030ffH
	DW	031f0H
	DW	031ffH
	DW	0ff00H
	DW	0ffefH
	DW	04e00H
	DW	09fafH
	DW	00H
CONST	ENDS
;	COMDAT ?ranges@?1??GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ@4QBGB
CONST	SEGMENT
?ranges@?1??GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ@4QBGB DW 020H ; `ImFontAtlas::GetGlyphRangesKorean'::`2'::ranges
	DW	0ffH
	DW	03131H
	DW	03163H
	DW	0ac00H
	DW	0d7a3H
	DW	00H
CONST	ENDS
;	COMDAT ?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB
CONST	SEGMENT
?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB DW 020H ; `ImFontAtlas::GetGlyphRangesDefault'::`2'::ranges
	DW	0ffH
	DW	00H
CONST	ENDS
;	COMDAT ??_C@_1EA@GJDLMPMC@?$AAr?$AA?4?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn@
CONST	SEGMENT
??_C@_1EA@GJDLMPMC@?$AAr?$AA?4?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn@ DB 'r'
	DB	00H, '.', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, '-', 00H
	DB	'>', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'r', 00H, 'A', 00H, 't', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'a', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@OOPIKMMI@?$AAr?$AA?4?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$CG?$AA?$CG@
CONST	SEGMENT
??_C@_1DM@OOPIKMMI@?$AAr?$AA?4?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$CG?$AA?$CG@ DB 'r'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '2', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'r', 00H, '.', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '2', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@KMJKJDJG@?$AAr?$AA?4?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAF?$AAO?$AAN?$AAT@
CONST	SEGMENT
??_C@_1MG@KMJKJDJG@?$AAr?$AA?4?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAF?$AAO?$AAN?$AAT@ DB 'r'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'O', 00H, 'N'
	DB	00H, 'T', 00H, '_', 00H, 'A', 00H, 'T', 00H, 'L', 00H, 'A', 00H
	DB	'S', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'F', 00H, 'A', 00H, 'U'
	DB	00H, 'L', 00H, 'T', 00H, '_', 00H, 'T', 00H, 'E', 00H, 'X', 00H
	DB	'_', 00H, 'D', 00H, 'A', 00H, 'T', 00H, 'A', 00H, '_', 00H, 'W'
	DB	00H, '_', 00H, 'H', 00H, 'A', 00H, 'L', 00H, 'F', 00H, ' ', 00H
	DB	'*', 00H, ' ', 00H, '2', 00H, ' ', 00H, '+', 00H, ' ', 00H, '1'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'r', 00H, '.', 00H
	DB	'H', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'O', 00H, 'N', 00H
	DB	'T', 00H, '_', 00H, 'A', 00H, 'T', 00H, 'L', 00H, 'A', 00H, 'S'
	DB	00H, '_', 00H, 'D', 00H, 'E', 00H, 'F', 00H, 'A', 00H, 'U', 00H
	DB	'L', 00H, 'T', 00H, '_', 00H, 'T', 00H, 'E', 00H, 'X', 00H, '_'
	DB	00H, 'D', 00H, 'A', 00H, 'T', 00H, 'A', 00H, '_', 00H, 'H', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MDHNDFCJ@?$AAr?$AA?4?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ@
CONST	SEGMENT
??_C@_1BK@MDHNDFCJ@?$AAr?$AA?4?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ@ DB 'r'
	DB	00H, '.', 00H, 'I', 00H, 's', 00H, 'P', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, 'e', 00H, 'd', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@LKIOFBD@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAP?$AAi?$AAx?$AAe?$AAl@
CONST	SEGMENT
??_C@_1DI@LKIOFBD@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAP?$AAi?$AAx?$AAe?$AAl@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'a', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'T', 00H, 'e', 00H, 'x', 00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e'
	DB	00H, 'l', 00H, 's', 00H, 'A', 00H, 'l', 00H, 'p', 00H, 'h', 00H
	DB	'a', 00H, '8', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@CIPOCJML@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAu?$AAs?$AAt?$AAo?$AAm?$AAR?$AAe@
CONST	SEGMENT
??_C@_1DK@CIPOCJML@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAu?$AAs?$AAt?$AAo?$AAm?$AAR?$AAe@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'a', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'C', 00H, 'u', 00H, 's', 00H, 't', 00H, 'o', 00H, 'm', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'd', 00H, 's', 00H
	DB	'[', 00H, '0', 00H, ']', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1KE@CBAIECN@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAw@
CONST	SEGMENT
??_C@_1KE@CBAIECN@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAw@ DB 'p'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 's', 00H, '[', 00H, 'i', 00H, ']', 00H, '.'
	DB	00H, 'w', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 's', 00H, '[', 00H, 'i', 00H, ']', 00H, '.', 00H
	DB	'W', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'p', 00H, 'a', 00H, 'c', 00H, 'k', 00H
	DB	'_', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 's', 00H, '['
	DB	00H, 'i', 00H, ']', 00H, '.', 00H, 'h', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '_'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 's', 00H, '[', 00H
	DB	'i', 00H, ']', 00H, '.', 00H, 'H', 00H, 'e', 00H, 'i', 00H, 'g'
	DB	00H, 'h', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@POMOOFJC@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe@
CONST	SEGMENT
??_C@_1CK@POMOOFJC@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe@ DB 'u'
	DB	00H, 's', 00H, 'e', 00H, 'r', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 's', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '1', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@FMMHMDCM@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CB?$AA?$DN@
CONST	SEGMENT
??_C@_1CE@FMMHMDCM@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CB?$AA?$DN@ DB 'p'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@ENBGOGEF@?$AAg?$AAl?$AAy?$AAp?$AAh?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA_?$AAi?$AAn?$AA_@
CONST	SEGMENT
??_C@_1DC@ENBGOGEF@?$AAg?$AAl?$AAy?$AAp?$AAh?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA_?$AAi?$AAn?$AA_@ DB 'g'
	DB	00H, 'l', 00H, 'y', 00H, 'p', 00H, 'h', 00H, '_', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, '_', 00H, 'i', 00H, 'n'
	DB	00H, '_', 00H, 'f', 00H, 'o', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJGKHCEN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AAL@
CONST	SEGMENT
??_C@_1FO@GJGKHCEN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AAL@ DB 's'
	DB	00H, 'r', 00H, 'c', 00H, '_', 00H, 't', 00H, 'm', 00H, 'p', 00H
	DB	'.', 00H, 'G', 00H, 'l', 00H, 'y', 00H, 'p', 00H, 'h', 00H, 's'
	DB	00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 's', 00H, 'r', 00H, 'c', 00H, '_', 00H, 't', 00H, 'm', 00H
	DB	'p', 00H, '.', 00H, 'G', 00H, 'l', 00H, 'y', 00H, 'p', 00H, 'h'
	DB	00H, 's', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@MENENCJI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1JA@MENENCJI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5@ DB 'f'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 'o', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, '>', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'"', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'D', 00H, 'a'
	DB	00H, 't', 00H, 'a', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'r', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, ',', 00H, ' ', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'N', 00H, 'o'
	DB	00H, ' ', 00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, 'b', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 'd', 00H, '.', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@NKKOCLPN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAD?$AAs?$AAt?$AAI?$AAn?$AAd?$AAe@
CONST	SEGMENT
??_C@_1CO@NKKOCLPN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAD?$AAs?$AAt?$AAI?$AAn?$AAd?$AAe@ DB 's'
	DB	00H, 'r', 00H, 'c', 00H, '_', 00H, 't', 00H, 'm', 00H, 'p', 00H
	DB	'.', 00H, 'D', 00H, 's', 00H, 't', 00H, 'I', 00H, 'n', 00H, 'd'
	DB	00H, 'e', 00H, 'x', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'-', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1KE@NPGLPIC@?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1KE@NPGLPIC@?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'c'
	DB	00H, 'f', 00H, 'g', 00H, '.', 00H, 'D', 00H, 's', 00H, 't', 00H
	DB	'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '(', 00H, '!', 00H, 'c', 00H, 'f', 00H, 'g', 00H
	DB	'.', 00H, 'D', 00H, 's', 00H, 't', 00H, 'F', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, '-', 00H, '>', 00H, 'I', 00H, 's', 00H, 'L', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'd', 00H, '(', 00H, ')'
	DB	00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'c', 00H, 'f', 00H
	DB	'g', 00H, '.', 00H, 'D', 00H, 's', 00H, 't', 00H, 'F', 00H, 'o'
	DB	00H, 'n', 00H, 't', 00H, '-', 00H, '>', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, 'A', 00H, 't', 00H, 'l', 00H, 'a', 00H, 's', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@BBHAKCJP@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAD?$AAa@
CONST	SEGMENT
??_C@_1DG@BBHAKCJP@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAD?$AAa@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'a', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'g', 00H, 'D'
	DB	00H, 'a', 00H, 't', 00H, 'a', 00H, '.', 00H, 'S', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@OOJMDEAG@?$AAC?$AAu?$AAs?$AAt?$AAo?$AAm?$AAR?$AAe?$AAc?$AAt?$AAI?$AAd?$AAs?$AA?$FL?$AA0@
CONST	SEGMENT
??_C@_1CO@OOJMDEAG@?$AAC?$AAu?$AAs?$AAt?$AAo?$AAm?$AAR?$AAe?$AAc?$AAt?$AAI?$AAd?$AAs?$AA?$FL?$AA0@ DB 'C'
	DB	00H, 'u', 00H, 's', 00H, 't', 00H, 'o', 00H, 'm', 00H, 'R', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'I', 00H, 'd', 00H, 's', 00H, '['
	DB	00H, '0', 00H, ']', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'-', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@DEJIAPCP@?$AAr?$AAe?$AAc?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI@
CONST	SEGMENT
??_C@_1CC@DEJIAPCP@?$AAr?$AAe?$AAc?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI@ DB 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, '-', 00H, '>', 00H, 'I', 00H
	DB	's', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 'd'
	DB	00H, '(', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@CMBJAGBP@?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG@
CONST	SEGMENT
??_C@_1DM@CMBJAGBP@?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG@ DB 'T'
	DB	00H, 'e', 00H, 'x', 00H, 'W', 00H, 'i', 00H, 'd', 00H, 't', 00H
	DB	'h', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'H', 00H
	DB	'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@PBFICKNN@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BE@PBFICKNN@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'f'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@CAIIJEKF@?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAh@
CONST	SEGMENT
??_C@_1DO@CAIIJEKF@?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAh@ DB 'h'
	DB	00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'h', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '0', 00H, 'x', 00H, 'F'
	DB	00H, 'F', 00H, 'F', 00H, 'F', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@GHLOFHKF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAi@
CONST	SEGMENT
??_C@_1DK@GHLOFHKF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAi@ DB 'w'
	DB	00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'w'
	DB	00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 'x', 00H, 'F', 00H, 'F', 00H, 'F'
	DB	00H, 'F', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa@
CONST	SEGMENT
??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa@ DB 'f'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 'c', 00H, 'f', 00H
	DB	'g', 00H, '.', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'D'
	DB	00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EPCGLJHG@?$CFs?0?5?$CF?40fpx@
CONST	SEGMENT
??_C@_0L@EPCGLJHG@?$CFs?0?5?$CF?40fpx@ DB '%s, %.0fpx', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@KCPDJPKE@?$AA?$CI?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn@
CONST	SEGMENT
??_C@_1EG@KCPDJPKE@?$AA?$CI?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn@ DB '('
	DB	00H, '0', 00H, ')', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'"', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'l', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '!', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx@
CONST	SEGMENT
??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx@ DB 'ProggyClean.ttf, %dpx', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HI@KOOOLAEJ@?$AA?$CB?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5@
CONST	SEGMENT
??_C@_1HI@KOOOLAEJ@?$AA?$CB?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5@ DB '!'
	DB	00H, 'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 's', 00H, '.', 00H
	DB	'e', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, '(', 00H, ')'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'C', 00H
	DB	'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'u'
	DB	00H, 's', 00H, 'e', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' '
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H
	DB	'e', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't'
	DB	00H, ' ', 00H, 'f', 00H, 'o', 00H, 'n', 00H, 't', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@LEOIHPJH@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAS?$AAi?$AAz?$AAe?$AAP@
CONST	SEGMENT
??_C@_1DI@LEOIHPJH@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAS?$AAi?$AAz?$AAe?$AAP@ DB 'f'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 'c', 00H, 'f', 00H
	DB	'g', 00H, '-', 00H, '>', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, 'P', 00H, 'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 's', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H, 'f'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@FAHJAOLI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AAD@
CONST	SEGMENT
??_C@_1GM@FAHJAOLI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AAD@ DB 'f'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 'c', 00H, 'f', 00H
	DB	'g', 00H, '-', 00H, '>', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'f', 00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 'c', 00H
	DB	'f', 00H, 'g', 00H, '-', 00H, '>', 00H, 'F', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
CONST	SEGMENT
??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@ DB '!'
	DB	00H, 'L', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'C', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'm', 00H
	DB	'o', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'y', 00H, ' ', 00H, 'a'
	DB	00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'F', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	' ', 00H, 'b', 00H, 'e', 00H, 't', 00H, 'w', 00H, 'e', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, 'N', 00H, 'e', 00H, 'w', 00H, 'F', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'E', 00H, 'n', 00H
	DB	'd', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '/'
	DB	00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'(', 00H, ')', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA@@3QAY02$$CBUImVec2@@A DD 000000000r ; 0 ; FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA
	DD	040400000r			; 3
	DD	041400000r			; 12
	DD	041980000r			; 19
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	041500000r			; 13
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	041800000r			; 16
	DD	03f800000r			; 1
	DD	041000000r			; 8
	DD	041f80000r			; 31
	DD	000000000r			; 0
	DD	041b80000r			; 23
	DD	041b80000r			; 23
	DD	041300000r			; 11
	DD	041300000r			; 11
	DD	041a80000r			; 21
	DD	000000000r			; 0
	DD	041100000r			; 9
	DD	041b80000r			; 23
	DD	040800000r			; 4
	DD	041300000r			; 11
	DD	0425c0000r			; 55
	DD	041900000r			; 18
	DD	041b80000r			; 23
	DD	041100000r			; 9
	DD	041300000r			; 11
	DD	040800000r			; 4
	DD	042920000r			; 73
	DD	000000000r			; 0
	DD	041880000r			; 17
	DD	041880000r			; 17
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	0425c0000r			; 55
	DD	000000000r			; 0
	DD	041880000r			; 17
	DD	041880000r			; 17
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	042b60000r			; 91
	DD	000000000r			; 0
	DD	041880000r			; 17
	DD	041b00000r			; 22
	DD	040a00000r			; 5
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
_DATA	ENDS
;	COMDAT ??_C@_1DC@ILGGLBID@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx@
CONST	SEGMENT
??_C@_1DC@ILGGLBID@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx@ DB 'i'
	DB	00H, 'd', 00H, 'x', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'i', 00H, 'd'
	DB	00H, 'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, '_', 00H, 'C', 00H
	DB	'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAE@LAENHIMB@?$AA_?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1BAE@LAENHIMB@?$AA_?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@ DB '_'
	DB	00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '_', 00H, 'C', 00H, 'o', 00H
	DB	'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '<', 00H, '=', 00H, ' '
	DB	00H, '1', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H
	DB	'N', 00H, 'e', 00H, 's', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'e', 00H
	DB	'l', 00H, ' ', 00H, 's', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 't'
	DB	00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'i', 00H
	DB	's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 's'
	DB	00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, '.', 00H, ' ', 00H, 'P', 00H, 'l', 00H, 'e'
	DB	00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'u', 00H, 's', 00H
	DB	'e', 00H, ' ', 00H, 's', 00H, 'e', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 's'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'I', 00H, 'm', 00H
	DB	'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 'L', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 'S', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 't', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '.', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@DGBHKFGF@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr@
CONST	SEGMENT
??_C@_1GM@DGBHKFGF@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr@ DB 'f'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, '-', 00H, '>', 00H, 'C', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	'-', 00H, '>', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 'I', 00H, 'D'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '_', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'I'
	DB	00H, 'd', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H
	DB	'.', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '(', 00H, ')'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@CKLENJON@?$AA_?$AAT?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AAI?$AAd?$AAS?$AAt?$AAa?$AAc?$AAk@
CONST	SEGMENT
??_C@_1DC@CKLENJON@?$AA_?$AAT?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AAI?$AAd?$AAS?$AAt?$AAa?$AAc?$AAk@ DB '_'
	DB	00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'e', 00H, 'I', 00H, 'd', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c'
	DB	00H, 'k', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@MJAOFGMF@?$AA_?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe?$AAc?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4@
CONST	SEGMENT
??_C@_1DA@MJAOFGMF@?$AA_?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe?$AAc?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4@ DB '_'
	DB	00H, 'C', 00H, 'l', 00H, 'i', 00H, 'p', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k'
	DB	00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@MAEAJCLC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe@
CONST	SEGMENT
??_C@_1LC@MAEAJCLC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe@ DB 'd'
	DB	00H, 'r', 00H, 'a', 00H, 'w', 00H, '_', 00H, 'c', 00H, 'm', 00H
	DB	'd', 00H, '.', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'p', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'x', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, '_', 00H, 'c', 00H, 'm', 00H, 'd', 00H, '.', 00H, 'C', 00H
	DB	'l', 00H, 'i', 00H, 'p', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, '.', 00H, 'z', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, '_', 00H, 'c', 00H, 'm'
	DB	00H, 'd', 00H, '.', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'p', 00H
	DB	'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'y', 00H, ' '
	DB	00H, '<', 00H, '=', 00H, ' ', 00H, 'd', 00H, 'r', 00H, 'a', 00H
	DB	'w', 00H, '_', 00H, 'c', 00H, 'm', 00H, 'd', 00H, '.', 00H, 'C'
	DB	00H, 'l', 00H, 'i', 00H, 'p', 00H, 'R', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, '.', 00H, 'w', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
CONST	SEGMENT
??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ DB 'E'
	DB	00H, ':', 00H, '/', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 's', 00H
	DB	'/', 00H, 'o', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'n', 00H, 'u'
	DB	00H, 't', 00H, '/', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '/', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H, 'i'
	DB	00H, '_', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, '.', 00H
	DB	'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@LAPBLJ@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$CK?$AAs?$AAt?$AAr?$AAi?$AAd?$AAe@
CONST	SEGMENT
??_C@_1DO@LAPBLJ@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$CK?$AAs?$AAt?$AAr?$AAi?$AAd?$AAe@ DB 'p'
	DB	00H, 'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 's', 00H, '[', 00H
	DB	'i', 00H, '*', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'i', 00H, 'n', 00H, '_', 00H, 'b', 00H
	DB	'y', 00H, 't', 00H, 'e', 00H, 's', 00H, ']', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@BDJAMAMF@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@BDJAMAMF@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 's', 00H, '[', 00H
	DB	'i', 00H, ']', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@PMJHELI@?$AAz?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAc?$AAa?$AAn?$AA_?$AAy@
CONST	SEGMENT
??_C@_1CI@PMJHELI@?$AAz?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAc?$AAa?$AAn?$AA_?$AAy@ DB 'z'
	DB	00H, '-', 00H, '>', 00H, 'e', 00H, 'y', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, 's', 00H, 'c', 00H, 'a', 00H, 'n', 00H, '_'
	DB	00H, 'y', 00H, '_', 00H, 't', 00H, 'o', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@LMAHJHLI@?$AAz?$AA?9?$AA?$DO?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn@
CONST	SEGMENT
??_C@_1BK@LMAHJHLI@?$AAz?$AA?9?$AA?$DO?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn@ DB 'z'
	DB	00H, '-', 00H, '>', 00H, 'd', 00H, 'i', 00H, 'r', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@PHOJNIKI@?$AAf?$AAa?$AAb?$AAs?$AAf?$AA?$CI?$AAa?$AAr?$AAe?$AAa?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CK@PHOJNIKI@?$AAf?$AAa?$AAb?$AAs?$AAf?$AA?$CI?$AAa?$AAr?$AAe?$AAa?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5@ DB 'f'
	DB	00H, 'a', 00H, 'b', 00H, 's', 00H, 'f', 00H, '(', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, ')', 00H, ' ', 00H, '<', 00H, '='
	DB	00H, ' ', 00H, '1', 00H, '.', 00H, '0', 00H, '1', 00H, 'f', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@GDDDMDCC@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl@
CONST	SEGMENT
??_C@_1CE@GDDDMDCC@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl@ DB 'x'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'x', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 'l', 00H, 'e', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@KOIFPDFH@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAy?$AA_?$AAb?$AAo?$AAt?$AAt@
CONST	SEGMENT
??_C@_1EI@KOIFPDFH@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAy?$AA_?$AAb?$AAo?$AAt?$AAt@ DB 'e'
	DB	00H, '-', 00H, '>', 00H, 's', 00H, 'y', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, 'y', 00H, '_', 00H, 'b', 00H, 'o', 00H, 't'
	DB	00H, 't', 00H, 'o', 00H, 'm', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, 'e', 00H, '-', 00H, '>', 00H, 'e', 00H, 'y', 00H, ' '
	DB	00H, '>', 00H, '=', 00H, ' ', 00H, 'y', 00H, '_', 00H, 't', 00H
	DB	'o', 00H, 'p', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MDBOACOJ@?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_?$AAt?$AAo?$AAp@
CONST	SEGMENT
??_C@_1BO@MDBOACOJ@?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_?$AAt?$AAo?$AAp@ DB 'e'
	DB	00H, '-', 00H, '>', 00H, 'e', 00H, 'y', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, 'y', 00H, '_', 00H, 't', 00H, 'o', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@JPMIPNJF@?$AAx?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA0?$AA?5?$AA?$DM@
CONST	SEGMENT
??_C@_1FK@JPMIPNJF@?$AAx?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA0?$AA?5?$AA?$DM@ DB 'x'
	DB	00H, '0', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'x', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'x', 00H, '0', 00H, ' '
	DB	00H, '<', 00H, '=', 00H, ' ', 00H, 'x', 00H, '+', 00H, '1', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'x', 00H, '1', 00H, ' '
	DB	00H, '>', 00H, '=', 00H, ' ', 00H, 'x', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, 'x', 00H, '1', 00H, ' ', 00H, '<', 00H, '='
	DB	00H, ' ', 00H, 'x', 00H, '+', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NILBPPPH@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DM@
CONST	SEGMENT
??_C@_1CK@NILBPPPH@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DM@ DB 'x'
	DB	00H, '1', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'x', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'x', 00H, '1', 00H, ' '
	DB	00H, '<', 00H, '=', 00H, ' ', 00H, 'x', 00H, '+', 00H, '1', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@NGGEAFFG@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1@
CONST	SEGMENT
??_C@_1BE@NGGEAFFG@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1@ DB 'x'
	DB	00H, '1', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'x', 00H
	DB	'+', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@FEPJEPJJ@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx@
CONST	SEGMENT
??_C@_1BA@FEPJEPJJ@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx@ DB 'x', 00H
	DB	'1', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'x', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@FAAMJPKE@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx@
CONST	SEGMENT
??_C@_1BA@FAAMJPKE@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx@ DB 'x', 00H
	DB	'1', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'x', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@DHAKMBPL@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1@
CONST	SEGMENT
??_C@_1BE@DHAKMBPL@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1@ DB 'x'
	DB	00H, '1', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'x', 00H
	DB	'+', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@JGPMADBG@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy@
CONST	SEGMENT
??_C@_1BO@JGPMADBG@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy@ DB 'e'
	DB	00H, '-', 00H, '>', 00H, 's', 00H, 'y', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, 'e', 00H, '-', 00H, '>', 00H, 'e', 00H, 'y'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@ENLNFFAM@?$AAy?$AA0?$AA?5?$AA?$DM?$AA?5?$AAy?$AA1@
CONST	SEGMENT
??_C@_1BA@ENLNFFAM@?$AAy?$AA0?$AA?5?$AA?$DM?$AA?5?$AAy?$AA1@ DB 'y', 00H, '0'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'y', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@EHPNOHML@?$AAz?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1O@EHPNOHML@?$AAz?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'z', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@KABFAMEA@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA_?$AAc?$AAt?$AAx?$AA?4?$AAn?$AAu?$AAm?$AA_@
CONST	SEGMENT
??_C@_1GE@KABFAMEA@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA_?$AAc?$AAt?$AAx?$AA?4?$AAn?$AAu?$AAm?$AA_@ DB 'o'
	DB	00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, '_', 00H
	DB	'c', 00H, 't', 00H, 'x', 00H, '.', 00H, 'n', 00H, 'u', 00H, 'm'
	DB	00H, '_', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, '_', 00H
	DB	'c', 00H, 't', 00H, 'x', 00H, '.', 00H, 'n', 00H, 'u', 00H, 'm'
	DB	00H, '_', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, 's', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@MDABGEPC@?$AA?$CB?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAc?$AAf?$AAf?$AA?4?$AAs?$AAi?$AAz?$AAe@
CONST	SEGMENT
??_C@_1CA@MDABGEPC@?$AA?$CB?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAc?$AAf?$AAf?$AA?4?$AAs?$AAi?$AAz?$AAe@ DB '!'
	DB	00H, 'i', 00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H
	DB	'c', 00H, 'f', 00H, 'f', 00H, '.', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@EBGBJFDE@?$AAu?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAc?$AAo?$AAd?$AAe?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1HA@EBGBJFDE@?$AAu?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAc?$AAo?$AAd?$AAe?$AAp?$AAo?$AAi@ DB 'u'
	DB	00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'_', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, ' ', 00H, '<', 00H, '=', 00H
	DB	' ', 00H, 't', 00H, 't', 00H, 'U', 00H, 'S', 00H, 'H', 00H, 'O'
	DB	00H, 'R', 00H, 'T', 00H, '(', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'd'
	DB	00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'+', 00H, ' ', 00H, '2', 00H, '*', 00H, 'i', 00H, 't', 00H, 'e'
	DB	00H, 'm', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KODIGLGG@maxp@
CONST	SEGMENT
??_C@_04KODIGLGG@maxp@ DB 'maxp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HJGCPIEK@CFF?5@
CONST	SEGMENT
??_C@_04HJGCPIEK@CFF?5@ DB 'CFF ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCFDEHHD@GPOS@
CONST	SEGMENT
??_C@_04PCFDEHHD@GPOS@ DB 'GPOS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HHMMLDJI@kern@
CONST	SEGMENT
??_C@_04HHMMLDJI@kern@ DB 'kern', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04ONMNCIMC@hmtx@
CONST	SEGMENT
??_C@_04ONMNCIMC@hmtx@ DB 'hmtx', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FMPHLIKP@hhea@
CONST	SEGMENT
??_C@_04FMPHLIKP@hhea@ DB 'hhea', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LLIHEPK@glyf@
CONST	SEGMENT
??_C@_04LLIHEPK@glyf@ DB 'glyf', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NEODDMOL@head@
CONST	SEGMENT
??_C@_04NEODDMOL@head@ DB 'head', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DACNFKGE@loca@
CONST	SEGMENT
??_C@_04DACNFKGE@loca@ DB 'loca', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EICJPCEA@cmap@
CONST	SEGMENT
??_C@_04EICJPCEA@cmap@ DB 'cmap', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@PFMEGAIA@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1CI@PFMEGAIA@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAc@ DB 'i'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'i', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@KDMJFGHG@?$AAb?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA8@
CONST	SEGMENT
??_C@_1BC@KDMJFGHG@?$AAb?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA8@ DB 'b'
	DB	00H, '0', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '2', 00H
	DB	'8', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@IJDIOPHB@?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG@
CONST	SEGMENT
??_C@_1DK@IJDIOPHB@?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG@ DB 'o'
	DB	00H, 'f', 00H, 'f', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '1', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'o', 00H, 'f', 00H, 'f', 00H, 's', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '<', 00H, '=', 00H, ' '
	DB	00H, '4', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@EPOLDKHI@?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx?$AA4?$AA0?$AA0?$AA0?$AA0?$AA0@
CONST	SEGMENT
??_C@_1CE@EPOLDKHI@?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx?$AA4?$AA0?$AA0?$AA0?$AA0?$AA0@ DB 's'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '<', 00H, ' ', 00H
	DB	'0', 00H, 'x', 00H, '4', 00H, '0', 00H, '0', 00H, '0', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5@ DB 'n'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '1', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'n', 00H, ' ', 00H, '<', 00H, '='
	DB	00H, ' ', 00H, '4', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
CONST	SEGMENT
??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@ DB '!'
	DB	00H, '(', 00H, 'o', 00H, ' ', 00H, '>', 00H, ' ', 00H, 'b', 00H
	DB	'-', 00H, '>', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' '
	DB	00H, '|', 00H, '|', 00H, ' ', 00H, 'o', 00H, ' ', 00H, '<', 00H
	DB	' ', 00H, '0', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
CONST	SEGMENT
??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ DB 'E'
	DB	00H, ':', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 's', 00H
	DB	'\', 00H, 'o', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'n', 00H, 'u'
	DB	00H, 't', 00H, '\', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '\', 00H, 'i', 00H, 'm', 00H, 's', 00H, 't', 00H, 'b'
	DB	00H, '_', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'e', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@GPDJEJHP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO@
CONST	SEGMENT
??_C@_1FA@GPDJEJHP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO@ DB 'n'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, '-', 00H, '>', 00H, 'n', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, '-', 00H, '>', 00H, 'x', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, 'x', 00H, 'p', 00H, 'o', 00H, 's', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 'd'
	DB	00H, 'e', 00H, '-', 00H, '>', 00H, 'x', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, 'x', 00H, 'p', 00H, 'o', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@MNLKNDNL@?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BE@MNLKNDNL@?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0@ DB 'x'
	DB	00H, 'p', 00H, 'o', 00H, 's', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@LEHAODMI@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CF?$AA?5?$AAc?$AA?9?$AA?$DO?$AAa?$AAl?$AAi?$AAg@
CONST	SEGMENT
??_C@_1CM@LEHAODMI@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CF?$AA?5?$AAc?$AA?9?$AA?$DO?$AAa?$AAl?$AAi?$AAg@ DB 'w'
	DB	00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ' ', 00H, '%', 00H
	DB	' ', 00H, 'c', 00H, '-', 00H, '>', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'g', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@JHJLEEND@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0@
CONST	SEGMENT
??_C@_1BM@JHJLEEND@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0@ DB 'n'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, '-', 00H, '>', 00H, 'x', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'x', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@BDIGDJGP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO@
CONST	SEGMENT
??_C@_1CG@BDIGDJGP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO@ DB 'n'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, '-', 00H, '>', 00H, 'n', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, '-', 00H, '>', 00H, 'x', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, 'x', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@KBODBKOH@?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0@
CONST	SEGMENT
??_C@_1BO@KBODBKOH@?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0@ DB 'f'
	DB	00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'x', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@NNJKMECF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf@
CONST	SEGMENT
??_C@_1EI@NNJKMECF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf@ DB 'w'
	DB	00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 'x', 00H, 'f', 00H, 'f', 00H, 'f'
	DB	00H, 'f', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'h', 00H
	DB	'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '<'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 'x', 00H, 'f', 00H, 'f', 00H
	DB	'f', 00H, 'f', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
CONST	SEGMENT
??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ DB 'E'
	DB	00H, ':', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 's', 00H
	DB	'\', 00H, 'o', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'n', 00H, 'u'
	DB	00H, 't', 00H, '\', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '\', 00H, 'i', 00H, 'm', 00H, 's', 00H, 't', 00H, 'b'
	DB	00H, '_', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'p', 00H
	DB	'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi@
CONST	SEGMENT
??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi@ DB 'n'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, '(', 00H, 'S', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '.', 00H, 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '<', 00H, '<', 00H
	DB	' ', 00H, '5', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@FHOHIDNF@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
CONST	SEGMENT
??_C@_1EO@FHOHIDNF@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ DB 'E'
	DB	00H, ':', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 's', 00H
	DB	'\', 00H, 'o', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'n', 00H, 'u'
	DB	00H, 't', 00H, '\', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '\', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H, 'i'
	DB	00H, '_', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
CONST	SEGMENT
??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ DB 'E'
	DB	00H, ':', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 's', 00H
	DB	'\', 00H, 'o', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'n', 00H, 'u'
	DB	00H, 't', 00H, '\', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '\', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H, 'i'
	DB	00H, '.', 00H, 'h', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stb_adler32@@YAIIPEAEI@Z DD 021H
	DD	imagerel ?stb_adler32@@YAIIPEAEI@Z
	DD	imagerel ?stb_adler32@@YAIIPEAEI@Z+50
	DD	imagerel $unwind$?stb_adler32@@YAIIPEAEI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stb_adler32@@YAIIPEAEI@Z DD 020521H
	DD	023405H
	DD	imagerel ?stb_adler32@@YAIIPEAEI@Z
	DD	imagerel ?stb_adler32@@YAIIPEAEI@Z+50
	DD	imagerel $unwind$?stb_adler32@@YAIIPEAEI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stb_adler32@@YAIIPEAEI@Z DD 030601H
	DD	036406H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stb_decompress_token@@YAPEBEPEBE@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stb__lit@@YAXPEBEI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stb__match@@YAXPEBEI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z DD 021H
	DD	imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z
	DD	imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z+186
	DD	imagerel $unwind$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z DD 061421H
	DD	0af414H
	DD	09e40fH
	DD	08c405H
	DD	imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z
	DD	imagerel ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z+186
	DD	imagerel $unwind$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z DD 060c01H
	DD	0b340cH
	DD	07008320cH
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD 043021H
	DD	065430H
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@Ustbtt_packedchar@@@@QEAAAEAUstbtt_packedchar@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD 043021H
	DD	065430H
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@Ustbrp_rect@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@Ustbrp_rect@@@@QEAAAEAUstbrp_rect@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD 043021H
	DD	065430H
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImFontBuildDstData@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImFontBuildDstData@@@@QEAAAEAUImFontBuildDstData@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD 043321H
	DD	065433H
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImFontBuildSrcData@@@@QEAAAEAUImFontBuildSrcData@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z DD 021H
	DD	imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z
	DD	imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z+44
	DD	imagerel $unwind$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z DD 0c1e21H
	DD	04e41eH
	DD	05d419H
	DD	06c414H
	DD	07740fH
	DD	08640aH
	DD	0d5405H
	DD	imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z
	DD	imagerel ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z+44
	DD	imagerel $unwind$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z DD 030801H
	DD	0f0048208H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GImFontBuildSrcData@@QEAAPEAXI@Z DB 04H
	DB	'6'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GImFontBuildSrcData@@QEAAPEAXI@Z DB 02H
	DB	0eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_GImFontBuildSrcData@@QEAAPEAXI@Z DB 068H
	DD	imagerel $stateUnwindMap$??_GImFontBuildSrcData@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_GImFontBuildSrcData@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImFontBuildSrcData@@QEAAPEAXI@Z DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_GImFontBuildSrcData@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImFontBuildSrcData@@QEAA@XZ DB 04H
	DB	'*'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ImFontBuildSrcData@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImFontBuildSrcData@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1ImFontBuildSrcData@@QEAA@XZ
	DD	imagerel $ip2state$??1ImFontBuildSrcData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImFontBuildSrcData@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImFontBuildSrcData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Decode85@@YAXPEBEPEAE@Z DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stb_decompress@@YAIPEAEPEBEI@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z DB 06H
	DB	01aH
	DB	02H
	DB	01eH
	DB	04H
	DB	'H'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z DB 04H
	DB	0eH
	DD	imagerel __std_terminate
	DB	02eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z
	DD	imagerel $ip2state$??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z DD 019a901H
	DD	07f8a9H
	DD	08e895H
	DD	09d87aH
	DD	0ac861H
	DD	0bb858H
	DD	0ca84fH
	DD	0d9838H
	DD	0e8829H
	DD	0f7824H
	DD	010681dH
	DD	0243419H
	DD	0220119H
	DD	07012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?stbtt__v_prefilter@@YAXPEAEHHHI@Z DD 021H
	DD	imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z
	DD	imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z+76
	DD	imagerel $unwind$?stbtt__v_prefilter@@YAXPEAEHHHI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?stbtt__v_prefilter@@YAXPEAEHHHI@Z DD 061521H
	DD	08d415H
	DD	09540aH
	DD	0113404H
	DD	imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z
	DD	imagerel ?stbtt__v_prefilter@@YAXPEAEHHHI@Z+76
	DD	imagerel $unwind$?stbtt__v_prefilter@@YAXPEAEHHHI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__v_prefilter@@YAXPEAEHHHI@Z DD 061e19H
	DD	0f00b920fH
	DD	0c007e009H
	DD	060047005H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?stbtt__h_prefilter@@YAXPEAEHHHI@Z DD 021H
	DD	imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z
	DD	imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z+71
	DD	imagerel $unwind$?stbtt__h_prefilter@@YAXPEAEHHHI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?stbtt__h_prefilter@@YAXPEAEHHHI@Z DD 081621H
	DD	08d416H
	DD	011740fH
	DD	010640bH
	DD	0f3404H
	DD	imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z
	DD	imagerel ?stbtt__h_prefilter@@YAXPEAEHHHI@Z+71
	DD	imagerel $unwind$?stbtt__h_prefilter@@YAXPEAEHHHI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__h_prefilter@@YAXPEAEHHHI@Z DD 051d19H
	DD	0f00a820eH
	DD	0c006e008H
	DD	05004H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z DD 0a0021H
	DD	079800H
	DD	088800H
	DD	097800H
	DD	0a6800H
	DD	020c400H
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+150
	DD	imagerel $unwind$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z DD 021H
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+150
	DD	imagerel $unwind$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z DD 0a2a21H
	DD	07982aH
	DD	088824H
	DD	09781bH
	DD	0a6813H
	DD	020c408H
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
	DD	imagerel ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z+150
	DD	imagerel $unwind$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z DD 0b1f01H
	DD	06a81fH
	DD	0160116H
	DD	0e00df00fH
	DD	07009d00bH
	DD	050076008H
	DD	03006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z DD 021H
	DD	imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z
	DD	imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z+346
	DD	imagerel $unwind$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z DD 020921H
	DD	08d809H
	DD	imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z
	DD	imagerel ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z+346
	DD	imagerel $unwind$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z DD 0199801H
	DD	06f898H
	DD	07e88dH
	DD	09c883H
	DD	0ab87bH
	DD	0ba872H
	DD	0c9850H
	DD	0d8848H
	DD	0e7840H
	DD	0f6839H
	DD	023641dH
	DD	022341dH
	DD	020011dH
	DD	07016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z DD 021H
	DD	imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z
	DD	imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z+220
	DD	imagerel $unwind$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z DD 020521H
	DD	0a8805H
	DD	imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z
	DD	imagerel ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z+220
	DD	imagerel $unwind$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z DD 0157f01H
	DD	05d87fH
	DD	06c866H
	DD	07b857H
	DD	08a852H
	DD	099849H
	DD	0b7834H
	DD	0c6821H
	DD	01d6413H
	DD	01c3413H
	DD	01a0113H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD 021H
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+304
	DD	imagerel $unwind$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD 021H
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+304
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+315
	DD	imagerel $chain$0$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD 021H
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+315
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+368
	DD	imagerel $chain$1$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD 020821H
	DD	011d408H
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+315
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+368
	DD	imagerel $chain$1$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD 020821H
	DD	010e408H
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+304
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+315
	DD	imagerel $chain$0$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD 020821H
	DD	019c408H
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
	DD	imagerel ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z+304
	DD	imagerel $unwind$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z DD 092219H
	DD	076813H
	DD	012010eH
	DD	07005f007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__sort_edges@@YAXPEAUstbtt__edge@@H@Z DD 041919H
	DD	0c340aH
	DD	07006720aH
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z DD 021H
	DD	imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z
	DD	imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z+15
	DD	imagerel $unwind$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z DD 081921H
	DD	04f419H
	DD	0ae414H
	DD	09740cH
	DD	083405H
	DD	imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z
	DD	imagerel ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z+15
	DD	imagerel $unwind$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z DD 030f01H
	DD	0600b420fH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z DD 021H
	DD	imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z
	DD	imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z+31
	DD	imagerel $unwind$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z DD 020521H
	DD	043405H
	DD	imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z
	DD	imagerel ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z+31
	DD	imagerel $unwind$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z DD 011c19H
	DD	0420dH
	DD	imagerel __GSHandlerCheck
	DD	018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$18$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD 021H
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+30
	DD	imagerel $unwind$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$17$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD 020021H
	DD	05ef400H
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+30
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+34
	DD	imagerel $chain$0$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$16$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD 021H
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+34
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+210
	DD	imagerel $chain$8$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$15$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD 0e5b21H
	DD	027d85bH
	DD	028c849H
	DD	029b837H
	DD	02aa825H
	DD	02c881cH
	DD	02d7810H
	DD	02e6808H
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+34
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+210
	DD	imagerel $chain$8$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD 0103421H
	DD	02b9834H
	DD	05ef42cH
	DD	05fe425H
	DD	060d41eH
	DD	061c417H
	DD	0627411H
	DD	063640aH
	DD	0645404H
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+30
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+34
	DD	imagerel $chain$0$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD 020421H
	DD	0693404H
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
	DD	imagerel ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z+30
	DD	imagerel $unwind$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z DD 021c19H
	DD	065010aH
	DD	imagerel __GSHandlerCheck
	DD	0260H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z DD 021H
	DD	imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z
	DD	imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z+80
	DD	imagerel $unwind$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z DD 0143621H
	DD	05e836H
	DD	04f830H
	DD	06d82aH
	DD	07c824H
	DD	09a81eH
	DD	0a9819H
	DD	0b8814H
	DD	0c780fH
	DD	021540bH
	DD	0203404H
	DD	imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z
	DD	imagerel ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z+80
	DD	imagerel $unwind$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z DD 0b1f01H
	DD	08b81fH
	DD	0d6817H
	DD	0226413H
	DD	01c0113H
	DD	0e00af00cH
	DD	07008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z DD 021H
	DD	imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z
	DD	imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z+181
	DD	imagerel $unwind$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z DD 061a21H
	DD	03a81aH
	DD	049814H
	DD	067805H
	DD	imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z
	DD	imagerel ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z+181
	DD	imagerel $unwind$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z DD 0c3601H
	DD	02b836H
	DD	05882cH
	DD	076817H
	DD	0136412H
	DD	0123412H
	DD	0700bf212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__new_active@@YAPEAUstbtt__active_edge@@PEAUstbtt__hheap@@PEAUstbtt__edge@@HMPEAX@Z DD 081b01H
	DD	02681bH
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z DD 021H
	DD	imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z
	DD	imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z+12
	DD	imagerel $unwind$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z DD 020521H
	DD	043405H
	DD	imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z
	DD	imagerel ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z+12
	DD	imagerel $unwind$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z DD 020021H
	DD	063400H
	DD	imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z
	DD	imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z+43
	DD	imagerel $unwind$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z DD 020521H
	DD	063405H
	DD	imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z
	DD	imagerel ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z+43
	DD	imagerel $unwind$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z DD 040a01H
	DD	07640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__GetGlyphShapeT2@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z DD 091801H
	DD	0166418H
	DD	0155418H
	DD	0143418H
	DD	0120118H
	DD	0e011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z DD 01fab19H
	DD	02a78abH
	DD	022f85fH
	DD	023e857H
	DD	024d84fH
	DD	025c847H
	DD	026b83fH
	DD	027a837H
	DD	028982fH
	DD	029882aH
	DD	02b6825H
	DD	0633420H
	DD	0580120H
	DD	0e010f012H
	DD	0c00cd00eH
	DD	06009700aH
	DD	05008H
	DD	imagerel __GSHandlerCheck
	DD	0210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z DD 0a1801H
	DD	0106418H
	DD	0f5418H
	DD	0e3418H
	DD	0f0149218H
	DD	07010e012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z DD 030c01H
	DD	04680cH
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z DD 021H
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+21
	DD	imagerel $unwind$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z DD 040021H
	DD	037400H
	DD	023400H
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+21
	DD	imagerel $unwind$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z DD 040a21H
	DD	03740aH
	DD	023405H
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
	DD	imagerel ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z+21
	DD	imagerel $unwind$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z DD 010201H
	DD	06002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z DD 01d6701H
	DD	0ae867H
	DD	0bd85fH
	DD	0cc857H
	DD	0db84fH
	DD	0ea847H
	DD	0f983fH
	DD	0108837H
	DD	011782fH
	DD	0126828H
	DD	02f341dH
	DD	026011dH
	DD	0e014f016H
	DD	0c010d012H
	DD	0600d700eH
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z DD 021H
	DD	imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z
	DD	imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z+24
	DD	imagerel $unwind$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z DD 020421H
	DD	03404H
	DD	imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z
	DD	imagerel ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z+24
	DD	imagerel $unwind$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z DD 010401H
	DD	0204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__GetGlyphInfoT2@@YAHPEBUstbtt_fontinfo@@HPEAH111@Z DD 061001H
	DD	0f6410H
	DD	0e3410H
	DD	0700cb210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z DD 0a1c01H
	DD	017341cH
	DD	0f015b21cH
	DD	0d011e013H
	DD	0700dc00fH
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z DD 081201H
	DD	0e5412H
	DD	0d3412H
	DD	0e00e7212H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt_GetFontOffsetForIndex_internal@@YAHPEAEH@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__find_table@@YAIPEAEIPEBD@Z DD 040a01H
	DD	02740aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z DD 0c1c01H
	DD	0e641cH
	DD	0d541cH
	DD	0c341cH
	DD	0f018521cH
	DD	0d014e016H
	DD	07010c012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__cff_index_count@@YAHPEAUstbtt__buf@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z DD 0c5001H
	DD	0b7450H
	DD	0a3449H
	DD	0d6414H
	DD	0c5414H
	DD	0f0105214H
	DD	0c00ce00eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__cff_skip_operand@@YAXPEAUstbtt__buf@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD 021H
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+26
	DD	imagerel $unwind$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD 021H
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+26
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+95
	DD	imagerel $chain$0$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD 020521H
	DD	0bf405H
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+26
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+95
	DD	imagerel $chain$0$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD 020521H
	DD	0a6405H
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
	DD	imagerel ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z+26
	DD	imagerel $unwind$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z DD 060d01H
	DD	0c340dH
	DD	0e009520dH
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z DD 010401H
	DD	02204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__new_buf@@YA?AUstbtt__buf@@PEBX_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__buf_skip@@YAXPEAUstbtt__buf@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbtt__buf_seek@@YAXPEAUstbtt__buf@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_Rasterize DD 0b3a01H
	DD	07783aH
	DD	086822H
	DD	0166413H
	DD	0143413H
	DD	0120113H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$stbtt_GetGlyphBitmapBoxSubpixel DD 021H
	DD	imagerel stbtt_GetGlyphBitmapBoxSubpixel
	DD	imagerel stbtt_GetGlyphBitmapBoxSubpixel+255
	DD	imagerel $unwind$stbtt_GetGlyphBitmapBoxSubpixel
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$stbtt_GetGlyphBitmapBoxSubpixel DD 020821H
	DD	086808H
	DD	imagerel stbtt_GetGlyphBitmapBoxSubpixel
	DD	imagerel stbtt_GetGlyphBitmapBoxSubpixel+255
	DD	imagerel $unwind$stbtt_GetGlyphBitmapBoxSubpixel
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_GetGlyphBitmapBoxSubpixel DD 0d2c01H
	DD	06982cH
	DD	078823H
	DD	0166417H
	DD	0155417H
	DD	0143417H
	DD	0120117H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_GetGlyphBitmapBox DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$stbtt_MakeGlyphBitmapSubpixel DD 021H
	DD	imagerel stbtt_MakeGlyphBitmapSubpixel
	DD	imagerel stbtt_MakeGlyphBitmapSubpixel+52
	DD	imagerel $unwind$stbtt_MakeGlyphBitmapSubpixel
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$stbtt_MakeGlyphBitmapSubpixel DD 040b21H
	DD	026f40bH
	DD	025c404H
	DD	imagerel stbtt_MakeGlyphBitmapSubpixel
	DD	imagerel stbtt_MakeGlyphBitmapSubpixel+52
	DD	imagerel $unwind$stbtt_MakeGlyphBitmapSubpixel
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_MakeGlyphBitmapSubpixel DD 0113401H
	DD	0b9834H
	DD	0c882fH
	DD	0d782aH
	DD	0e6823H
	DD	0273415H
	DD	01e0115H
	DD	0d00ce00eH
	DD	06009700aH
	DD	05008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$stbtt_GetGlyphShape DD 021H
	DD	imagerel stbtt_GetGlyphShape
	DD	imagerel stbtt_GetGlyphShape+45
	DD	imagerel $unwind$stbtt_GetGlyphShape
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$stbtt_GetGlyphShape DD 020821H
	DD	0143408H
	DD	imagerel stbtt_GetGlyphShape
	DD	imagerel stbtt_GetGlyphShape+45
	DD	imagerel $unwind$stbtt_GetGlyphShape
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_GetGlyphShape DD 071201H
	DD	0166412H
	DD	0155412H
	DD	0120112H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_GetGlyphBox DD 081501H
	DD	0107415H
	DD	0f6415H
	DD	0e3415H
	DD	0e011b215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_GetGlyphHMetrics DD 0a1801H
	DD	067418H
	DD	056418H
	DD	045418H
	DD	033418H
	DD	0e016f018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_GetFontVMetrics DD 081401H
	DD	047414H
	DD	03640fH
	DD	02540aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$stbtt_FindGlyphIndex DD 021H
	DD	imagerel stbtt_FindGlyphIndex
	DD	imagerel stbtt_FindGlyphIndex+377
	DD	imagerel $unwind$stbtt_FindGlyphIndex
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$stbtt_FindGlyphIndex DD 020521H
	DD	0af405H
	DD	imagerel stbtt_FindGlyphIndex
	DD	imagerel stbtt_FindGlyphIndex+377
	DD	imagerel $unwind$stbtt_FindGlyphIndex
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_FindGlyphIndex DD 0a1601H
	DD	0c5416H
	DD	0b3416H
	DD	0e0123216H
	DD	0c00ed010H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_GetFontOffsetForIndex DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$15$stbtt_PackFontRangesRenderIntoRects DD 021H
	DD	imagerel stbtt_PackFontRangesRenderIntoRects
	DD	imagerel stbtt_PackFontRangesRenderIntoRects+62
	DD	imagerel $unwind$stbtt_PackFontRangesRenderIntoRects
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$14$stbtt_PackFontRangesRenderIntoRects DD 01e7121H
	DD	0cf871H
	DD	0de860H
	DD	0ed858H
	DD	0fc850H
	DD	010b848H
	DD	011a840H
	DD	0129834H
	DD	013882fH
	DD	014782aH
	DD	0156825H
	DD	02ce41cH
	DD	02dd418H
	DD	02ec414H
	DD	02f640bH
	DD	0353404H
	DD	imagerel stbtt_PackFontRangesRenderIntoRects
	DD	imagerel stbtt_PackFontRangesRenderIntoRects+62
	DD	imagerel $unwind$stbtt_PackFontRangesRenderIntoRects
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_PackFontRangesRenderIntoRects DD 050e01H
	DD	030010eH
	DD	07005f007H
	DD	05004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$stbtt_GetPackedQuad DD 021H
	DD	imagerel stbtt_GetPackedQuad
	DD	imagerel stbtt_GetPackedQuad+118
	DD	imagerel $unwind$stbtt_GetPackedQuad
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$stbtt_GetPackedQuad DD 020521H
	DD	047805H
	DD	imagerel stbtt_GetPackedQuad
	DD	imagerel stbtt_GetPackedQuad+118
	DD	imagerel $unwind$stbtt_GetPackedQuad
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_GetPackedQuad DD 0a3401H
	DD	029834H
	DD	038825H
	DD	0d640fH
	DD	0c340fH
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_PackEnd DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbtt_PackBegin DD 0c1e01H
	DD	0d741eH
	DD	0c641eH
	DD	0b541eH
	DD	0a341eH
	DD	0f01a521eH
	DD	0c016e018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z DD 021H
	DD	imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
	DD	imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z+146
	DD	imagerel $unwind$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z DD 040f21H
	DD	09d40fH
	DD	0a7405H
	DD	imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
	DD	imagerel ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z+146
	DD	imagerel $unwind$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z DD 071701H
	DD	0f013a217H
	DD	0c00fe011H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z DD 021H
	DD	imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z
	DD	imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z+160
	DD	imagerel $unwind$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z DD 020521H
	DD	087405H
	DD	imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z
	DD	imagerel ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z+160
	DD	imagerel $unwind$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z DD 081301H
	DD	0a5413H
	DD	093413H
	DD	0f00f3213H
	DD	0600be00dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$stbrp_init_target DD 021H
	DD	imagerel stbrp_init_target
	DD	imagerel stbrp_init_target+24
	DD	imagerel $unwind$stbrp_init_target
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$stbrp_init_target DD 021H
	DD	imagerel stbrp_init_target+24
	DD	imagerel stbrp_init_target+141
	DD	imagerel $chain$0$stbrp_init_target
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$stbrp_init_target DD 020521H
	DD	027805H
	DD	imagerel stbrp_init_target+24
	DD	imagerel stbrp_init_target+141
	DD	imagerel $chain$0$stbrp_init_target
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$stbrp_init_target DD 020521H
	DD	036805H
	DD	imagerel stbrp_init_target
	DD	imagerel stbrp_init_target+24
	DD	imagerel $unwind$stbrp_init_target
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbrp_init_target DD 0a1801H
	DD	0e6418H
	DD	0d5418H
	DD	0c3418H
	DD	0f0147218H
	DD	07010e012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$stbrp_pack_rects DD 021H
	DD	imagerel stbrp_pack_rects
	DD	imagerel stbrp_pack_rects+20
	DD	imagerel $unwind$stbrp_pack_rects
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$stbrp_pack_rects DD 021H
	DD	imagerel stbrp_pack_rects+20
	DD	imagerel stbrp_pack_rects+105
	DD	imagerel $chain$0$stbrp_pack_rects
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$stbrp_pack_rects DD 041121H
	DD	08d411H
	DD	0105408H
	DD	imagerel stbrp_pack_rects+20
	DD	imagerel stbrp_pack_rects+105
	DD	imagerel $chain$0$stbrp_pack_rects
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$stbrp_pack_rects DD 020521H
	DD	097405H
	DD	imagerel stbrp_pack_rects
	DD	imagerel stbrp_pack_rects+20
	DD	imagerel $unwind$stbrp_pack_rects
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbrp_pack_rects DD 061101H
	DD	0f00d9211H
	DD	0c009e00bH
	DD	030066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z DD 021H
	DD	imagerel $LN18
	DD	imagerel $LN18+41
	DD	imagerel $unwind$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z DD 020521H
	DD	027405H
	DD	imagerel $LN18
	DD	imagerel $LN18+41
	DD	imagerel $unwind$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z DD 010201H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD 021H
	DD	imagerel $LN76+453
	DD	imagerel $LN76+583
	DD	imagerel $chain$3$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD 020821H
	DD	017f408H
	DD	imagerel $LN76+453
	DD	imagerel $LN76+583
	DD	imagerel $chain$3$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD 021H
	DD	imagerel $LN76
	DD	imagerel $LN76+48
	DD	imagerel $unwind$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD 061521H
	DD	068815H
	DD	07780fH
	DD	086808H
	DD	imagerel $LN76
	DD	imagerel $LN76+48
	DD	imagerel $unwind$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z DD 091501H
	DD	0195415H
	DD	0183415H
	DD	0120115H
	DD	0700ce00eH
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z DB 04H
	DB	0f8H
	DB	02H
	DB	0e5H, 0bH
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ
	DB	040H
	DB	03eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z DB 028H
	DD	imagerel $stateUnwindMap$?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z
	DD	imagerel $ip2state$?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z DD 0c2111H
	DD	0f6421H
	DD	0e5421H
	DD	0c3421H
	DD	0f01d5221H
	DD	0d019e01bH
	DD	07015c017H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFontAtlasBuildSetupFont@@YAXPEAUImFontAtlas@@PEAUImFont@@PEAUImFontConfig@@MM@Z DD 081c01H
	DD	02681cH
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFontAtlasBuildInit@@YAXPEAUImFontAtlas@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z DB 018H
	DB	0e9H, 02H
	DB	00H
	DB	0dcH
	DB	02H
	DB	'r'
	DB	04H
	DB	05H, 01bH
	DB	0eH
	DB	':'
	DB	010H
	DB	019H, '4'
	DB	012H
	DB	':'
	DB	010H
	DB	'6'
	DB	014H
	DB	'$'
	DB	016H
	DB	'$'
	DB	018H
	DB	'$'
	DB	01aH
	DB	'&'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z DB 01aH
	DB	0aH
	DD	imagerel ??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ
	DB	0c1H
	DB	04H
	DB	03aH
	DD	imagerel ??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ
	DB	021H
	DB	03H
	DB	070H
	DB	080H
	DB	080H
	DB	090H
	DB	05aH
	DD	imagerel ??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ
	DB	0e1H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ
	DB	01H
	DB	05H
	DB	03eH
	DD	imagerel __std_terminate
	DB	09eH
	DD	imagerel __std_terminate
	DB	03dH
	DB	02H
	DD	imagerel __std_terminate
	DB	0dH
	DB	03H
	DD	imagerel __std_terminate
	DB	07dH
	DB	03H
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z
	DD	imagerel $ip2state$?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z DD 01f6e19H
	DD	026e85dH
	DD	027d855H
	DD	028c84dH
	DD	029b845H
	DD	02aa83dH
	DD	02b9838H
	DD	02c8833H
	DD	02d782eH
	DD	02e682aH
	DD	0677426H
	DD	0666426H
	DD	0653426H
	DD	05e0126H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z
	DD	0252H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z DD 075301H
	DD	08853H
	DD	01781bH
	DD	026816H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z DD 021H
	DD	imagerel $LN56
	DD	imagerel $LN56+152
	DD	imagerel $unwind$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z DD 0104e21H
	DD	0f84eH
	DD	01e849H
	DD	02d843H
	DD	03c83dH
	DD	04b837H
	DD	05a831H
	DD	014741dH
	DD	0173408H
	DD	imagerel $LN56
	DD	imagerel $LN56+152
	DD	imagerel $unwind$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z DD 0a5201H
	DD	069852H
	DD	078834H
	DD	08782cH
	DD	09681fH
	DD	015010aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$13$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD 021H
	DD	imagerel $LN131
	DD	imagerel $LN131+50
	DD	imagerel $unwind$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$12$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD 021H
	DD	imagerel $LN131+50
	DD	imagerel $LN131+261
	DD	imagerel $chain$6$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$11$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD 0aec21H
	DD	02034ecH
	DD	07c82eH
	DD	08b81fH
	DD	09a811H
	DD	0216408H
	DD	imagerel $LN131+50
	DD	imagerel $LN131+261
	DD	imagerel $chain$6$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD 0e3421H
	DD	04f834H
	DD	05e82eH
	DD	06d828H
	DD	0a9822H
	DD	0b8819H
	DD	0c7810H
	DD	0d6808H
	DD	imagerel $LN131
	DD	imagerel $LN131+50
	DD	imagerel $unwind$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z DD 071601H
	DD	0227416H
	DD	01c0116H
	DD	0e008f00aH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderArrowPointingAt@ImGui@@YAXPEAUImDrawList@@UImVec2@@1HI@Z DD 081501H
	DD	0f6415H
	DD	0c3415H
	DD	0e00e7215H
	DD	0500b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD 021H
	DD	imagerel $LN167
	DD	imagerel $LN167+59
	DD	imagerel $unwind$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD 021H
	DD	imagerel $LN167+59
	DD	imagerel $LN167+128
	DD	imagerel $chain$0$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD 080021H
	DD	08b800H
	DD	09a800H
	DD	0c7800H
	DD	0d6800H
	DD	imagerel $LN167+128
	DD	imagerel $LN167+136
	DD	imagerel $chain$1$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD 0c3321H
	DD	08b833H
	DD	09a82aH
	DD	0a9821H
	DD	0c7818H
	DD	0d6810H
	DD	01cf408H
	DD	imagerel $LN167+128
	DD	imagerel $LN167+136
	DD	imagerel $chain$1$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD 020821H
	DD	01de408H
	DD	imagerel $LN167+59
	DD	imagerel $LN167+128
	DD	imagerel $chain$0$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD 020421H
	DD	0247404H
	DD	imagerel $LN167
	DD	imagerel $LN167+59
	DD	imagerel $unwind$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z DD 072419H
	DD	0b8816H
	DD	01e0111H
	DD	030056006H
	DD	05004H
	DD	imagerel __GSHandlerCheck
	DD	078H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderCheckMark@ImGui@@YAXPEAUImDrawList@@UImVec2@@IM@Z DD 0e3601H
	DD	039836H
	DD	04882cH
	DD	05781dH
	DD	066812H
	DD	014340eH
	DD	0700ad20eH
	DD	050086009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z DD 041301H
	DD	0a3413H
	DD	0700f7213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z DD 021H
	DD	imagerel $LN105
	DD	imagerel $LN105+12
	DD	imagerel $unwind$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z DD 041c21H
	DD	016741cH
	DD	01c3408H
	DD	imagerel $LN105+813
	DD	imagerel $LN105+848
	DD	imagerel $chain$8$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z DD 0104c21H
	DD	03d84cH
	DD	04c83aH
	DD	05b82cH
	DD	06a823H
	DD	07981bH
	DD	088813H
	DD	09780bH
	DD	0a6804H
	DD	imagerel $LN105
	DD	imagerel $LN105+12
	DD	imagerel $unwind$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z DD 040c01H
	DD	017010cH
	DD	050046005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$14$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD 021H
	DD	imagerel $LN59
	DD	imagerel $LN59+47
	DD	imagerel $unwind$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$13$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD 021H
	DD	imagerel $LN59+47
	DD	imagerel $LN59+206
	DD	imagerel $chain$4$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$12$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD 0105321H
	DD	07d853H
	DD	08c84dH
	DD	0aa844H
	DD	0b983bH
	DD	0c882bH
	DD	0d781cH
	DD	0e6814H
	DD	01ee408H
	DD	imagerel $LN59+47
	DD	imagerel $LN59+206
	DD	imagerel $chain$4$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD 0a2421H
	DD	05f824H
	DD	06e81eH
	DD	09b818H
	DD	01f540bH
	DD	0203404H
	DD	imagerel $LN59
	DD	imagerel $LN59+47
	DD	imagerel $unwind$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z DD 040c01H
	DD	021010cH
	DD	060047005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@H@@QEAAXAEBH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@H@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@H@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@H@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@H@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@H@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@H@@QEAAAEAHH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@H@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@H@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@H@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@H@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@H@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z DD 021H
	DD	imagerel $LN19
	DD	imagerel $LN19+25
	DD	imagerel $unwind$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z DD 0a2f21H
	DD	02782fH
	DD	036822H
	DD	0c7416H
	DD	0b540cH
	DD	0a3405H
	DD	imagerel $LN19
	DD	imagerel $LN19+25
	DD	imagerel $unwind$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z DD 020601H
	DD	060027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImDrawListSharedData@@QEAA@XZ DD 0e6f01H
	DD	02986fH
	DD	038860H
	DD	04785aH
	DD	056821H
	DD	0f640fH
	DD	0e340fH
	DD	0700bb20fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImBitVector@@QEAA@XZ DB 02H
	DB	01aH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ImBitVector@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImBitVector@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1ImBitVector@@QEAA@XZ
	DD	imagerel $ip2state$??1ImBitVector@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImBitVector@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImBitVector@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetBit@ImBitVector@@QEAAXH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TestBit@ImBitVector@@QEBA_NH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ImBitVector@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Create@ImBitVector@@QEAAXH@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImBezierCalc@@YA?AUImVec2@@AEBU1@000M@Z DD 032201H
	DD	06822H
	DD	02204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z DD 010401H
	DD	02204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GImFont@@QEAAPEAXI@Z DB 06H
	DB	01eH
	DB	02H
	DB	01eH
	DB	04H
	DB	'H'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GImFont@@QEAAPEAXI@Z DB 04H
	DB	0eH
	DD	imagerel __std_terminate
	DB	02eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_GImFont@@QEAAPEAXI@Z DB 068H
	DD	imagerel $stateUnwindMap$??_GImFont@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_GImFont@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImFont@@QEAAPEAXI@Z DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_GImFont@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddRemapChar@ImFont@@QEAAXGG_N@Z DD 021H
	DD	imagerel $LN17
	DD	imagerel $LN17+126
	DD	imagerel $unwind$?AddRemapChar@ImFont@@QEAAXGG_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?AddRemapChar@ImFont@@QEAAXGG_N@Z DD 020521H
	DD	026805H
	DD	imagerel $LN17
	DD	imagerel $LN17+126
	DD	imagerel $unwind$?AddRemapChar@ImFont@@QEAAXGG_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddRemapChar@ImFont@@QEAAXGG_N@Z DD 0c1e01H
	DD	0d741eH
	DD	0c641eH
	DD	0b541eH
	DD	0a341eH
	DD	0f01a521eH
	DD	0c016e018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddGlyph@ImFont@@QEAAXGMMMMMMMMM@Z DD 0a2801H
	DD	027828H
	DD	036821H
	DD	0b640fH
	DD	0a340fH
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?GrowIndex@ImFont@@QEAAXH@Z DD 021H
	DD	imagerel $LN44
	DD	imagerel $LN44+68
	DD	imagerel $unwind$?GrowIndex@ImFont@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?GrowIndex@ImFont@@QEAAXH@Z DD 020021H
	DD	0a6400H
	DD	imagerel $LN44
	DD	imagerel $LN44+68
	DD	imagerel $unwind$?GrowIndex@ImFont@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?GrowIndex@ImFont@@QEAAXH@Z DD 060f21H
	DD	04e40fH
	DD	0a640aH
	DD	085405H
	DD	imagerel $LN44
	DD	imagerel $LN44+68
	DD	imagerel $unwind$?GrowIndex@ImFont@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GrowIndex@ImFont@@QEAAXH@Z DD 030701H
	DD	070034207H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearOutputData@ImFont@@QEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?BuildLookupTable@ImFont@@QEAAXXZ DD 021H
	DD	imagerel $LN103
	DD	imagerel $LN103+22
	DD	imagerel $unwind$?BuildLookupTable@ImFont@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?BuildLookupTable@ImFont@@QEAAXXZ DD 021H
	DD	imagerel $LN103+22
	DD	imagerel $LN103+29
	DD	imagerel $chain$0$?BuildLookupTable@ImFont@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?BuildLookupTable@ImFont@@QEAAXXZ DD 021H
	DD	imagerel $LN103+29
	DD	imagerel $LN103+36
	DD	imagerel $chain$1$?BuildLookupTable@ImFont@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?BuildLookupTable@ImFont@@QEAAXXZ DD 040a21H
	DD	06f40aH
	DD	0fe405H
	DD	imagerel $LN103+29
	DD	imagerel $LN103+36
	DD	imagerel $chain$1$?BuildLookupTable@ImFont@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?BuildLookupTable@ImFont@@QEAAXXZ DD 020521H
	DD	0ed405H
	DD	imagerel $LN103+22
	DD	imagerel $LN103+29
	DD	imagerel $chain$0$?BuildLookupTable@ImFont@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?BuildLookupTable@ImFont@@QEAAXXZ DD 020521H
	DD	0dc405H
	DD	imagerel $LN103
	DD	imagerel $LN103+22
	DD	imagerel $unwind$?BuildLookupTable@ImFont@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BuildLookupTable@ImFont@@QEAAXXZ DD 071301H
	DD	026813H
	DD	070056209H
	DD	050036004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$12$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD 021H
	DD	imagerel $LN90
	DD	imagerel $LN90+182
	DD	imagerel $unwind$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$11$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD 021H
	DD	imagerel $LN90+182
	DD	imagerel $LN90+487
	DD	imagerel $chain$4$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD 021H
	DD	imagerel $LN90+487
	DD	imagerel $LN90+559
	DD	imagerel $chain$6$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD 061921H
	DD	05e819H
	DD	07c80fH
	DD	04f806H
	DD	imagerel $LN90+487
	DD	imagerel $LN90+559
	DD	imagerel $chain$6$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD 041321H
	DD	01df413H
	DD	01f6408H
	DD	imagerel $LN90+182
	DD	imagerel $LN90+487
	DD	imagerel $chain$4$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD 0a5621H
	DD	06d856H
	DD	08b837H
	DD	0b8823H
	DD	0d6813H
	DD	01ee408H
	DD	imagerel $LN90
	DD	imagerel $LN90+182
	DD	imagerel $unwind$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z DD 0d4301H
	DD	09a843H
	DD	0a9837H
	DD	0c782fH
	DD	0200115H
	DD	0c00cd00eH
	DD	05009700aH
	DD	03008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z DD 021H
	DD	imagerel $LN30
	DD	imagerel $LN30+108
	DD	imagerel $unwind$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z DD 061721H
	DD	048817H
	DD	057811H
	DD	066805H
	DD	imagerel $LN30
	DD	imagerel $LN30+108
	DD	imagerel $unwind$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z DD 061301H
	DD	039813H
	DD	010340aH
	DD	07006d20aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD 021H
	DD	imagerel $LN44
	DD	imagerel $LN44+92
	DD	imagerel $unwind$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD 020021H
	DD	010c400H
	DD	imagerel $LN44
	DD	imagerel $LN44+92
	DD	imagerel $unwind$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD 021H
	DD	imagerel $LN44
	DD	imagerel $LN44+92
	DD	imagerel $unwind$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD 020421H
	DD	010c404H
	DD	imagerel $LN44
	DD	imagerel $LN44+92
	DD	imagerel $unwind$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z DD 0123201H
	DD	029832H
	DD	03882aH
	DD	047822H
	DD	05681cH
	DD	0136418H
	DD	0125418H
	DD	0113418H
	DD	0f014b218H
	DD	07010e012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$14$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD 021H
	DD	imagerel $LN62
	DD	imagerel $LN62+23
	DD	imagerel $unwind$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$13$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD 040021H
	DD	068800H
	DD	077800H
	DD	imagerel $LN62
	DD	imagerel $LN62+23
	DD	imagerel $unwind$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$12$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD 060021H
	DD	068800H
	DD	077800H
	DD	086800H
	DD	imagerel $LN62
	DD	imagerel $LN62+23
	DD	imagerel $unwind$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$11$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD 021H
	DD	imagerel $LN62+23
	DD	imagerel $LN62+162
	DD	imagerel $chain$9$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD 020821H
	DD	019e408H
	DD	imagerel $LN62+23
	DD	imagerel $LN62+162
	DD	imagerel $chain$9$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD 0143a21H
	DD	03b83aH
	DD	04a835H
	DD	059830H
	DD	06882bH
	DD	077823H
	DD	08681fH
	DD	012f418H
	DD	018c414H
	DD	0177408H
	DD	0165404H
	DD	imagerel $LN62
	DD	imagerel $LN62+23
	DD	imagerel $unwind$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z DD 040c01H
	DD	013010cH
	DD	030046005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImFont@@QEAA@XZ DB 06H
	DB	012H
	DB	00H
	DB	01eH
	DB	02H
	DB	'H'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ImFont@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImFont@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1ImFont@@QEAA@XZ
	DD	imagerel $ip2state$??1ImFont@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImFont@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImFont@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD 042c21H
	DD	06542cH
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImFontGlyph@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImFontGlyph@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImFontGlyph@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImFontGlyph@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImFontGlyph@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImFontGlyph@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@M@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@M@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@M@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@M@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@M@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD 021H
	DD	imagerel $LN24
	DD	imagerel $LN24+32
	DD	imagerel $unwind$?resize@?$ImVector@M@@QEAAXHAEBM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD 021H
	DD	imagerel $LN24+32
	DD	imagerel $LN24+75
	DD	imagerel $chain$0$?resize@?$ImVector@M@@QEAAXHAEBM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD 020521H
	DD	065405H
	DD	imagerel $LN24+32
	DD	imagerel $LN24+75
	DD	imagerel $chain$0$?resize@?$ImVector@M@@QEAAXHAEBM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD 020521H
	DD	076405H
	DD	imagerel $LN24
	DD	imagerel $LN24+32
	DD	imagerel $unwind$?resize@?$ImVector@M@@QEAAXHAEBM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@M@@QEAAXHAEBM@Z DD 061001H
	DD	097410H
	DD	083410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@M@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@M@@QEAAAEAMH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@M@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@M@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@M@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@M@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@M@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+27
	DD	imagerel $unwind$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD 021H
	DD	imagerel $LN14+27
	DD	imagerel $LN14+78
	DD	imagerel $chain$0$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD 020521H
	DD	065405H
	DD	imagerel $LN14+27
	DD	imagerel $LN14+78
	DD	imagerel $chain$0$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD 020521H
	DD	077405H
	DD	imagerel $LN14
	DD	imagerel $LN14+27
	DD	imagerel $unwind$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+28
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImFontConfig@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImFontConfig@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImFontConfig@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImFontConfig@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImFontConfig@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImFontConfig@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+27
	DD	imagerel $unwind$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD 021H
	DD	imagerel $LN14+27
	DD	imagerel $LN14+75
	DD	imagerel $chain$0$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD 020521H
	DD	066405H
	DD	imagerel $LN14+27
	DD	imagerel $LN14+75
	DD	imagerel $chain$0$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD 020521H
	DD	077405H
	DD	imagerel $LN14
	DD	imagerel $LN14+27
	DD	imagerel $unwind$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z DD 040a01H
	DD	08340aH
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImFontAtlasCustomRect@@@@QEAAAEAUImFontAtlasCustomRect@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+28
	DD	imagerel $unwind$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD 021H
	DD	imagerel $LN14+28
	DD	imagerel $LN14+76
	DD	imagerel $chain$0$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD 020521H
	DD	066405H
	DD	imagerel $LN14+28
	DD	imagerel $LN14+76
	DD	imagerel $chain$0$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD 020521H
	DD	077405H
	DD	imagerel $LN14
	DD	imagerel $LN14+28
	DD	imagerel $unwind$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD 040b01H
	DD	08340bH
	DD	0e007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@PEAUImFont@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@PEAUImFont@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@PEAUImFont@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@PEAUImFont@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@PEAUImFont@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMouseCursorTexData@ImFontAtlas@@QEAA_NHPEAUImVec2@@0QEAU2@1@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcCustomRectUV@ImFontAtlas@@QEBAXPEBUImFontAtlasCustomRect@@PEAUImVec2@@1@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddCustomRectFontGlyph@ImFontAtlas@@QEAAHPEAUImFont@@GHHMAEBUImVec2@@@Z DD 0a1a01H
	DD	0d741aH
	DD	0c641aH
	DD	0b541aH
	DD	0a341aH
	DD	0e016721aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z DD 060f01H
	DD	0b640fH
	DD	0a340fH
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD 021H
	DD	imagerel $LN53
	DD	imagerel $LN53+45
	DD	imagerel $unwind$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD 020021H
	DD	02de400H
	DD	imagerel $LN53+45
	DD	imagerel $LN53+52
	DD	imagerel $chain$0$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD 040021H
	DD	02cf400H
	DD	02de400H
	DD	imagerel $LN53+45
	DD	imagerel $LN53+52
	DD	imagerel $chain$0$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD 021H
	DD	imagerel $LN53+52
	DD	imagerel $LN53+84
	DD	imagerel $chain$3$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD 020421H
	DD	02f7404H
	DD	imagerel $LN53+52
	DD	imagerel $LN53+84
	DD	imagerel $chain$3$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD 061221H
	DD	02cf412H
	DD	02de40bH
	DD	02ec404H
	DD	imagerel $LN53+45
	DD	imagerel $LN53+52
	DD	imagerel $chain$0$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD 020421H
	DD	0303404H
	DD	imagerel $LN53
	DD	imagerel $LN53+45
	DD	imagerel $unwind$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD 042119H
	DD	0310113H
	DD	050046005H
	DD	imagerel __GSHandlerCheck
	DD	0150H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTexDataAsAlpha8@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z DD 082319H
	DD	02d0115H
	DD	0e007f009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck
	DD	0150H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Build@ImFontAtlas@@QEAA_NXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ImFontAtlas@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ClearFonts@ImFontAtlas@@QEAAXXZ DB 06H
	DB	'9', 02H
	DB	02H
	DB	08eH
	DB	04H
	DB	'Z'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ClearFonts@ImFontAtlas@@QEAAXXZ DB 04H
	DB	0eH
	DD	imagerel __std_terminate
	DB	02eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ClearFonts@ImFontAtlas@@QEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?ClearFonts@ImFontAtlas@@QEAAXXZ
	DD	imagerel $ip2state$?ClearFonts@ImFontAtlas@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearFonts@ImFontAtlas@@QEAAXXZ DD 0a1a11H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?ClearFonts@ImFontAtlas@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearTexData@ImFontAtlas@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?ClearInputData@ImFontAtlas@@QEAAXXZ DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+16
	DD	imagerel $unwind$?ClearInputData@ImFontAtlas@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?ClearInputData@ImFontAtlas@@QEAAXXZ DD 042b21H
	DD	06642bH
	DD	077405H
	DD	imagerel $LN66
	DD	imagerel $LN66+16
	DD	imagerel $unwind$?ClearInputData@ImFontAtlas@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearInputData@ImFontAtlas@@QEAAXXZ DD 040a01H
	DD	08340aH
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z DD 0c2f19H
	DD	0166821H
	DD	02f0119H
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck
	DD	0150H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddFontFromMemoryCompressedTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBXHMPEBUImFontConfig@@PEBG@Z DD 0d3219H
	DD	0166824H
	DD	038341cH
	DD	02e011cH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0150H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z DD 0a2b19H
	DD	015681dH
	DD	02d0115H
	DD	0e007f009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddFontFromFileTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z DD 0b2d19H
	DD	017681fH
	DD	0300117H
	DD	0e009f00bH
	DD	07005c007H
	DD	030036004H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	0160H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddFontDefault@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD 052019H
	DD	0303412H
	DD	02c0112H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0150H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD 021H
	DD	imagerel $LN68
	DD	imagerel $LN68+16
	DD	imagerel $unwind$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD 020021H
	DD	0de400H
	DD	imagerel $LN68
	DD	imagerel $LN68+16
	DD	imagerel $unwind$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD 040021H
	DD	0de400H
	DD	0cd400H
	DD	imagerel $LN68
	DD	imagerel $LN68+16
	DD	imagerel $unwind$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD 021H
	DD	imagerel $LN68+16
	DD	imagerel $LN68+324
	DD	imagerel $chain$2$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD 020521H
	DD	04f405H
	DD	imagerel $LN68+16
	DD	imagerel $LN68+324
	DD	imagerel $chain$2$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD 060f21H
	DD	0de40fH
	DD	0cd40aH
	DD	0b5405H
	DD	imagerel $LN68
	DD	imagerel $LN68+16
	DD	imagerel $unwind$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z DD 050a01H
	DD	0c006420aH
	DD	060037004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImFontAtlas@@QEAA@XZ DB 06H
	DB	'X'
	DB	00H
	DB	0aeH
	DB	02H
	DB	'Z'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ImFontAtlas@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImFontAtlas@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1ImFontAtlas@@QEAA@XZ
	DD	imagerel $ip2state$??1ImFontAtlas@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImFontAtlas@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImFontAtlas@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BuildRanges@ImFontGlyphRangesBuilder@@QEAAXPEAU?$ImVector@G@@@Z DD 0a1601H
	DD	0b5416H
	DD	0a3416H
	DD	0f0123216H
	DD	0c00ee010H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z DD 021H
	DD	imagerel $LN27
	DD	imagerel $LN27+26
	DD	imagerel $unwind$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z DD 061321H
	DD	087413H
	DD	07640eH
	DD	065405H
	DD	imagerel $LN27
	DD	imagerel $LN27+26
	DD	imagerel $unwind$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z DD 040b01H
	DD	09340bH
	DD	0e007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddText@ImFontGlyphRangesBuilder@@QEAAXPEBD0@Z DD 0a1b01H
	DD	09741bH
	DD	085413H
	DD	0b340eH
	DD	0f00a320eH
	DD	06006e008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddChar@ImFontGlyphRangesBuilder@@QEAAXG@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetBit@ImFontGlyphRangesBuilder@@QEAAX_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBit@ImFontGlyphRangesBuilder@@QEBA_N_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@I@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@I@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@I@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@I@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@I@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@I@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@I@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@I@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@I@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@I@@QEAAXH@Z DD 043021H
	DD	065430H
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@I@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@I@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@I@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@I@@QEBAAEBIH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@I@@QEAAAEAIH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@I@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@I@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@I@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@I@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@I@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+27
	DD	imagerel $unwind$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z DD 081421H
	DD	0de414H
	DD	0c740fH
	DD	0b640aH
	DD	0a3405H
	DD	imagerel $LN26
	DD	imagerel $LN26+27
	DD	imagerel $unwind$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z DD 040a01H
	DD	0f006520aH
	DD	05002c004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DeIndexAllBuffers@ImDrawData@@QEAAXXZ DB 06H
	DB	'i', 02H
	DB	02H
	DB	')', 06H
	DB	04H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DeIndexAllBuffers@ImDrawData@@QEAAXXZ DB 04H
	DB	0aH
	DD	imagerel ??1?$ImVector@UImDrawVert@@@@QEAA@XZ
	DB	040H
	DB	03eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DeIndexAllBuffers@ImDrawData@@QEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?DeIndexAllBuffers@ImDrawData@@QEAAXXZ
	DD	imagerel $ip2state$?DeIndexAllBuffers@ImDrawData@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeIndexAllBuffers@ImDrawData@@QEAAXXZ DD 0a1911H
	DD	0113419H
	DD	0f0155219H
	DD	0d011e013H
	DD	0700dc00fH
	DD	0500b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?DeIndexAllBuffers@ImDrawData@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateTextureID@ImDrawList@@QEAAXXZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateClipRect@ImDrawList@@QEAAXXZ DD 033001H
	DD	063430H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PrimQuadUV@ImDrawList@@QEAAXAEBUImVec2@@0000000I@Z DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z DD 0a5801H
	DD	09858H
	DD	01884aH
	DD	02783eH
	DD	03682aH
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PrimRect@ImDrawList@@QEAAXAEBUImVec2@@0I@Z DD 043501H
	DD	06835H
	DD	030021206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PrimUnreserve@ImDrawList@@QEAAXHH@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PrimReserve@ImDrawList@@QEAAXHH@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearFreeMemory@ImDrawList@@QEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ImDrawList@@QEAAXXZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CloneOutput@ImDrawList@@QEBAPEAU1@XZ DB 06H
	DB	'"'
	DB	00H
	DB	'N'
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CloneOutput@ImDrawList@@QEBAPEAU1@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CloneOutput@ImDrawList@@QEBAPEAU1@XZ DB 028H
	DD	imagerel $stateUnwindMap$?CloneOutput@ImDrawList@@QEBAPEAU1@XZ
	DD	imagerel $ip2state$?CloneOutput@ImDrawList@@QEBAPEAU1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CloneOutput@ImDrawList@@QEBAPEAU1@XZ DD 050911H
	DD	070054209H
	DD	050036004H
	DD	03002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?CloneOutput@ImDrawList@@QEBAPEAU1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddDrawCmd@ImDrawList@@QEAAXXZ DD 020601H
	DD	03002b206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddCallback@ImDrawList@@QEAAXP6AXPEBU1@PEBUImDrawCmd@@@ZPEAX@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD 021H
	DD	imagerel $LN81+521
	DD	imagerel $LN81+525
	DD	imagerel $chain$2$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD 020521H
	DD	0e7405H
	DD	imagerel $LN81+521
	DD	imagerel $LN81+525
	DD	imagerel $chain$2$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD 021H
	DD	imagerel $LN81
	DD	imagerel $LN81+217
	DD	imagerel $unwind$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD 040b21H
	DD	03880bH
	DD	047805H
	DD	imagerel $LN81
	DD	imagerel $LN81+217
	DD	imagerel $unwind$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z DD 083801H
	DD	056838H
	DD	0116410H
	DD	0103410H
	DD	0e00cb210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD 021H
	DD	imagerel $LN34
	DD	imagerel $LN34+233
	DD	imagerel $unwind$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD 021H
	DD	imagerel $LN34+233
	DD	imagerel $LN34+297
	DD	imagerel $chain$2$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD 061f21H
	DD	020641fH
	DD	06b80eH
	DD	0b6808H
	DD	imagerel $LN34+233
	DD	imagerel $LN34+297
	DD	imagerel $chain$2$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD 062321H
	DD	098823H
	DD	0a7815H
	DD	01f5408H
	DD	imagerel $LN34
	DD	imagerel $LN34+233
	DD	imagerel $unwind$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z DD 0d3101H
	DD	07a831H
	DD	089825H
	DD	0213415H
	DD	0180115H
	DD	0e00cf00eH
	DD	0c008d00aH
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z DD 021H
	DD	imagerel $LN34
	DD	imagerel $LN34+101
	DD	imagerel $unwind$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z DD 040a21H
	DD	0f740aH
	DD	0e5405H
	DD	imagerel $LN34
	DD	imagerel $LN34+101
	DD	imagerel $unwind$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z DD 0a1701H
	DD	036817H
	DD	0103412H
	DD	0f00e7212H
	DD	0d00ae00cH
	DD	06006c008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD 021H
	DD	imagerel $LN27
	DD	imagerel $LN27+62
	DD	imagerel $unwind$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD 021H
	DD	imagerel $LN27+62
	DD	imagerel $LN27+111
	DD	imagerel $chain$1$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD 0a3b21H
	DD	016743bH
	DD	03a825H
	DD	058815H
	DD	07680fH
	DD	0156408H
	DD	imagerel $LN27+62
	DD	imagerel $LN27+111
	DD	imagerel $chain$1$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD 041321H
	DD	010e413H
	DD	0145408H
	DD	imagerel $LN27
	DD	imagerel $LN27+62
	DD	imagerel $unwind$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z DD 082001H
	DD	049820H
	DD	067810H
	DD	011010bH
	DD	03002f004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathStroke@ImDrawList@@QEAAXI_NM@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathFillConvex@ImDrawList@@QEAAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD 021H
	DD	imagerel $LN17
	DD	imagerel $LN17+53
	DD	imagerel $unwind$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD 021H
	DD	imagerel $LN17+53
	DD	imagerel $LN17+94
	DD	imagerel $chain$0$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD 020521H
	DD	0c5405H
	DD	imagerel $LN17+53
	DD	imagerel $LN17+94
	DD	imagerel $chain$0$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD 020521H
	DD	0de405H
	DD	imagerel $LN17
	DD	imagerel $LN17+53
	DD	imagerel $unwind$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z DD 081301H
	DD	0f6413H
	DD	0e3413H
	DD	0f00f7213H
	DD	0700bc00dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z DD 021H
	DD	imagerel $LN17
	DD	imagerel $LN17+53
	DD	imagerel $unwind$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z DD 020521H
	DD	086405H
	DD	imagerel $LN17
	DD	imagerel $LN17+53
	DD	imagerel $unwind$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z DD 081301H
	DD	0a5413H
	DD	093413H
	DD	0f00f3213H
	DD	0700be00dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z DD 021H
	DD	imagerel $LN15
	DD	imagerel $LN15+53
	DD	imagerel $unwind$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z DD 020521H
	DD	0a7405H
	DD	imagerel $LN15
	DD	imagerel $LN15+53
	DD	imagerel $unwind$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z DD 081301H
	DD	0c5413H
	DD	0b3413H
	DD	0f00f5213H
	DD	0600be00dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddBezierCurve@ImDrawList@@QEAAXAEBUImVec2@@000IMH@Z DD 060f01H
	DD	09540fH
	DD	08340fH
	DD	0600b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z DD 0251c6319H
	DD	06c855H
	DD	07b850H
	DD	08a84bH
	DD	099846H
	DD	0a8841H
	DD	0b7839H
	DD	0c6832H
	DD	022742bH
	DD	0216424H
	DD	020341dH
	DD	01112316H
	DD	0f00a001aH
	DD	0d006e008H
	DD	05002c004H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z DD 0251e7119H
	DD	08d863H
	DD	09c85eH
	DD	0ab859H
	DD	0ba851H
	DD	0c9849H
	DD	0d8841H
	DD	0e7839H
	DD	0f6832H
	DD	028742bH
	DD	0276424H
	DD	026341dH
	DD	01112316H
	DD	0f00a0020H
	DD	0d006e008H
	DD	05002c004H
	DD	imagerel __GSHandlerCheck
	DD	078H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z DD 021H
	DD	imagerel $LN39
	DD	imagerel $LN39+53
	DD	imagerel $unwind$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z DD 041021H
	DD	0137410H
	DD	0123404H
	DD	imagerel $LN39
	DD	imagerel $LN39+53
	DD	imagerel $unwind$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z DD 081f01H
	DD	06681fH
	DD	0145410H
	DD	0f00cd210H
	DD	06008e00aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z DD 021H
	DD	imagerel $LN40
	DD	imagerel $LN40+90
	DD	imagerel $unwind$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z DD 040d21H
	DD	06680dH
	DD	0125408H
	DD	imagerel $LN40
	DD	imagerel $LN40+90
	DD	imagerel $unwind$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z DD 082001H
	DD	0146420H
	DD	0133420H
	DD	0f01cd220H
	DD	07018e01aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddNgonFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z DD 041301H
	DD	083413H
	DD	0700f5213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddNgon@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD 041701H
	DD	083417H
	DD	070135217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z DD 021H
	DD	imagerel $LN25
	DD	imagerel $LN25+36
	DD	imagerel $unwind$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z DD 020521H
	DD	037805H
	DD	imagerel $LN25
	DD	imagerel $LN25+36
	DD	imagerel $unwind$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z DD 082101H
	DD	046821H
	DD	0d641cH
	DD	0c341cH
	DD	07018921cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD 020021H
	DD	037800H
	DD	imagerel $LN25
	DD	imagerel $LN25+36
	DD	imagerel $unwind$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD 021H
	DD	imagerel $LN25
	DD	imagerel $LN25+36
	DD	imagerel $unwind$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD 020521H
	DD	037805H
	DD	imagerel $LN25
	DD	imagerel $LN25+36
	DD	imagerel $unwind$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z DD 082101H
	DD	046821H
	DD	0d641cH
	DD	0c341cH
	DD	07018921cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z DD 060f01H
	DD	07540fH
	DD	06340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddTriangle@ImDrawList@@QEAAXAEBUImVec2@@00IM@Z DD 060f01H
	DD	09540fH
	DD	08340fH
	DD	0600b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddQuadFilled@ImDrawList@@QEAAXAEBUImVec2@@000I@Z DD 060f01H
	DD	07540fH
	DD	06340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddQuad@ImDrawList@@QEAAXAEBUImVec2@@000IM@Z DD 060f01H
	DD	09540fH
	DD	08340fH
	DD	0600b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z DD 021H
	DD	imagerel $LN29
	DD	imagerel $LN29+94
	DD	imagerel $unwind$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z DD 040a21H
	DD	02780aH
	DD	036805H
	DD	imagerel $LN29
	DD	imagerel $LN29+94
	DD	imagerel $unwind$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z DD 0c1e01H
	DD	0f741eH
	DD	0e641eH
	DD	0d541eH
	DD	0c341eH
	DD	0f01a721eH
	DD	0c016e018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+117
	DD	imagerel $unwind$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z DD 020521H
	DD	036805H
	DD	imagerel $LN16
	DD	imagerel $LN16+117
	DD	imagerel $unwind$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z DD 082101H
	DD	0c6421H
	DD	0b5421H
	DD	0a3421H
	DD	0701d7221H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z DD 041701H
	DD	0a3417H
	DD	070137217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD 021H
	DD	imagerel $LN38
	DD	imagerel $LN38+44
	DD	imagerel $unwind$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD 021H
	DD	imagerel $LN38+44
	DD	imagerel $LN38+61
	DD	imagerel $chain$1$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD 020421H
	DD	046804H
	DD	imagerel $LN38+44
	DD	imagerel $LN38+61
	DD	imagerel $chain$1$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD 020421H
	DD	0d7404H
	DD	imagerel $LN38
	DD	imagerel $LN38+44
	DD	imagerel $unwind$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z DD 082901H
	DD	0c3429H
	DD	0f641eH
	DD	0e541eH
	DD	0e01a921eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopTextureID@ImDrawList@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushTextureID@ImDrawList@@QEAAXPEAX@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopClipRect@ImDrawList@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushClipRectFullScreen@ImDrawList@@QEAAXXZ DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z DD 040a01H
	DD	0d340aH
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DB 04H
	DB	0feH
	DB	0eH
	DB	0e9H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DB 0eH
	DB	0cH
	DD	imagerel ??1?$ImVector@UImDrawCmd@@@@QEAA@XZ
	DB	0a0H
	DB	036H
	DD	imagerel ?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
	DD	imagerel $ip2state$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DD 0a1b11H
	DD	0c541bH
	DD	0b341bH
	DD	0f017321bH
	DD	0c013e015H
	DD	060107011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImVec2@@@@QEAAXH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImVec2@@@@QEAAAEAUImVec2@@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImVec2@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImVec2@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImVec2@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImVec2@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImVec2@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImVec2@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@PEAX@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@PEAX@@QEAAXAEBQEAX@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@PEAX@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@PEAX@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@PEAX@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@PEAX@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@PEAX@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@PEAX@@QEAAXH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@PEAX@@QEAAAEAPEAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@PEAX@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@PEAX@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@PEAX@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@PEAX@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@PEAX@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@PEAX@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@UImVec4@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImVec4@@@@QEAAXAEBUImVec4@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImVec4@@@@QEAAXH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImVec4@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImVec4@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImVec4@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImVec4@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImVec4@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImVec4@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?shrink@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD 042c21H
	DD	06542cH
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImDrawVert@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImDrawVert@@@@QEAAAEAUImDrawVert@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImDrawVert@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImDrawVert@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImDrawVert@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImDrawVert@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImDrawVert@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$ImVector@UImDrawVert@@@@QEAAAEAU0@AEBU0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z DD 021H
	DD	imagerel $LN85
	DD	imagerel $LN85+31
	DD	imagerel $unwind$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z DD 0c1821H
	DD	05f418H
	DD	06d414H
	DD	077410H
	DD	08640cH
	DD	095408H
	DD	0a3404H
	DD	imagerel $LN85
	DD	imagerel $LN85+31
	DD	imagerel $unwind$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z DD 030f01H
	DD	0e00ba20fH
	DD	0c009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z DD 021H
	DD	imagerel $LN99
	DD	imagerel $LN99+253
	DD	imagerel $unwind$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z DD 020521H
	DD	0dc405H
	DD	imagerel $LN99
	DD	imagerel $LN99+253
	DD	imagerel $unwind$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z DD 0a4d01H
	DD	0ce44dH
	DD	0156446H
	DD	0f008d20cH
	DD	07004d006H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD 021H
	DD	imagerel $LN34
	DD	imagerel $LN34+15
	DD	imagerel $unwind$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD 021H
	DD	imagerel $LN34+15
	DD	imagerel $LN34+33
	DD	imagerel $chain$0$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD 040a21H
	DD	08e40aH
	DD	066405H
	DD	imagerel $LN34+15
	DD	imagerel $LN34+33
	DD	imagerel $chain$0$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD 020521H
	DD	077405H
	DD	imagerel $LN34
	DD	imagerel $LN34+15
	DD	imagerel $unwind$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ DD 040a01H
	DD	09340aH
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImDrawListSplitter@@QEAA@XZ DB 04H
	DB	012H
	DB	00H
	DB	01eH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ImDrawListSplitter@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImDrawListSplitter@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1ImDrawListSplitter@@QEAA@XZ
	DD	imagerel $ip2state$??1ImDrawListSplitter@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImDrawListSplitter@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImDrawListSplitter@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD 043021H
	DD	065430H
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImDrawChannel@@@@QEAAAEAUImDrawChannel@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$ImVector@UImDrawCmd@@@@QEAAPEAUImDrawCmd@@PEBU2@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+27
	DD	imagerel $unwind$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD 021H
	DD	imagerel $LN14+27
	DD	imagerel $LN14+75
	DD	imagerel $chain$0$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD 020521H
	DD	066405H
	DD	imagerel $LN14+27
	DD	imagerel $LN14+75
	DD	imagerel $chain$0$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD 020521H
	DD	077405H
	DD	imagerel $LN14
	DD	imagerel $LN14+27
	DD	imagerel $unwind$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z DD 040a01H
	DD	08340aH
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD 043021H
	DD	065430H
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImDrawCmd@@@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$ImVector@UImDrawCmd@@@@QEAAAEAU0@AEBU0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+28
	DD	imagerel $unwind$?push_back@?$ImVector@G@@QEAAXAEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD 021H
	DD	imagerel $LN14+28
	DD	imagerel $LN14+75
	DD	imagerel $chain$0$?push_back@?$ImVector@G@@QEAAXAEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD 020521H
	DD	066405H
	DD	imagerel $LN14+28
	DD	imagerel $LN14+75
	DD	imagerel $chain$0$?push_back@?$ImVector@G@@QEAAXAEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD 020521H
	DD	077405H
	DD	imagerel $LN14
	DD	imagerel $LN14+28
	DD	imagerel $unwind$?push_back@?$ImVector@G@@QEAAXAEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD 040b01H
	DD	08340bH
	DD	0e007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@G@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@G@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@G@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@G@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@G@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?shrink@?$ImVector@G@@QEAAXH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD 021H
	DD	imagerel $LN24
	DD	imagerel $LN24+32
	DD	imagerel $unwind$?resize@?$ImVector@G@@QEAAXHAEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD 021H
	DD	imagerel $LN24+32
	DD	imagerel $LN24+74
	DD	imagerel $chain$0$?resize@?$ImVector@G@@QEAAXHAEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD 020521H
	DD	065405H
	DD	imagerel $LN24+32
	DD	imagerel $LN24+74
	DD	imagerel $chain$0$?resize@?$ImVector@G@@QEAAXHAEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD 020521H
	DD	076405H
	DD	imagerel $LN24
	DD	imagerel $LN24+32
	DD	imagerel $unwind$?resize@?$ImVector@G@@QEAAXHAEBG@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@G@@QEAAXHAEBG@Z DD 061001H
	DD	097410H
	DD	083410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@G@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@G@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@G@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@G@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@G@@QEAAXH@Z DD 042f21H
	DD	06542fH
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@G@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@G@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@G@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@G@@QEAAAEAGH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@G@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@G@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@G@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@G@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@G@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$ImVector@G@@QEAAAEAU0@AEBU0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z DD 071701H
	DD	038817H
	DD	047811H
	DD	056809H
	DD	0c204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z DD 071701H
	DD	038817H
	DD	047811H
	DD	056809H
	DD	0c204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z DD 071701H
	DD	038817H
	DD	047811H
	DD	056809H
	DD	0c204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 081901H
	DD	086419H
	DD	075419H
	DD	063419H
	DD	070153219H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stb_adler32@@YAIIPEAEI@Z
_TEXT	SEGMENT
adler32$ = 16
buffer$ = 24
buflen$ = 32
?stb_adler32@@YAIIPEAEI@Z PROC				; stb_adler32, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3424
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	mov	r10, rdx
; Line 3426
	movzx	r9d, cx
; Line 3427
	mov	eax, 1584310703				; 5e6ea9afH
	shr	ecx, 16
	mul	r8d
	mov	edi, r8d
	mov	esi, r8d
	shr	edx, 11
	imul	eax, edx, 5552				; 000015b0H
	sub	edi, eax
; Line 3430
	test	r8d, r8d
	je	$LN3@stb_adler3
	mov	QWORD PTR [rsp+16], rbx
$LL2@stb_adler3:
; Line 3431
	xor	edx, edx
	cmp	edi, 7
	jbe	SHORT $LN5@stb_adler3
	lea	r8d, QWORD PTR [rdx+7]
$LL6@stb_adler3:
; Line 3432
	movzx	eax, BYTE PTR [r10]
	add	edx, 8
	add	r9d, eax
	add	r8d, 8
; Line 3433
	movzx	eax, BYTE PTR [r10+1]
	add	ecx, r9d
	add	r9d, eax
; Line 3434
	movzx	eax, BYTE PTR [r10+2]
	add	ecx, r9d
	add	r9d, eax
; Line 3435
	movzx	eax, BYTE PTR [r10+3]
	add	ecx, r9d
	add	r9d, eax
; Line 3436
	movzx	eax, BYTE PTR [r10+4]
	add	ecx, r9d
	add	r9d, eax
; Line 3437
	movzx	eax, BYTE PTR [r10+5]
	add	ecx, r9d
	add	r9d, eax
; Line 3438
	movzx	eax, BYTE PTR [r10+6]
	add	ecx, r9d
	add	r9d, eax
; Line 3439
	movzx	eax, BYTE PTR [r10+7]
	add	ecx, r9d
	add	r9d, eax
; Line 3441
	add	r10, 8
	add	ecx, r9d
	cmp	r8d, edi
	jb	SHORT $LL6@stb_adler3
$LN5@stb_adler3:
	xor	r8d, r8d
	xor	r11d, r11d
; Line 3444
	cmp	edx, edi
	jae	SHORT $LN22@stb_adler3
	mov	eax, edi
	sub	eax, edx
	cmp	eax, 2
	jb	SHORT $LC23@stb_adler3
	mov	eax, edi
	sub	eax, edx
	sub	eax, 2
	shr	eax, 1
	inc	eax
	mov	ebx, eax
	lea	edx, DWORD PTR [rdx+rax*2]
	npad	4
$LL25@stb_adler3:
; Line 3445
	movzx	eax, BYTE PTR [r10]
	add	r9d, eax
	movzx	eax, BYTE PTR [r10+1]
	add	r8d, r9d
	add	r10, 2
	add	r9d, eax
	add	r11d, r9d
	sub	rbx, 1
	jne	SHORT $LL25@stb_adler3
$LC23@stb_adler3:
; Line 3444
	cmp	edx, edi
	jae	SHORT $LN24@stb_adler3
; Line 3445
	movzx	eax, BYTE PTR [r10]
	add	r9d, eax
	add	ecx, r9d
	inc	r10
$LN24@stb_adler3:
	lea	eax, DWORD PTR [r11+r8]
	add	ecx, eax
$LN22@stb_adler3:
; Line 3447
	mov	eax, -2146992015			; 80078071H
	mul	r9d
	shr	edx, 15
	imul	eax, edx, -65521			; ffff000fH
	add	r9d, eax
	mov	eax, -2146992015			; 80078071H
	mul	ecx
	shr	edx, 15
	imul	eax, edx, -65521			; ffff000fH
	add	ecx, eax
; Line 3448
	sub	esi, edi
; Line 3449
	mov	edi, 5552				; 000015b0H
	jne	$LL2@stb_adler3
; Line 3430
	mov	rbx, QWORD PTR [rsp+16]
$LN3@stb_adler3:
; Line 3452
	mov	rsi, QWORD PTR [rsp+24]
	shl	ecx, 16
	lea	eax, DWORD PTR [r9+rcx]
	pop	rdi
	ret	0
?stb_adler32@@YAIIPEAEI@Z ENDP				; stb_adler32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stb_decompress_token@@YAPEBEPEBE@Z
_TEXT	SEGMENT
i$ = 48
?stb_decompress_token@@YAPEBEPEBE@Z PROC		; stb_decompress_token, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3407
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 3408
	movzx	r8d, BYTE PTR [rcx]
	mov	rbx, rcx
	cmp	r8b, 32					; 00000020H
	jb	$LN2@stb_decomp
; Line 3409
	cmp	r8b, 128				; 00000080H
	jb	SHORT $LN4@stb_decomp
	movzx	eax, BYTE PTR [rcx+1]
	lea	edx, DWORD PTR [r8-127]
	mov	rcx, QWORD PTR ?stb__dout@@3PEAEEA
	sub	rcx, rax
	dec	rcx
	call	?stb__match@@YAXPEBEI@Z			; stb__match
	add	rbx, 2
; Line 3420
	mov	rax, rbx
; Line 3421
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@stb_decomp:
; Line 3410
	cmp	r8b, 64					; 00000040H
	jb	SHORT $LN6@stb_decomp
	movzx	edx, BYTE PTR [rcx+2]
	mov	rax, r8
	mov	rcx, QWORD PTR ?stb__dout@@3PEAEEA
	inc	edx
	shl	rax, 8
	sub	rcx, rax
	movzx	eax, BYTE PTR [rbx+1]
	sub	rcx, rax
	add	rcx, 16383				; 00003fffH
	call	?stb__match@@YAXPEBEI@Z			; stb__match
	add	rbx, 3
; Line 3420
	mov	rax, rbx
; Line 3421
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN6@stb_decomp:
; Line 3411
	lea	edx, DWORD PTR [r8-31]
	inc	rcx
	call	?stb__lit@@YAXPEBEI@Z			; stb__lit
	movzx	eax, BYTE PTR [rbx]
	add	rbx, -30
	add	rbx, rax
; Line 3420
	mov	rax, rbx
; Line 3421
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN2@stb_decomp:
; Line 3413
	cmp	r8b, 24
	jb	SHORT $LN8@stb_decomp
	movzx	eax, BYTE PTR [rcx+1]
	movzx	edx, BYTE PTR [rcx+3]
	mov	rcx, QWORD PTR ?stb__dout@@3PEAEEA
	inc	edx
	shl	r8, 8
	add	r8, rax
	movzx	eax, BYTE PTR [rbx+2]
	shl	r8, 8
	sub	rcx, r8
	sub	rcx, rax
	add	rcx, 1572863				; 0017ffffH
	call	?stb__match@@YAXPEBEI@Z			; stb__match
	add	rbx, 4
; Line 3420
	mov	rax, rbx
; Line 3421
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN8@stb_decomp:
; Line 3414
	cmp	r8b, 16
	jb	SHORT $LN10@stb_decomp
	movzx	ecx, BYTE PTR [rcx+3]
	movzx	eax, BYTE PTR [rbx+1]
	movzx	edx, BYTE PTR [rbx+4]
	shl	ecx, 8
	inc	ecx
	shl	r8, 8
	add	edx, ecx
	add	r8, rax
	mov	rcx, QWORD PTR ?stb__dout@@3PEAEEA
	movzx	eax, BYTE PTR [rbx+2]
	shl	r8, 8
	sub	rcx, r8
	sub	rcx, rax
	add	rcx, 1048575				; 000fffffH
	call	?stb__match@@YAXPEBEI@Z			; stb__match
	add	rbx, 5
; Line 3420
	mov	rax, rbx
; Line 3421
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN10@stb_decomp:
; Line 3415
	cmp	r8b, 8
	jb	SHORT $LN12@stb_decomp
	movzx	edx, BYTE PTR [rbx+1]
	mov	ecx, r8d
	shl	ecx, 8
	add	edx, -2047				; fffff801H
	add	edx, ecx
	lea	rcx, QWORD PTR [rbx+2]
	call	?stb__lit@@YAXPEBEI@Z			; stb__lit
	movzx	ecx, BYTE PTR [rbx]
	movzx	eax, BYTE PTR [rbx+1]
	add	rax, rbx
	shl	rcx, 8
	lea	rbx, QWORD PTR [rcx-2045]
	add	rbx, rax
; Line 3420
	mov	rax, rbx
; Line 3421
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN12@stb_decomp:
; Line 3416
	cmp	r8b, 7
	jne	SHORT $LN14@stb_decomp
	movzx	ecx, BYTE PTR [rcx+1]
	movzx	edx, BYTE PTR [rbx+2]
	shl	ecx, 8
	inc	ecx
	add	edx, ecx
	lea	rcx, QWORD PTR [rbx+3]
	call	?stb__lit@@YAXPEBEI@Z			; stb__lit
	movzx	ecx, BYTE PTR [rbx+1]
	movzx	eax, BYTE PTR [rbx+2]
	add	rax, rbx
	shl	rcx, 8
	lea	rbx, QWORD PTR [rcx+4]
	add	rbx, rax
; Line 3420
	mov	rax, rbx
; Line 3421
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN14@stb_decomp:
; Line 3417
	cmp	r8b, 6
	jne	SHORT $LN16@stb_decomp
	movzx	eax, BYTE PTR [rcx+2]
	movzx	r8d, BYTE PTR [rcx+1]
	movzx	edx, BYTE PTR [rcx+4]
	mov	rcx, QWORD PTR ?stb__dout@@3PEAEEA
	inc	edx
	shl	r8, 8
	add	r8, rax
	movzx	eax, BYTE PTR [rbx+3]
	shl	r8, 8
	sub	rcx, r8
	sub	rcx, rax
	dec	rcx
	call	?stb__match@@YAXPEBEI@Z			; stb__match
	add	rbx, 5
; Line 3420
	mov	rax, rbx
; Line 3421
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN16@stb_decomp:
; Line 3418
	cmp	r8b, 4
	jne	SHORT $LN18@stb_decomp
	movzx	ecx, BYTE PTR [rcx+4]
	movzx	eax, BYTE PTR [rbx+2]
	movzx	r8d, BYTE PTR [rbx+1]
	movzx	edx, BYTE PTR [rbx+5]
	shl	ecx, 8
	inc	ecx
	shl	r8, 8
	add	edx, ecx
	add	r8, rax
	mov	rcx, QWORD PTR ?stb__dout@@3PEAEEA
	movzx	eax, BYTE PTR [rbx+3]
	shl	r8, 8
	sub	rcx, r8
	sub	rcx, rax
	dec	rcx
	call	?stb__match@@YAXPEBEI@Z			; stb__match
	add	rbx, 6
$LN18@stb_decomp:
; Line 3420
	mov	rax, rbx
; Line 3421
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?stb_decompress_token@@YAPEBEPEBE@Z ENDP		; stb_decompress_token
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stb__lit@@YAXPEBEI@Z
_TEXT	SEGMENT
data$ = 48
length$ = 56
?stb__lit@@YAXPEBEI@Z PROC				; stb__lit, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3394
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 3395
	mov	edi, edx
	mov	rsi, rcx
	mov	rcx, QWORD PTR ?stb__dout@@3PEAEEA
	mov	rdx, QWORD PTR ?stb__barrier_out_e@@3PEAEEA
	lea	rax, QWORD PTR [rdi+rcx]
	cmp	rax, rdx
	jbe	SHORT $LN5@stb__lit
	mov	r8d, 3395				; 00000d43H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn@
	call	QWORD PTR __imp__wassert
	mov	rcx, QWORD PTR ?stb__dout@@3PEAEEA
	mov	rdx, QWORD PTR ?stb__barrier_out_e@@3PEAEEA
$LN5@stb__lit:
; Line 3396
	lea	rbx, QWORD PTR [rdi+rcx]
	cmp	rbx, rdx
	ja	SHORT $LN6@stb__lit
; Line 3397
	cmp	rsi, QWORD PTR ?stb__barrier_in_b@@3PEBEEB
	jae	SHORT $LN3@stb__lit
	lea	rax, QWORD PTR [rdx+1]
; Line 3400
	mov	QWORD PTR ?stb__dout@@3PEAEEA, rax
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@stb__lit:
; Line 3398
	mov	r8, rdi
	mov	rdx, rsi
	call	memcpy
$LN6@stb__lit:
; Line 3400
	mov	rsi, QWORD PTR [rsp+56]
	mov	QWORD PTR ?stb__dout@@3PEAEEA, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stb__lit@@YAXPEBEI@Z ENDP				; stb__lit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stb__match@@YAXPEBEI@Z
_TEXT	SEGMENT
data$ = 48
length$ = 56
?stb__match@@YAXPEBEI@Z PROC				; stb__match, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3385
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 3387
	mov	rax, QWORD PTR ?stb__dout@@3PEAEEA
	mov	rdi, rcx
	mov	rcx, QWORD PTR ?stb__barrier_out_e@@3PEAEEA
	mov	ebx, edx
	lea	r8, QWORD PTR [rbx+rax]
	cmp	r8, rcx
	jbe	SHORT $LN7@stb__match
	mov	r8d, 3387				; 00000d3bH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn@
	call	QWORD PTR __imp__wassert
	mov	rax, QWORD PTR ?stb__dout@@3PEAEEA
	mov	rcx, QWORD PTR ?stb__barrier_out_e@@3PEAEEA
$LN7@stb__match:
; Line 3388
	lea	rdx, QWORD PTR [rbx+rax]
	cmp	rdx, rcx
	jbe	SHORT $LN4@stb__match
	mov	QWORD PTR ?stb__dout@@3PEAEEA, rdx
; Line 3391
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@stb__match:
; Line 3389
	cmp	rdi, QWORD PTR ?stb__barrier_out_b@@3PEAEEA
	jae	SHORT $LN8@stb__match
	lea	rax, QWORD PTR [rcx+1]
	jmp	SHORT $LN13@stb__match
$LN8@stb__match:
; Line 3390
	test	ebx, ebx
	je	SHORT $LN9@stb__match
	sub	rdi, rax
	npad	7
$LL2@stb__match:
	movzx	ecx, BYTE PTR [rdi+rax]
	mov	BYTE PTR [rax], cl
	inc	rax
	add	ebx, -1					; ffffffffH
	jne	SHORT $LL2@stb__match
$LN13@stb__match:
; Line 3391
	mov	QWORD PTR ?stb__dout@@3PEAEEA, rax
$LN9@stb__match:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stb__match@@YAXPEBEI@Z ENDP				; stb__match
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ImLerp@M@@YAMMMM@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
t$ = 24
??$ImLerp@M@@YAMMMM@Z PROC				; ImLerp<float>, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	subss	xmm1, xmm0
	mulss	xmm1, xmm2
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	ret	0
??$ImLerp@M@@YAMMMM@Z ENDP				; ImLerp<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ImSwap@M@@YAXAEAM0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
??$ImSwap@M@@YAXAEAM0@Z PROC				; ImSwap<float>, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 353
	movss	xmm0, DWORD PTR [rcx]
	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	movss	DWORD PTR [rdx], xmm0
	ret	0
??$ImSwap@M@@YAXAEAM0@Z ENDP				; ImSwap<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImAcos01@@YAMM@Z
_TEXT	SEGMENT
x$ = 8
?ImAcos01@@YAMM@Z PROC					; ImAcos01, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3262
	xorps	xmm1, xmm1
; Line 3263
	comiss	xmm1, xmm0
	jb	SHORT $LN2@ImAcos01
	movss	xmm0, DWORD PTR __real@3fc90fdb
; Line 3267
	ret	0
$LN2@ImAcos01:
; Line 3264
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	SHORT $LN3@ImAcos01
	xorps	xmm0, xmm0
; Line 3267
	ret	0
$LN3@ImAcos01:
; Line 3265
	jmp	acosf
?ImAcos01@@YAMM@Z ENDP					; ImAcos01
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?UnpackAccumulativeOffsetsIntoRanges@@YAXHPEBFHPEAG@Z
_TEXT	SEGMENT
base_codepoint$ = 8
accumulative_offsets$ = 16
accumulative_offsets_count$ = 24
out_ranges$ = 32
?UnpackAccumulativeOffsetsIntoRanges@@YAXHPEBFHPEAG@Z PROC ; UnpackAccumulativeOffsetsIntoRanges, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2366
	xor	r10d, r10d
	movsxd	r11, r8d
	test	r8d, r8d
	jle	SHORT $LN10@UnpackAccu
	mov	r8d, r10d
	npad	2
$LL4@UnpackAccu:
; Line 2368
	movzx	eax, cx
	lea	r9, QWORD PTR [r9+4]
	add	ax, WORD PTR [rdx+r8*2]
	mov	WORD PTR [r9-2], ax
	mov	WORD PTR [r9-4], ax
; Line 2369
	movsx	eax, WORD PTR [rdx+r8*2]
	inc	r8
	add	ecx, eax
	cmp	r8, r11
	jl	SHORT $LL4@UnpackAccu
$LN10@UnpackAccu:
; Line 2372
	mov	WORD PTR [r9], r10w
	ret	0
?UnpackAccumulativeOffsetsIntoRanges@@YAXHPEBFHPEAG@Z ENDP ; UnpackAccumulativeOffsetsIntoRanges
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z
_TEXT	SEGMENT
atlas$ = 64
?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z PROC ; ImFontAtlasBuildRenderDefaultTexData, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2256
	mov	QWORD PTR [rsp+32], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 2257
	cmp	DWORD PTR [rcx+112], 0
	mov	rbx, rcx
	jge	SHORT $LN11@ImFontAtla
	mov	r8d, 2257				; 000008d1H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DK@CIPOCJML@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAu?$AAs?$AAt?$AAo?$AAm?$AAR?$AAe@
	call	QWORD PTR __imp__wassert
$LN11@ImFontAtla:
; Line 2258
	cmp	QWORD PTR [rbx+24], 0
	jne	SHORT $LN12@ImFontAtla
	mov	r8d, 2258				; 000008d2H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DI@LKIOFBD@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAP?$AAi?$AAx?$AAe?$AAl@
	call	QWORD PTR __imp__wassert
$LN12@ImFontAtla:
; Line 2259
	movsxd	rdi, DWORD PTR [rbx+112]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, DWORD PTR [rbx+80]
	jl	SHORT $LN20@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN20@ImFontAtla:
	mov	rsi, QWORD PTR [rbx+88]
; Line 2162
	mov	ecx, 65535				; 0000ffffH
; Line 1326
	shl	rdi, 5
; Line 2162
	movzx	eax, WORD PTR [rdi+rsi+4]
	cmp	ax, cx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2260
	jne	SHORT $LN13@ImFontAtla
	mov	r8d, 2260				; 000008d4H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BK@MDHNDFCJ@?$AAr?$AA?4?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ@
	call	QWORD PTR __imp__wassert
	movzx	eax, WORD PTR [rdi+rsi+4]
$LN13@ImFontAtla:
; Line 2263
	test	BYTE PTR [rbx+4], 2
	mov	ebp, DWORD PTR [rbx+40]
	movzx	ecx, WORD PTR [rdi+rsi]
	jne	$LN8@ImFontAtla
; Line 2266
	mov	QWORD PTR [rsp+64], r12
	mov	eax, 217				; 000000d9H
	mov	QWORD PTR [rsp+72], r14
	mov	QWORD PTR [rsp+80], r15
	cmp	cx, ax
	jne	SHORT $LN14@ImFontAtla
	cmp	WORD PTR [rdi+rsi+2], 27
	je	SHORT $LN15@ImFontAtla
$LN14@ImFontAtla:
	mov	r8d, 2266				; 000008daH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1MG@KMJKJDJG@?$AAr?$AA?4?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAF?$AAO?$AAN?$AAT@
	call	QWORD PTR __imp__wassert
$LN15@ImFontAtla:
; Line 2267
	xor	r10d, r10d
	lea	r12, OFFSET FLAT:?FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS@@3QBDB
	xor	r14d, r14d
	mov	r15d, 255				; 000000ffH
	npad	8
$LL4@ImFontAtla:
; Line 2268
	xor	r11d, r11d
	npad	13
$LL7@ImFontAtla:
; Line 2270
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	ecx, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	ecx, eax
; Line 2272
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rdx, ecx
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12], 46			; 0000002eH
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax], cl
; Line 2273
	xor	ecx, ecx
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12], 88			; 00000058H
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+109], cl
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	ecx, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	ecx, eax
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rdx, ecx
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12+1], 46		; 0000002eH
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+1], cl
	xor	ecx, ecx
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12+1], 88		; 00000058H
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+110], cl
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	ecx, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	ecx, eax
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rdx, ecx
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12+2], 46		; 0000002eH
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+2], cl
	xor	ecx, ecx
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12+2], 88		; 00000058H
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+111], cl
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	ecx, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	ecx, eax
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rdx, ecx
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12+3], 46		; 0000002eH
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+3], cl
	xor	ecx, ecx
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12+3], 88		; 00000058H
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+112], cl
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	ecx, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	ecx, eax
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rdx, ecx
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12+4], 46		; 0000002eH
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+4], cl
	xor	ecx, ecx
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12+4], 88		; 00000058H
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+113], cl
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	ecx, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	ecx, eax
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rdx, ecx
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12+5], 46		; 0000002eH
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+5], cl
	xor	ecx, ecx
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12+5], 88		; 00000058H
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+114], cl
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	ecx, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	ecx, eax
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rdx, ecx
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12+6], 46		; 0000002eH
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+6], cl
	xor	ecx, ecx
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12+6], 88		; 00000058H
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+115], cl
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	ecx, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	ecx, eax
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rdx, ecx
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12+7], 46		; 0000002eH
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+7], cl
	xor	ecx, ecx
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12+7], 88		; 00000058H
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+116], cl
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	ecx, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	ecx, eax
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rdx, ecx
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12+8], 46		; 0000002eH
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+8], cl
	xor	ecx, ecx
	cmp	BYTE PTR [r14+r12+8], 88		; 00000058H
	mov	rax, QWORD PTR [rbx+24]
	cmove	ecx, r15d
	mov	BYTE PTR [rdx+rax+117], cl
	xor	edx, edx
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	r9d, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	r9d, eax
	cmp	BYTE PTR [r14+r12+9], 46		; 0000002eH
	cmove	edx, r15d
; Line 2272
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rcx, r9d
	mov	BYTE PTR [rcx+rax+9], dl
; Line 2273
	xor	edx, edx
	cmp	BYTE PTR [r14+r12+9], 88		; 00000058H
	mov	rax, QWORD PTR [rbx+24]
	cmove	edx, r15d
	movsxd	rcx, r9d
	mov	BYTE PTR [rcx+rax+118], dl
	xor	edx, edx
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	r9d, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	r9d, eax
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12+10], 46		; 0000002eH
	movsxd	rcx, r9d
	cmove	edx, r15d
	mov	BYTE PTR [rcx+rax+10], dl
	xor	edx, edx
	cmp	BYTE PTR [r14+r12+10], 88		; 00000058H
	mov	rax, QWORD PTR [rbx+24]
	cmove	edx, r15d
	movsxd	rcx, r9d
	mov	BYTE PTR [rcx+rax+119], dl
	xor	edx, edx
	movzx	eax, WORD PTR [rdi+rsi+6]
	movzx	r9d, WORD PTR [rdi+rsi+4]
	add	eax, r10d
	imul	eax, ebp
	add	eax, r11d
	add	r9d, eax
	mov	rax, QWORD PTR [rbx+24]
	cmp	BYTE PTR [r14+r12+11], 46		; 0000002eH
	movsxd	rcx, r9d
	cmove	edx, r15d
	mov	BYTE PTR [rcx+rax+11], dl
	xor	edx, edx
	cmp	BYTE PTR [r14+r12+11], 88		; 00000058H
	mov	rax, QWORD PTR [rbx+24]
	cmove	edx, r15d
	movsxd	rcx, r9d
	add	r14, 12
	add	r11d, 12
	mov	BYTE PTR [rcx+rax+120], dl
	cmp	r11d, 108				; 0000006cH
	jl	$LL7@ImFontAtla
; Line 2267
	inc	r10d
	cmp	r10d, 27
	jl	$LL4@ImFontAtla
; Line 2275
	mov	r15, QWORD PTR [rsp+80]
	mov	r14, QWORD PTR [rsp+72]
	mov	r12, QWORD PTR [rsp+64]
	jmp	SHORT $LN9@ImFontAtla
$LN8@ImFontAtla:
; Line 2278
	cmp	cx, 2
	jne	SHORT $LN16@ImFontAtla
	cmp	WORD PTR [rdi+rsi+2], cx
	je	SHORT $LN17@ImFontAtla
$LN16@ImFontAtla:
	mov	r8d, 2278				; 000008e6H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DM@OOPIKMMI@?$AAr?$AA?4?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$CG?$AA?$CG@
	call	QWORD PTR __imp__wassert
	movzx	eax, WORD PTR [rdi+rsi+4]
$LN17@ImFontAtla:
; Line 2279
	movzx	edx, WORD PTR [rdi+rsi+6]
	movzx	eax, ax
	imul	edx, ebp
	add	edx, eax
; Line 2280
	lea	eax, DWORD PTR [rdx+rbp]
	movsxd	rcx, eax
	mov	rax, QWORD PTR [rbx+24]
	mov	BYTE PTR [rcx+rax+1], 255		; 000000ffH
	mov	rax, QWORD PTR [rbx+24]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	mov	rax, QWORD PTR [rbx+24]
	movsxd	rcx, edx
	mov	BYTE PTR [rcx+rax+1], 255		; 000000ffH
	mov	rax, QWORD PTR [rbx+24]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
$LN9@ImFontAtla:
; Line 2282
	movzx	eax, WORD PTR [rdi+rsi+4]
	movd	xmm2, eax
	movzx	eax, WORD PTR [rdi+rsi+6]
	cvtdq2ps xmm2, xmm2
	movd	xmm1, eax
	addss	xmm2, DWORD PTR __real@3f000000
	cvtdq2ps xmm1, xmm1
	mulss	xmm2, DWORD PTR [rbx+48]
	addss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR [rbx+56], xmm2
	mulss	xmm1, DWORD PTR [rbx+52]
	movss	DWORD PTR [rbx+60], xmm1
; Line 2283
	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z ENDP ; ImFontAtlasBuildRenderDefaultTexData
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z PROC	; ImVector<stbtt_packedchar>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	imul	rcx, rdi, 28
	mov	QWORD PTR [rsp+48], rsi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	rcx, DWORD PTR [rbx]
	imul	r8, rcx, 28
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z ENDP	; ImVector<stbtt_packedchar>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z PROC	; ImVector<stbtt_packedchar>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rax, esi
	imul	rcx, rax, 28
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	rcx, DWORD PTR [rbx]
	imul	r8, rcx, 28
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@Ustbtt_packedchar@@@@QEAAXH@Z ENDP	; ImVector<stbtt_packedchar>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@Ustbtt_packedchar@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@Ustbtt_packedchar@@@@QEBAHH@Z PROC ; ImVector<stbtt_packedchar>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@Ustbtt_packedchar@@@@QEBAHH@Z ENDP ; ImVector<stbtt_packedchar>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@Ustbtt_packedchar@@@@QEAAAEAUstbtt_packedchar@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@Ustbtt_packedchar@@@@QEAAAEAUstbtt_packedchar@@H@Z PROC ; ImVector<stbtt_packedchar>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	imul	rax, rbx, 28
	mov	rbx, QWORD PTR [rsp+48]
	add	rax, QWORD PTR [rdi+8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@Ustbtt_packedchar@@@@QEAAAEAUstbtt_packedchar@@H@Z ENDP ; ImVector<stbtt_packedchar>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?size_in_bytes@?$ImVector@Ustbtt_packedchar@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?size_in_bytes@?$ImVector@Ustbtt_packedchar@@@@QEBAHXZ PROC ; ImVector<stbtt_packedchar>::size_in_bytes, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1324
	imul	eax, DWORD PTR [rcx], 28
	ret	0
?size_in_bytes@?$ImVector@Ustbtt_packedchar@@@@QEBAHXZ ENDP ; ImVector<stbtt_packedchar>::size_in_bytes
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ PROC		; ImVector<stbtt_packedchar>::~ImVector<stbtt_packedchar>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ ENDP		; ImVector<stbtt_packedchar>::~ImVector<stbtt_packedchar>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ PROC		; ImVector<stbtt_packedchar>::ImVector<stbtt_packedchar>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ ENDP		; ImVector<stbtt_packedchar>::ImVector<stbtt_packedchar>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z PROC	; ImVector<stbrp_rect>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 4
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 4
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z ENDP	; ImVector<stbrp_rect>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z PROC		; ImVector<stbrp_rect>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rcx, esi
	shl	rcx, 4
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 4
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z ENDP		; ImVector<stbrp_rect>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@Ustbrp_rect@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@Ustbrp_rect@@@@QEBAHH@Z PROC	; ImVector<stbrp_rect>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@Ustbrp_rect@@@@QEBAHH@Z ENDP	; ImVector<stbrp_rect>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@Ustbrp_rect@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@Ustbrp_rect@@@@QEAAXXZ PROC		; ImVector<stbrp_rect>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@Ustbrp_rect@@@@QEAAXXZ ENDP		; ImVector<stbrp_rect>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@Ustbrp_rect@@@@QEAAAEAUstbrp_rect@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@Ustbrp_rect@@@@QEAAAEAUstbrp_rect@@H@Z PROC ; ImVector<stbrp_rect>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	shl	rax, 4
	add	rax, QWORD PTR [rdi+8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@Ustbrp_rect@@@@QEAAAEAUstbrp_rect@@H@Z ENDP ; ImVector<stbrp_rect>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?size_in_bytes@?$ImVector@Ustbrp_rect@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?size_in_bytes@?$ImVector@Ustbrp_rect@@@@QEBAHXZ PROC	; ImVector<stbrp_rect>::size_in_bytes, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1324
	mov	eax, DWORD PTR [rcx]
	shl	eax, 4
	ret	0
?size_in_bytes@?$ImVector@Ustbrp_rect@@@@QEBAHXZ ENDP	; ImVector<stbrp_rect>::size_in_bytes
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ PROC		; ImVector<stbrp_rect>::~ImVector<stbrp_rect>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ ENDP		; ImVector<stbrp_rect>::~ImVector<stbrp_rect>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@Ustbrp_rect@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@Ustbrp_rect@@@@QEAA@XZ PROC		; ImVector<stbrp_rect>::ImVector<stbrp_rect>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@Ustbrp_rect@@@@QEAA@XZ ENDP		; ImVector<stbrp_rect>::ImVector<stbrp_rect>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ImMax@H@@YAHHH@Z
_TEXT	SEGMENT
lhs$ = 8
rhs$ = 16
??$ImMax@H@@YAHHH@Z PROC				; ImMax<int>, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	cmp	ecx, edx
	cmovge	edx, ecx
	mov	eax, edx
	ret	0
??$ImMax@H@@YAHHH@Z ENDP				; ImMax<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z PROC ; ImVector<ImFontBuildDstData>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 5
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 5
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z ENDP ; ImVector<ImFontBuildDstData>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z PROC	; ImVector<ImFontBuildDstData>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rcx, esi
	shl	rcx, 5
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 5
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@UImFontBuildDstData@@@@QEAAXH@Z ENDP	; ImVector<ImFontBuildDstData>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImFontBuildDstData@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImFontBuildDstData@@@@QEBAHH@Z PROC ; ImVector<ImFontBuildDstData>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImFontBuildDstData@@@@QEBAHH@Z ENDP ; ImVector<ImFontBuildDstData>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@UImFontBuildDstData@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@UImFontBuildDstData@@@@QEAAXXZ PROC	; ImVector<ImFontBuildDstData>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@UImFontBuildDstData@@@@QEAAXXZ ENDP	; ImVector<ImFontBuildDstData>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UImFontBuildDstData@@@@QEAAAEAUImFontBuildDstData@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UImFontBuildDstData@@@@QEAAAEAUImFontBuildDstData@@H@Z PROC ; ImVector<ImFontBuildDstData>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	shl	rax, 5
	add	rax, QWORD PTR [rdi+8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UImFontBuildDstData@@@@QEAAAEAUImFontBuildDstData@@H@Z ENDP ; ImVector<ImFontBuildDstData>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?size_in_bytes@?$ImVector@UImFontBuildDstData@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?size_in_bytes@?$ImVector@UImFontBuildDstData@@@@QEBAHXZ PROC ; ImVector<ImFontBuildDstData>::size_in_bytes, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1324
	mov	eax, DWORD PTR [rcx]
	shl	eax, 5
	ret	0
?size_in_bytes@?$ImVector@UImFontBuildDstData@@@@QEBAHXZ ENDP ; ImVector<ImFontBuildDstData>::size_in_bytes
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ PROC	; ImVector<ImFontBuildDstData>::~ImVector<ImFontBuildDstData>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ ENDP	; ImVector<ImFontBuildDstData>::~ImVector<ImFontBuildDstData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImFontBuildDstData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImFontBuildDstData@@@@QEAA@XZ PROC	; ImVector<ImFontBuildDstData>::ImVector<ImFontBuildDstData>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImFontBuildDstData@@@@QEAA@XZ ENDP	; ImVector<ImFontBuildDstData>::ImVector<ImFontBuildDstData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z PROC ; ImVector<ImFontBuildSrcData>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	imul	rcx, rdi, 272				; 00000110H
	mov	QWORD PTR [rsp+48], rsi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	rcx, DWORD PTR [rbx]
	imul	r8, rcx, 272				; 00000110H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z ENDP ; ImVector<ImFontBuildSrcData>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z PROC	; ImVector<ImFontBuildSrcData>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rax, esi
	imul	rcx, rax, 272				; 00000110H
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	rcx, DWORD PTR [rbx]
	imul	r8, rcx, 272				; 00000110H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@UImFontBuildSrcData@@@@QEAAXH@Z ENDP	; ImVector<ImFontBuildSrcData>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImFontBuildSrcData@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImFontBuildSrcData@@@@QEBAHH@Z PROC ; ImVector<ImFontBuildSrcData>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImFontBuildSrcData@@@@QEBAHH@Z ENDP ; ImVector<ImFontBuildSrcData>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UImFontBuildSrcData@@@@QEAAAEAUImFontBuildSrcData@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UImFontBuildSrcData@@@@QEAAAEAUImFontBuildSrcData@@H@Z PROC ; ImVector<ImFontBuildSrcData>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	imul	rax, rbx, 272				; 00000110H
	mov	rbx, QWORD PTR [rsp+48]
	add	rax, QWORD PTR [rdi+8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UImFontBuildSrcData@@@@QEAAAEAUImFontBuildSrcData@@H@Z ENDP ; ImVector<ImFontBuildSrcData>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?size_in_bytes@?$ImVector@UImFontBuildSrcData@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?size_in_bytes@?$ImVector@UImFontBuildSrcData@@@@QEBAHXZ PROC ; ImVector<ImFontBuildSrcData>::size_in_bytes, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1324
	imul	eax, DWORD PTR [rcx], 272		; 00000110H
	ret	0
?size_in_bytes@?$ImVector@UImFontBuildSrcData@@@@QEBAHXZ ENDP ; ImVector<ImFontBuildSrcData>::size_in_bytes
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ PROC	; ImVector<ImFontBuildSrcData>::~ImVector<ImFontBuildSrcData>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ ENDP	; ImVector<ImFontBuildSrcData>::~ImVector<ImFontBuildSrcData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ PROC	; ImVector<ImFontBuildSrcData>::ImVector<ImFontBuildSrcData>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ ENDP	; ImVector<ImFontBuildSrcData>::ImVector<ImFontBuildSrcData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z
_TEXT	SEGMENT
it_begin$1$ = 96
in$ = 96
out$ = 104
it_end$1$ = 112
?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z PROC ; UnpackBitVectorToFlatIndexList, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1936
	push	rbx
	push	r15
	sub	rsp, 72					; 00000048H
; File E:\reps\ocornut\imgui\imgui.h
; Line 1333
	movsxd	rax, DWORD PTR [rcx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1936
	mov	rbx, rdx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1331
	mov	rdx, QWORD PTR [rcx+8]
	mov	QWORD PTR it_begin$1$[rsp], rdx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1940
	mov	r15, rdx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1333
	lea	rax, QWORD PTR [rdx+rax*4]
	mov	QWORD PTR it_end$1$[rsp], rax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1940
	cmp	rdx, rax
	jae	$LN3@UnpackBitV
	mov	QWORD PTR [rsp+104], rbp
	mov	QWORD PTR [rsp+64], rsi
	mov	QWORD PTR [rsp+56], rdi
	mov	QWORD PTR [rsp+48], r12
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], r14
	npad	6
$LL4@UnpackBitV:
; Line 1941
	mov	r13d, DWORD PTR [r15]
	test	r13d, r13d
	je	$LN2@UnpackBitV
; Line 1942
	xor	ebp, ebp
	mov	edi, 1
$LL7@UnpackBitV:
; Line 1943
	test	edi, r13d
	je	$LN5@UnpackBitV
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1944
	lea	r12, QWORD PTR [r15*8]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	r8d, DWORD PTR [rbx+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1944
	lea	rax, QWORD PTR [rdx*8]
	sub	r12d, eax
	and	r12d, -32				; ffffffffffffffe0H
	add	r12d, ebp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	cmp	ecx, r8d
	jne	SHORT $LN22@UnpackBitV
	lea	esi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN20@UnpackBitV
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN21@UnpackBitV
$LN20@UnpackBitV:
	mov	eax, 8
$LN21@UnpackBitV:
	cmp	eax, esi
	cmovg	esi, eax
; Line 1344
	cmp	esi, r8d
	jle	SHORT $LN22@UnpackBitV
	movsxd	rcx, esi
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	r14, rax
	test	rdx, rdx
	je	SHORT $LN24@UnpackBitV
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN24@UnpackBitV:
	mov	ecx, DWORD PTR [rbx]
	mov	QWORD PTR [rbx+8], r14
	mov	DWORD PTR [rbx+4], esi
$LN22@UnpackBitV:
; Line 1347
	mov	rax, QWORD PTR [rbx+8]
	mov	rdx, QWORD PTR it_begin$1$[rsp]
	movsxd	rcx, ecx
	mov	DWORD PTR [rax+rcx*4], r12d
	inc	DWORD PTR [rbx]
$LN5@UnpackBitV:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1942
	inc	ebp
	rol	edi, 1
	cmp	ebp, 32					; 00000020H
	jb	$LL7@UnpackBitV
	mov	rax, QWORD PTR it_end$1$[rsp]
$LN2@UnpackBitV:
; Line 1940
	add	r15, 4
	cmp	r15, rax
	jb	$LL4@UnpackBitV
	mov	r14, QWORD PTR [rsp+32]
	mov	r13, QWORD PTR [rsp+40]
	mov	r12, QWORD PTR [rsp+48]
	mov	rdi, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+104]
$LN3@UnpackBitV:
; Line 1945
	add	rsp, 72					; 00000048H
	pop	r15
	pop	rbx
	ret	0
?UnpackBitVectorToFlatIndexList@@YAXPEBUImBitVector@@PEAU?$ImVector@H@@@Z ENDP ; UnpackBitVectorToFlatIndexList
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GImFontBuildSrcData@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GImFontBuildSrcData@@QEAAPEAXI@Z PROC		; ImFontBuildSrcData::`scalar deleting destructor', COMDAT
$LN21:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	edi, edx
	mov	rbx, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	mov	rcx, QWORD PTR [rcx+264]
	test	rcx, rcx
	je	SHORT $LN8@scalar
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN8@scalar:
	mov	rcx, QWORD PTR [rbx+248]
	test	rcx, rcx
	je	SHORT $LN15@scalar
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN15@scalar:
	test	dil, 1
	je	SHORT $LN18@scalar
	mov	edx, 272				; 00000110H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN18@scalar:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GImFontBuildSrcData@@QEAAPEAXI@Z ENDP		; ImFontBuildSrcData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1ImFontBuildSrcData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ImFontBuildSrcData@@QEAA@XZ PROC			; ImFontBuildSrcData::~ImFontBuildSrcData, COMDAT
$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	mov	rcx, QWORD PTR [rcx+264]
	test	rcx, rcx
	je	SHORT $LN4@ImFontBuil
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN4@ImFontBuil:
	mov	rcx, QWORD PTR [rbx+248]
	test	rcx, rcx
	je	SHORT $LN14@ImFontBuil
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN14@ImFontBuil:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1ImFontBuildSrcData@@QEAA@XZ ENDP			; ImFontBuildSrcData::~ImFontBuildSrcData
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Decode85@@YAXPEBEPEAE@Z
_TEXT	SEGMENT
src$ = 8
dst$ = 16
?Decode85@@YAXPEBEPEAE@Z PROC				; Decode85, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1739
	mov	QWORD PTR [rsp+8], rbx
; Line 1740
	movzx	ebx, BYTE PTR [rcx]
	test	bl, bl
	je	$LN3@Decode85
	lea	r11, QWORD PTR [rdx+2]
	lea	r10, QWORD PTR [rcx+2]
	npad	8
$LL2@Decode85:
; Line 1742
	movsx	edx, BYTE PTR [r10+1]
	xor	ecx, ecx
	movsx	eax, BYTE PTR [r10+2]
; Line 1745
	lea	r11, QWORD PTR [r11+4]
	movsx	r8d, BYTE PTR [r10]
	cmp	al, 92					; 0000005cH
	movsx	r9d, BYTE PTR [r10-1]
	lea	r10, QWORD PTR [r10+5]
	setge	cl
	add	ecx, 35					; 00000023H
	sub	eax, ecx
	imul	ecx, eax, 85				; 00000055H
	xor	eax, eax
	cmp	dl, 92					; 0000005cH
	setge	al
	add	eax, 35					; 00000023H
	sub	ecx, eax
	xor	eax, eax
	add	ecx, edx
	imul	edx, ecx, 85				; 00000055H
	cmp	r8b, 92					; 0000005cH
	setge	al
	add	eax, 35					; 00000023H
	sub	edx, eax
	xor	eax, eax
	add	edx, r8d
	imul	ecx, edx, 85				; 00000055H
	cmp	r9b, 92					; 0000005cH
	setge	al
	add	eax, 35					; 00000023H
	sub	ecx, eax
	xor	eax, eax
	add	ecx, r9d
	imul	edx, ecx, 85				; 00000055H
	cmp	bl, 92					; 0000005cH
	setge	al
	add	eax, 35					; 00000023H
	sub	edx, eax
	movsx	eax, bl
	add	edx, eax
	mov	BYTE PTR [r11-6], dl
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [r11-5], al
	mov	eax, edx
	shr	eax, 16
	shr	edx, 24
	mov	BYTE PTR [r11-4], al
	mov	BYTE PTR [r11-3], dl
	movzx	ebx, BYTE PTR [r10-2]
	test	bl, bl
	jne	$LL2@Decode85
$LN3@Decode85:
; Line 1747
	mov	rbx, QWORD PTR [rsp+8]
	ret	0
?Decode85@@YAXPEBEPEAE@Z ENDP				; Decode85
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Decode85Byte@@YAID@Z
_TEXT	SEGMENT
c$ = 8
?Decode85Byte@@YAID@Z PROC				; Decode85Byte, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1737
	xor	edx, edx
	movsx	eax, cl
	cmp	cl, 92					; 0000005cH
	setge	dl
	add	edx, 35					; 00000023H
	sub	eax, edx
	ret	0
?Decode85Byte@@YAID@Z ENDP				; Decode85Byte
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetDefaultCompressedFontDataTTFBase85@@YAPEBDXZ
_TEXT	SEGMENT
?GetDefaultCompressedFontDataTTFBase85@@YAPEBDXZ PROC	; GetDefaultCompressedFontDataTTFBase85, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3588
	lea	rax, OFFSET FLAT:?proggy_clean_ttf_compressed_data_base85@@3QBDB
; Line 3589
	ret	0
?GetDefaultCompressedFontDataTTFBase85@@YAPEBDXZ ENDP	; GetDefaultCompressedFontDataTTFBase85
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stb_decompress@@YAIPEAEPEBEI@Z
_TEXT	SEGMENT
output$ = 48
i$ = 56
__formal$ = 64
?stb_decompress@@YAIPEAEPEBEI@Z PROC			; stb_decompress, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3455
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; Line 3456
	movzx	eax, BYTE PTR [rdx+1]
	mov	rbx, rdx
	movzx	r8d, BYTE PTR [rdx]
	mov	rdi, rcx
	shl	r8d, 8
	add	r8d, eax
	movzx	eax, BYTE PTR [rdx+2]
	shl	r8d, 8
	add	r8d, eax
	movzx	eax, BYTE PTR [rdx+3]
	shl	r8d, 8
	add	r8d, eax
	cmp	r8d, 1471938560				; 57bc0000H
	jne	$LN35@stb_decomp
; Line 3457
	movzx	eax, BYTE PTR [rdx+5]
	movzx	ecx, BYTE PTR [rdx+4]
	shl	ecx, 8
	add	ecx, eax
	movzx	eax, BYTE PTR [rdx+6]
	shl	ecx, 8
	add	ecx, eax
	movzx	eax, BYTE PTR [rdx+7]
	shl	ecx, 8
	add	ecx, eax
	jne	$LN35@stb_decomp
; Line 3378
	movzx	r14d, BYTE PTR [rdx+8]
; Line 3462
	add	rbx, 16
; Line 3378
	movzx	eax, BYTE PTR [rdx+9]
; Line 3467
	mov	rcx, rbx
; Line 3378
	shl	eax, 16
	shl	r14d, 24
	add	r14d, eax
; Line 3459
	mov	QWORD PTR ?stb__barrier_in_b@@3PEBEEB, rdx
; Line 3378
	movzx	eax, BYTE PTR [rdx+10]
	shl	eax, 8
	add	r14d, eax
; Line 3461
	mov	QWORD PTR ?stb__barrier_out_b@@3PEAEEA, rdi
; Line 3378
	movzx	eax, BYTE PTR [rdx+11]
	add	r14d, eax
; Line 3464
	mov	QWORD PTR ?stb__dout@@3PEAEEA, rdi
	mov	esi, r14d
	add	rsi, rdi
	mov	QWORD PTR ?stb__barrier_out_e@@3PEAEEA, rsi
; Line 3467
	call	?stb_decompress_token@@YAPEBEPEBE@Z	; stb_decompress_token
	mov	rbp, rax
; Line 3468
	cmp	rax, rbx
	je	SHORT $LN49@stb_decomp
$LL2@stb_decomp:
; Line 3480
	cmp	QWORD PTR ?stb__dout@@3PEAEEA, rsi
	jbe	SHORT $LN54@stb_decomp
	mov	r8d, 3480				; 00000d98H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DG@EGIPGKEG@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAo?$AAu@
	call	QWORD PTR __imp__wassert
; Line 3481
	cmp	QWORD PTR ?stb__dout@@3PEAEEA, rsi
	ja	$LN35@stb_decomp
$LN54@stb_decomp:
; Line 3467
	mov	rcx, rbp
	mov	rbx, rbp
	call	?stb_decompress_token@@YAPEBEPEBE@Z	; stb_decompress_token
	mov	rbp, rax
; Line 3468
	cmp	rax, rbx
	jne	SHORT $LL2@stb_decomp
$LN49@stb_decomp:
; Line 3469
	cmp	BYTE PTR [rbp], 5
	jne	$LN8@stb_decomp
	cmp	BYTE PTR [rbp+1], 250			; 000000faH
	jne	$LN8@stb_decomp
	mov	ebx, r14d
; Line 3470
	add	rbx, rdi
	cmp	QWORD PTR ?stb__dout@@3PEAEEA, rbx
	je	SHORT $LN10@stb_decomp
	mov	r8d, 3470				; 00000d8eH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DG@GCANDLHA@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu@
	call	QWORD PTR __imp__wassert
; Line 3471
	cmp	QWORD PTR ?stb__dout@@3PEAEEA, rbx
	jne	$LN35@stb_decomp
$LN10@stb_decomp:
; Line 3427
	mov	eax, 1584310703				; 5e6ea9afH
	mov	ebx, r14d
	mul	r14d
	xor	r9d, r9d
; Line 3472
	mov	esi, r14d
; Line 3427
	shr	edx, 11
	mov	ecx, 1
	imul	eax, edx, 5552				; 000015b0H
	sub	ebx, eax
; Line 3430
	test	r14d, r14d
	je	$LN21@stb_decomp
$LL20@stb_decomp:
; Line 3431
	xor	edx, edx
	cmp	ebx, 7
	jbe	SHORT $LN23@stb_decomp
	lea	r8d, QWORD PTR [rdx+7]
	npad	13
$LL24@stb_decomp:
; Line 3432
	movzx	eax, BYTE PTR [rdi]
	add	edx, 8
	add	ecx, eax
	add	r8d, 8
; Line 3433
	movzx	eax, BYTE PTR [rdi+1]
	add	r9d, ecx
	add	ecx, eax
; Line 3434
	movzx	eax, BYTE PTR [rdi+2]
	add	r9d, ecx
	add	ecx, eax
; Line 3435
	movzx	eax, BYTE PTR [rdi+3]
	add	r9d, ecx
	add	ecx, eax
; Line 3436
	movzx	eax, BYTE PTR [rdi+4]
	add	r9d, ecx
	add	ecx, eax
; Line 3437
	movzx	eax, BYTE PTR [rdi+5]
	add	r9d, ecx
	add	ecx, eax
; Line 3438
	movzx	eax, BYTE PTR [rdi+6]
	add	r9d, ecx
	add	ecx, eax
; Line 3439
	movzx	eax, BYTE PTR [rdi+7]
	add	r9d, ecx
	add	ecx, eax
; Line 3441
	add	rdi, 8
	add	r9d, ecx
	cmp	r8d, ebx
	jb	SHORT $LL24@stb_decomp
$LN23@stb_decomp:
	xor	r8d, r8d
	xor	r10d, r10d
; Line 3444
	cmp	edx, ebx
	jae	SHORT $LN45@stb_decomp
	mov	eax, ebx
	sub	eax, edx
	cmp	eax, 2
	jb	SHORT $LC46@stb_decomp
	mov	eax, ebx
	sub	eax, edx
	sub	eax, 2
	shr	eax, 1
	inc	eax
	mov	r11d, eax
	lea	edx, DWORD PTR [rdx+rax*2]
	npad	5
$LL48@stb_decomp:
; Line 3445
	movzx	eax, BYTE PTR [rdi]
	add	ecx, eax
	movzx	eax, BYTE PTR [rdi+1]
	add	r8d, ecx
	add	rdi, 2
	add	ecx, eax
	add	r10d, ecx
	sub	r11, 1
	jne	SHORT $LL48@stb_decomp
$LC46@stb_decomp:
; Line 3444
	cmp	edx, ebx
	jae	SHORT $LN47@stb_decomp
; Line 3445
	movzx	eax, BYTE PTR [rdi]
	add	ecx, eax
	add	r9d, ecx
	inc	rdi
$LN47@stb_decomp:
	lea	eax, DWORD PTR [r10+r8]
	add	r9d, eax
$LN45@stb_decomp:
; Line 3447
	mov	eax, -2146992015			; 80078071H
	mul	ecx
	shr	edx, 15
	imul	eax, edx, -65521			; ffff000fH
	add	ecx, eax
	mov	eax, -2146992015			; 80078071H
	mul	r9d
	shr	edx, 15
	imul	eax, edx, -65521			; ffff000fH
	add	r9d, eax
; Line 3448
	sub	esi, ebx
; Line 3449
	mov	ebx, 5552				; 000015b0H
	jne	$LL20@stb_decomp
$LN21@stb_decomp:
; Line 3472
	movzx	r8d, BYTE PTR [rbp+2]
	movzx	eax, BYTE PTR [rbp+3]
	movzx	edx, BYTE PTR [rbp+4]
	shl	r8d, 24
	shl	edx, 8
	shl	eax, 16
	add	r8d, eax
; Line 3451
	shl	r9d, 16
; Line 3472
	add	r8d, edx
; Line 3451
	add	r9d, ecx
; Line 3472
	movzx	edx, BYTE PTR [rbp+5]
	add	r8d, edx
	cmp	r9d, r8d
	jne	SHORT $LN35@stb_decomp
; Line 3474
	mov	eax, r14d
	jmp	SHORT $LN3@stb_decomp
$LN8@stb_decomp:
; Line 3476
	mov	r8d, 3476				; 00000d94H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
$LN35@stb_decomp:
; Line 3484
	xor	eax, eax
$LN3@stb_decomp:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?stb_decompress@@YAIPEAEPEBEI@Z ENDP			; stb_decompress
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stb_decompress_length@@YAIPEBE@Z
_TEXT	SEGMENT
input$ = 8
?stb_decompress_length@@YAIPEBE@Z PROC			; stb_decompress_length, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3378
	movzx	edx, BYTE PTR [rcx+9]
	movzx	eax, BYTE PTR [rcx+8]
	shl	eax, 8
	add	eax, edx
	movzx	edx, BYTE PTR [rcx+10]
	movzx	ecx, BYTE PTR [rcx+11]
	shl	eax, 8
	add	eax, edx
	shl	eax, 8
	add	eax, ecx
; Line 3379
	ret	0
?stb_decompress_length@@YAIPEBE@Z ENDP			; stb_decompress_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z
_TEXT	SEGMENT
p$ = 48
??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z PROC		; IM_DELETE<ImFont>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1291
$LN25:
	test	rcx, rcx
	je	SHORT $LN22@IM_DELETE
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2607
	call	?ClearOutputData@ImFont@@QEAAXXZ	; ImFont::ClearOutputData
	npad	1
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	mov	rcx, QWORD PTR [rbx+48]
	test	rcx, rcx
	je	SHORT $LN11@IM_DELETE
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN11@IM_DELETE:
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN15@IM_DELETE
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN15@IM_DELETE:
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN19@IM_DELETE
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN19@IM_DELETE:
; Line 1291
	mov	rcx, rbx
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	add	rsp, 32					; 00000020H
	pop	rbx
$LN22@IM_DELETE:
	ret	0
??$IM_DELETE@UImFont@@@@YAXPEAUImFont@@@Z ENDP		; IM_DELETE<ImFont>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ImLerp@H@@YAHHHM@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
t$ = 24
??$ImLerp@H@@YAHHHM@Z PROC				; ImLerp<int>, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	sub	edx, ecx
	movd	xmm0, ecx
	cvtdq2ps xmm0, xmm0
	movd	xmm1, edx
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, xmm2
	addss	xmm1, xmm0
	cvttss2si eax, xmm1
	ret	0
??$ImLerp@H@@YAHHHM@Z ENDP				; ImLerp<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ImClamp@M@@YAMMMM@Z
_TEXT	SEGMENT
v$ = 8
mn$ = 16
mx$ = 24
??$ImClamp@M@@YAMMMM@Z PROC				; ImClamp<float>, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm1, xmm0
	jbe	SHORT $LN5@ImClamp
	movaps	xmm0, xmm1
	ret	0
$LN5@ImClamp:
	minss	xmm2, xmm0
	movaps	xmm0, xmm2
	ret	0
??$ImClamp@M@@YAMMMM@Z ENDP				; ImClamp<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?CanMergeDrawCommands@@YA_NPEAUImDrawCmd@@0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?CanMergeDrawCommands@@YA_NPEAUImDrawCmd@@0@Z PROC	; CanMergeDrawCommands, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1353
	mov	rax, QWORD PTR [rcx+4]
	cmp	rax, QWORD PTR [rdx+4]
	jne	SHORT $LN3@CanMergeDr
	mov	rax, QWORD PTR [rcx+12]
	cmp	rax, QWORD PTR [rdx+12]
	jne	SHORT $LN3@CanMergeDr
	mov	rax, QWORD PTR [rdx+24]
	cmp	QWORD PTR [rcx+24], rax
	jne	SHORT $LN3@CanMergeDr
	mov	eax, DWORD PTR [rdx+32]
	cmp	DWORD PTR [rcx+32], eax
	jne	SHORT $LN3@CanMergeDr
	cmp	QWORD PTR [rcx+40], 0
	jne	SHORT $LN3@CanMergeDr
	cmp	QWORD PTR [rdx+40], 0
	jne	SHORT $LN3@CanMergeDr
	mov	al, 1
; Line 1354
	ret	0
$LN3@CanMergeDr:
; Line 1353
	xor	al, al
; Line 1354
	ret	0
?CanMergeDrawCommands@@YA_NPEAUImDrawCmd@@0@Z ENDP	; CanMergeDrawCommands
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z
_TEXT	SEGMENT
$T1 = 96
path$ = 288
x1$ = 296
y1$ = 304
x2$ = 312
y2$ = 320
x3$ = 328
y3$ = 336
x4$ = 344
y4$ = 352
tess_tol$ = 360
level$ = 368
?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z PROC ; PathBezierToCasteljau, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 947
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	movss	DWORD PTR [rax+24], xmm2
	movss	DWORD PTR [rax+16], xmm1
	push	rdi
	sub	rsp, 272				; 00000110H
	movaps	XMMWORD PTR [rax-24], xmm6
	mov	rbx, rcx
	movaps	XMMWORD PTR [rax-40], xmm7
	movaps	XMMWORD PTR [rax-56], xmm8
; Line 948
	movss	xmm8, DWORD PTR x4$[rsp]
	movaps	XMMWORD PTR [rax-72], xmm9
	movaps	xmm5, xmm8
; Line 949
	movss	xmm9, DWORD PTR y4$[rsp]
	subss	xmm5, xmm1
	movaps	XMMWORD PTR [rax-88], xmm10
	movaps	xmm6, xmm9
	movaps	XMMWORD PTR [rax-104], xmm11
	subss	xmm6, xmm2
	movaps	XMMWORD PTR [rax-120], xmm12
	movaps	xmm11, xmm3
; Line 950
	movss	xmm12, DWORD PTR y2$[rsp]
	movaps	xmm3, xmm1
	movaps	XMMWORD PTR [rax-136], xmm13
	movaps	xmm0, xmm12
; Line 951
	movss	xmm13, DWORD PTR x3$[rsp]
	subss	xmm0, xmm9
	movaps	XMMWORD PTR [rax-152], xmm14
	movaps	xmm4, xmm11
	movss	xmm14, DWORD PTR y3$[rsp]
	movaps	XMMWORD PTR [rsp+112], xmm15
	subss	xmm4, xmm8
; Line 952
	movss	xmm15, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	movaps	xmm1, xmm13
	mulss	xmm0, xmm5
	subss	xmm1, xmm8
	mulss	xmm4, xmm6
	mulss	xmm1, xmm6
	subss	xmm4, xmm0
; Line 954
	mulss	xmm6, xmm6
	movaps	xmm0, xmm14
	subss	xmm0, xmm9
	andps	xmm4, xmm15
	mulss	xmm0, xmm5
	mulss	xmm5, xmm5
	subss	xmm1, xmm0
	addss	xmm6, xmm5
	andps	xmm1, xmm15
	addss	xmm4, xmm1
	mulss	xmm6, DWORD PTR tess_tol$[rsp]
	mulss	xmm4, xmm4
	comiss	xmm6, xmm4
	ja	$LN17@PathBezier
	movss	xmm10, DWORD PTR __real@3f000000
	mov	edi, DWORD PTR level$[rsp]
	npad	1
$LL15@PathBezier:
; Line 958
	cmp	edi, 10
	jge	$LN4@PathBezier
; Line 960
	addss	xmm3, xmm11
	movaps	xmm5, xmm2
	addss	xmm5, xmm12
; Line 966
	inc	edi
	addss	xmm12, xmm14
	mov	DWORD PTR [rsp+80], edi
	addss	xmm11, xmm13
	mov	rcx, rbx
	addss	xmm14, xmm9
	addss	xmm13, xmm8
	mulss	xmm3, xmm10
	mulss	xmm12, xmm10
	mulss	xmm11, xmm10
	movaps	xmm1, xmm12
	mulss	xmm5, xmm10
	movaps	xmm2, xmm1
	mulss	xmm14, xmm10
	movaps	xmm0, xmm11
	mulss	xmm13, xmm10
	movaps	xmm4, xmm0
	addss	xmm2, xmm5
	movaps	xmm12, xmm14
	addss	xmm4, xmm3
	addss	xmm12, xmm1
	movaps	xmm11, xmm13
	movss	xmm1, DWORD PTR x1$[rsp]
	addss	xmm11, xmm0
	movss	xmm0, DWORD PTR tess_tol$[rsp]
	movss	DWORD PTR [rsp+72], xmm0
	mulss	xmm2, xmm10
	mulss	xmm4, xmm10
	mulss	xmm12, xmm10
	mulss	xmm11, xmm10
	movaps	xmm6, xmm12
	addss	xmm6, xmm2
	movaps	xmm7, xmm11
	addss	xmm7, xmm4
	mulss	xmm6, xmm10
	mulss	xmm7, xmm10
	movss	DWORD PTR [rsp+64], xmm6
	movss	DWORD PTR [rsp+56], xmm7
	movss	DWORD PTR [rsp+48], xmm2
	movss	xmm2, DWORD PTR y1$[rsp]
	movss	DWORD PTR [rsp+40], xmm4
	movss	DWORD PTR [rsp+32], xmm5
	call	?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z ; PathBezierToCasteljau
	movaps	xmm3, xmm8
; Line 967
	movss	DWORD PTR y1$[rsp], xmm6
	subss	xmm3, xmm7
	movss	DWORD PTR x1$[rsp], xmm7
	movaps	xmm2, xmm11
	movaps	xmm0, xmm12
	subss	xmm2, xmm8
	movaps	xmm4, xmm9
	subss	xmm4, xmm6
	movaps	xmm1, xmm13
	subss	xmm0, xmm9
	subss	xmm1, xmm8
	mulss	xmm2, xmm4
	mulss	xmm0, xmm3
	mulss	xmm1, xmm4
	subss	xmm2, xmm0
	mulss	xmm4, xmm4
	movaps	xmm0, xmm14
	subss	xmm0, xmm9
	andps	xmm2, xmm15
	mulss	xmm0, xmm3
	mulss	xmm3, xmm3
	subss	xmm1, xmm0
	addss	xmm4, xmm3
	movaps	xmm3, xmm7
	andps	xmm1, xmm15
	addss	xmm2, xmm1
	mulss	xmm4, DWORD PTR tess_tol$[rsp]
	mulss	xmm2, xmm2
	comiss	xmm4, xmm2
	movaps	xmm2, xmm6
	jbe	$LL15@PathBezier
$LN17@PathBezier:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	eax, DWORD PTR [rbx]
	mov	ecx, DWORD PTR [rbx+4]
; Line 212
	movss	DWORD PTR $T1[rsp], xmm8
	movss	DWORD PTR $T1[rsp+4], xmm9
; Line 1347
	cmp	eax, ecx
	jne	SHORT $LN9@PathBezier
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN13@PathBezier
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN14@PathBezier
$LN13@PathBezier:
	mov	eax, 8
$LN14@PathBezier:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN9@PathBezier:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
$LN4@PathBezier:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 969
	movaps	xmm15, XMMWORD PTR [rsp+112]
	lea	r11, QWORD PTR [rsp+272]
	mov	rbx, QWORD PTR [r11+16]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	movaps	xmm14, XMMWORD PTR [r11-144]
	mov	rsp, r11
	pop	rdi
	ret	0
?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z ENDP ; PathBezierToCasteljau
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ImClamp@H@@YAHHHH@Z
_TEXT	SEGMENT
v$ = 8
mn$ = 16
mx$ = 24
??$ImClamp@H@@YAHHHH@Z PROC				; ImClamp<int>, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	cmp	ecx, edx
	jge	SHORT $LN3@ImClamp
	mov	eax, edx
	ret	0
$LN3@ImClamp:
	cmp	ecx, r8d
	cmovg	ecx, r8d
	mov	eax, ecx
	ret	0
??$ImClamp@H@@YAHHHH@Z ENDP				; ImClamp<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__oversample_shift@@YAMH@Z
_TEXT	SEGMENT
oversample$ = 8
?stbtt__oversample_shift@@YAMH@Z PROC			; stbtt__oversample_shift, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3978
	test	ecx, ecx
	jne	SHORT $LN2@stbtt__ove
	xorps	xmm0, xmm0
; Line 3986
	ret	0
$LN2@stbtt__ove:
; Line 3985
	mov	eax, 1
	movd	xmm1, ecx
	sub	eax, ecx
	cvtdq2ps xmm1, xmm1
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	addss	xmm1, xmm1
	divss	xmm0, xmm1
; Line 3986
	ret	0
?stbtt__oversample_shift@@YAMH@Z ENDP			; stbtt__oversample_shift
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__v_prefilter@@YAXPEAEHHHI@Z
_TEXT	SEGMENT
kernel_width$GSCopy$1$ = 32
h$1$ = 36
tv886 = 40
buffer$ = 48
__$ArrayPad$ = 56
pixels$ = 128
w$ = 136
h$ = 144
stride_in_bytes$ = 152
kernel_width$ = 160
?stbtt__v_prefilter@@YAXPEAEHHHI@Z PROC			; stbtt__v_prefilter, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3915
	mov	r11, rsp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	edi, DWORD PTR kernel_width$[rsp]
; Line 3917
	mov	esi, r8d
	sub	esi, edi
	movsxd	r12, r9d
	mov	DWORD PTR h$1$[rsp], r8d
	mov	r15d, r8d
	mov	DWORD PTR kernel_width$GSCopy$1$[rsp], edi
	mov	r14, rcx
; Line 3919
	mov	QWORD PTR [r11-72], 0
; Line 3920
	test	edx, edx
	jle	$LN3@stbtt__v_p
; Line 3915
	mov	QWORD PTR [r11+16], rbx
	mov	eax, edi
	mov	QWORD PTR [r11-48], rbp
	mov	ebp, edx
	mov	QWORD PTR tv886[rsp], rbp
	mov	QWORD PTR [r11-56], r13
$LL4@stbtt__v_p:
; Line 3923
	mov	r8, rax
	lea	rcx, QWORD PTR buffer$[rsp]
	xor	edx, edx
	call	memset
; Line 3928
	mov	eax, edi
	xor	ebx, ebx
	sub	eax, 2
	je	$LN28@stbtt__v_p
	sub	eax, 1
	je	$LN29@stbtt__v_p
	sub	eax, 1
	je	$LN30@stbtt__v_p
	xor	ecx, ecx
	cmp	eax, 1
	je	SHORT $LN31@stbtt__v_p
; Line 3958
	test	esi, esi
	js	$LN8@stbtt__v_p
	xor	r10d, r10d
	npad	15
$LL21@stbtt__v_p:
; Line 3959
	mov	eax, ecx
	movsxd	r9, r10d
	and	eax, 7
	add	r10d, r12d
	movzx	r8d, BYTE PTR [r9+r14]
	movzx	edx, BYTE PTR buffer$[rsp+rax]
	mov	eax, r8d
	sub	eax, edx
; Line 3961
	xor	edx, edx
	add	ebx, eax
	lea	eax, DWORD PTR [rdi+rcx]
	and	eax, 7
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
	mov	eax, ebx
	div	edi
	mov	BYTE PTR [r9+r14], al
	cmp	ecx, esi
	jle	SHORT $LL21@stbtt__v_p
; Line 3958
	jmp	$LN8@stbtt__v_p
$LN31@stbtt__v_p:
; Line 3951
	test	esi, esi
	js	$LN8@stbtt__v_p
	xor	r10d, r10d
	npad	9
$LL18@stbtt__v_p:
; Line 3952
	mov	eax, ecx
	movsxd	r9, r10d
	and	eax, 7
	add	r10d, r12d
	movzx	r8d, BYTE PTR [r9+r14]
	movzx	edx, BYTE PTR buffer$[rsp+rax]
	mov	eax, r8d
	sub	eax, edx
	add	ebx, eax
; Line 3953
	lea	eax, DWORD PTR [rcx-3]
	and	eax, 7
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
; Line 3954
	mov	eax, -858993459				; cccccccdH
	mul	ebx
	shr	edx, 2
	mov	BYTE PTR [r9+r14], dl
	cmp	ecx, esi
	jle	SHORT $LL18@stbtt__v_p
; Line 3956
	jmp	$LN8@stbtt__v_p
$LN30@stbtt__v_p:
; Line 3944
	xor	ecx, ecx
	test	esi, esi
	js	$LN8@stbtt__v_p
	xor	r10d, r10d
	npad	3
$LL15@stbtt__v_p:
; Line 3945
	mov	eax, ecx
	movsxd	r9, r10d
	and	eax, 7
	add	r10d, r12d
	movzx	r8d, BYTE PTR [r9+r14]
	movzx	edx, BYTE PTR buffer$[rsp+rax]
	mov	eax, r8d
	sub	eax, edx
	add	ebx, eax
; Line 3946
	lea	eax, DWORD PTR [rcx-4]
	and	eax, 7
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
; Line 3947
	mov	eax, ebx
	shr	eax, 2
	mov	BYTE PTR [r9+r14], al
	cmp	ecx, esi
	jle	SHORT $LL15@stbtt__v_p
; Line 3949
	jmp	$LN8@stbtt__v_p
$LN29@stbtt__v_p:
; Line 3937
	xor	ecx, ecx
	test	esi, esi
	js	$LN8@stbtt__v_p
	xor	r10d, r10d
	npad	8
$LL12@stbtt__v_p:
; Line 3938
	mov	eax, ecx
	movsxd	r9, r10d
	and	eax, 7
	add	r10d, r12d
	movzx	r8d, BYTE PTR [r9+r14]
	movzx	edx, BYTE PTR buffer$[rsp+rax]
	mov	eax, r8d
	sub	eax, edx
	add	ebx, eax
; Line 3939
	lea	eax, DWORD PTR [rcx+3]
	and	eax, 7
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
; Line 3940
	mov	eax, -1431655765			; aaaaaaabH
	mul	ebx
	shr	edx, 1
	mov	BYTE PTR [r9+r14], dl
	cmp	ecx, esi
	jle	SHORT $LL12@stbtt__v_p
; Line 3942
	jmp	SHORT $LN8@stbtt__v_p
$LN28@stbtt__v_p:
; Line 3930
	xor	ecx, ecx
	test	esi, esi
	js	SHORT $LN8@stbtt__v_p
	xor	r10d, r10d
	npad	11
$LL9@stbtt__v_p:
; Line 3931
	mov	eax, ecx
	movsxd	r9, r10d
	and	eax, 7
	add	r10d, r12d
	movzx	r8d, BYTE PTR [r9+r14]
	movzx	edx, BYTE PTR buffer$[rsp+rax]
	mov	eax, r8d
	sub	eax, edx
	add	ebx, eax
; Line 3932
	lea	eax, DWORD PTR [rcx+2]
	and	eax, 7
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
; Line 3933
	mov	eax, ebx
	shr	eax, 1
	mov	BYTE PTR [r9+r14], al
	cmp	ecx, esi
	jle	SHORT $LL9@stbtt__v_p
$LN8@stbtt__v_p:
; Line 3966
	cmp	ecx, r15d
	jge	SHORT $LN23@stbtt__v_p
	mov	eax, r12d
	movsxd	rbp, ecx
	imul	eax, ecx
	movsxd	rdi, eax
	add	rdi, r14
	sub	r15d, ecx
	mov	ecx, DWORD PTR kernel_width$GSCopy$1$[rsp]
$LL24@stbtt__v_p:
; Line 3967
	cmp	BYTE PTR [rdi], 0
	je	SHORT $LN25@stbtt__v_p
	mov	r8d, 3967				; 00000f7fH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DO@LAPBLJ@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$CK?$AAs?$AAt?$AAr?$AAi?$AAd?$AAe@
	call	QWORD PTR __imp__wassert
	mov	ecx, DWORD PTR kernel_width$GSCopy$1$[rsp]
$LN25@stbtt__v_p:
; Line 3968
	mov	rax, rbp
; Line 3969
	xor	edx, edx
	and	eax, 7
	inc	rbp
	movzx	eax, BYTE PTR buffer$[rsp+rax]
	sub	ebx, eax
	mov	eax, ebx
	div	ecx
	mov	BYTE PTR [rdi], al
	add	rdi, r12
	sub	r15, 1
	jne	SHORT $LL24@stbtt__v_p
	mov	edi, DWORD PTR kernel_width$GSCopy$1$[rsp]
	mov	rbp, QWORD PTR tv886[rsp]
	mov	r15d, DWORD PTR h$1$[rsp]
$LN23@stbtt__v_p:
; Line 3972
	inc	r14
	mov	eax, edi
	sub	rbp, 1
	mov	QWORD PTR tv886[rsp], rbp
	jne	$LL4@stbtt__v_p
; Line 3920
	mov	r13, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+136]
$LN3@stbtt__v_p:
; Line 3974
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
?stbtt__v_prefilter@@YAXPEAEHHHI@Z ENDP			; stbtt__v_prefilter
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__h_prefilter@@YAXPEAEHHHI@Z
_TEXT	SEGMENT
w$1$ = 32
tv713 = 40
buffer$ = 48
__$ArrayPad$ = 56
pixels$ = 112
w$ = 120
h$ = 128
stride_in_bytes$ = 136
kernel_width$ = 144
?stbtt__h_prefilter@@YAXPEAEHHHI@Z PROC			; stbtt__h_prefilter, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3853
	mov	r11, rsp
	push	rbp
	push	r12
	push	r14
	push	r15
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r12d, DWORD PTR kernel_width$[rsp]
; Line 3855
	mov	eax, edx
	sub	eax, r12d
	mov	DWORD PTR w$1$[rsp], edx
; Line 3857
	mov	QWORD PTR [r11-56], 0
	mov	ebp, edx
; Line 3896
	movsxd	r14, eax
	mov	r15, rcx
	test	r8d, r8d
	jle	$LN3@stbtt__h_p
; Line 3853
	mov	QWORD PTR [r11+16], rbx
	mov	ecx, r12d
	mov	QWORD PTR [r11+24], rsi
	mov	QWORD PTR [r11+32], rdi
	movsxd	rax, r9d
	mov	QWORD PTR [r11-40], r13
	mov	r13d, r8d
	mov	QWORD PTR tv713[rsp], rax
	npad	11
$LL4@stbtt__h_p:
; Line 3861
	mov	r8, rcx
	xor	edx, edx
	lea	rcx, QWORD PTR buffer$[rsp]
	call	memset
; Line 3866
	mov	eax, r12d
	xor	ebx, ebx
	sub	eax, 2
	je	$LN28@stbtt__h_p
	sub	eax, 1
	je	$LN29@stbtt__h_p
	sub	eax, 1
	je	$LN30@stbtt__h_p
	xor	ecx, ecx
	cmp	eax, 1
	je	SHORT $LN31@stbtt__h_p
; Line 3896
	test	r14, r14
	js	$LN8@stbtt__h_p
	mov	r9, r15
	lea	r10, QWORD PTR [r14+1]
	npad	10
$LL21@stbtt__h_p:
; Line 3897
	movzx	r8d, BYTE PTR [r9]
	lea	r9, QWORD PTR [r9+1]
	movsxd	rax, ecx
	mov	edx, r8d
	and	eax, 7
	movzx	eax, BYTE PTR buffer$[rsp+rax]
	sub	edx, eax
; Line 3898
	lea	eax, DWORD PTR [r12+rcx]
	and	eax, 7
	add	ebx, edx
; Line 3899
	xor	edx, edx
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
	mov	eax, ebx
	div	r12d
	mov	BYTE PTR [r9-1], al
	sub	r10, 1
	jne	SHORT $LL21@stbtt__h_p
; Line 3896
	jmp	$LN8@stbtt__h_p
$LN31@stbtt__h_p:
; Line 3889
	test	r14, r14
	js	$LN8@stbtt__h_p
	mov	r9, r15
	lea	r10, QWORD PTR [r14+1]
	npad	2
$LL18@stbtt__h_p:
; Line 3890
	movzx	r8d, BYTE PTR [r9]
	lea	r9, QWORD PTR [r9+1]
	movsxd	rax, ecx
	mov	edx, r8d
	and	eax, 7
	movzx	eax, BYTE PTR buffer$[rsp+rax]
	sub	edx, eax
; Line 3891
	lea	eax, DWORD PTR [rcx-3]
	and	eax, 7
	add	ebx, edx
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
; Line 3892
	mov	eax, -858993459				; cccccccdH
	mul	ebx
	shr	edx, 2
	mov	BYTE PTR [r9-1], dl
	sub	r10, 1
	jne	SHORT $LL18@stbtt__h_p
; Line 3894
	jmp	$LN8@stbtt__h_p
$LN30@stbtt__h_p:
; Line 3882
	xor	ecx, ecx
	test	r14, r14
	js	$LN8@stbtt__h_p
	mov	r9, r15
	lea	r10, QWORD PTR [r14+1]
$LL15@stbtt__h_p:
; Line 3883
	movzx	r8d, BYTE PTR [r9]
	lea	r9, QWORD PTR [r9+1]
	movsxd	rax, ecx
	mov	edx, r8d
	and	eax, 7
	movzx	eax, BYTE PTR buffer$[rsp+rax]
	sub	edx, eax
; Line 3884
	lea	eax, DWORD PTR [rcx-4]
	and	eax, 7
	add	ebx, edx
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
; Line 3885
	mov	eax, ebx
	shr	eax, 2
	mov	BYTE PTR [r9-1], al
	sub	r10, 1
	jne	SHORT $LL15@stbtt__h_p
; Line 3887
	jmp	$LN8@stbtt__h_p
$LN29@stbtt__h_p:
; Line 3875
	xor	ecx, ecx
	test	r14, r14
	js	$LN8@stbtt__h_p
	mov	r9, r15
	lea	r10, QWORD PTR [r14+1]
	npad	1
$LL12@stbtt__h_p:
; Line 3876
	movzx	r8d, BYTE PTR [r9]
	lea	r9, QWORD PTR [r9+1]
	movsxd	rax, ecx
	mov	edx, r8d
	and	eax, 7
	movzx	eax, BYTE PTR buffer$[rsp+rax]
	sub	edx, eax
; Line 3877
	lea	eax, DWORD PTR [rcx+3]
	and	eax, 7
	add	ebx, edx
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
; Line 3878
	mov	eax, -1431655765			; aaaaaaabH
	mul	ebx
	shr	edx, 1
	mov	BYTE PTR [r9-1], dl
	sub	r10, 1
	jne	SHORT $LL12@stbtt__h_p
; Line 3880
	jmp	SHORT $LN8@stbtt__h_p
$LN28@stbtt__h_p:
; Line 3868
	xor	ecx, ecx
	test	r14, r14
	js	SHORT $LN8@stbtt__h_p
	mov	r9, r15
	lea	r10, QWORD PTR [r14+1]
	npad	6
$LL9@stbtt__h_p:
; Line 3869
	movzx	r8d, BYTE PTR [r9]
	lea	r9, QWORD PTR [r9+1]
	movsxd	rax, ecx
	mov	edx, r8d
	and	eax, 7
	movzx	eax, BYTE PTR buffer$[rsp+rax]
	sub	edx, eax
; Line 3870
	lea	eax, DWORD PTR [rcx+2]
	and	eax, 7
	add	ebx, edx
	inc	ecx
	mov	BYTE PTR buffer$[rsp+rax], r8b
; Line 3871
	mov	eax, ebx
	shr	eax, 1
	mov	BYTE PTR [r9-1], al
	sub	r10, 1
	jne	SHORT $LL9@stbtt__h_p
$LN8@stbtt__h_p:
; Line 3904
	cmp	ecx, ebp
	jge	SHORT $LN23@stbtt__h_p
	movsxd	rsi, ecx
	sub	ebp, ecx
	lea	rdi, QWORD PTR [rsi+r15]
$LL24@stbtt__h_p:
; Line 3905
	cmp	BYTE PTR [rdi], 0
	je	SHORT $LN25@stbtt__h_p
	mov	r8d, 3905				; 00000f41H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BO@BDJAMAMF@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
$LN25@stbtt__h_p:
; Line 3906
	mov	rax, rsi
; Line 3907
	xor	edx, edx
	and	eax, 7
	inc	rsi
	movzx	eax, BYTE PTR buffer$[rsp+rax]
	sub	ebx, eax
	mov	eax, ebx
	div	r12d
	mov	BYTE PTR [rdi], al
	inc	rdi
	sub	rbp, 1
	jne	SHORT $LL24@stbtt__h_p
	mov	ebp, DWORD PTR w$1$[rsp]
$LN23@stbtt__h_p:
; Line 3910
	add	r15, QWORD PTR tv713[rsp]
	mov	rcx, r12
	sub	r13, 1
	jne	$LL4@stbtt__h_p
; Line 3858
	mov	r13, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+136]
	mov	rsi, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [rsp+120]
$LN3@stbtt__h_p:
; Line 3912
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	pop	r15
	pop	r14
	pop	r12
	pop	rbp
	ret	0
?stbtt__h_prefilter@@YAXPEAEHHHI@Z ENDP			; stbtt__h_prefilter
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z
_TEXT	SEGMENT
vertices$ = 240
num_points$ = 248
num_verts$ = 248
objspace_flatness$ = 256
contour_lengths$ = 264
num_contours$ = 272
userdata$ = 280
?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z PROC ; stbtt_FlattenCurves, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3459
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r13
	push	r14
	push	r15
	sub	rsp, 176				; 000000b0H
; Line 3460
	xor	r14d, r14d
	movaps	XMMWORD PTR [rsp+96], xmm10
; Line 3461
	mov	DWORD PTR num_points$[rsp], r14d
	movaps	xmm10, xmm2
; Line 3463
	mulss	xmm10, xmm10
	mov	r15, r9
; Line 3467
	movsxd	r13, edx
	mov	rbx, rcx
	mov	edi, r14d
	mov	r8d, r14d
	mov	ebp, r14d
	test	edx, edx
	jle	SHORT $LN3@stbtt_Flat
	lea	rdx, QWORD PTR [rcx+12]
	mov	rcx, r13
	npad	3
$LL38@stbtt_Flat:
	cmp	BYTE PTR [rdx], 1
	lea	eax, DWORD PTR [r8+1]
	lea	rdx, QWORD PTR [rdx+14]
	cmovne	eax, r8d
	mov	r8d, eax
	sub	rcx, 1
	jne	SHORT $LL38@stbtt_Flat
$LN3@stbtt_Flat:
; Line 3471
	mov	rsi, QWORD PTR num_contours$[rsp]
	mov	DWORD PTR [rsi], r8d
; Line 3472
	test	r8d, r8d
	je	SHORT $LN54@stbtt_Flat
; Line 3474
	movsxd	rcx, r8d
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR [r15], rax
; Line 3476
	test	rax, rax
	jne	SHORT $LN15@stbtt_Flat
; Line 3477
	mov	DWORD PTR [rsi], r14d
$LN54@stbtt_Flat:
; Line 3533
	xor	eax, eax
	jmp	$LN1@stbtt_Flat
$LN15@stbtt_Flat:
	mov	QWORD PTR [rsp+256], r12
; Line 3482
	xor	r12d, r12d
	movaps	XMMWORD PTR [rsp+160], xmm6
	movaps	XMMWORD PTR [rsp+144], xmm7
	movaps	XMMWORD PTR [rsp+128], xmm8
	movaps	XMMWORD PTR [rsp+112], xmm9
$LL7@stbtt_Flat:
; Line 3484
	xorps	xmm8, xmm8
	xorps	xmm9, xmm9
	cmp	r12d, 1
	jne	SHORT $LN17@stbtt_Flat
; Line 3485
	movsxd	rcx, DWORD PTR num_points$[rsp]
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdi, rax
; Line 3486
	test	rax, rax
	je	$error$56
$LN17@stbtt_Flat:
; Line 3488
	mov	DWORD PTR num_points$[rsp], 0
; Line 3489
	mov	rsi, -1
; Line 3490
	test	r13, r13
	jle	$LN9@stbtt_Flat
; Line 3488
	add	rbx, 10
	mov	r14, r13
	npad	3
$LL10@stbtt_Flat:
; Line 3491
	movzx	ecx, BYTE PTR [rbx+2]
	sub	ecx, 1
	je	$LN19@stbtt_Flat
	sub	ecx, 1
	je	$LN21@stbtt_Flat
	sub	ecx, 1
	je	$LN22@stbtt_Flat
	cmp	ecx, 1
	jne	$LN8@stbtt_Flat
; Line 3514
	movsx	eax, WORD PTR [rbx-8]
	lea	rdx, QWORD PTR num_points$[rsp]
	mov	DWORD PTR [rsp+88], 0
	movaps	xmm3, xmm9
	movss	DWORD PTR [rsp+80], xmm10
	movaps	xmm2, xmm8
	mov	rcx, rdi
	movd	xmm7, eax
	movsx	eax, WORD PTR [rbx-10]
	cvtdq2ps xmm7, xmm7
	movd	xmm6, eax
	movsx	eax, WORD PTR [rbx]
	movss	DWORD PTR [rsp+72], xmm7
	cvtdq2ps xmm6, xmm6
	movd	xmm5, eax
	movsx	eax, WORD PTR [rbx-2]
	movss	DWORD PTR [rsp+64], xmm6
	cvtdq2ps xmm5, xmm5
	movd	xmm4, eax
	movsx	eax, WORD PTR [rbx-4]
	movss	DWORD PTR [rsp+56], xmm5
	cvtdq2ps xmm4, xmm4
	movd	xmm1, eax
	movsx	eax, WORD PTR [rbx-6]
	movss	DWORD PTR [rsp+48], xmm4
	cvtdq2ps xmm1, xmm1
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm1
	movss	DWORD PTR [rsp+32], xmm0
	call	?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z ; stbtt__tesselate_cubic
; Line 3519
	movsx	eax, WORD PTR [rbx-10]
	movd	xmm8, eax
$LN53@stbtt_Flat:
; Line 3490
	movsx	eax, WORD PTR [rbx-8]
	cvtdq2ps xmm8, xmm8
	movd	xmm9, eax
	cvtdq2ps xmm9, xmm9
	jmp	$LN8@stbtt_Flat
$LN22@stbtt_Flat:
; Line 3507
	movsx	eax, WORD PTR [rbx-8]
	lea	rdx, QWORD PTR num_points$[rsp]
	mov	DWORD PTR [rsp+72], 0
	mov	rcx, rdi
	movss	DWORD PTR [rsp+64], xmm10
	movd	xmm3, eax
	movsx	eax, WORD PTR [rbx-10]
	cvtdq2ps xmm3, xmm3
	movd	xmm2, eax
	movsx	eax, WORD PTR [rbx-4]
	movss	DWORD PTR [rsp+56], xmm3
	movaps	xmm3, xmm9
	cvtdq2ps xmm2, xmm2
	movd	xmm1, eax
	movsx	eax, WORD PTR [rbx-6]
	movss	DWORD PTR [rsp+48], xmm2
	movaps	xmm2, xmm8
	cvtdq2ps xmm1, xmm1
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm1
	movss	DWORD PTR [rsp+32], xmm0
	call	?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z ; stbtt__tesselate_curve
; Line 3511
	movsx	r8d, WORD PTR [rbx-10]
	movd	xmm8, r8d
; Line 3512
	jmp	$LN53@stbtt_Flat
$LN21@stbtt_Flat:
; Line 3503
	movsx	eax, WORD PTR [rbx-10]
; Line 3504
	movsxd	rcx, DWORD PTR num_points$[rsp]
	movd	xmm8, eax
	movsx	eax, WORD PTR [rbx-8]
	cvtdq2ps xmm8, xmm8
	movd	xmm9, eax
	lea	eax, DWORD PTR [rcx+1]
	mov	DWORD PTR num_points$[rsp], eax
	cvtdq2ps xmm9, xmm9
; Line 3389
	test	rdi, rdi
	je	SHORT $LN8@stbtt_Flat
; Line 3390
	movss	DWORD PTR [rdi+rcx*8], xmm8
; Line 3391
	movss	DWORD PTR [rdi+rcx*8+4], xmm9
; Line 3505
	jmp	SHORT $LN8@stbtt_Flat
$LN19@stbtt_Flat:
; Line 3494
	test	rsi, rsi
	js	SHORT $LN20@stbtt_Flat
; Line 3495
	mov	ecx, DWORD PTR num_points$[rsp]
	mov	rax, QWORD PTR [r15]
	sub	ecx, ebp
	mov	DWORD PTR [rax+rsi*4], ecx
$LN20@stbtt_Flat:
; Line 3499
	movsx	eax, WORD PTR [rbx-10]
	inc	rsi
	movsxd	rbp, DWORD PTR num_points$[rsp]
	movd	xmm8, eax
	movsx	eax, WORD PTR [rbx-8]
	cvtdq2ps xmm8, xmm8
	movd	xmm9, eax
	lea	eax, DWORD PTR [rbp+1]
	mov	DWORD PTR num_points$[rsp], eax
	cvtdq2ps xmm9, xmm9
; Line 3389
	test	rdi, rdi
	je	SHORT $LN8@stbtt_Flat
; Line 3390
	movss	DWORD PTR [rdi+rbp*8], xmm8
; Line 3391
	movss	DWORD PTR [rdi+rbp*8+4], xmm9
$LN8@stbtt_Flat:
; Line 3490
	add	rbx, 14
	sub	r14, 1
	jne	$LL10@stbtt_Flat
	mov	rbx, QWORD PTR vertices$[rsp]
$LN9@stbtt_Flat:
; Line 3523
	mov	ecx, DWORD PTR num_points$[rsp]
	inc	r12d
	mov	rax, QWORD PTR [r15]
	sub	ecx, ebp
	mov	DWORD PTR [rax+rsi*4], ecx
	cmp	r12d, 2
	jl	$LL7@stbtt_Flat
; Line 3526
	mov	rax, rdi
$LN52@stbtt_Flat:
	movaps	xmm8, XMMWORD PTR [rsp+128]
	movaps	xmm7, XMMWORD PTR [rsp+144]
	movaps	xmm6, XMMWORD PTR [rsp+160]
	mov	r12, QWORD PTR [rsp+256]
	movaps	xmm9, XMMWORD PTR [rsp+112]
$LN1@stbtt_Flat:
; Line 3533
	movaps	xmm10, XMMWORD PTR [rsp+96]
	add	rsp, 176				; 000000b0H
	pop	r15
	pop	r14
	pop	r13
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$error$56:
; Line 3528
	xor	ecx, ecx
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 3529
	mov	rcx, QWORD PTR [r15]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 3531
	mov	rax, QWORD PTR num_contours$[rsp]
	xor	r14d, r14d
	mov	QWORD PTR [r15], r14
	mov	DWORD PTR [rax], r14d
; Line 3532
	xor	eax, eax
	jmp	SHORT $LN52@stbtt_Flat
?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z ENDP ; stbtt_FlattenCurves
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z
_TEXT	SEGMENT
points$ = 272
num_points$ = 280
x0$ = 288
y0$ = 296
x1$ = 304
y1$ = 312
x2$ = 320
y2$ = 328
x3$ = 336
y3$ = 344
objspace_flatness_squared$ = 352
n$ = 360
?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z PROC ; stbtt__tesselate_cubic, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3416
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	movss	DWORD PTR [rax+32], xmm3
	movss	DWORD PTR [rax+24], xmm2
	push	rdi
	sub	rsp, 256				; 00000100H
; Line 3420
	movss	xmm4, DWORD PTR x2$[rsp]
	movaps	xmm5, xmm3
; Line 3422
	movss	xmm3, DWORD PTR x3$[rsp]
	movaps	xmm1, xmm4
	movaps	XMMWORD PTR [rax-24], xmm6
	mov	rbx, rdx
	movaps	XMMWORD PTR [rax-40], xmm7
	mov	rdi, rcx
	movaps	XMMWORD PTR [rax-56], xmm8
	movaps	xmm7, xmm3
	movaps	XMMWORD PTR [rax-72], xmm9
	subss	xmm7, xmm4
; Line 3423
	movss	xmm4, DWORD PTR y3$[rsp]
	movaps	xmm9, xmm2
	movss	xmm2, DWORD PTR y2$[rsp]
	movaps	xmm6, xmm4
	movaps	XMMWORD PTR [rax-88], xmm10
	subss	xmm6, xmm2
	movaps	XMMWORD PTR [rax-104], xmm11
	movaps	xmm0, xmm2
	movaps	XMMWORD PTR [rax-120], xmm12
; Line 3424
	movaps	xmm10, xmm3
	movaps	XMMWORD PTR [rsp+112], xmm14
	subss	xmm10, xmm9
	movaps	XMMWORD PTR [rsp+96], xmm15
	movss	xmm15, DWORD PTR y1$[rsp]
	movss	xmm14, DWORD PTR x1$[rsp]
	subss	xmm0, xmm15
	subss	xmm1, xmm14
	movaps	xmm11, xmm14
	subss	xmm11, xmm9
	movaps	xmm8, xmm15
; Line 3425
	movaps	xmm9, xmm4
	subss	xmm8, xmm5
	subss	xmm9, xmm5
; Line 3426
	mulss	xmm0, xmm0
	mulss	xmm1, xmm1
	addss	xmm0, xmm1
	call	sqrtf
	mulss	xmm8, xmm8
	movaps	xmm12, xmm0
	mulss	xmm11, xmm11
	addss	xmm8, xmm11
	movaps	xmm0, xmm8
	call	sqrtf
	mulss	xmm6, xmm6
	addss	xmm12, xmm0
	mulss	xmm7, xmm7
	addss	xmm6, xmm7
	movaps	xmm0, xmm6
	call	sqrtf
; Line 3427
	mulss	xmm9, xmm9
	addss	xmm12, xmm0
	mulss	xmm10, xmm10
	addss	xmm9, xmm10
	movaps	xmm0, xmm9
	call	sqrtf
; Line 3430
	mov	esi, DWORD PTR n$[rsp]
	mulss	xmm0, xmm0
	mulss	xmm12, xmm12
	subss	xmm12, xmm0
	cmp	esi, 16
	jg	$LN4@stbtt__tes
	movss	xmm7, DWORD PTR __real@3f000000
	movaps	XMMWORD PTR [rsp+128], xmm13
	movss	xmm13, DWORD PTR objspace_flatness_squared$[rsp]
	npad	3
$LL9@stbtt__tes:
; Line 3433
	comiss	xmm12, xmm13
	jbe	$LN3@stbtt__tes
; Line 3437
	movss	xmm11, DWORD PTR y2$[rsp]
; Line 3449
	inc	esi
	movss	xmm6, DWORD PTR x2$[rsp]
	mov	rdx, rbx
	movss	xmm8, DWORD PTR y0$[rsp]
	mov	rcx, rdi
	movss	xmm9, DWORD PTR x0$[rsp]
	movaps	xmm4, xmm8
	addss	xmm4, xmm15
	mov	DWORD PTR [rsp+88], esi
	addss	xmm15, xmm11
	movss	DWORD PTR [rsp+80], xmm13
	addss	xmm11, DWORD PTR y3$[rsp]
	movaps	xmm5, xmm9
	addss	xmm5, xmm14
	addss	xmm14, xmm6
	mulss	xmm4, xmm7
	addss	xmm6, DWORD PTR x3$[rsp]
	mulss	xmm15, xmm7
	mulss	xmm14, xmm7
	movaps	xmm1, xmm15
	mulss	xmm5, xmm7
	movaps	xmm2, xmm1
	mulss	xmm11, xmm7
	movaps	xmm0, xmm14
	mulss	xmm6, xmm7
	movaps	xmm3, xmm0
	addss	xmm2, xmm4
	addss	xmm3, xmm5
	movss	DWORD PTR y2$[rsp], xmm11
	movaps	xmm15, xmm11
	movss	DWORD PTR x2$[rsp], xmm6
	addss	xmm15, xmm1
	movaps	xmm14, xmm6
	addss	xmm14, xmm0
	mulss	xmm2, xmm7
	mulss	xmm3, xmm7
	mulss	xmm15, xmm7
	mulss	xmm14, xmm7
	movaps	xmm12, xmm15
	addss	xmm12, xmm2
	movaps	xmm10, xmm14
	addss	xmm10, xmm3
	mulss	xmm12, xmm7
	mulss	xmm10, xmm7
	movss	DWORD PTR [rsp+72], xmm12
	movss	DWORD PTR [rsp+64], xmm10
	movss	DWORD PTR [rsp+56], xmm2
	movaps	xmm2, xmm9
	movss	DWORD PTR [rsp+48], xmm3
	movaps	xmm3, xmm8
	movss	DWORD PTR [rsp+40], xmm4
	movss	DWORD PTR [rsp+32], xmm5
	call	?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z ; stbtt__tesselate_cubic
	movss	xmm2, DWORD PTR x3$[rsp]
	movaps	xmm1, xmm6
	movss	xmm3, DWORD PTR y3$[rsp]
	subss	xmm1, xmm14
	movaps	xmm0, xmm11
; Line 3450
	movss	DWORD PTR x0$[rsp], xmm10
	subss	xmm0, xmm15
	movss	DWORD PTR y0$[rsp], xmm12
	movaps	xmm8, xmm2
	movaps	xmm9, xmm14
	subss	xmm8, xmm6
	movaps	xmm7, xmm15
	mulss	xmm1, xmm1
	subss	xmm9, xmm10
	mulss	xmm0, xmm0
	movaps	xmm6, xmm3
	subss	xmm7, xmm12
	subss	xmm6, xmm11
	movaps	xmm11, xmm2
	subss	xmm11, xmm10
	movaps	xmm10, xmm3
	addss	xmm0, xmm1
	subss	xmm10, xmm12
	call	sqrtf
	movaps	xmm12, xmm0
	mulss	xmm7, xmm7
	mulss	xmm9, xmm9
; Line 3426
	addss	xmm7, xmm9
	movaps	xmm0, xmm7
	call	sqrtf
	mulss	xmm6, xmm6
	addss	xmm12, xmm0
	mulss	xmm8, xmm8
	addss	xmm6, xmm8
	movaps	xmm0, xmm6
	call	sqrtf
; Line 3427
	mulss	xmm10, xmm10
	addss	xmm12, xmm0
	mulss	xmm11, xmm11
	addss	xmm10, xmm11
	movaps	xmm0, xmm10
	call	sqrtf
; Line 3430
	movss	xmm7, DWORD PTR __real@3f000000
	mulss	xmm0, xmm0
	mulss	xmm12, xmm12
	subss	xmm12, xmm0
	cmp	esi, 16
	jle	$LL9@stbtt__tes
; Line 3431
	jmp	SHORT $LN15@stbtt__tes
$LN3@stbtt__tes:
; Line 3452
	movsxd	rax, DWORD PTR [rbx]
; Line 3389
	test	rdi, rdi
	je	SHORT $LN6@stbtt__tes
; Line 3390
	movss	xmm2, DWORD PTR x3$[rsp]
	movss	DWORD PTR [rdi+rax*8], xmm2
; Line 3391
	movss	xmm2, DWORD PTR y3$[rsp]
	movss	DWORD PTR [rdi+rax*8+4], xmm2
	mov	eax, DWORD PTR [rbx]
$LN6@stbtt__tes:
; Line 3453
	inc	eax
	mov	DWORD PTR [rbx], eax
$LN15@stbtt__tes:
	movaps	xmm13, XMMWORD PTR [rsp+128]
$LN4@stbtt__tes:
; Line 3455
	movaps	xmm14, XMMWORD PTR [rsp+112]
	lea	r11, QWORD PTR [rsp+256]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm15, XMMWORD PTR [rsp+96]
	mov	rsp, r11
	pop	rdi
	ret	0
?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z ENDP ; stbtt__tesselate_cubic
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z
_TEXT	SEGMENT
points$ = 224
num_points$ = 232
x0$ = 240
y0$ = 248
x1$ = 256
y1$ = 264
x2$ = 272
y2$ = 280
objspace_flatness_squared$ = 288
n$ = 296
?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z PROC ; stbtt__tesselate_curve, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3396
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	push	rdi
	sub	rsp, 208				; 000000d0H
; Line 3403
	mov	ebx, DWORD PTR n$[rsp]
	movaps	xmm1, xmm2
	movaps	XMMWORD PTR [rax-24], xmm6
	movaps	xmm0, xmm3
	movss	xmm6, DWORD PTR x2$[rsp]
	mov	rdi, rdx
	movaps	XMMWORD PTR [rax-40], xmm7
	addss	xmm1, xmm6
	movss	xmm7, DWORD PTR y2$[rsp]
	mov	rsi, rcx
	movaps	XMMWORD PTR [rax-72], xmm9
	addss	xmm0, xmm7
	movaps	XMMWORD PTR [rax-88], xmm10
	movaps	XMMWORD PTR [rax-104], xmm11
	movss	xmm11, DWORD PTR x1$[rsp]
	movaps	XMMWORD PTR [rax-120], xmm12
	movaps	xmm9, xmm11
	movss	xmm12, DWORD PTR y1$[rsp]
	addss	xmm9, xmm11
	movaps	XMMWORD PTR [rsp+80], xmm13
	movaps	xmm10, xmm12
	movss	xmm13, DWORD PTR __real@3f000000
	addss	xmm10, xmm12
	mulss	xmm1, xmm13
	mulss	xmm0, xmm13
	addss	xmm9, xmm2
	addss	xmm10, xmm3
	addss	xmm9, xmm6
	addss	xmm10, xmm7
	mulss	xmm9, DWORD PTR __real@3e800000
	mulss	xmm10, DWORD PTR __real@3e800000
	subss	xmm1, xmm9
	subss	xmm0, xmm10
	cmp	ebx, 16
	jg	$LN9@stbtt__tes
; Line 3405
	mulss	xmm0, xmm0
	mulss	xmm1, xmm1
	movaps	XMMWORD PTR [rax-56], xmm8
	movss	xmm8, DWORD PTR objspace_flatness_squared$[rsp]
	addss	xmm0, xmm1
	comiss	xmm0, xmm8
	jbe	$LN3@stbtt__tes
; Line 3406
	movaps	xmm1, xmm3
	movaps	xmm0, xmm2
	addss	xmm1, xmm12
	inc	ebx
	mov	DWORD PTR [rsp+72], ebx
	addss	xmm0, xmm11
	movss	DWORD PTR [rsp+64], xmm8
	movss	DWORD PTR [rsp+56], xmm10
	movss	DWORD PTR [rsp+48], xmm9
	mulss	xmm1, xmm13
	mulss	xmm0, xmm13
	movss	DWORD PTR [rsp+40], xmm1
	movss	DWORD PTR [rsp+32], xmm0
	call	?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z ; stbtt__tesselate_curve
; Line 3407
	mov	DWORD PTR [rsp+72], ebx
	addss	xmm12, xmm7
	movss	DWORD PTR [rsp+64], xmm8
	addss	xmm11, xmm6
	movss	DWORD PTR [rsp+56], xmm7
	movaps	xmm3, xmm10
	movss	DWORD PTR [rsp+48], xmm6
	movaps	xmm2, xmm9
	mov	rdx, rdi
	mov	rcx, rsi
	mulss	xmm12, xmm13
	mulss	xmm11, xmm13
	movss	DWORD PTR [rsp+40], xmm12
	movss	DWORD PTR [rsp+32], xmm11
	call	?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z ; stbtt__tesselate_curve
; Line 3408
	jmp	SHORT $LN11@stbtt__tes
$LN3@stbtt__tes:
; Line 3409
	movsxd	rax, DWORD PTR [rdx]
; Line 3389
	test	rsi, rsi
	je	SHORT $LN6@stbtt__tes
; Line 3390
	movss	DWORD PTR [rcx+rax*8], xmm6
; Line 3391
	movss	DWORD PTR [rcx+rax*8+4], xmm7
	mov	eax, DWORD PTR [rdx]
$LN6@stbtt__tes:
; Line 3410
	inc	eax
	mov	DWORD PTR [rdx], eax
$LN11@stbtt__tes:
	movaps	xmm8, XMMWORD PTR [rsp+160]
$LN9@stbtt__tes:
; Line 3413
	lea	r11, QWORD PTR [rsp+208]
	mov	eax, 1
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	mov	rsp, r11
	pop	rdi
	ret	0
?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z ENDP ; stbtt__tesselate_curve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__add_point@@YAXPEAUstbtt__point@@HMM@Z
_TEXT	SEGMENT
points$ = 8
n$ = 16
x$ = 24
y$ = 32
?stbtt__add_point@@YAXPEAUstbtt__point@@HMM@Z PROC	; stbtt__add_point, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3389
	test	rcx, rcx
	je	SHORT $LN1@stbtt__add
; Line 3390
	movsxd	rax, edx
	movss	DWORD PTR [rcx+rax*8], xmm2
; Line 3391
	movss	DWORD PTR [rcx+rax*8+4], xmm3
$LN1@stbtt__add:
; Line 3392
	ret	0
?stbtt__add_point@@YAXPEAUstbtt__point@@HMM@Z ENDP	; stbtt__add_point
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z
_TEXT	SEGMENT
pts$1$ = 64
result$GSCopy$1$ = 72
t$1 = 80
__$ArrayPad$ = 104
result$ = 192
pts$ = 200
wcount$ = 208
windings$ = 216
scale_x$ = 224
scale_y$ = 232
shift_x$ = 240
shift_y$ = 248
off_x$ = 256
off_y$ = 264
invert$ = 272
userdata$ = 280
?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z PROC ; stbtt__rasterize, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3331
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r15
	sub	rsp, 144				; 00000090H
	movaps	XMMWORD PTR [rsp+112], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 3332
	mov	r15d, DWORD PTR invert$[rsp]
	mov	rbx, r8
	movss	xmm6, DWORD PTR scale_y$[rsp]
	mov	rsi, rcx
	mov	edi, r9d
	mov	QWORD PTR pts$1$[rsp], rdx
	mov	QWORD PTR result$GSCopy$1$[rsp], rcx
	test	r15d, r15d
	je	SHORT $LN16@stbtt__ras
	xorps	xmm6, DWORD PTR __xmm@80000000800000008000000080000000
$LN16@stbtt__ras:
; Line 3345
	xor	r10d, r10d
	xor	r9d, r9d
; Line 3346
	test	edi, edi
	jle	SHORT $LN42@stbtt__ras
	cmp	edi, 8
	jb	SHORT $LN42@stbtt__ras
; Line 3338
	mov	ecx, edi
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	and	ecx, -2147483641			; ffffffff80000007H
	jge	SHORT $LN63@stbtt__ras
	dec	ecx
	or	ecx, -8
	inc	ecx
$LN63@stbtt__ras:
	mov	eax, edi
	sub	eax, ecx
; Line 3346
	movsxd	rcx, eax
	xor	eax, eax
$LL4@stbtt__ras:
; Line 3347
	movdqu	xmm0, XMMWORD PTR [r8+rax*4]
	add	r9d, 8
	paddd	xmm0, xmm2
	movdqa	xmm2, xmm0
	movdqu	xmm0, XMMWORD PTR [r8+rax*4+16]
	add	rax, 8
	paddd	xmm0, xmm1
	movdqa	xmm1, xmm0
	cmp	rax, rcx
	jl	SHORT $LL4@stbtt__ras
; Line 3338
	paddd	xmm1, xmm2
	movdqa	xmm0, xmm1
	psrldq	xmm0, 8
	paddd	xmm1, xmm0
	movdqa	xmm0, xmm1
	psrldq	xmm0, 4
	paddd	xmm1, xmm0
	movd	r10d, xmm1
$LN42@stbtt__ras:
	movsxd	rcx, r9d
	xor	edx, edx
; Line 3346
	movsxd	r9, edi
	xor	r8d, r8d
	cmp	rcx, r9
	jge	SHORT $LN50@stbtt__ras
	mov	rax, r9
	sub	rax, rcx
	cmp	rax, 2
	jl	SHORT $LC51@stbtt__ras
	lea	rax, QWORD PTR [r9-1]
	npad	2
$LL53@stbtt__ras:
; Line 3347
	add	edx, DWORD PTR [rbx+rcx*4]
	add	r8d, DWORD PTR [rbx+rcx*4+4]
	add	rcx, 2
	cmp	rcx, rax
	jl	SHORT $LL53@stbtt__ras
$LC51@stbtt__ras:
; Line 3346
	cmp	rcx, r9
	jge	SHORT $LN52@stbtt__ras
; Line 3347
	add	r10d, DWORD PTR [rbx+rcx*4]
$LN52@stbtt__ras:
	lea	eax, DWORD PTR [r8+rdx]
	add	r10d, eax
$LN50@stbtt__ras:
; Line 3349
	movsxd	rax, r10d
	inc	rax
	lea	rcx, QWORD PTR [rax+rax*4]
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rbp, rax
; Line 3350
	test	rax, rax
	je	$LN1@stbtt__ras
; Line 3351
	mov	QWORD PTR [rsp+200], r12
	xor	r12d, r12d
	mov	QWORD PTR [rsp+128], r14
; Line 3353
	xor	r14d, r14d
; Line 3354
	test	edi, edi
	jle	$LN6@stbtt__ras
	movss	xmm2, DWORD PTR shift_y$[rsp]
	xor	esi, esi
	movss	xmm3, DWORD PTR shift_x$[rsp]
	movss	xmm4, DWORD PTR scale_x$[rsp]
	mov	rcx, QWORD PTR pts$1$[rsp]
	mov	QWORD PTR [rsp+136], r13
	mov	r13, rdi
	npad	5
$LL7@stbtt__ras:
; Line 3355
	movsxd	rax, r14d
; Line 3358
	xor	r11d, r11d
	xor	edx, edx
	lea	r10, QWORD PTR [rcx+rax*8]
	mov	eax, DWORD PTR [rbx]
	add	r14d, eax
	test	eax, eax
	jle	$LN5@stbtt__ras
; Line 3357
	dec	eax
	lea	r8, QWORD PTR [r10+4]
	movsxd	rcx, eax
	lea	rax, QWORD PTR [rsi+rsi*4]
	lea	r9, QWORD PTR [rax*4+16]
	add	r9, rbp
	npad	15
$LL10@stbtt__ras:
; Line 3361
	movss	xmm0, DWORD PTR [r10+rcx*8+4]
	mov	rdi, rdx
	ucomiss	xmm0, DWORD PTR [r8]
	jp	SHORT $LN62@stbtt__ras
	je	$LN8@stbtt__ras
$LN62@stbtt__ras:
; Line 3364
	mov	DWORD PTR [r9], 0
; Line 3365
	xor	eax, eax
	movss	xmm0, DWORD PTR [r10+rcx*8+4]
	movss	xmm1, DWORD PTR [r8]
	test	r15d, r15d
	je	SHORT $LN17@stbtt__ras
	comiss	xmm0, xmm1
	jmp	SHORT $LN64@stbtt__ras
$LN17@stbtt__ras:
	comiss	xmm1, xmm0
$LN64@stbtt__ras:
	seta	al
	test	eax, eax
	je	SHORT $LN13@stbtt__ras
; Line 3367
	mov	rdi, rcx
	mov	DWORD PTR [r9], 1
	mov	rcx, rdx
$LN13@stbtt__ras:
; Line 3369
	movaps	xmm0, xmm4
; Line 3370
	movaps	xmm1, xmm6
	mulss	xmm0, DWORD PTR [r10+rdi*8]
; Line 3373
	inc	r12d
	inc	rsi
	addss	xmm0, xmm3
	movss	DWORD PTR [r9-16], xmm0
	movaps	xmm0, xmm4
	mulss	xmm1, DWORD PTR [r10+rdi*8+4]
	addss	xmm1, xmm2
	movss	DWORD PTR [r9-12], xmm1
	movaps	xmm1, xmm6
	mulss	xmm0, DWORD PTR [r10+rcx*8]
	addss	xmm0, xmm3
	movss	DWORD PTR [r9-8], xmm0
	mulss	xmm1, DWORD PTR [r10+rcx*8+4]
	addss	xmm1, xmm2
	movss	DWORD PTR [r9-4], xmm1
	add	r9, 20
$LN8@stbtt__ras:
; Line 3358
	mov	rcx, rdx
	inc	r11d
	inc	rdx
	add	r8, 8
	cmp	r11d, DWORD PTR [rbx]
	jl	$LL10@stbtt__ras
	mov	rcx, QWORD PTR pts$1$[rsp]
$LN5@stbtt__ras:
; Line 3354
	add	rbx, 4
	sub	r13, 1
	jne	$LL7@stbtt__ras
	mov	rsi, QWORD PTR result$GSCopy$1$[rsp]
	mov	r13, QWORD PTR [rsp+136]
$LN6@stbtt__ras:
; Line 3321
	mov	edx, r12d
	mov	rcx, rbp
	call	?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z ; stbtt__sort_edges_quicksort
; Line 3242
	mov	r14, QWORD PTR [rsp+128]
	movsxd	rbx, r12d
	cmp	rbx, 1
	jle	SHORT $LN23@stbtt__ras
	mov	r10d, 1
	lea	r11, QWORD PTR [rbp+20]
$LL24@stbtt__ras:
; Line 3243
	movups	xmm2, XMMWORD PTR [r11]
	mov	r8d, DWORD PTR [r11+16]
	lea	rcx, QWORD PTR [r11-20]
; Line 3244
	mov	rdx, r10
	movups	XMMWORD PTR t$1[rsp], xmm2
	movss	xmm1, DWORD PTR t$1[rsp+4]
	npad	6
$LL25@stbtt__ras:
; Line 3247
	movss	xmm0, DWORD PTR [rcx+4]
	xor	eax, eax
	comiss	xmm0, xmm1
	seta	al
; Line 3248
	test	eax, eax
	je	SHORT $LN35@stbtt__ras
; Line 3249
	movups	xmm0, XMMWORD PTR [rcx]
	mov	eax, DWORD PTR [rcx+16]
; Line 3250
	dec	rdx
	movups	XMMWORD PTR [rcx+20], xmm0
	mov	DWORD PTR [rcx+36], eax
	sub	rcx, 20
	test	rdx, rdx
	jg	SHORT $LL25@stbtt__ras
$LN35@stbtt__ras:
; Line 3252
	cmp	r10, rdx
	je	SHORT $LN22@stbtt__ras
; Line 3253
	lea	rax, QWORD PTR [rdx+rdx*4]
	movups	XMMWORD PTR [rbp+rax*4], xmm2
	mov	DWORD PTR [rbp+rax*4+16], r8d
$LN22@stbtt__ras:
; Line 3242
	inc	r10
	add	r11, 20
	cmp	r10, rbx
	jl	SHORT $LL24@stbtt__ras
$LN23@stbtt__ras:
; Line 3382
	mov	rax, QWORD PTR userdata$[rsp]
	mov	r9d, 1
	mov	QWORD PTR [rsp+48], rax
	mov	r8d, r12d
	mov	eax, DWORD PTR off_y$[rsp]
	mov	rdx, rbp
	mov	DWORD PTR [rsp+40], eax
	mov	rcx, rsi
	mov	eax, DWORD PTR off_x$[rsp]
	mov	DWORD PTR [rsp+32], eax
	call	?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z ; stbtt__rasterize_sorted_edges
; Line 3384
	mov	rcx, rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	r12, QWORD PTR [rsp+200]
$LN1@stbtt__ras:
; Line 3385
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+112]
	add	rsp, 144				; 00000090H
	pop	r15
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z ENDP ; stbtt__rasterize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__sort_edges@@YAXPEAUstbtt__edge@@H@Z
_TEXT	SEGMENT
t$1 = 32
__$ArrayPad$ = 56
p$ = 80
n$ = 88
?stbtt__sort_edges@@YAXPEAUstbtt__edge@@H@Z PROC	; stbtt__sort_edges, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3320
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	movsxd	rbx, edx
	mov	rdi, rcx
; Line 3321
	mov	edx, ebx
	call	?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z ; stbtt__sort_edges_quicksort
; Line 3242
	cmp	rbx, 1
	jle	SHORT $LN5@stbtt__sor
	mov	r8d, 1
	lea	r9, QWORD PTR [rdi+20]
	npad	10
$LL6@stbtt__sor:
; Line 3243
	movups	xmm2, XMMWORD PTR [r9]
	mov	r11d, DWORD PTR [r9+16]
	lea	rcx, QWORD PTR [r9-20]
; Line 3244
	mov	rdx, r8
	movups	XMMWORD PTR t$1[rsp], xmm2
	movss	xmm1, DWORD PTR t$1[rsp+4]
	npad	6
$LL7@stbtt__sor:
; Line 3247
	movss	xmm0, DWORD PTR [rcx+4]
	xor	eax, eax
	comiss	xmm0, xmm1
	seta	al
; Line 3248
	test	eax, eax
	je	SHORT $LN14@stbtt__sor
; Line 3249
	movups	xmm0, XMMWORD PTR [rcx]
	mov	eax, DWORD PTR [rcx+16]
; Line 3250
	dec	rdx
	movups	XMMWORD PTR [rcx+20], xmm0
	mov	DWORD PTR [rcx+36], eax
	sub	rcx, 20
	test	rdx, rdx
	jg	SHORT $LL7@stbtt__sor
$LN14@stbtt__sor:
; Line 3252
	cmp	r8, rdx
	je	SHORT $LN4@stbtt__sor
; Line 3253
	lea	rax, QWORD PTR [rdx+rdx*4]
	movups	XMMWORD PTR [rdi+rax*4], xmm2
	mov	DWORD PTR [rdi+rax*4+16], r11d
$LN4@stbtt__sor:
; Line 3242
	inc	r8
	add	r9, 20
	cmp	r8, rbx
	jl	SHORT $LL6@stbtt__sor
$LN5@stbtt__sor:
; Line 3323
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?stbtt__sort_edges@@YAXPEAUstbtt__edge@@H@Z ENDP	; stbtt__sort_edges
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z
_TEXT	SEGMENT
p$ = 64
n$ = 72
?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z PROC ; stbtt__sort_edges_quicksort, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3260
	cmp	edx, 12
	jle	$LN41@stbtt__sor
	push	rbp
	push	rsi
	sub	rsp, 40					; 00000028H
	mov	QWORD PTR [rsp+64], rbx
; Line 3258
	mov	ebp, edx
	mov	QWORD PTR [rsp+72], rdi
	mov	rsi, rcx
	mov	QWORD PTR [rsp+80], r14
	mov	QWORD PTR [rsp+32], r15
	npad	8
$LL2@stbtt__sor:
; Line 3266
	movss	xmm2, DWORD PTR [rsi+4]
; Line 3267
	lea	edi, DWORD PTR [rbp-1]
	xor	edx, edx
	movsxd	rax, ebp
	sar	rax, 1
	mov	r15, rsi
	movsxd	r9, ebp
	mov	r14, rsi
	dec	r9
	lea	r8, QWORD PTR [rax+rax*4]
	movss	xmm0, DWORD PTR [rsi+r8*4+4]
	lea	rax, QWORD PTR [r9+r9*4]
	movss	xmm1, DWORD PTR [rsi+rax*4+4]
	comiss	xmm1, xmm0
	seta	dl
	xor	eax, eax
	comiss	xmm0, xmm2
	seta	al
; Line 3269
	cmp	eax, edx
	je	SHORT $LN13@stbtt__sor
; Line 3277
	movups	xmm0, XMMWORD PTR [rsi+r8*4]
	xor	ecx, ecx
	comiss	xmm1, xmm2
	seta	cl
	xor	eax, eax
	cmp	ecx, edx
	cmovne	eax, edi
	cdqe
	lea	rcx, QWORD PTR [rax+rax*4]
	movups	xmm1, XMMWORD PTR [rsi+rcx*4]
	mov	edx, DWORD PTR [rsi+rcx*4+16]
	movups	XMMWORD PTR [rsi+rcx*4], xmm0
	mov	eax, DWORD PTR [rsi+r8*4+16]
	mov	DWORD PTR [rsi+rcx*4+16], eax
; Line 3278
	movups	XMMWORD PTR [rsi+r8*4], xmm1
	mov	DWORD PTR [rsi+r8*4+16], edx
$LN13@stbtt__sor:
; Line 3283
	movups	xmm0, XMMWORD PTR [rsi+r8*4]
	mov	ecx, DWORD PTR [rsi+16]
; Line 3287
	mov	r11d, 1
	movups	xmm1, XMMWORD PTR [rsi]
	mov	r10d, r11d
	movups	XMMWORD PTR [rsi], xmm0
	mov	eax, DWORD PTR [rsi+r8*4+16]
	mov	DWORD PTR [rsi+16], eax
	movups	XMMWORD PTR [rsi+r8*4], xmm1
	mov	DWORD PTR [rsi+r8*4+16], ecx
	npad	11
$LL4@stbtt__sor:
; Line 3293
	movss	xmm1, DWORD PTR [rsi+4]
	lea	rcx, QWORD PTR [r10*4+1]
	add	rcx, r10
	comiss	xmm1, DWORD PTR [rsi+rcx*4]
	lea	rcx, QWORD PTR [rsi+rcx*4]
	jbe	SHORT $LN28@stbtt__sor
	npad	6
$LL9@stbtt__sor:
; Line 3292
	inc	r11d
	lea	rcx, QWORD PTR [rcx+20]
	inc	r10
; Line 3293
	comiss	xmm1, DWORD PTR [rcx]
	ja	SHORT $LL9@stbtt__sor
$LN28@stbtt__sor:
; Line 3296
	lea	rcx, QWORD PTR [r9*4+1]
	add	rcx, r9
	movss	xmm0, DWORD PTR [rsi+rcx*4]
	lea	rcx, QWORD PTR [rsi+rcx*4]
	comiss	xmm0, xmm1
	jbe	SHORT $LN29@stbtt__sor
	npad	8
$LL12@stbtt__sor:
	movss	xmm0, DWORD PTR [rcx-20]
	lea	rcx, QWORD PTR [rcx-20]
	dec	edi
	dec	r9
	comiss	xmm0, xmm1
	ja	SHORT $LL12@stbtt__sor
$LN29@stbtt__sor:
; Line 3299
	cmp	r10, r9
	jge	SHORT $LN30@stbtt__sor
; Line 3301
	lea	rcx, QWORD PTR [r9+r9*4]
; Line 3304
	inc	r11d
	movups	xmm0, XMMWORD PTR [rsi+rcx*4]
	lea	rdx, QWORD PTR [r10+r10*4]
; Line 3305
	dec	edi
	movups	xmm1, XMMWORD PTR [rsi+rdx*4]
	mov	r8d, DWORD PTR [rsi+rdx*4+16]
	inc	r10
	movups	XMMWORD PTR [rsi+rdx*4], xmm0
	mov	eax, DWORD PTR [rsi+rcx*4+16]
	dec	r9
	mov	DWORD PTR [rsi+rdx*4+16], eax
	movups	XMMWORD PTR [rsi+rcx*4], xmm1
	mov	DWORD PTR [rsi+rcx*4+16], r8d
	jmp	$LL4@stbtt__sor
$LN30@stbtt__sor:
; Line 3308
	sub	ebp, r11d
	movsxd	rax, r11d
	cmp	edi, ebp
	mov	ebx, ebp
	mov	edx, edi
	cmovge	edx, ebx
	cmovge	ebp, edi
	lea	rcx, QWORD PTR [rax+rax*4]
	lea	rsi, QWORD PTR [rsi+rcx*4]
	cmovge	r14, rsi
	mov	rcx, r14
	call	?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z ; stbtt__sort_edges_quicksort
	cmp	edi, ebx
	cmovge	rsi, r15
	cmp	ebp, 12
	jg	$LL2@stbtt__sor
; Line 3260
	mov	r15, QWORD PTR [rsp+32]
	mov	r14, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+64]
; Line 3317
	add	rsp, 40					; 00000028H
	pop	rsi
	pop	rbp
$LN41@stbtt__sor:
	ret	0
?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z ENDP ; stbtt__sort_edges_quicksort
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z
_TEXT	SEGMENT
t$1 = 0
__$ArrayPad$ = 24
p$ = 48
n$ = 56
?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z PROC ; stbtt__sort_edges_ins_sort, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3242
	cmp	edx, 1
	jle	$LN19@stbtt__sor
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 3240
	mov	r11, rcx
	mov	QWORD PTR [rsp+32], rbx
	mov	r8d, 1
	lea	r9, QWORD PTR [rcx+20]
	lea	r10d, DWORD PTR [rdx-1]
	npad	14
$LL4@stbtt__sor:
; Line 3243
	mov	ebx, DWORD PTR [r9+16]
; Line 3244
	mov	rdx, r8
	movups	xmm2, XMMWORD PTR [r9]
	movups	XMMWORD PTR t$1[rsp], xmm2
; Line 3245
	test	r8, r8
	jle	SHORT $LN2@stbtt__sor
	movss	xmm1, DWORD PTR t$1[rsp+4]
	lea	rcx, QWORD PTR [r9-20]
	npad	2
$LL5@stbtt__sor:
; Line 3247
	movss	xmm0, DWORD PTR [rcx+4]
	xor	eax, eax
	comiss	xmm0, xmm1
	seta	al
; Line 3248
	test	eax, eax
	je	SHORT $LN12@stbtt__sor
; Line 3249
	movups	xmm0, XMMWORD PTR [rcx]
	mov	eax, DWORD PTR [rcx+16]
; Line 3250
	dec	rdx
	movups	XMMWORD PTR [rcx+20], xmm0
	mov	DWORD PTR [rcx+36], eax
	sub	rcx, 20
	test	rdx, rdx
	jg	SHORT $LL5@stbtt__sor
$LN12@stbtt__sor:
; Line 3252
	cmp	r8, rdx
	je	SHORT $LN2@stbtt__sor
; Line 3253
	lea	rax, QWORD PTR [rdx+rdx*4]
	movups	XMMWORD PTR [r11+rax*4], xmm2
	mov	DWORD PTR [r11+rax*4+16], ebx
$LN2@stbtt__sor:
; Line 3242
	inc	r8
	add	r9, 20
	sub	r10, 1
	jne	SHORT $LL4@stbtt__sor
	mov	rbx, QWORD PTR [rsp+32]
; Line 3255
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 40					; 00000028H
$LN19@stbtt__sor:
	ret	0
?stbtt__sort_edges_ins_sort@@YAXPEAUstbtt__edge@@H@Z ENDP ; stbtt__sort_edges_ins_sort
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z
_TEXT	SEGMENT
scanline$1$ = 48
y$1$ = 56
active$ = 64
scanline2$1$ = 72
scanline_data$ = 80
__$ArrayPad$ = 608
result$ = 816
e$ = 824
n$ = 832
vsubsample$ = 840
off_x$ = 848
off_y$ = 856
userdata$ = 864
?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z PROC ; stbtt__rasterize_sorted_edges, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3138
	mov	r11, rsp
	sub	rsp, 808				; 00000328H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 3146
	mov	eax, DWORD PTR [rcx]
	mov	QWORD PTR [r11+32], rbx
	mov	QWORD PTR [r11-8], rbp
	xor	ebp, ebp
	mov	QWORD PTR [r11-16], rsi
	mov	rsi, rdx
	mov	QWORD PTR [r11-24], rdi
	xor	edi, edi
	mov	QWORD PTR [r11-32], r12
	mov	r12, rcx
	mov	QWORD PTR [r11-40], r13
	xor	r13d, r13d
	mov	QWORD PTR [r11-48], r14
	xor	r14d, r14d
	mov	QWORD PTR [r11-56], r15
	xor	r15d, r15d
	movaps	XMMWORD PTR [r11-120], xmm9
	movsxd	rbx, r8d
	mov	QWORD PTR active$[rsp], rdi
	cmp	eax, 64					; 00000040H
	jle	SHORT $LN19@stbtt__ras
; Line 3147
	lea	eax, DWORD PTR [rax*2+1]
	movsxd	rcx, eax
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	r11, rax
	mov	eax, DWORD PTR [r12]
	jmp	SHORT $LN88@stbtt__ras
$LN19@stbtt__ras:
; Line 3149
	lea	r11, QWORD PTR scanline_data$[rsp]
$LN88@stbtt__ras:
; Line 3153
	mov	ecx, DWORD PTR off_y$[rsp]
	mov	edx, ecx
; Line 3154
	movss	xmm9, DWORD PTR __real@3f800000
	cdqe
	mov	DWORD PTR y$1$[rsp], ecx
	mov	QWORD PTR scanline$1$[rsp], r11
	lea	rax, QWORD PTR [r11+rax*4]
	mov	QWORD PTR scanline2$1$[rsp], rax
	mov	eax, DWORD PTR [r12+4]
	add	eax, ecx
	lea	rcx, QWORD PTR [rbx+rbx*4]
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	addss	xmm0, xmm9
	movss	DWORD PTR [rsi+rcx*4+4], xmm0
; Line 3156
	cmp	DWORD PTR [r12+4], edi
	jle	$LN3@stbtt__ras
	movaps	XMMWORD PTR [rsp+736], xmm6
	movaps	XMMWORD PTR [rsp+720], xmm7
	xorps	xmm7, xmm7
	movaps	XMMWORD PTR [rsp+704], xmm8
	movaps	XMMWORD PTR [rsp+672], xmm10
	movss	xmm10, DWORD PTR __real@bf800000
	movaps	XMMWORD PTR [rsp+656], xmm11
	movss	xmm11, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	movaps	XMMWORD PTR [rsp+640], xmm12
	movss	xmm12, DWORD PTR __real@437f0000
	movaps	XMMWORD PTR [rsp+624], xmm13
	movss	xmm13, DWORD PTR __real@3f000000
	npad	10
$LL2@stbtt__ras:
; Line 3162
	movsxd	r8, DWORD PTR [r12]
	lea	rbx, QWORD PTR active$[rsp]
	movd	xmm8, edx
	mov	rcx, r11
	cvtdq2ps xmm8, xmm8
	shl	r8, 2
	xor	edx, edx
	movaps	xmm6, xmm8
	addss	xmm8, xmm9
	addss	xmm6, xmm7
	call	memset
; Line 3163
	mov	eax, DWORD PTR [r12]
	xor	edx, edx
	mov	rcx, QWORD PTR scanline2$1$[rsp]
	inc	eax
	movsxd	r8, eax
	shl	r8, 2
	call	memset
; Line 3167
	test	rdi, rdi
	je	SHORT $LN62@stbtt__ras
	npad	5
$LL4@stbtt__ras:
; Line 3169
	comiss	xmm6, DWORD PTR [rdi+28]
	jb	SHORT $LN21@stbtt__ras
; Line 3170
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rbx], rax
; Line 3171
	movss	xmm0, DWORD PTR [rdi+20]
	ucomiss	xmm0, xmm7
	jp	SHORT $LN6@stbtt__ras
	jne	SHORT $LN6@stbtt__ras
	mov	r8d, 3171				; 00000c63H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BK@LMAHJHLI@?$AAz?$AA?9?$AA?$DO?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn@
	call	QWORD PTR __imp__wassert
$LN6@stbtt__ras:
; Line 2701
	mov	QWORD PTR [rdi], r14
; Line 2702
	mov	r14, rdi
; Line 3172
	mov	DWORD PTR [rdi+20], 0
; Line 3174
	jmp	SHORT $LN22@stbtt__ras
$LN21@stbtt__ras:
; Line 3175
	mov	rbx, rdi
$LN22@stbtt__ras:
; Line 3167
	mov	rdi, QWORD PTR [rbx]
	test	rdi, rdi
	jne	SHORT $LL4@stbtt__ras
	mov	rdi, QWORD PTR active$[rsp]
$LN62@stbtt__ras:
; Line 3180
	movss	xmm0, DWORD PTR [rsi+4]
	comiss	xmm8, xmm0
	jb	$LN10@stbtt__ras
$LL9@stbtt__ras:
; Line 3181
	ucomiss	xmm0, DWORD PTR [rsi+12]
	jp	SHORT $LN85@stbtt__ras
	je	$LN24@stbtt__ras
$LN85@stbtt__ras:
; Line 2680
	test	r14, r14
	je	SHORT $LN47@stbtt__ras
; Line 2681
	mov	rbx, r14
; Line 2682
	mov	r14, QWORD PTR [r14]
; Line 2683
	jmp	SHORT $LN48@stbtt__ras
$LN47@stbtt__ras:
; Line 2685
	test	ebp, ebp
	jne	SHORT $LN49@stbtt__ras
; Line 2687
	mov	ecx, 25608				; 00006408H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 2688
	test	rax, rax
	jne	SHORT $LN50@stbtt__ras
; Line 2689
	xor	ebx, ebx
	jmp	SHORT $LN48@stbtt__ras
$LN50@stbtt__ras:
; Line 2690
	mov	QWORD PTR [rax], r15
; Line 2692
	mov	ebp, 800				; 00000320H
	mov	r15, rax
$LN49@stbtt__ras:
; Line 2694
	dec	ebp
; Line 2695
	lea	rbx, QWORD PTR [r15+8]
	movsxd	rax, ebp
	shl	rax, 5
	add	rbx, rax
$LN48@stbtt__ras:
; Line 2768
	movss	xmm2, DWORD PTR [rsi+8]
	movss	xmm0, DWORD PTR [rsi+12]
	subss	xmm2, DWORD PTR [rsi]
	subss	xmm0, DWORD PTR [rsi+4]
	divss	xmm2, xmm0
; Line 2769
	test	rbx, rbx
	jne	SHORT $LN83@stbtt__ras
	mov	r8d, 2769				; 00000ad1H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1O@EHPNOHML@?$AAz?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
; Line 2771
	jmp	$LN24@stbtt__ras
$LN83@stbtt__ras:
; Line 2773
	ucomiss	xmm2, xmm7
	movss	DWORD PTR [rbx+12], xmm2
	jp	SHORT $LN84@stbtt__ras
	jne	SHORT $LN84@stbtt__ras
	movaps	xmm0, xmm7
	jmp	SHORT $LN43@stbtt__ras
$LN84@stbtt__ras:
	movaps	xmm0, xmm9
	divss	xmm0, xmm2
$LN43@stbtt__ras:
	movss	DWORD PTR [rbx+16], xmm0
; Line 2774
	movaps	xmm1, xmm6
	subss	xmm1, DWORD PTR [rsi+4]
	movd	xmm0, DWORD PTR off_x$[rsp]
; Line 2775
	cvtdq2ps xmm0, xmm0
	mulss	xmm1, xmm2
	addss	xmm1, DWORD PTR [rsi]
	subss	xmm1, xmm0
	movss	DWORD PTR [rbx+8], xmm1
; Line 2776
	cmp	DWORD PTR [rsi+16], 0
	je	SHORT $LN44@stbtt__ras
	movaps	xmm0, xmm9
	jmp	SHORT $LN45@stbtt__ras
$LN44@stbtt__ras:
	movaps	xmm0, xmm10
$LN45@stbtt__ras:
	movss	DWORD PTR [rbx+20], xmm0
; Line 2777
	mov	eax, DWORD PTR [rsi+4]
	mov	DWORD PTR [rbx+24], eax
; Line 2778
	movss	xmm0, DWORD PTR [rsi+12]
	movss	DWORD PTR [rbx+28], xmm0
; Line 2779
	movaps	xmm1, xmm0
	mov	QWORD PTR [rbx], 0
; Line 3184
	test	r13d, r13d
	jne	SHORT $LN13@stbtt__ras
	cmp	DWORD PTR off_y$[rsp], r13d
	je	SHORT $LN13@stbtt__ras
; Line 3185
	comiss	xmm6, xmm0
	jbe	SHORT $LN13@stbtt__ras
; Line 3187
	movss	DWORD PTR [rbx+28], xmm6
	movaps	xmm1, xmm6
$LN13@stbtt__ras:
; Line 3190
	comiss	xmm1, xmm6
	jae	SHORT $LN11@stbtt__ras
	mov	r8d, 3190				; 00000c76H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CI@PMJHELI@?$AAz?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAc?$AAa?$AAn?$AA_?$AAy@
	call	QWORD PTR __imp__wassert
$LN11@stbtt__ras:
; Line 3192
	mov	QWORD PTR [rbx], rdi
; Line 3193
	mov	rdi, rbx
	mov	QWORD PTR active$[rsp], rbx
$LN24@stbtt__ras:
; Line 3196
	movss	xmm0, DWORD PTR [rsi+24]
	add	rsi, 20
	comiss	xmm8, xmm0
	jae	$LL9@stbtt__ras
$LN10@stbtt__ras:
; Line 3200
	mov	rbx, QWORD PTR scanline2$1$[rsp]
	test	rdi, rdi
	je	SHORT $LN27@stbtt__ras
; Line 3201
	mov	r8d, DWORD PTR [r12]
	lea	rdx, QWORD PTR [rbx+4]
	mov	rcx, QWORD PTR scanline$1$[rsp]
	mov	r9, rdi
	movss	DWORD PTR [rsp+32], xmm6
	call	?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z ; stbtt__fill_active_edges_new
$LN27@stbtt__ras:
; Line 3205
	xor	r8d, r8d
	movaps	xmm1, xmm7
	cmp	DWORD PTR [r12], r8d
	jle	SHORT $LN86@stbtt__ras
; Line 3204
	mov	r9, QWORD PTR scanline$1$[rsp]
	mov	r10, rbx
	sub	r10, r9
	mov	r11d, 255				; 000000ffH
	npad	13
$LL16@stbtt__ras:
; Line 3208
	addss	xmm1, DWORD PTR [r10+r9]
; Line 3213
	mov	eax, DWORD PTR [r12+8]
	movaps	xmm0, xmm1
	addss	xmm0, DWORD PTR [r9]
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
; Line 672
	andps	xmm0, xmm11
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3210
	mulss	xmm0, xmm12
	addss	xmm0, xmm13
; Line 3211
	cvttss2si edx, xmm0
; Line 3212
	cmp	edx, r11d
	cmovg	edx, r11d
; Line 3213
	imul	eax, r13d
	add	r9, 4
	add	eax, r8d
	inc	r8d
	movsxd	rcx, eax
	mov	rax, QWORD PTR [r12+16]
	mov	BYTE PTR [rcx+rax], dl
	cmp	r8d, DWORD PTR [r12]
	jl	SHORT $LL16@stbtt__ras
$LN86@stbtt__ras:
; Line 3217
	mov	r11, QWORD PTR scanline$1$[rsp]
	lea	rcx, QWORD PTR active$[rsp]
; Line 3218
	test	rdi, rdi
	je	SHORT $LN18@stbtt__ras
	mov	rax, rdi
	npad	3
$LL17@stbtt__ras:
; Line 3220
	movss	xmm0, DWORD PTR [rax+12]
	addss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR [rax+8], xmm0
; Line 3221
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	jne	SHORT $LL17@stbtt__ras
$LN18@stbtt__ras:
; Line 3224
	mov	edx, DWORD PTR y$1$[rsp]
; Line 3225
	inc	r13d
	inc	edx
	mov	DWORD PTR y$1$[rsp], edx
	cmp	r13d, DWORD PTR [r12+4]
	jl	$LL2@stbtt__ras
; Line 3156
	movaps	xmm13, XMMWORD PTR [rsp+624]
	movaps	xmm12, XMMWORD PTR [rsp+640]
	movaps	xmm11, XMMWORD PTR [rsp+656]
	movaps	xmm10, XMMWORD PTR [rsp+672]
	movaps	xmm8, XMMWORD PTR [rsp+704]
	movaps	xmm7, XMMWORD PTR [rsp+720]
	movaps	xmm6, XMMWORD PTR [rsp+736]
$LN3@stbtt__ras:
	movaps	xmm9, XMMWORD PTR [rsp+688]
; Line 2708
	mov	r14, QWORD PTR [rsp+760]
	mov	r13, QWORD PTR [rsp+768]
	mov	r12, QWORD PTR [rsp+776]
	mov	rdi, QWORD PTR [rsp+784]
	mov	rsi, QWORD PTR [rsp+792]
	mov	rbp, QWORD PTR [rsp+800]
	test	r15, r15
	je	SHORT $LN58@stbtt__ras
	npad	3
$LL57@stbtt__ras:
; Line 2709
	mov	rbx, QWORD PTR [r15]
; Line 2710
	mov	rcx, r15
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 2711
	mov	r15, rbx
	test	rbx, rbx
	jne	SHORT $LL57@stbtt__ras
$LN58@stbtt__ras:
; Line 3230
	mov	rcx, QWORD PTR scanline$1$[rsp]
	lea	rax, QWORD PTR scanline_data$[rsp]
	mov	r15, QWORD PTR [rsp+752]
	mov	rbx, QWORD PTR [rsp+840]
	cmp	rcx, rax
	je	SHORT $LN29@stbtt__ras
; Line 3231
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN29@stbtt__ras:
; Line 3232
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 808				; 00000328H
	ret	0
?stbtt__rasterize_sorted_edges@@YAXPEAUstbtt__bitmap@@PEAUstbtt__edge@@HHHHPEAX@Z ENDP ; stbtt__rasterize_sorted_edges
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z
_TEXT	SEGMENT
scanline$ = 256
scanline_fill$ = 264
len$ = 272
e$ = 280
y_bottom$1$ = 288
y_top$ = 288
?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z PROC ; stbtt__fill_active_edges_new, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2974
	mov	rax, rsp
	mov	QWORD PTR [rax+24], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 224				; 000000e0H
	movaps	XMMWORD PTR [rax-40], xmm6
	mov	rdi, r9
	movaps	XMMWORD PTR [rax-120], xmm11
	mov	r14d, r8d
; Line 2975
	movss	xmm11, DWORD PTR y_top$[rsp]
	mov	r15, rdx
	movaps	xmm6, xmm11
	mov	rsi, rcx
	addss	xmm6, DWORD PTR __real@3f800000
	movss	DWORD PTR y_bottom$1$[rsp], xmm6
; Line 2977
	test	r9, r9
	je	$LN3@stbtt__fil
	mov	QWORD PTR [rax+8], rbx
	xorps	xmm1, xmm1
	mov	QWORD PTR [rax+16], rbp
	movaps	XMMWORD PTR [rax-56], xmm7
	movaps	XMMWORD PTR [rax-72], xmm8
	movaps	XMMWORD PTR [rax-88], xmm9
	movaps	XMMWORD PTR [rax-104], xmm10
	movaps	XMMWORD PTR [rsp+112], xmm12
	movaps	XMMWORD PTR [rsp+96], xmm13
	movaps	XMMWORD PTR [rsp+64], xmm15
	movaps	XMMWORD PTR [rsp+80], xmm14
	npad	10
$LL2@stbtt__fil:
; Line 2981
	movss	xmm0, DWORD PTR [rdi+28]
	comiss	xmm0, xmm11
	jae	SHORT $LN4@stbtt__fil
	mov	r8d, 2981				; 00000ba5H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BO@MDBOACOJ@?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_?$AAt?$AAo?$AAp@
	call	QWORD PTR __imp__wassert
	xorps	xmm1, xmm1
$LN4@stbtt__fil:
; Line 2983
	movss	xmm15, DWORD PTR [rdi+12]
	ucomiss	xmm15, xmm1
	movss	xmm7, DWORD PTR [rdi+8]
	jp	SHORT $LN22@stbtt__fil
	jne	SHORT $LN22@stbtt__fil
; Line 2985
	movd	xmm0, r14d
	cvtdq2ps xmm0, xmm0
	comiss	xmm0, xmm7
	jbe	$LN20@stbtt__fil
; Line 2986
	comiss	xmm7, xmm1
	mov	r8, rdi
	movss	DWORD PTR [rsp+48], xmm6
	movaps	xmm3, xmm7
	movss	DWORD PTR [rsp+40], xmm7
	movss	DWORD PTR [rsp+32], xmm11
	jb	SHORT $LN25@stbtt__fil
; Line 2987
	cvttss2si ebx, xmm7
	mov	rcx, rsi
	mov	edx, ebx
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
; Line 2988
	movss	DWORD PTR [rsp+48], xmm6
	lea	edx, DWORD PTR [rbx+1]
	movss	DWORD PTR [rsp+40], xmm7
	lea	rcx, QWORD PTR [r15-4]
	movaps	xmm3, xmm7
	movss	DWORD PTR [rsp+32], xmm11
	mov	r8, rdi
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
; Line 2989
	jmp	$LN20@stbtt__fil
$LN25@stbtt__fil:
; Line 2990
	lea	rcx, QWORD PTR [r15-4]
	xor	edx, edx
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
; Line 2993
	jmp	$LN20@stbtt__fil
$LN22@stbtt__fil:
; Line 3000
	movss	xmm13, DWORD PTR [rdi+24]
	movaps	xmm12, xmm15
	comiss	xmm6, xmm13
	movss	xmm14, DWORD PTR [rdi+16]
	addss	xmm12, xmm7
	jb	SHORT $LN77@stbtt__fil
	movss	xmm0, DWORD PTR [rdi+28]
	comiss	xmm0, xmm11
	jae	SHORT $LN7@stbtt__fil
$LN77@stbtt__fil:
	mov	r8d, 3000				; 00000bb8H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1EI@KOIFPDFH@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAy?$AA_?$AAb?$AAo?$AAt?$AAt@
	call	QWORD PTR __imp__wassert
	movss	xmm13, DWORD PTR [rdi+24]
	xorps	xmm1, xmm1
$LN7@stbtt__fil:
; Line 3005
	comiss	xmm13, xmm11
	jbe	SHORT $LN27@stbtt__fil
; Line 3006
	movaps	xmm9, xmm13
	subss	xmm9, xmm11
	mulss	xmm9, xmm15
	addss	xmm9, xmm7
; Line 3008
	jmp	SHORT $LN28@stbtt__fil
$LN27@stbtt__fil:
; Line 3009
	movaps	xmm9, xmm7
; Line 3010
	movaps	xmm13, xmm11
$LN28@stbtt__fil:
; Line 3012
	movss	xmm10, DWORD PTR [rdi+28]
	comiss	xmm6, xmm10
	jbe	SHORT $LN29@stbtt__fil
; Line 3013
	movaps	xmm8, xmm10
	subss	xmm8, xmm11
	mulss	xmm8, xmm15
	addss	xmm8, xmm7
; Line 3015
	jmp	SHORT $LN30@stbtt__fil
$LN29@stbtt__fil:
; Line 3016
	movaps	xmm8, xmm12
; Line 3017
	movaps	xmm10, xmm6
$LN30@stbtt__fil:
; Line 3020
	comiss	xmm9, xmm1
	jb	$LN31@stbtt__fil
	comiss	xmm8, xmm1
	jb	$LN31@stbtt__fil
	movd	xmm0, r14d
	cvtdq2ps xmm0, xmm0
	comiss	xmm0, xmm9
	jbe	$LN31@stbtt__fil
	comiss	xmm0, xmm8
	jbe	$LN31@stbtt__fil
; Line 3023
	cvttss2si ebx, xmm9
	cvttss2si eax, xmm8
	cmp	ebx, eax
	jne	$LN33@stbtt__fil
; Line 3027
	subss	xmm10, xmm13
; Line 3028
	test	ebx, ebx
	js	SHORT $LN52@stbtt__fil
	cmp	ebx, r14d
	jl	SHORT $LN10@stbtt__fil
$LN52@stbtt__fil:
	mov	r8d, 3028				; 00000bd4H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CE@GDDDMDCC@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl@
	call	QWORD PTR __imp__wassert
$LN10@stbtt__fil:
; Line 3029
	xorps	xmm0, xmm0
	movsxd	rax, ebx
	cvtsi2ss xmm0, ebx
	subss	xmm8, xmm0
	subss	xmm9, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	addss	xmm8, xmm9
	mulss	xmm8, DWORD PTR __real@3f000000
	subss	xmm0, xmm8
	mulss	xmm0, DWORD PTR [rdi+20]
	mulss	xmm0, xmm10
	addss	xmm0, DWORD PTR [rsi+rax*4]
	movss	DWORD PTR [rsi+rax*4], xmm0
; Line 3030
	mulss	xmm10, DWORD PTR [rdi+20]
	addss	xmm10, DWORD PTR [r15+rax*4]
	movss	DWORD PTR [r15+rax*4], xmm10
; Line 3031
	jmp	$LN20@stbtt__fil
$LN33@stbtt__fil:
; Line 3035
	comiss	xmm9, xmm8
	jbe	SHORT $LN35@stbtt__fil
; Line 3043
	xorps	xmm14, DWORD PTR __xmm@80000000800000008000000080000000
	subss	xmm13, xmm11
	movaps	xmm0, xmm6
	subss	xmm10, xmm11
; Line 3044
	movaps	xmm7, xmm12
	subss	xmm0, xmm13
	movaps	xmm13, xmm6
	subss	xmm13, xmm10
	movaps	xmm10, xmm0
	movaps	xmm0, xmm8
	movaps	xmm8, xmm9
	movaps	xmm9, xmm0
$LN35@stbtt__fil:
; Line 3058
	movss	xmm4, DWORD PTR __real@3f800000
	movss	xmm15, DWORD PTR __real@3f000000
	cvttss2si r8d, xmm9
	cvttss2si ebp, xmm8
	movsxd	rax, r8d
	lea	ecx, DWORD PTR [r8+1]
	movsxd	rdx, ecx
	movd	xmm0, r8d
	cvtdq2ps xmm0, xmm0
; Line 3061
	movsxd	rbx, ebp
	movd	xmm12, ecx
	subss	xmm9, xmm0
	movaps	xmm0, xmm4
	cvtdq2ps xmm12, xmm12
	addss	xmm9, xmm4
	subss	xmm12, xmm7
	movss	xmm7, DWORD PTR [rdi+20]
	movaps	xmm2, xmm7
	mulss	xmm2, xmm14
	mulss	xmm9, xmm15
	mulss	xmm12, xmm14
	subss	xmm0, xmm9
	addss	xmm12, xmm11
	movaps	xmm6, xmm12
	subss	xmm6, xmm13
	mulss	xmm6, xmm7
	mulss	xmm0, xmm6
	addss	xmm0, DWORD PTR [rsi+rax*4]
	movss	DWORD PTR [rsi+rax*4], xmm0
	cmp	rdx, rbx
	jge	$LN68@stbtt__fil
	mov	rax, rbx
	sub	rax, rdx
	cmp	rax, 4
	jl	$LN72@stbtt__fil
	mov	rcx, rbx
	lea	rax, QWORD PTR [rsi+8]
	sub	rcx, rdx
	lea	rax, QWORD PTR [rax+rdx*4]
	sub	rcx, 4
	movaps	xmm3, xmm2
	shr	rcx, 2
	inc	rcx
	mulss	xmm3, xmm15
	lea	rdx, QWORD PTR [rdx+rcx*4]
	npad	3
$LL70@stbtt__fil:
; Line 3062
	movaps	xmm0, xmm3
	movaps	xmm1, xmm3
	addss	xmm0, xmm6
; Line 3063
	addss	xmm6, xmm2
	addss	xmm0, DWORD PTR [rax-8]
	movss	DWORD PTR [rax-8], xmm0
	movaps	xmm0, xmm3
	addss	xmm0, xmm6
	addss	xmm6, xmm2
	addss	xmm0, DWORD PTR [rax-4]
	addss	xmm1, xmm6
	addss	xmm6, xmm2
	movss	DWORD PTR [rax-4], xmm0
	movaps	xmm0, xmm3
	addss	xmm1, DWORD PTR [rax]
	addss	xmm0, xmm6
	addss	xmm6, xmm2
	movss	DWORD PTR [rax], xmm1
	addss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR [rax+4], xmm0
	add	rax, 16
	sub	rcx, 1
	jne	SHORT $LL70@stbtt__fil
$LN72@stbtt__fil:
; Line 3061
	cmp	rdx, rbx
	jge	SHORT $LN68@stbtt__fil
	movaps	xmm1, xmm2
	mulss	xmm1, xmm15
$LC63@stbtt__fil:
; Line 3062
	movaps	xmm0, xmm1
	addss	xmm0, xmm6
; Line 3063
	addss	xmm6, xmm2
	addss	xmm0, DWORD PTR [rsi+rdx*4]
	movss	DWORD PTR [rsi+rdx*4], xmm0
	inc	rdx
	cmp	rdx, rbx
	jl	SHORT $LC63@stbtt__fil
$LN68@stbtt__fil:
; Line 3065
	mov	eax, ebp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
; Line 672
	movaps	xmm1, xmm6
	andps	xmm1, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3065
	sub	eax, r8d
	dec	eax
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm14
	addss	xmm12, xmm0
; Line 3067
	movss	xmm0, DWORD PTR __real@3f8147ae
	comiss	xmm0, xmm1
	jae	SHORT $LN16@stbtt__fil
	mov	r8d, 3067				; 00000bfbH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CK@PHOJNIKI@?$AAf?$AAa?$AAb?$AAs?$AAf?$AA?$CI?$AAa?$AAr?$AAe?$AAa?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5@
	call	QWORD PTR __imp__wassert
	movss	xmm4, DWORD PTR __real@3f800000
$LN16@stbtt__fil:
; Line 3069
	xorps	xmm0, xmm0
	movaps	xmm1, xmm4
	cvtsi2ss xmm0, ebp
	subss	xmm8, xmm0
	xorps	xmm0, xmm0
	addss	xmm8, xmm0
	movaps	xmm0, xmm10
; Line 3071
	subss	xmm10, xmm13
	subss	xmm0, xmm12
	mulss	xmm8, xmm15
	mulss	xmm10, xmm7
	subss	xmm1, xmm8
	mulss	xmm1, xmm7
	mulss	xmm1, xmm0
	addss	xmm1, xmm6
	addss	xmm1, DWORD PTR [rsi+rbx*4]
	movss	DWORD PTR [rsi+rbx*4], xmm1
	addss	xmm10, DWORD PTR [r15+rbx*4]
	movss	DWORD PTR [r15+rbx*4], xmm10
; Line 3073
	jmp	$LN78@stbtt__fil
$LN31@stbtt__fil:
; Line 3079
	xor	ebx, ebx
	test	r14d, r14d
	jle	$LN20@stbtt__fil
	movss	xmm13, DWORD PTR y_bottom$1$[rsp]
	npad	9
$LL21@stbtt__fil:
	xorps	xmm9, xmm9
; Line 3096
	lea	ebp, DWORD PTR [rbx+1]
	xorps	xmm6, xmm6
	cvtsi2ss xmm9, ebx
	cvtsi2ss xmm6, ebp
; Line 3106
	comiss	xmm9, xmm7
	movaps	xmm10, xmm9
	movaps	xmm8, xmm6
	subss	xmm10, xmm7
	subss	xmm8, xmm7
	divss	xmm10, xmm15
	divss	xmm8, xmm15
	addss	xmm10, xmm11
	addss	xmm8, xmm11
	jbe	SHORT $LN36@stbtt__fil
	comiss	xmm12, xmm6
	jbe	SHORT $LN36@stbtt__fil
; Line 3107
	movss	DWORD PTR [rsp+48], xmm10
	movaps	xmm3, xmm7
	movss	DWORD PTR [rsp+40], xmm9
	mov	r8, rdi
	mov	edx, ebx
	movss	DWORD PTR [rsp+32], xmm11
	mov	rcx, rsi
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
; Line 3108
	movss	DWORD PTR [rsp+48], xmm8
	movaps	xmm3, xmm9
	movss	DWORD PTR [rsp+40], xmm6
	mov	r8, rdi
	mov	edx, ebx
	movss	DWORD PTR [rsp+32], xmm10
	mov	rcx, rsi
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
; Line 3109
	jmp	$LN19@stbtt__fil
$LN36@stbtt__fil:
; Line 3110
	comiss	xmm9, xmm12
	jbe	SHORT $LN38@stbtt__fil
	comiss	xmm7, xmm6
	jbe	SHORT $LN38@stbtt__fil
; Line 3111
	movss	DWORD PTR [rsp+48], xmm8
	movaps	xmm3, xmm7
	movss	DWORD PTR [rsp+40], xmm6
	mov	r8, rdi
	mov	edx, ebx
	movss	DWORD PTR [rsp+32], xmm11
	mov	rcx, rsi
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
; Line 3112
	movss	DWORD PTR [rsp+48], xmm10
	movaps	xmm3, xmm6
	movss	DWORD PTR [rsp+40], xmm9
	movss	DWORD PTR [rsp+32], xmm8
; Line 3113
	jmp	SHORT $LN80@stbtt__fil
$LN38@stbtt__fil:
; Line 3114
	comiss	xmm9, xmm7
	jbe	SHORT $LN40@stbtt__fil
	comiss	xmm12, xmm9
	ja	SHORT $LN79@stbtt__fil
$LN40@stbtt__fil:
; Line 3117
	comiss	xmm9, xmm12
	jbe	SHORT $LN42@stbtt__fil
	comiss	xmm7, xmm9
	jbe	SHORT $LN42@stbtt__fil
$LN79@stbtt__fil:
; Line 3079
	movss	DWORD PTR [rsp+48], xmm10
	movaps	xmm3, xmm7
	movss	DWORD PTR [rsp+40], xmm9
	movss	DWORD PTR [rsp+32], xmm11
$LN80@stbtt__fil:
	mov	r8, rdi
	mov	edx, ebx
	mov	rcx, rsi
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
	movaps	xmm6, xmm9
	movaps	xmm8, xmm10
	jmp	SHORT $LN19@stbtt__fil
$LN42@stbtt__fil:
; Line 3120
	comiss	xmm6, xmm7
	jbe	SHORT $LN44@stbtt__fil
	comiss	xmm12, xmm6
	jbe	SHORT $LN44@stbtt__fil
; Line 3121
	movss	DWORD PTR [rsp+48], xmm8
	movaps	xmm3, xmm7
	movss	DWORD PTR [rsp+40], xmm6
	mov	r8, rdi
	mov	edx, ebx
	movss	DWORD PTR [rsp+32], xmm11
	mov	rcx, rsi
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
; Line 3122
	jmp	SHORT $LN19@stbtt__fil
$LN44@stbtt__fil:
; Line 3123
	comiss	xmm6, xmm12
	jbe	SHORT $LN46@stbtt__fil
	comiss	xmm7, xmm6
	jbe	SHORT $LN46@stbtt__fil
; Line 3124
	movss	DWORD PTR [rsp+48], xmm8
	movaps	xmm3, xmm7
	movss	DWORD PTR [rsp+40], xmm6
	mov	r8, rdi
	mov	edx, ebx
	movss	DWORD PTR [rsp+32], xmm11
	mov	rcx, rsi
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
; Line 3126
	jmp	SHORT $LN19@stbtt__fil
$LN46@stbtt__fil:
; Line 3127
	movaps	xmm6, xmm7
	movaps	xmm8, xmm11
$LN19@stbtt__fil:
; Line 3079
	movss	DWORD PTR [rsp+48], xmm13
	movaps	xmm3, xmm6
	movss	DWORD PTR [rsp+40], xmm12
	mov	r8, rdi
	mov	edx, ebx
	movss	DWORD PTR [rsp+32], xmm8
	mov	rcx, rsi
	call	?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ; stbtt__handle_clipped_edge
	mov	ebx, ebp
	cmp	ebp, r14d
	jl	$LL21@stbtt__fil
$LN78@stbtt__fil:
; Line 3132
	movss	xmm6, DWORD PTR y_bottom$1$[rsp]
$LN20@stbtt__fil:
	mov	rdi, QWORD PTR [rdi]
	xorps	xmm1, xmm1
	test	rdi, rdi
	jne	$LL2@stbtt__fil
; Line 2977
	movaps	xmm15, XMMWORD PTR [rsp+64]
	movaps	xmm14, XMMWORD PTR [rsp+80]
	movaps	xmm13, XMMWORD PTR [rsp+96]
	movaps	xmm12, XMMWORD PTR [rsp+112]
	movaps	xmm10, XMMWORD PTR [rsp+144]
	movaps	xmm9, XMMWORD PTR [rsp+160]
	movaps	xmm8, XMMWORD PTR [rsp+176]
	movaps	xmm7, XMMWORD PTR [rsp+192]
	mov	rbp, QWORD PTR [rsp+264]
	mov	rbx, QWORD PTR [rsp+256]
$LN3@stbtt__fil:
; Line 3134
	lea	r11, QWORD PTR [rsp+224]
	mov	rsi, QWORD PTR [r11+48]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm11, XMMWORD PTR [r11-96]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
?stbtt__fill_active_edges_new@@YAXPEAM0HPEAUstbtt__active_edge@@M@Z ENDP ; stbtt__fill_active_edges_new
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z
_TEXT	SEGMENT
scanline$ = 144
x$ = 152
e$ = 160
x0$ = 168
y0$ = 176
x1$ = 184
y1$ = 192
?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z PROC ; stbtt__handle_clipped_edge, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2937
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 128				; 00000080H
	movaps	XMMWORD PTR [rsp+112], xmm6
	mov	rbx, r8
; Line 2938
	movss	xmm6, DWORD PTR y1$[rsp]
	mov	rsi, rcx
	movaps	XMMWORD PTR [rsp+80], xmm8
	movaps	xmm8, xmm3
	movaps	XMMWORD PTR [rsp+32], xmm11
	movss	xmm11, DWORD PTR y0$[rsp]
	ucomiss	xmm11, xmm6
	movsxd	rdi, edx
	jp	SHORT $LN54@stbtt__han
	je	$LN42@stbtt__han
$LN54@stbtt__han:
; Line 2939
	comiss	xmm6, xmm11
	ja	SHORT $LN2@stbtt__han
	mov	r8d, 2939				; 00000b7bH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BA@ENLNFFAM@?$AAy?$AA0?$AA?5?$AA?$DM?$AA?5?$AAy?$AA1@
	call	QWORD PTR __imp__wassert
$LN2@stbtt__han:
; Line 2940
	movss	xmm3, DWORD PTR [rbx+28]
	comiss	xmm3, DWORD PTR [rbx+24]
	jae	SHORT $LN5@stbtt__han
	mov	r8d, 2940				; 00000b7cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BO@JGPMADBG@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy@
	call	QWORD PTR __imp__wassert
	movss	xmm3, DWORD PTR [rbx+28]
$LN5@stbtt__han:
; Line 2941
	comiss	xmm11, xmm3
	ja	$LN42@stbtt__han
; Line 2942
	movss	xmm4, DWORD PTR [rbx+24]
	comiss	xmm4, xmm6
	ja	$LN42@stbtt__han
; Line 2943
	comiss	xmm4, xmm11
	movaps	XMMWORD PTR [rsp+96], xmm7
	movss	xmm7, DWORD PTR x1$[rsp]
	movaps	XMMWORD PTR [rsp+64], xmm9
	movaps	XMMWORD PTR [rsp+48], xmm10
	jbe	SHORT $LN29@stbtt__han
; Line 2944
	movaps	xmm2, xmm4
	movaps	xmm0, xmm7
	subss	xmm2, xmm11
	movaps	xmm1, xmm6
	subss	xmm0, xmm8
	subss	xmm1, xmm11
; Line 2945
	movaps	xmm11, xmm4
	mulss	xmm2, xmm0
	divss	xmm2, xmm1
	addss	xmm8, xmm2
$LN29@stbtt__han:
; Line 2947
	comiss	xmm6, xmm3
	jbe	SHORT $LN30@stbtt__han
; Line 2948
	movaps	xmm0, xmm7
	movaps	xmm1, xmm3
	subss	xmm1, xmm6
	subss	xmm6, xmm11
	subss	xmm0, xmm8
	mulss	xmm1, xmm0
	divss	xmm1, xmm6
; Line 2949
	movaps	xmm6, xmm3
	addss	xmm7, xmm1
$LN30@stbtt__han:
; Line 2952
	movd	xmm9, edi
	lea	eax, DWORD PTR [rdi+1]
	cvtdq2ps xmm9, xmm9
	movd	xmm10, eax
	ucomiss	xmm8, xmm9
	cvtdq2ps xmm10, xmm10
	jp	SHORT $LN31@stbtt__han
	jne	SHORT $LN31@stbtt__han
; Line 2953
	comiss	xmm10, xmm7
	jae	$LN21@stbtt__han
	mov	r8d, 2953				; 00000b89H
	lea	rcx, OFFSET FLAT:??_C@_1BE@DHAKMBPL@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1@
	jmp	SHORT $LN58@stbtt__han
$LN31@stbtt__han:
; Line 2954
	ucomiss	xmm8, xmm10
	jp	SHORT $LN33@stbtt__han
	jne	SHORT $LN33@stbtt__han
; Line 2955
	comiss	xmm7, xmm9
	jae	SHORT $LN21@stbtt__han
	mov	r8d, 2955				; 00000b8bH
	lea	rcx, OFFSET FLAT:??_C@_1BA@FAAMJPKE@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx@
	jmp	SHORT $LN58@stbtt__han
$LN33@stbtt__han:
; Line 2956
	comiss	xmm9, xmm8
	jb	SHORT $LN35@stbtt__han
; Line 2957
	comiss	xmm9, xmm7
	jae	SHORT $LN21@stbtt__han
	mov	r8d, 2957				; 00000b8dH
	lea	rcx, OFFSET FLAT:??_C@_1BA@FEPJEPJJ@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx@
	jmp	SHORT $LN58@stbtt__han
$LN35@stbtt__han:
; Line 2958
	comiss	xmm8, xmm10
	jb	SHORT $LN22@stbtt__han
; Line 2959
	comiss	xmm7, xmm10
	jae	SHORT $LN21@stbtt__han
	mov	r8d, 2959				; 00000b8fH
	lea	rcx, OFFSET FLAT:??_C@_1BE@NGGEAFFG@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1@
	jmp	SHORT $LN58@stbtt__han
$LN22@stbtt__han:
; Line 2961
	comiss	xmm7, xmm9
	jb	SHORT $LN50@stbtt__han
	comiss	xmm10, xmm7
	jae	SHORT $LN21@stbtt__han
$LN50@stbtt__han:
	mov	r8d, 2961				; 00000b91H
	lea	rcx, OFFSET FLAT:??_C@_1CK@NILBPPPH@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DM@
$LN58@stbtt__han:
; Line 2963
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	call	QWORD PTR __imp__wassert
$LN21@stbtt__han:
	comiss	xmm9, xmm8
	jb	SHORT $LN39@stbtt__han
	comiss	xmm9, xmm7
	jb	SHORT $LN39@stbtt__han
; Line 2964
	subss	xmm6, xmm11
	mulss	xmm6, DWORD PTR [rbx+20]
	addss	xmm6, DWORD PTR [rsi+rdi*4]
	movss	DWORD PTR [rsi+rdi*4], xmm6
	jmp	SHORT $LN57@stbtt__han
$LN39@stbtt__han:
; Line 2965
	comiss	xmm8, xmm10
	jb	SHORT $LN25@stbtt__han
	comiss	xmm7, xmm10
	jae	SHORT $LN57@stbtt__han
$LN25@stbtt__han:
; Line 2968
	comiss	xmm8, xmm9
	jb	SHORT $LN52@stbtt__han
	comiss	xmm10, xmm8
	jb	SHORT $LN52@stbtt__han
	comiss	xmm7, xmm9
	jb	SHORT $LN52@stbtt__han
	comiss	xmm10, xmm7
	jae	SHORT $LN23@stbtt__han
$LN52@stbtt__han:
	mov	r8d, 2968				; 00000b98H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1FK@JPMIPNJF@?$AAx?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA0?$AA?5?$AA?$DM@
	call	QWORD PTR __imp__wassert
$LN23@stbtt__han:
; Line 2969
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm8, xmm9
	subss	xmm7, xmm9
	subss	xmm6, xmm11
	addss	xmm8, xmm7
	mulss	xmm6, DWORD PTR [rbx+20]
	mulss	xmm8, DWORD PTR __real@3f000000
	subss	xmm0, xmm8
	mulss	xmm0, xmm6
	addss	xmm0, DWORD PTR [rsi+rdi*4]
	movss	DWORD PTR [rsi+rdi*4], xmm0
$LN57@stbtt__han:
	movaps	xmm9, XMMWORD PTR [rsp+64]
	movaps	xmm7, XMMWORD PTR [rsp+96]
	movaps	xmm10, XMMWORD PTR [rsp+48]
$LN42@stbtt__han:
; Line 2971
	movaps	xmm6, XMMWORD PTR [rsp+112]
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm11, XMMWORD PTR [r11-96]
	mov	rsp, r11
	pop	rdi
	ret	0
?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z ENDP ; stbtt__handle_clipped_edge
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__new_active@@YAPEAUstbtt__active_edge@@PEAUstbtt__hheap@@PEAUstbtt__edge@@HMPEAX@Z
_TEXT	SEGMENT
hh$ = 64
e$ = 72
off_x$ = 80
start_point$ = 88
userdata$ = 96
?stbtt__new_active@@YAPEAUstbtt__active_edge@@PEAUstbtt__hheap@@PEAUstbtt__edge@@HMPEAX@Z PROC ; stbtt__new_active, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2766
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 2680
	mov	r9, QWORD PTR [rcx+8]
; Line 2766
	mov	esi, r8d
	movaps	XMMWORD PTR [rsp+32], xmm6
	movaps	xmm6, xmm3
	mov	rdi, rdx
	mov	rbx, rcx
; Line 2680
	test	r9, r9
	je	SHORT $LN13@stbtt__new
; Line 2682
	mov	rax, QWORD PTR [r9]
	mov	QWORD PTR [rcx+8], rax
; Line 2683
	jmp	SHORT $LN14@stbtt__new
$LN13@stbtt__new:
; Line 2685
	mov	eax, DWORD PTR [rcx+16]
	test	eax, eax
	jne	SHORT $LN21@stbtt__new
; Line 2687
	mov	ecx, 25608				; 00006408H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rcx, rax
; Line 2688
	test	rax, rax
	jne	SHORT $LN16@stbtt__new
; Line 2689
	xor	r9d, r9d
	jmp	SHORT $LN14@stbtt__new
$LN16@stbtt__new:
; Line 2690
	mov	rax, QWORD PTR [rbx]
	mov	QWORD PTR [rcx], rax
; Line 2692
	mov	eax, 800				; 00000320H
	mov	QWORD PTR [rbx], rcx
$LN21@stbtt__new:
; Line 2695
	mov	r9, QWORD PTR [rbx]
	dec	eax
	movsxd	rcx, eax
	add	r9, 8
	shl	rcx, 5
	add	r9, rcx
	mov	DWORD PTR [rbx+16], eax
$LN14@stbtt__new:
; Line 2768
	movss	xmm1, DWORD PTR [rdi+8]
	movss	xmm0, DWORD PTR [rdi+12]
	subss	xmm1, DWORD PTR [rdi]
	subss	xmm0, DWORD PTR [rdi+4]
	divss	xmm1, xmm0
; Line 2769
	test	r9, r9
	jne	SHORT $LN5@stbtt__new
	mov	r8d, 2769				; 00000ad1H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1O@EHPNOHML@?$AAz?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
; Line 2771
	xor	eax, eax
	jmp	SHORT $LN1@stbtt__new
$LN5@stbtt__new:
; Line 2773
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	ucomiss	xmm1, xmm0
	movss	DWORD PTR [r9+12], xmm1
	jp	SHORT $LN22@stbtt__new
	je	SHORT $LN9@stbtt__new
$LN22@stbtt__new:
	movaps	xmm0, xmm2
	divss	xmm0, xmm1
$LN9@stbtt__new:
	movss	DWORD PTR [r9+16], xmm0
; Line 2774
	subss	xmm6, DWORD PTR [rdi+4]
	movd	xmm0, esi
; Line 2775
	cvtdq2ps xmm0, xmm0
	mulss	xmm6, xmm1
	addss	xmm6, DWORD PTR [rdi]
	subss	xmm6, xmm0
	movss	DWORD PTR [r9+8], xmm6
; Line 2776
	cmp	DWORD PTR [rdi+16], 0
	jne	SHORT $LN11@stbtt__new
	movss	xmm2, DWORD PTR __real@bf800000
$LN11@stbtt__new:
	movss	DWORD PTR [r9+20], xmm2
; Line 2780
	mov	rax, r9
	mov	ecx, DWORD PTR [rdi+4]
	mov	DWORD PTR [r9+24], ecx
	mov	ecx, DWORD PTR [rdi+12]
	mov	DWORD PTR [r9+28], ecx
	mov	QWORD PTR [r9], 0
$LN1@stbtt__new:
; Line 2781
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	movaps	xmm6, XMMWORD PTR [rsp+32]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?stbtt__new_active@@YAPEAUstbtt__active_edge@@PEAUstbtt__hheap@@PEAUstbtt__edge@@HMPEAX@Z ENDP ; stbtt__new_active
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z
_TEXT	SEGMENT
hh$ = 48
userdata$ = 56
?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z PROC	; stbtt__hheap_cleanup, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2706
	sub	rsp, 40					; 00000028H
; Line 2707
	mov	rcx, QWORD PTR [rcx]
; Line 2708
	test	rcx, rcx
	je	SHORT $LN3@stbtt__hhe
	mov	QWORD PTR [rsp+32], rbx
$LL2@stbtt__hhe:
; Line 2709
	mov	rbx, QWORD PTR [rcx]
; Line 2710
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 2711
	mov	rcx, rbx
	test	rbx, rbx
	jne	SHORT $LL2@stbtt__hhe
; Line 2708
	mov	rbx, QWORD PTR [rsp+32]
$LN3@stbtt__hhe:
; Line 2713
	add	rsp, 40					; 00000028H
	ret	0
?stbtt__hheap_cleanup@@YAXPEAUstbtt__hheap@@PEAX@Z ENDP	; stbtt__hheap_cleanup
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__hheap_free@@YAXPEAUstbtt__hheap@@PEAX@Z
_TEXT	SEGMENT
hh$ = 8
p$ = 16
?stbtt__hheap_free@@YAXPEAUstbtt__hheap@@PEAX@Z PROC	; stbtt__hheap_free, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2701
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
; Line 2702
	mov	QWORD PTR [rcx+8], rdx
; Line 2703
	ret	0
?stbtt__hheap_free@@YAXPEAUstbtt__hheap@@PEAX@Z ENDP	; stbtt__hheap_free
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z
_TEXT	SEGMENT
hh$ = 48
size$ = 56
userdata$ = 64
?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z PROC ; stbtt__hheap_alloc, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2679
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 2680
	mov	rax, QWORD PTR [rcx+8]
	mov	rsi, rdx
	mov	rdi, rcx
	test	rax, rax
	je	SHORT $LN2@stbtt__hhe
; Line 2682
	mov	rdx, QWORD PTR [rax]
	mov	QWORD PTR [rcx+8], rdx
; Line 2697
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@stbtt__hhe:
	mov	QWORD PTR [rsp+48], rbx
; Line 2685
	mov	ebx, DWORD PTR [rcx+16]
	test	ebx, ebx
	jne	SHORT $LN10@stbtt__hhe
; Line 2686
	cmp	rsi, 32					; 00000020H
	jae	SHORT $LN7@stbtt__hhe
	mov	ebx, 2000				; 000007d0H
	jmp	SHORT $LN8@stbtt__hhe
$LN7@stbtt__hhe:
	cmp	rsi, 128				; 00000080H
	mov	ebx, 100				; 00000064H
	mov	eax, 800				; 00000320H
	cmovb	ebx, eax
$LN8@stbtt__hhe:
; Line 2687
	mov	ecx, ebx
	imul	rcx, rsi
	add	rcx, 8
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rcx, rax
; Line 2688
	test	rax, rax
	jne	SHORT $LN5@stbtt__hhe
	mov	rbx, QWORD PTR [rsp+48]
; Line 2697
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN5@stbtt__hhe:
; Line 2690
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rcx], rax
; Line 2691
	mov	QWORD PTR [rdi], rcx
$LN10@stbtt__hhe:
; Line 2694
	lea	eax, DWORD PTR [rbx-1]
	mov	rbx, QWORD PTR [rsp+48]
; Line 2695
	movsxd	rcx, eax
	mov	DWORD PTR [rdi+16], eax
	mov	rax, QWORD PTR [rdi]
	imul	rcx, rsi
; Line 2697
	mov	rsi, QWORD PTR [rsp+56]
	add	rax, 8
	add	rax, rcx
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stbtt__hheap_alloc@@YAPEAXPEAUstbtt__hheap@@_KPEAX@Z ENDP ; stbtt__hheap_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__GetGlyphShapeT2@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z
_TEXT	SEGMENT
count_ctx$ = 32
output_ctx$ = 88
info$ = 160
glyph_index$ = 168
pvertices$ = 176
?stbtt__GetGlyphShapeT2@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z PROC ; stbtt__GetGlyphShapeT2, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2238
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	mov	QWORD PTR [rax+24], rsi
	push	r14
	sub	rsp, 144				; 00000090H
; Line 2240
	xor	r14d, r14d
	mov	QWORD PTR [rax-120], 1
	xorps	xmm0, xmm0
	mov	QWORD PTR [rax-80], r14
	xorps	xmm1, xmm1
	mov	DWORD PTR [rax-72], r14d
	mov	rbx, r8
; Line 2241
	mov	QWORD PTR [rax-64], r14
; Line 2242
	lea	r8, QWORD PTR [rax-120]
	mov	DWORD PTR [rax-16], r14d
	movups	XMMWORD PTR [rax-112], xmm0
	mov	esi, edx
	mov	rbp, rcx
	movdqu	XMMWORD PTR [rax-96], xmm1
	movups	XMMWORD PTR [rax-56], xmm0
	movdqu	XMMWORD PTR [rax-40], xmm1
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
	test	eax, eax
	je	SHORT $LN6@stbtt__Get
; Line 2243
	movsxd	rax, DWORD PTR count_ctx$[rsp+48]
	imul	rcx, rax, 14
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 2245
	lea	r8, QWORD PTR output_ctx$[rsp]
	mov	QWORD PTR [rbx], rax
	mov	edx, esi
	mov	QWORD PTR output_ctx$[rsp+40], rax
	mov	rcx, rbp
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
	test	eax, eax
	je	SHORT $LN6@stbtt__Get
; Line 2246
	mov	ebx, DWORD PTR output_ctx$[rsp+48]
	cmp	ebx, DWORD PTR count_ctx$[rsp+48]
	je	SHORT $LN2@stbtt__Get
	mov	r8d, 2246				; 000008c6H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1GE@KABFAMEA@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA_?$AAc?$AAt?$AAx?$AA?4?$AAn?$AAu?$AAm?$AA_@
	call	QWORD PTR __imp__wassert
$LN2@stbtt__Get:
; Line 2247
	mov	eax, ebx
	jmp	SHORT $LN1@stbtt__Get
$LN6@stbtt__Get:
; Line 2250
	mov	QWORD PTR [rbx], r14
; Line 2251
	xor	eax, eax
$LN1@stbtt__Get:
; Line 2252
	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	r14
	ret	0
?stbtt__GetGlyphShapeT2@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z ENDP ; stbtt__GetGlyphShapeT2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z
_TEXT	SEGMENT
clear_stack$1$ = 64
$T1 = 80
$T2 = 80
$T3 = 80
b$ = 80
maskbits$1$ = 96
in_header$1$ = 100
subr_stack_height$1$ = 104
has_subrs$1$ = 108
glyph_index$GSCopy$1$ = 112
info$GSCopy$1$ = 120
$T4 = 128
$T5 = 128
subrs$ = 144
$T6 = 160
s$ = 176
subr_stack$ = 368
__$ArrayPad$ = 528
info$ = 768
glyph_index$ = 776
c$ = 784
?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z PROC ; stbtt__run_charstring, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1979
	mov	r11, rsp
	mov	QWORD PTR [r11+32], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [r11-504]
	sub	rsp, 704				; 000002c0H
	movaps	XMMWORD PTR [r11-72], xmm6
	movaps	XMMWORD PTR [r11-104], xmm8
	movaps	XMMWORD PTR [r11-120], xmm9
	movaps	XMMWORD PTR [r11-136], xmm10
	movaps	XMMWORD PTR [r11-152], xmm11
	movaps	XMMWORD PTR [r11-168], xmm12
	movaps	XMMWORD PTR [r11-184], xmm13
	movaps	XMMWORD PTR [r11-200], xmm14
	movaps	XMMWORD PTR [r11-216], xmm15
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rax, rcx
	mov	QWORD PTR info$GSCopy$1$[rsp], rcx
; Line 1980
	xor	ecx, ecx
	mov	DWORD PTR glyph_index$GSCopy$1$[rsp], edx
	mov	r12, r8
	mov	DWORD PTR maskbits$1$[rsp], ecx
	mov	r15d, ecx
	mov	DWORD PTR subr_stack_height$1$[rsp], ecx
; Line 1983
	movups	xmm0, XMMWORD PTR [rax+112]
	mov	esi, ecx
	mov	DWORD PTR has_subrs$1$[rsp], ecx
; Line 1989
	movups	xmm1, XMMWORD PTR [rax+80]
	mov	r8d, edx
	lea	rdx, QWORD PTR $T4[rbp-256]
	lea	rcx, QWORD PTR $T3[rsp]
	movaps	XMMWORD PTR [r11-88], xmm7
	movups	XMMWORD PTR subrs$[rbp-256], xmm0
	mov	DWORD PTR in_header$1$[rsp], 1
	movaps	XMMWORD PTR $T4[rbp-256], xmm1
	call	?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z ; stbtt__cff_index_get
	movss	xmm13, DWORD PTR s$[rbp-232]
	xorps	xmm8, xmm8
	movss	xmm14, DWORD PTR s$[rbp-236]
	xor	r9d, r9d
	movss	xmm15, DWORD PTR s$[rbp-240]
	movups	xmm0, XMMWORD PTR [rax]
	movss	xmm11, DWORD PTR s$[rbp-244]
	movss	xmm10, DWORD PTR s$[rbp-248]
	movss	xmm12, DWORD PTR s$[rbp-252]
	movss	xmm9, DWORD PTR s$[rbp-256]
	movss	xmm6, DWORD PTR s$[rbp-224]
	movaps	XMMWORD PTR b$[rsp], xmm0
	mov	r13d, DWORD PTR b$[rsp+8]
$LN268@stbtt__run:
; Line 1990
	mov	rax, QWORD PTR b$[rsp+8]
	lea	r10, OFFSET FLAT:__ImageBase
	movss	xmm5, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	movss	xmm4, DWORD PTR __xmm@80000000800000008000000080000000
	shr	rax, 32					; 00000020H
	cmp	r13d, eax
	jge	$LN3@stbtt__run
; Line 1120
	mov	rdx, QWORD PTR b$[rsp]
; Line 1991
	mov	ebx, r9d
; Line 1120
	movsxd	rax, r13d
	inc	r13d
; Line 1992
	mov	DWORD PTR clear_stack$1$[rsp], 1
; Line 1120
	movsxd	r8, r13d
	mov	DWORD PTR b$[rsp+8], r13d
	movzx	r14d, BYTE PTR [rax+rdx]
; Line 1993
	mov	edi, r14d
; Line 1994
	lea	eax, DWORD PTR [r14-1]
	cmp	eax, 30
	ja	$LN89@stbtt__run
	cdqe
	mov	ecx, DWORD PTR $LN256@stbtt__run[r10+rax*4]
	add	rcx, r10
	jmp	rcx
$LN29@stbtt__run:
; Line 1998
	cmp	DWORD PTR in_header$1$[rsp], 0
	mov	edi, DWORD PTR maskbits$1$[rsp]
	je	SHORT $LN30@stbtt__run
; Line 1999
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	add	edi, eax
	mov	DWORD PTR maskbits$1$[rsp], edi
$LN30@stbtt__run:
; Line 1132
	mov	ebx, DWORD PTR b$[rsp+12]
; Line 2001
	lea	eax, DWORD PTR [rdi+7]
	cdq
	mov	DWORD PTR in_header$1$[rsp], r9d
	and	edx, 7
	lea	r13d, DWORD PTR [rdx+rax]
	sar	r13d, 3
	add	r13d, r8d
; Line 1132
	cmp	r13d, ebx
	jg	SHORT $LN113@stbtt__run
	test	r13d, r13d
	jns	SHORT $LN109@stbtt__run
$LN113@stbtt__run:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	xor	r9d, r9d
$LN109@stbtt__run:
; Line 1133
	cmp	r13d, ebx
	jg	SHORT $LN115@stbtt__run
	test	r13d, r13d
	js	SHORT $LN115@stbtt__run
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
; Line 2231
	mov	eax, r9d
	test	ecx, ecx
; Line 1133
	mov	DWORD PTR b$[rsp+8], r13d
; Line 2231
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN115@stbtt__run:
; Line 2002
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
; Line 2231
	mov	eax, r9d
	test	ecx, ecx
; Line 1133
	mov	DWORD PTR b$[rsp+8], ebx
	mov	r13d, ebx
; Line 2231
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN31@stbtt__run:
; Line 2009
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	add	DWORD PTR maskbits$1$[rsp], eax
; Line 2231
	mov	eax, r9d
	test	ecx, ecx
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN32@stbtt__run:
; Line 2012
	mov	DWORD PTR in_header$1$[rsp], r9d
; Line 2013
	cmp	esi, 2
	jl	$LN3@stbtt__run
; Line 2014
	movsxd	rax, esi
	mov	rcx, r12
	movss	xmm2, DWORD PTR s$[rbp+rax*4-260]
	movss	xmm1, DWORD PTR s$[rbp+rax*4-264]
	call	?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z ; stbtt__csctx_rmove_to
; Line 2015
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN34@stbtt__run:
; Line 2017
	mov	DWORD PTR in_header$1$[rsp], r9d
; Line 2018
	cmp	esi, 1
	jl	$LN3@stbtt__run
; Line 2019
	movsxd	rax, esi
	movaps	xmm1, xmm8
	mov	rcx, r12
	movss	xmm2, DWORD PTR s$[rbp+rax*4-260]
	call	?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z ; stbtt__csctx_rmove_to
; Line 2020
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN36@stbtt__run:
; Line 2022
	mov	DWORD PTR in_header$1$[rsp], r9d
; Line 2023
	cmp	esi, 1
	jl	SHORT $LN3@stbtt__run
; Line 2024
	movsxd	rax, esi
	movaps	xmm2, xmm8
	mov	rcx, r12
	movss	xmm1, DWORD PTR s$[rbp+rax*4-260]
	call	?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z ; stbtt__csctx_rmove_to
; Line 2025
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN38@stbtt__run:
; Line 2028
	cmp	esi, 2
	jl	SHORT $LN3@stbtt__run
	mov	r11d, 1
	lea	r10, QWORD PTR s$[rbp-256]
	npad	6
$LL8@stbtt__run:
; Line 2030
	movss	xmm2, DWORD PTR [r10+4]
	mov	rcx, r12
	movss	xmm1, DWORD PTR [r10]
	call	?stbtt__csctx_rline_to@@YAXPEAUstbtt__csctx@@MM@Z ; stbtt__csctx_rline_to
	add	r11d, 2
	lea	r10, QWORD PTR [r10+8]
	cmp	r11d, esi
	jl	SHORT $LL8@stbtt__run
; Line 2031
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN40@stbtt__run:
; Line 2037
	cmp	esi, 1
	jge	$vlineto$270
$LN3@stbtt__run:
; Line 2232
	xor	eax, eax
$LN1@stbtt__run:
	movaps	xmm7, XMMWORD PTR [rsp+672]
; Line 2235
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+704]
	mov	rbx, QWORD PTR [r11+88]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	movaps	xmm14, XMMWORD PTR [r11-144]
	movaps	xmm15, XMMWORD PTR [r11-160]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN43@stbtt__run:
; Line 2040
	cmp	esi, 1
	jl	SHORT $LN3@stbtt__run
$LN9@stbtt__run:
; Line 2042
	cmp	ebx, esi
	jge	$LN265@stbtt__run
; Line 2043
	movsxd	rax, ebx
	movaps	xmm2, xmm8
	mov	rcx, r12
	movss	xmm1, DWORD PTR s$[rbp+rax*4-256]
	call	?stbtt__csctx_rline_to@@YAXPEAUstbtt__csctx@@MM@Z ; stbtt__csctx_rline_to
; Line 2044
	inc	ebx
$vlineto$270:
; Line 2046
	cmp	ebx, esi
	jge	$LN265@stbtt__run
; Line 2047
	movsxd	rax, ebx
	movaps	xmm1, xmm8
	mov	rcx, r12
	movss	xmm2, DWORD PTR s$[rbp+rax*4-256]
	call	?stbtt__csctx_rline_to@@YAXPEAUstbtt__csctx@@MM@Z ; stbtt__csctx_rline_to
; Line 2048
	inc	ebx
; Line 2049
	jmp	SHORT $LN9@stbtt__run
$LN47@stbtt__run:
; Line 2053
	cmp	esi, 4
	jl	$LN3@stbtt__run
; Line 2054
	jmp	SHORT $hvcurveto$271
$LN50@stbtt__run:
; Line 2056
	cmp	esi, 4
	jl	$LN3@stbtt__run
$LN12@stbtt__run:
; Line 2058
	lea	eax, DWORD PTR [rbx+3]
	cmp	eax, esi
	jge	$LN265@stbtt__run
; Line 2059
	mov	eax, esi
	lea	edi, DWORD PTR [rbx+4]
	sub	eax, ebx
	cmp	eax, 5
	jne	SHORT $LN97@stbtt__run
	movsxd	rax, edi
	movss	xmm0, DWORD PTR s$[rbp+rax*4-256]
	jmp	SHORT $LN98@stbtt__run
$LN97@stbtt__run:
	movaps	xmm0, xmm8
$LN98@stbtt__run:
	movsxd	rax, ebx
	mov	rcx, r12
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm1, DWORD PTR s$[rbp+rax*4-248]
	movss	xmm0, DWORD PTR s$[rbp+rax*4-244]
	movss	xmm3, DWORD PTR s$[rbp+rax*4-252]
	movss	xmm2, DWORD PTR s$[rbp+rax*4-256]
	movss	DWORD PTR [rsp+40], xmm0
	movss	DWORD PTR [rsp+32], xmm1
	movaps	xmm1, xmm8
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
; Line 2060
	mov	ebx, edi
$hvcurveto$271:
; Line 2062
	lea	eax, DWORD PTR [rbx+3]
	cmp	eax, esi
	jge	$LN265@stbtt__run
; Line 2063
	mov	eax, esi
	lea	edi, DWORD PTR [rbx+4]
	sub	eax, ebx
	cmp	eax, 5
	jne	SHORT $LN99@stbtt__run
	movsxd	rax, edi
	movss	xmm1, DWORD PTR s$[rbp+rax*4-256]
	jmp	SHORT $LN100@stbtt__run
$LN99@stbtt__run:
	movaps	xmm1, xmm8
$LN100@stbtt__run:
	movsxd	rax, ebx
	mov	rcx, r12
	movss	xmm2, DWORD PTR s$[rbp+rax*4-248]
	movss	xmm0, DWORD PTR s$[rbp+rax*4-244]
	movss	xmm3, DWORD PTR s$[rbp+rax*4-252]
	movss	DWORD PTR [rsp+48], xmm0
	movss	DWORD PTR [rsp+40], xmm1
	movss	xmm1, DWORD PTR s$[rbp+rax*4-256]
	movss	DWORD PTR [rsp+32], xmm2
	movaps	xmm2, xmm8
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
; Line 2064
	mov	ebx, edi
; Line 2065
	jmp	$LN12@stbtt__run
$LN54@stbtt__run:
; Line 2069
	cmp	esi, 6
	jl	$LN3@stbtt__run
	mov	edi, 5
	lea	rbx, QWORD PTR s$[rbp-240]
	npad	8
$LL17@stbtt__run:
; Line 2071
	movss	xmm0, DWORD PTR [rbx+4]
	mov	rcx, r12
	movss	xmm1, DWORD PTR [rbx]
	movss	xmm3, DWORD PTR [rbx-8]
	movss	xmm2, DWORD PTR [rbx-12]
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR [rbx-4]
	movss	DWORD PTR [rsp+40], xmm1
	movss	xmm1, DWORD PTR [rbx-16]
	movss	DWORD PTR [rsp+32], xmm0
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
	add	edi, 6
	lea	rbx, QWORD PTR [rbx+24]
	cmp	edi, esi
	jl	SHORT $LL17@stbtt__run
; Line 2072
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN56@stbtt__run:
; Line 2075
	cmp	esi, 8
	jl	$LN3@stbtt__run
; Line 2076
	lea	r15d, DWORD PTR [rsi-2]
	cmp	r15d, 5
	jle	SHORT $LN19@stbtt__run
	mov	r14d, 5
	lea	rdi, QWORD PTR s$[rbp-240]
	npad	11
$LL20@stbtt__run:
; Line 2077
	movss	xmm0, DWORD PTR [rdi+4]
	mov	rcx, r12
	movss	xmm1, DWORD PTR [rdi]
	movss	xmm3, DWORD PTR [rdi-8]
	movss	xmm2, DWORD PTR [rdi-12]
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR [rdi-4]
	movss	DWORD PTR [rsp+40], xmm1
	movss	xmm1, DWORD PTR [rdi-16]
	movss	DWORD PTR [rsp+32], xmm0
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
	add	ebx, 6
	lea	rdi, QWORD PTR [rdi+24]
	add	r14d, 6
	cmp	r14d, r15d
	jl	SHORT $LL20@stbtt__run
$LN19@stbtt__run:
; Line 2078
	lea	eax, DWORD PTR [rbx+1]
	cmp	eax, esi
	jge	$LN3@stbtt__run
; Line 2079
	movsxd	rax, ebx
	mov	rcx, r12
	movss	xmm2, DWORD PTR s$[rbp+rax*4-252]
	movss	xmm1, DWORD PTR s$[rbp+rax*4-256]
	call	?stbtt__csctx_rline_to@@YAXPEAUstbtt__csctx@@MM@Z ; stbtt__csctx_rline_to
; Line 2080
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
	mov	r15d, DWORD PTR subr_stack_height$1$[rsp]
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN59@stbtt__run:
; Line 2083
	cmp	esi, 8
	jl	$LN3@stbtt__run
; Line 2084
	lea	edi, DWORD PTR [rsi-6]
	cmp	edi, 1
	jle	SHORT $LN22@stbtt__run
	mov	r11d, 1
	lea	r10, QWORD PTR s$[rbp-256]
	npad	1
$LL23@stbtt__run:
; Line 2085
	movss	xmm2, DWORD PTR [r10+4]
	mov	rcx, r12
	movss	xmm1, DWORD PTR [r10]
	call	?stbtt__csctx_rline_to@@YAXPEAUstbtt__csctx@@MM@Z ; stbtt__csctx_rline_to
	add	ebx, 2
	lea	r10, QWORD PTR [r10+8]
	add	r11d, 2
	cmp	r11d, edi
	jl	SHORT $LL23@stbtt__run
$LN22@stbtt__run:
; Line 2086
	lea	eax, DWORD PTR [rbx+5]
	cmp	eax, esi
	jge	$LN3@stbtt__run
; Line 2087
	movsxd	rax, ebx
	mov	rcx, r12
	movss	xmm0, DWORD PTR s$[rbp+rax*4-236]
	movss	xmm2, DWORD PTR s$[rbp+rax*4-240]
	movss	xmm3, DWORD PTR s$[rbp+rax*4-248]
	movss	xmm1, DWORD PTR s$[rbp+rax*4-256]
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR s$[rbp+rax*4-244]
	movss	DWORD PTR [rsp+40], xmm2
	movss	xmm2, DWORD PTR s$[rbp+rax*4-252]
	movss	DWORD PTR [rsp+32], xmm0
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
; Line 2088
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN62@stbtt__run:
; Line 2092
	cmp	esi, 4
	jl	$LN3@stbtt__run
; Line 2094
	mov	eax, esi
	movaps	xmm5, xmm8
	and	eax, 1
	je	SHORT $LN64@stbtt__run
	movaps	xmm5, xmm9
$LN64@stbtt__run:
; Line 2095
	lea	edi, DWORD PTR [rax+3]
	cmp	edi, esi
	jge	$LN258@stbtt__run
; Line 2096
	lea	rbx, QWORD PTR s$[rbp-248]
	lea	rbx, QWORD PTR [rbx+rax*4]
$LL26@stbtt__run:
	movss	xmm1, DWORD PTR [rbx+4]
	movss	xmm3, DWORD PTR [rbx]
	movss	xmm0, DWORD PTR [rbx-8]
	cmp	r14b, 27
	jne	SHORT $LN65@stbtt__run
; Line 2097
	movaps	xmm2, xmm1
	movaps	xmm4, xmm0
	movaps	xmm1, xmm8
	jmp	SHORT $LN66@stbtt__run
$LN65@stbtt__run:
; Line 2099
	movaps	xmm4, xmm5
	movaps	xmm2, xmm8
	movaps	xmm5, xmm0
$LN66@stbtt__run:
; Line 2100
	movss	DWORD PTR [rsp+48], xmm1
	mov	rcx, r12
	movss	DWORD PTR [rsp+40], xmm2
	movaps	xmm1, xmm4
	movss	DWORD PTR [rsp+32], xmm3
	movaps	xmm2, xmm5
	movss	xmm3, DWORD PTR [rbx-4]
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
	add	edi, 4
	add	rbx, 16
	movaps	xmm5, xmm8
	cmp	edi, esi
	jl	SHORT $LL26@stbtt__run
; Line 2102
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN265@stbtt__run:
; Line 2042
	xor	r9d, r9d
$LN258@stbtt__run:
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
; Line 2231
	mov	eax, r9d
	test	ecx, ecx
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN67@stbtt__run:
; Line 2105
	cmp	DWORD PTR has_subrs$1$[rsp], 0
	mov	r14, QWORD PTR info$GSCopy$1$[rsp]
	jne	SHORT $LN68@stbtt__run
; Line 2106
	cmp	DWORD PTR [r14+156], 0
	je	SHORT $LN69@stbtt__run
; Line 2107
	mov	r8d, DWORD PTR glyph_index$GSCopy$1$[rsp]
	lea	rcx, QWORD PTR $T6[rbp-256]
	mov	rdx, r14
	call	?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z ; stbtt__cid_get_glyph_subrs
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR subrs$[rbp-256], xmm0
$LN69@stbtt__run:
; Line 2108
	mov	DWORD PTR has_subrs$1$[rsp], 1
	jmp	SHORT $LN68@stbtt__run
$LN260@stbtt__run:
; Line 1994
	mov	r14, QWORD PTR info$GSCopy$1$[rsp]
$LN68@stbtt__run:
; Line 2112
	cmp	esi, 1
	jl	$LN3@stbtt__run
; Line 2113
	dec	esi
	movsxd	rax, esi
	cvttss2si ebx, DWORD PTR s$[rbp+rax*4-256]
; Line 2114
	cmp	r15d, 10
	jge	$LN3@stbtt__run
; Line 2115
	movaps	xmm0, XMMWORD PTR b$[rsp]
	movsxd	rax, r15d
	inc	r15d
	add	rax, rax
	mov	DWORD PTR subr_stack_height$1$[rsp], r15d
	movups	XMMWORD PTR subr_stack$[rbp+rax*8-256], xmm0
; Line 2116
	lea	rax, QWORD PTR subrs$[rbp-256]
	cmp	edi, 10
	je	SHORT $LN102@stbtt__run
	lea	rax, QWORD PTR [r14+96]
$LN102@stbtt__run:
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T2[rsp], xmm0
; Line 1132
	psrldq	xmm0, 8
	movq	rax, xmm0
	shr	rax, 32					; 00000020H
	test	eax, eax
	jns	SHORT $LN127@stbtt__run
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
$LN127@stbtt__run:
; Line 1133
	mov	r8d, DWORD PTR $T2[rsp+12]
	mov	eax, 0
; Line 1118
	mov	r9, QWORD PTR $T2[rsp]
; Line 1133
	test	r8d, r8d
	mov	ecx, r8d
	cmovns	ecx, eax
	mov	DWORD PTR $T2[rsp+8], ecx
; Line 1118
	cmp	ecx, r8d
	jge	SHORT $LN145@stbtt__run
; Line 1120
	movsxd	rax, ecx
	inc	ecx
	mov	DWORD PTR $T2[rsp+8], ecx
	movzx	eax, BYTE PTR [rax+r9]
$LN145@stbtt__run:
; Line 1147
	movzx	edx, al
; Line 1118
	cmp	ecx, r8d
	jl	SHORT $LN228@stbtt__run
; Line 1119
	xor	al, al
	jmp	SHORT $LN229@stbtt__run
$LN228@stbtt__run:
; Line 1120
	movsxd	rax, ecx
	inc	ecx
	mov	DWORD PTR $T2[rsp+8], ecx
	movzx	eax, BYTE PTR [rax+r9]
$LN229@stbtt__run:
; Line 1147
	shl	edx, 8
	movzx	eax, al
	or	edx, eax
; Line 1940
	cmp	edx, 33900				; 0000846cH
	jb	SHORT $LN118@stbtt__run
; Line 1941
	mov	eax, 32768				; 00008000H
	jmp	SHORT $LN120@stbtt__run
$LN118@stbtt__run:
; Line 1942
	cmp	edx, 1240				; 000004d8H
	mov	eax, 107				; 0000006bH
	mov	ecx, 1131				; 0000046bH
	cmovae	eax, ecx
$LN120@stbtt__run:
; Line 1944
	lea	r8d, DWORD PTR [rax+rbx]
; Line 1945
	test	r8d, r8d
	js	SHORT $LN151@stbtt__run
	cmp	r8d, edx
	jge	SHORT $LN151@stbtt__run
; Line 1947
	movaps	xmm0, XMMWORD PTR $T2[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T5[rbp-256]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	call	?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z ; stbtt__cff_index_get
	xor	ecx, ecx
	jmp	SHORT $LN117@stbtt__run
$LN151@stbtt__run:
; Line 1155
	xor	ecx, ecx
	mov	QWORD PTR $T5[rbp-256], rcx
; Line 1157
	mov	QWORD PTR $T5[rbp-248], rcx
$LN117@stbtt__run:
; Line 2116
	movaps	xmm0, XMMWORD PTR $T5[rbp-256]
	movdqa	XMMWORD PTR b$[rsp], xmm0
; Line 2117
	psrldq	xmm0, 8
	movq	rax, xmm0
	shr	rax, 32					; 00000020H
	test	eax, eax
	je	$LN3@stbtt__run
; Line 2120
	xor	r9d, r9d
	mov	DWORD PTR b$[rsp+8], ecx
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	mov	r13d, ecx
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN74@stbtt__run:
; Line 2123
	test	r15d, r15d
	jle	$LN3@stbtt__run
; Line 2124
	dec	r15d
; Line 2231
	mov	ecx, r9d
	movsxd	rax, r15d
	add	rax, rax
	mov	DWORD PTR subr_stack_height$1$[rsp], r15d
	test	ecx, ecx
	movups	xmm0, XMMWORD PTR subr_stack$[rbp+rax*8-256]
	mov	eax, r9d
	cmove	eax, esi
	movups	XMMWORD PTR b$[rsp], xmm0
	mov	r13d, DWORD PTR b$[rsp+8]
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN77@stbtt__run:
; Line 1118
	mov	rax, QWORD PTR b$[rsp+8]
	shr	rax, 32					; 00000020H
	cmp	r8d, eax
	jl	SHORT $LN155@stbtt__run
; Line 1119
	xor	al, al
	jmp	SHORT $LN154@stbtt__run
$LN155@stbtt__run:
; Line 1120
	movzx	eax, BYTE PTR [r8+rdx]
	lea	r13d, DWORD PTR [r8+1]
	mov	DWORD PTR b$[rsp+8], r13d
$LN154@stbtt__run:
; Line 2135
	movzx	ecx, al
; Line 2136
	sub	ecx, 34					; 00000022H
	je	$LN78@stbtt__run
	sub	ecx, 1
	je	$LN80@stbtt__run
	sub	ecx, 1
	je	$LN82@stbtt__run
	cmp	ecx, 1
	jne	$LN3@stbtt__run
; Line 2187
	cmp	esi, 11
	jl	$LN3@stbtt__run
; Line 2198
	movss	xmm6, DWORD PTR s$[rbp-216]
; Line 2199
	movaps	xmm2, xmm10
	addss	xmm2, xmm9
; Line 2200
	movaps	xmm3, xmm11
	addss	xmm3, xmm12
	movaps	xmm7, xmm6
	addss	xmm2, xmm15
	addss	xmm3, xmm14
	addss	xmm2, xmm13
	addss	xmm3, DWORD PTR s$[rbp-228]
	addss	xmm2, DWORD PTR s$[rbp-224]
	addss	xmm3, DWORD PTR s$[rbp-220]
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
; Line 672
	movaps	xmm1, xmm2
	movaps	xmm0, xmm3
	andps	xmm1, xmm5
	andps	xmm0, xmm5
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2201
	comiss	xmm1, xmm0
	jbe	SHORT $LN86@stbtt__run
; Line 2202
	movaps	xmm6, xmm3
	xorps	xmm6, xmm4
	jmp	SHORT $LN87@stbtt__run
$LN86@stbtt__run:
; Line 2204
	movaps	xmm7, xmm2
	xorps	xmm7, xmm4
$LN87@stbtt__run:
; Line 2205
	movss	DWORD PTR [rsp+48], xmm14
	movaps	xmm3, xmm10
	movss	DWORD PTR [rsp+40], xmm15
	movaps	xmm2, xmm12
	movaps	xmm1, xmm9
	movss	DWORD PTR [rsp+32], xmm11
	mov	rcx, r12
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
; Line 2206
	movss	DWORD PTR [rsp+48], xmm6
	movss	DWORD PTR [rsp+40], xmm7
; Line 2207
	jmp	$LN267@stbtt__run
$LN82@stbtt__run:
; Line 2172
	cmp	esi, 9
	jl	$LN3@stbtt__run
; Line 2182
	movss	DWORD PTR [rsp+48], xmm8
	movaps	xmm3, xmm10
	movss	DWORD PTR [rsp+40], xmm15
	movaps	xmm2, xmm12
	movaps	xmm1, xmm9
	movss	DWORD PTR [rsp+32], xmm11
	mov	rcx, r12
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
; Line 2183
	movss	xmm0, DWORD PTR s$[rbp-228]
	movaps	xmm3, xmm11
	addss	xmm3, xmm12
	movaps	xmm2, xmm8
	movaps	xmm1, xmm14
	mov	rcx, r12
	addss	xmm3, xmm0
	xorps	xmm3, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR [rsp+48], xmm3
	movaps	xmm3, xmm13
	movss	DWORD PTR [rsp+40], xmm6
	movss	DWORD PTR [rsp+32], xmm0
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
; Line 2184
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN80@stbtt__run:
; Line 2153
	cmp	esi, 13
	jl	$LN3@stbtt__run
; Line 2167
	movss	DWORD PTR [rsp+48], xmm14
	movaps	xmm3, xmm10
	movss	DWORD PTR [rsp+40], xmm15
	movaps	xmm2, xmm12
	movaps	xmm1, xmm9
	movss	DWORD PTR [rsp+32], xmm11
	mov	rcx, r12
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
; Line 2168
	movss	xmm3, DWORD PTR s$[rbp-212]
	movss	xmm0, DWORD PTR s$[rbp-216]
	movss	DWORD PTR [rsp+48], xmm3
	movss	DWORD PTR [rsp+40], xmm0
$LN267@stbtt__run:
; Line 2231
	movss	xmm0, DWORD PTR s$[rbp-220]
	movaps	xmm1, xmm13
	movss	xmm3, DWORD PTR s$[rbp-224]
	mov	rcx, r12
	movss	xmm2, DWORD PTR s$[rbp-228]
	movss	DWORD PTR [rsp+32], xmm0
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
	test	ecx, ecx
	mov	eax, r9d
	movaps	xmm6, xmm3
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN78@stbtt__run:
; Line 2140
	cmp	esi, 7
	jl	$LN3@stbtt__run
; Line 2148
	movss	DWORD PTR [rsp+48], xmm8
	movaps	xmm3, xmm12
	movss	DWORD PTR [rsp+40], xmm11
	movaps	xmm2, xmm8
	movaps	xmm1, xmm9
	movss	DWORD PTR [rsp+32], xmm10
	mov	rcx, r12
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
; Line 2149
	movaps	xmm3, xmm10
	movss	DWORD PTR [rsp+48], xmm8
	xorps	xmm3, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm2, xmm8
	movss	DWORD PTR [rsp+40], xmm13
	movaps	xmm1, xmm15
	movss	DWORD PTR [rsp+32], xmm3
	mov	rcx, r12
	movaps	xmm3, xmm14
	call	?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ; stbtt__csctx_rccurve_to
; Line 2212
	mov	ecx, DWORD PTR clear_stack$1$[rsp]
	xor	r9d, r9d
; Line 2231
	test	ecx, ecx
	mov	eax, r9d
	cmove	eax, esi
	mov	esi, eax
	jmp	$LN268@stbtt__run
$LN89@stbtt__run:
; Line 2215
	cmp	edi, 255				; 000000ffH
	je	SHORT $LN255@stbtt__run
	cmp	edi, 28
	je	SHORT $LN92@stbtt__run
	lea	eax, DWORD PTR [r14-32]
	cmp	eax, 222				; 000000deH
	ja	$LN3@stbtt__run
$LN92@stbtt__run:
; Line 1132
	mov	edi, DWORD PTR b$[rsp+12]
; Line 1138
	lea	ebx, DWORD PTR [r13-1]
; Line 1132
	cmp	ebx, edi
	jg	SHORT $LN181@stbtt__run
	test	ebx, ebx
	jns	SHORT $LN177@stbtt__run
$LN181@stbtt__run:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
$LN177@stbtt__run:
; Line 1133
	cmp	ebx, edi
	jg	SHORT $LN183@stbtt__run
	mov	DWORD PTR b$[rsp+8], ebx
	test	ebx, ebx
	jns	SHORT $LN184@stbtt__run
$LN183@stbtt__run:
	mov	DWORD PTR b$[rsp+8], edi
$LN184@stbtt__run:
; Line 2223
	lea	rcx, QWORD PTR b$[rsp]
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
	mov	r13d, DWORD PTR b$[rsp+8]
	xor	r9d, r9d
	movsx	ecx, ax
	movd	xmm0, ecx
	cvtdq2ps xmm0, xmm0
	jmp	$LN93@stbtt__run
$LN255@stbtt__run:
; Line 1118
	mov	ebx, DWORD PTR b$[rsp+12]
	cmp	r8d, ebx
	jl	SHORT $LN172@stbtt__run
; Line 1119
	xor	al, al
	jmp	SHORT $LN171@stbtt__run
$LN172@stbtt__run:
; Line 1120
	movzx	eax, BYTE PTR [r8+rdx]
	lea	r13d, DWORD PTR [r8+1]
	mov	DWORD PTR b$[rsp+8], r13d
	mov	r8d, r13d
$LN171@stbtt__run:
; Line 1147
	movzx	ecx, al
	cmp	r8d, ebx
; Line 1118
	jl	SHORT $LN231@stbtt__run
; Line 1119
	xor	al, al
	jmp	SHORT $LN232@stbtt__run
$LN231@stbtt__run:
; Line 1120
	movsxd	rax, r13d
	inc	r13d
	mov	DWORD PTR b$[rsp+8], r13d
	movzx	eax, BYTE PTR [rax+rdx]
$LN232@stbtt__run:
; Line 1147
	shl	ecx, 8
	movzx	eax, al
	or	ecx, eax
; Line 1118
	cmp	r13d, ebx
	jl	SHORT $LN234@stbtt__run
; Line 1119
	xor	al, al
	jmp	SHORT $LN235@stbtt__run
$LN234@stbtt__run:
; Line 1120
	movsxd	rax, r13d
	inc	r13d
	mov	DWORD PTR b$[rsp+8], r13d
	movzx	eax, BYTE PTR [rax+rdx]
$LN235@stbtt__run:
; Line 1147
	shl	ecx, 8
	movzx	eax, al
	or	ecx, eax
; Line 1118
	cmp	r13d, ebx
	jl	SHORT $LN237@stbtt__run
; Line 1119
	xor	al, al
	jmp	SHORT $LN238@stbtt__run
$LN237@stbtt__run:
; Line 1120
	movsxd	rax, r13d
	inc	r13d
	mov	DWORD PTR b$[rsp+8], r13d
	movzx	eax, BYTE PTR [rax+rdx]
$LN238@stbtt__run:
; Line 1147
	shl	ecx, 8
	movzx	eax, al
	or	ecx, eax
	movd	xmm0, ecx
; Line 2220
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR __real@37800000
$LN93@stbtt__run:
; Line 2225
	cmp	esi, 48					; 00000030H
	jge	$LN3@stbtt__run
; Line 2226
	movsxd	rax, esi
; Line 2231
	mov	ecx, r9d
	inc	esi
	test	ecx, ecx
	movss	DWORD PTR s$[rbp+rax*4-256], xmm0
	mov	eax, r9d
	movss	xmm13, DWORD PTR s$[rbp-232]
	cmove	eax, esi
	movss	xmm14, DWORD PTR s$[rbp-236]
	mov	esi, eax
	movss	xmm15, DWORD PTR s$[rbp-240]
	movss	xmm11, DWORD PTR s$[rbp-244]
	movss	xmm10, DWORD PTR s$[rbp-248]
	movss	xmm12, DWORD PTR s$[rbp-252]
	movss	xmm9, DWORD PTR s$[rbp-256]
	movss	xmm6, DWORD PTR s$[rbp-224]
	jmp	$LN268@stbtt__run
$LN76@stbtt__run:
; Line 2129
	mov	rcx, r12
	call	?stbtt__csctx_close_shape@@YAXPEAUstbtt__csctx@@@Z ; stbtt__csctx_close_shape
; Line 2130
	mov	eax, 1
	jmp	$LN1@stbtt__run
	npad	2
$LN256@stbtt__run:
; Line 2235
	DD	$LN31@stbtt__run
	DD	$LN89@stbtt__run
	DD	$LN31@stbtt__run
	DD	$LN34@stbtt__run
	DD	$LN38@stbtt__run
	DD	$LN43@stbtt__run
	DD	$LN40@stbtt__run
	DD	$LN54@stbtt__run
	DD	$LN89@stbtt__run
	DD	$LN67@stbtt__run
	DD	$LN74@stbtt__run
	DD	$LN77@stbtt__run
	DD	$LN89@stbtt__run
	DD	$LN76@stbtt__run
	DD	$LN89@stbtt__run
	DD	$LN89@stbtt__run
	DD	$LN89@stbtt__run
	DD	$LN31@stbtt__run
	DD	$LN29@stbtt__run
	DD	$LN29@stbtt__run
	DD	$LN32@stbtt__run
	DD	$LN36@stbtt__run
	DD	$LN31@stbtt__run
	DD	$LN56@stbtt__run
	DD	$LN59@stbtt__run
	DD	$LN62@stbtt__run
	DD	$LN62@stbtt__run
	DD	$LN89@stbtt__run
	DD	$LN260@stbtt__run
	DD	$LN50@stbtt__run
	DD	$LN47@stbtt__run
?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ENDP ; stbtt__run_charstring
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
fdselect$ = 32
$T3 = 48
$T4 = 64
$T5 = 112
info$ = 120
glyph_index$ = 128
?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z PROC ; stbtt__cid_get_glyph_subrs, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1951
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
; Line 1952
	movups	xmm0, XMMWORD PTR [rdx+144]
	mov	edi, r8d
	mov	r14, rdx
	mov	r15, rcx
; Line 1953
	mov	ebp, -1
	movups	XMMWORD PTR fdselect$[rsp], xmm0
; Line 1132
	psrldq	xmm0, 8
	movq	rax, xmm0
	shr	rax, 32					; 00000020H
	test	eax, eax
	jns	SHORT $LN12@stbtt__cid
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
$LN12@stbtt__cid:
; Line 1133
	mov	ebx, DWORD PTR fdselect$[rsp+12]
	xor	r8d, r8d
	mov	rsi, QWORD PTR fdselect$[rsp]
	test	ebx, ebx
	js	SHORT $LN18@stbtt__cid
	mov	ecx, r8d
; Line 1118
	jle	SHORT $LN111@stbtt__cid
; Line 1120
	movzx	eax, BYTE PTR [rsi]
	lea	ecx, QWORD PTR [r8+1]
	jmp	SHORT $LN20@stbtt__cid
$LN18@stbtt__cid:
; Line 1133
	mov	ecx, ebx
$LN111@stbtt__cid:
; Line 1119
	xor	al, al
$LN20@stbtt__cid:
; Line 1957
	test	al, al
	jne	SHORT $LN5@stbtt__cid
; Line 1138
	add	edi, ecx
; Line 1132
	cmp	edi, ebx
	jg	SHORT $LN30@stbtt__cid
	test	edi, edi
	jns	SHORT $LN26@stbtt__cid
$LN30@stbtt__cid:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
$LN26@stbtt__cid:
; Line 1133
	cmp	edi, ebx
	jg	SHORT $LN112@stbtt__cid
	test	edi, edi
	js	SHORT $LN112@stbtt__cid
; Line 1118
	cmp	edi, ebx
	jge	SHORT $LN112@stbtt__cid
; Line 1120
	movsxd	rax, edi
	movzx	ecx, BYTE PTR [rax+rsi]
; Line 1960
	movzx	ebp, cl
	jmp	$LN113@stbtt__cid
$LN112@stbtt__cid:
; Line 1119
	xor	cl, cl
; Line 1960
	movzx	ebp, cl
	jmp	$LN113@stbtt__cid
$LN5@stbtt__cid:
; Line 1961
	cmp	al, 3
	jne	$LN113@stbtt__cid
; Line 1118
	cmp	ecx, ebx
	jl	SHORT $LN48@stbtt__cid
; Line 1119
	xor	al, al
	jmp	SHORT $LN47@stbtt__cid
$LN48@stbtt__cid:
; Line 1120
	movsxd	rax, ecx
	inc	ecx
	movzx	eax, BYTE PTR [rax+rsi]
$LN47@stbtt__cid:
; Line 1147
	movzx	r11d, al
; Line 1118
	cmp	ecx, ebx
	jl	SHORT $LN95@stbtt__cid
; Line 1119
	xor	al, al
	jmp	SHORT $LN96@stbtt__cid
$LN95@stbtt__cid:
; Line 1120
	movsxd	rax, ecx
	inc	ecx
	movzx	eax, BYTE PTR [rax+rsi]
$LN96@stbtt__cid:
; Line 1147
	shl	r11d, 8
	movzx	eax, al
	or	r11d, eax
; Line 1118
	cmp	ecx, ebx
	jl	SHORT $LN61@stbtt__cid
; Line 1119
	xor	al, al
	jmp	SHORT $LN60@stbtt__cid
$LN61@stbtt__cid:
; Line 1120
	movsxd	rax, ecx
	inc	ecx
	movzx	eax, BYTE PTR [rax+rsi]
$LN60@stbtt__cid:
; Line 1147
	movzx	r9d, al
; Line 1118
	cmp	ecx, ebx
	jl	SHORT $LN98@stbtt__cid
; Line 1119
	xor	al, al
	jmp	SHORT $LN99@stbtt__cid
$LN98@stbtt__cid:
; Line 1120
	movsxd	rax, ecx
	inc	ecx
	movzx	eax, BYTE PTR [rax+rsi]
$LN99@stbtt__cid:
; Line 1147
	shl	r9d, 8
	movzx	eax, al
	or	r9d, eax
; Line 1964
	test	r11d, r11d
	je	SHORT $LN113@stbtt__cid
	npad	6
$LL4@stbtt__cid:
; Line 1118
	cmp	ecx, ebx
	jl	SHORT $LN64@stbtt__cid
; Line 1119
	xor	al, al
	jmp	SHORT $LN63@stbtt__cid
$LN64@stbtt__cid:
; Line 1120
	movsxd	rax, ecx
	inc	ecx
	movzx	eax, BYTE PTR [rax+rsi]
$LN63@stbtt__cid:
; Line 1965
	movzx	r10d, al
; Line 1118
	cmp	ecx, ebx
	jl	SHORT $LN77@stbtt__cid
; Line 1119
	xor	al, al
	jmp	SHORT $LN76@stbtt__cid
$LN77@stbtt__cid:
; Line 1120
	movsxd	rax, ecx
	inc	ecx
	movzx	eax, BYTE PTR [rax+rsi]
$LN76@stbtt__cid:
; Line 1147
	movzx	edx, al
; Line 1118
	cmp	ecx, ebx
	jl	SHORT $LN101@stbtt__cid
; Line 1119
	xor	al, al
	jmp	SHORT $LN102@stbtt__cid
$LN101@stbtt__cid:
; Line 1120
	movsxd	rax, ecx
	inc	ecx
	movzx	eax, BYTE PTR [rax+rsi]
$LN102@stbtt__cid:
; Line 1147
	shl	edx, 8
	movzx	eax, al
	or	edx, eax
; Line 1967
	cmp	edi, r9d
	jl	SHORT $LN8@stbtt__cid
	cmp	edi, edx
	jl	SHORT $LN89@stbtt__cid
$LN8@stbtt__cid:
; Line 1964
	inc	r8d
; Line 1971
	mov	r9d, edx
	cmp	r8d, r11d
	jl	SHORT $LL4@stbtt__cid
; Line 1964
	jmp	SHORT $LN113@stbtt__cid
$LN89@stbtt__cid:
; Line 1968
	mov	ebp, r10d
$LN113@stbtt__cid:
; Line 1975
	movups	xmm0, XMMWORD PTR [r14+128]
	mov	r8d, ebp
	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	call	?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z ; stbtt__cff_index_get
	movups	xmm1, XMMWORD PTR [r14+64]
	lea	r8, QWORD PTR $T1[rsp]
	mov	rcx, r15
	lea	rdx, QWORD PTR $T3[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T3[rsp], xmm1
	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z ; stbtt__get_subrs
; Line 1976
	mov	rbx, QWORD PTR [rsp+112]
	mov	rax, r15
	mov	rbp, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+128]
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z ENDP ; stbtt__cid_get_glyph_subrs
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
idx$ = 72
n$ = 80
?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z PROC		; stbtt__get_subr, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1937
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 1132
	mov	esi, DWORD PTR [rdx+12]
; Line 1937
	mov	ebp, r8d
	mov	rdi, rdx
	mov	rbx, rcx
; Line 1132
	test	esi, esi
	jns	SHORT $LN11@stbtt__get
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
$LN11@stbtt__get:
; Line 1133
	xor	r9d, r9d
	test	esi, esi
	mov	r8d, r9d
	cmovs	r8d, esi
	mov	DWORD PTR [rdi+8], r8d
; Line 1118
	cmp	r8d, esi
	jl	SHORT $LN30@stbtt__get
; Line 1119
	xor	al, al
	jmp	SHORT $LN29@stbtt__get
$LN30@stbtt__get:
; Line 1120
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, r8d
	inc	r8d
	mov	DWORD PTR [rdi+8], r8d
	movzx	eax, BYTE PTR [rcx+rax]
$LN29@stbtt__get:
; Line 1147
	movzx	edx, al
; Line 1118
	cmp	r8d, esi
	jl	SHORT $LN41@stbtt__get
; Line 1119
	xor	cl, cl
	jmp	SHORT $LN42@stbtt__get
$LN41@stbtt__get:
; Line 1120
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, r8d
	movzx	ecx, BYTE PTR [rcx+rax]
	lea	eax, DWORD PTR [r8+1]
	mov	DWORD PTR [rdi+8], eax
$LN42@stbtt__get:
; Line 1147
	shl	edx, 8
	movzx	eax, cl
	or	edx, eax
; Line 1939
	mov	eax, 107				; 0000006bH
; Line 1940
	cmp	edx, 33900				; 0000846cH
	jb	SHORT $LN2@stbtt__get
; Line 1941
	mov	eax, 32768				; 00008000H
	jmp	SHORT $LN4@stbtt__get
$LN2@stbtt__get:
; Line 1942
	cmp	edx, 1240				; 000004d8H
	mov	ecx, 1131				; 0000046bH
	cmovae	eax, ecx
$LN4@stbtt__get:
; Line 1944
	add	ebp, eax
; Line 1945
	js	SHORT $LN35@stbtt__get
	cmp	ebp, edx
	jge	SHORT $LN35@stbtt__get
; Line 1947
	movups	xmm0, XMMWORD PTR [rdi]
	mov	r8d, ebp
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rbx
	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z ; stbtt__cff_index_get
	jmp	SHORT $LN45@stbtt__get
$LN35@stbtt__get:
; Line 1155
	mov	QWORD PTR [rbx], r9
; Line 1157
	mov	QWORD PTR [rbx+8], r9
$LN45@stbtt__get:
; Line 1948
	mov	rbp, QWORD PTR [rsp+72]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z ENDP		; stbtt__get_subr
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z
_TEXT	SEGMENT
ctx$ = 96
dx1$ = 104
dy1$ = 112
dx2$ = 120
dy2$ = 128
dx3$ = 136
dy3$ = 144
?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z PROC ; stbtt__csctx_rccurve_to, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1926
	sub	rsp, 88					; 00000058H
	movaps	xmm5, xmm1
	movaps	XMMWORD PTR [rsp+64], xmm6
; Line 1927
	addss	xmm5, DWORD PTR [rcx+16]
	movaps	xmm6, xmm2
	mov	r11, rcx
; Line 1928
	addss	xmm6, DWORD PTR [rcx+20]
; Line 1929
	movaps	xmm4, xmm5
	addss	xmm4, xmm3
; Line 1933
	cvttss2si edx, xmm6
	movaps	xmm2, xmm6
	movaps	xmm1, xmm4
	addss	xmm2, DWORD PTR dy2$[rsp]
	addss	xmm1, DWORD PTR dx3$[rsp]
	cvttss2si r10d, xmm5
	movss	DWORD PTR [rcx+16], xmm1
	movaps	xmm0, xmm2
	addss	xmm0, DWORD PTR dy3$[rsp]
	cvttss2si eax, xmm2
	movss	DWORD PTR [rcx+20], xmm0
	mov	DWORD PTR [rsp+56], eax
	cvttss2si ecx, xmm4
	cvttss2si r9d, xmm0
	mov	DWORD PTR [rsp+48], ecx
	mov	rcx, r11
	mov	DWORD PTR [rsp+40], edx
	mov	dl, 4
	mov	DWORD PTR [rsp+32], r10d
	cvttss2si r8d, xmm1
	call	?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z ; stbtt__csctx_v
; Line 1934
	movaps	xmm6, XMMWORD PTR [rsp+64]
	add	rsp, 88					; 00000058H
	ret	0
?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z ENDP ; stbtt__csctx_rccurve_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__csctx_rline_to@@YAXPEAUstbtt__csctx@@MM@Z
_TEXT	SEGMENT
ctx$ = 8
dx$ = 16
dy$ = 24
?stbtt__csctx_rline_to@@YAXPEAUstbtt__csctx@@MM@Z PROC	; stbtt__csctx_rline_to, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1890
	cmp	DWORD PTR [rcx], 0
; Line 1919
	mov	rdx, rcx
; Line 1920
	addss	xmm1, DWORD PTR [rcx+16]
; Line 1921
	addss	xmm2, DWORD PTR [rcx+20]
	movss	DWORD PTR [rcx+16], xmm1
	movss	DWORD PTR [rcx+20], xmm2
; Line 1922
	cvttss2si r8d, xmm2
	cvttss2si r9d, xmm1
; Line 1890
	je	SHORT $LN4@stbtt__csc
; Line 1881
	cmp	r9d, DWORD PTR [rcx+28]
	jg	SHORT $LN43@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN9@stbtt__csc
$LN43@stbtt__csc:
	mov	DWORD PTR [rcx+28], r9d
$LN9@stbtt__csc:
; Line 1882
	cmp	r8d, DWORD PTR [rcx+36]
	jg	SHORT $LN44@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN11@stbtt__csc
$LN44@stbtt__csc:
	mov	DWORD PTR [rcx+36], r8d
$LN11@stbtt__csc:
; Line 1883
	cmp	r9d, DWORD PTR [rcx+24]
	jl	SHORT $LN45@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN13@stbtt__csc
$LN45@stbtt__csc:
	mov	DWORD PTR [rcx+24], r9d
$LN13@stbtt__csc:
; Line 1884
	cmp	r8d, DWORD PTR [rcx+32]
	jl	SHORT $LN16@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN15@stbtt__csc
$LN16@stbtt__csc:
	mov	DWORD PTR [rcx+32], r8d
$LN15@stbtt__csc:
; Line 1901
	inc	DWORD PTR [rcx+48]
; Line 1885
	mov	DWORD PTR [rcx+4], 1
; Line 1923
	ret	0
$LN4@stbtt__csc:
; Line 1897
	movsxd	rax, DWORD PTR [rcx+48]
	imul	rcx, rax, 14
	add	rcx, QWORD PTR [rdx+40]
; Line 1563
	mov	WORD PTR [rcx+2], r8w
; Line 1564
	xor	r8d, r8d
	mov	DWORD PTR [rcx+4], r8d
	mov	BYTE PTR [rcx+12], 2
	mov	WORD PTR [rcx], r9w
; Line 1898
	movsxd	rax, DWORD PTR [rdx+48]
	imul	rcx, rax, 14
	mov	rax, QWORD PTR [rdx+40]
	mov	WORD PTR [rcx+rax+8], r8w
; Line 1899
	movsxd	rax, DWORD PTR [rdx+48]
	imul	rcx, rax, 14
	mov	rax, QWORD PTR [rdx+40]
	mov	WORD PTR [rcx+rax+10], r8w
; Line 1901
	inc	DWORD PTR [rdx+48]
; Line 1923
	ret	0
?stbtt__csctx_rline_to@@YAXPEAUstbtt__csctx@@MM@Z ENDP	; stbtt__csctx_rline_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z
_TEXT	SEGMENT
ctx$ = 48
dx$ = 56
dy$ = 64
?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z PROC	; stbtt__csctx_rmove_to, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1911
	sub	rsp, 40					; 00000028H
	movaps	xmm3, xmm1
	mov	r10, rcx
; Line 1912
	call	?stbtt__csctx_close_shape@@YAXPEAUstbtt__csctx@@@Z ; stbtt__csctx_close_shape
; Line 1890
	cmp	DWORD PTR [r10], 0
; Line 1913
	addss	xmm3, DWORD PTR [r10+16]
; Line 1914
	addss	xmm2, DWORD PTR [r10+20]
	movss	DWORD PTR [r10+16], xmm3
	movss	DWORD PTR [r10+8], xmm3
	movss	DWORD PTR [r10+20], xmm2
	movss	DWORD PTR [r10+12], xmm2
; Line 1915
	cvttss2si edx, xmm2
	cvttss2si r8d, xmm3
; Line 1890
	je	SHORT $LN4@stbtt__csc
; Line 1881
	cmp	r8d, DWORD PTR [r10+28]
	jg	SHORT $LN43@stbtt__csc
	cmp	DWORD PTR [r10+4], 0
	jne	SHORT $LN9@stbtt__csc
$LN43@stbtt__csc:
	mov	DWORD PTR [r10+28], r8d
$LN9@stbtt__csc:
; Line 1882
	cmp	edx, DWORD PTR [r10+36]
	jg	SHORT $LN44@stbtt__csc
	cmp	DWORD PTR [r10+4], 0
	jne	SHORT $LN11@stbtt__csc
$LN44@stbtt__csc:
	mov	DWORD PTR [r10+36], edx
$LN11@stbtt__csc:
; Line 1883
	cmp	r8d, DWORD PTR [r10+24]
	jl	SHORT $LN45@stbtt__csc
	cmp	DWORD PTR [r10+4], 0
	jne	SHORT $LN13@stbtt__csc
$LN45@stbtt__csc:
	mov	DWORD PTR [r10+24], r8d
$LN13@stbtt__csc:
; Line 1884
	cmp	edx, DWORD PTR [r10+32]
	jl	SHORT $LN16@stbtt__csc
	cmp	DWORD PTR [r10+4], 0
	jne	SHORT $LN15@stbtt__csc
$LN16@stbtt__csc:
	mov	DWORD PTR [r10+32], edx
$LN15@stbtt__csc:
; Line 1916
	inc	DWORD PTR [r10+48]
; Line 1885
	mov	DWORD PTR [r10+4], 1
; Line 1916
	add	rsp, 40					; 00000028H
	ret	0
$LN4@stbtt__csc:
; Line 1897
	movsxd	rax, DWORD PTR [r10+48]
	imul	rcx, rax, 14
	add	rcx, QWORD PTR [r10+40]
; Line 1563
	mov	WORD PTR [rcx+2], dx
; Line 1564
	xor	edx, edx
	mov	DWORD PTR [rcx+4], edx
	mov	BYTE PTR [rcx+12], 1
	mov	WORD PTR [rcx], r8w
; Line 1898
	movsxd	rax, DWORD PTR [r10+48]
	imul	rcx, rax, 14
	mov	rax, QWORD PTR [r10+40]
	mov	WORD PTR [rcx+rax+8], dx
; Line 1899
	movsxd	rax, DWORD PTR [r10+48]
	imul	rcx, rax, 14
	mov	rax, QWORD PTR [r10+40]
	mov	WORD PTR [rcx+rax+10], dx
; Line 1916
	inc	DWORD PTR [r10+48]
	add	rsp, 40					; 00000028H
	ret	0
?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z ENDP	; stbtt__csctx_rmove_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__csctx_close_shape@@YAXPEAUstbtt__csctx@@@Z
_TEXT	SEGMENT
ctx$ = 8
?stbtt__csctx_close_shape@@YAXPEAUstbtt__csctx@@@Z PROC	; stbtt__csctx_close_shape, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1906
	movss	xmm1, DWORD PTR [rcx+8]
	mov	rdx, rcx
	ucomiss	xmm1, DWORD PTR [rcx+16]
	jp	SHORT $LN50@stbtt__csc
	jne	SHORT $LN50@stbtt__csc
	movss	xmm0, DWORD PTR [rcx+12]
	ucomiss	xmm0, DWORD PTR [rcx+20]
	jp	SHORT $LN50@stbtt__csc
	je	$LN2@stbtt__csc
$LN50@stbtt__csc:
; Line 1890
	cmp	DWORD PTR [rcx], 0
; Line 1907
	cvttss2si r8d, DWORD PTR [rcx+12]
	cvttss2si r9d, xmm1
; Line 1890
	je	SHORT $LN6@stbtt__csc
; Line 1881
	cmp	r9d, DWORD PTR [rcx+28]
	jg	SHORT $LN47@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN11@stbtt__csc
$LN47@stbtt__csc:
	mov	DWORD PTR [rcx+28], r9d
$LN11@stbtt__csc:
; Line 1882
	cmp	r8d, DWORD PTR [rcx+36]
	jg	SHORT $LN48@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN13@stbtt__csc
$LN48@stbtt__csc:
	mov	DWORD PTR [rcx+36], r8d
$LN13@stbtt__csc:
; Line 1883
	cmp	r9d, DWORD PTR [rcx+24]
	jl	SHORT $LN49@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN15@stbtt__csc
$LN49@stbtt__csc:
	mov	DWORD PTR [rcx+24], r9d
$LN15@stbtt__csc:
; Line 1884
	cmp	r8d, DWORD PTR [rcx+32]
	jl	SHORT $LN18@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN17@stbtt__csc
$LN18@stbtt__csc:
	mov	DWORD PTR [rcx+32], r8d
$LN17@stbtt__csc:
; Line 1901
	inc	DWORD PTR [rdx+48]
; Line 1885
	mov	DWORD PTR [rcx+4], 1
; Line 1908
	ret	0
$LN6@stbtt__csc:
; Line 1897
	movsxd	rax, DWORD PTR [rcx+48]
	imul	rcx, rax, 14
	add	rcx, QWORD PTR [rdx+40]
; Line 1563
	mov	WORD PTR [rcx+2], r8w
; Line 1564
	xor	r8d, r8d
	mov	DWORD PTR [rcx+4], r8d
	mov	BYTE PTR [rcx+12], 2
	mov	WORD PTR [rcx], r9w
; Line 1898
	movsxd	rax, DWORD PTR [rdx+48]
	imul	rcx, rax, 14
	mov	rax, QWORD PTR [rdx+40]
	mov	WORD PTR [rcx+rax+8], r8w
; Line 1899
	movsxd	rax, DWORD PTR [rdx+48]
	imul	rcx, rax, 14
	mov	rax, QWORD PTR [rdx+40]
	mov	WORD PTR [rcx+rax+10], r8w
; Line 1901
	inc	DWORD PTR [rdx+48]
$LN2@stbtt__csc:
; Line 1908
	ret	0
?stbtt__csctx_close_shape@@YAXPEAUstbtt__csctx@@@Z ENDP	; stbtt__csctx_close_shape
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z
_TEXT	SEGMENT
c$ = 16
type$ = 24
x$ = 32
y$ = 40
cx$ = 48
cy$ = 56
cx1$ = 64
cy1$ = 72
?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z PROC	; stbtt__csctx_v, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1889
	push	rsi
; Line 1890
	cmp	DWORD PTR [rcx], 0
	movzx	esi, dl
	mov	r10, rcx
	je	$LN2@stbtt__csc
; Line 1881
	mov	r11d, DWORD PTR [rcx+28]
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rdi
	cmp	r8d, r11d
	jg	SHORT $LN41@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN7@stbtt__csc
$LN41@stbtt__csc:
	mov	DWORD PTR [rcx+28], r8d
	mov	r11d, r8d
$LN7@stbtt__csc:
; Line 1882
	mov	ebx, DWORD PTR [rcx+36]
	cmp	r9d, ebx
	jg	SHORT $LN42@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN9@stbtt__csc
$LN42@stbtt__csc:
	mov	DWORD PTR [rcx+36], r9d
	mov	ebx, r9d
$LN9@stbtt__csc:
; Line 1883
	mov	edi, DWORD PTR [rcx+24]
	cmp	r8d, edi
	jl	SHORT $LN43@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN11@stbtt__csc
$LN43@stbtt__csc:
	mov	DWORD PTR [rcx+24], r8d
	mov	edi, r8d
$LN11@stbtt__csc:
; Line 1884
	mov	edx, DWORD PTR [rcx+32]
	cmp	r9d, edx
	jl	SHORT $LN14@stbtt__csc
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN13@stbtt__csc
$LN14@stbtt__csc:
	mov	DWORD PTR [rcx+32], r9d
	mov	edx, r9d
$LN13@stbtt__csc:
; Line 1885
	mov	DWORD PTR [rcx+4], 1
; Line 1892
	cmp	sil, 4
	jne	SHORT $LN44@stbtt__csc
; Line 1881
	mov	eax, DWORD PTR cx$[rsp]
	cmp	eax, r11d
	jle	SHORT $LN17@stbtt__csc
	mov	DWORD PTR [rcx+28], eax
	mov	r11d, eax
$LN17@stbtt__csc:
; Line 1882
	mov	ecx, DWORD PTR cy$[rsp]
	cmp	ecx, ebx
	jle	SHORT $LN19@stbtt__csc
	mov	DWORD PTR [r10+36], ecx
	mov	ebx, ecx
$LN19@stbtt__csc:
; Line 1883
	cmp	eax, edi
	jge	SHORT $LN21@stbtt__csc
	mov	DWORD PTR [r10+24], eax
	mov	edi, eax
$LN21@stbtt__csc:
; Line 1884
	cmp	ecx, edx
	jge	SHORT $LN23@stbtt__csc
	mov	DWORD PTR [r10+32], ecx
	mov	edx, ecx
$LN23@stbtt__csc:
; Line 1881
	mov	ecx, DWORD PTR cx1$[rsp]
	cmp	ecx, r11d
	jle	SHORT $LN27@stbtt__csc
	mov	DWORD PTR [r10+28], ecx
$LN27@stbtt__csc:
; Line 1882
	mov	eax, DWORD PTR cy1$[rsp]
	cmp	eax, ebx
	jle	SHORT $LN29@stbtt__csc
	mov	DWORD PTR [r10+36], eax
$LN29@stbtt__csc:
; Line 1883
	cmp	ecx, edi
	jge	SHORT $LN31@stbtt__csc
	mov	DWORD PTR [r10+24], ecx
$LN31@stbtt__csc:
; Line 1884
	inc	DWORD PTR [r10+48]
	cmp	eax, edx
	jge	SHORT $LN47@stbtt__csc
	mov	DWORD PTR [r10+32], eax
$LN47@stbtt__csc:
	mov	rbx, QWORD PTR [rsp+16]
	mov	rdi, QWORD PTR [rsp+24]
; Line 1902
	pop	rsi
	ret	0
$LN44@stbtt__csc:
; Line 1901
	inc	DWORD PTR [rcx+48]
	mov	rbx, QWORD PTR [rsp+16]
	mov	rdi, QWORD PTR [rsp+24]
; Line 1902
	pop	rsi
	ret	0
$LN2@stbtt__csc:
; Line 1897
	movsxd	rax, DWORD PTR [rcx+48]
	imul	rcx, rax, 14
; Line 1564
	movzx	eax, WORD PTR cx$[rsp]
; Line 1897
	add	rcx, QWORD PTR [r10+40]
; Line 1564
	mov	WORD PTR [rcx+4], ax
; Line 1565
	movzx	eax, WORD PTR cy$[rsp]
	mov	WORD PTR [rcx+6], ax
	mov	BYTE PTR [rcx+12], sil
	mov	WORD PTR [rcx], r8w
	mov	WORD PTR [rcx+2], r9w
; Line 1898
	movsxd	rax, DWORD PTR [r10+48]
	mov	rcx, QWORD PTR [r10+40]
	imul	rdx, rax, 14
	movzx	eax, WORD PTR cx1$[rsp]
	mov	WORD PTR [rdx+rcx+8], ax
; Line 1899
	movsxd	rax, DWORD PTR [r10+48]
	mov	rcx, QWORD PTR [r10+40]
	imul	rdx, rax, 14
	movzx	eax, WORD PTR cy1$[rsp]
	mov	WORD PTR [rdx+rcx+10], ax
; Line 1901
	inc	DWORD PTR [r10+48]
; Line 1902
	pop	rsi
	ret	0
?stbtt__csctx_v@@YAXPEAUstbtt__csctx@@EHHHHHH@Z ENDP	; stbtt__csctx_v
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__track_vertex@@YAXPEAUstbtt__csctx@@HH@Z
_TEXT	SEGMENT
c$ = 8
x$ = 16
y$ = 24
?stbtt__track_vertex@@YAXPEAUstbtt__csctx@@HH@Z PROC	; stbtt__track_vertex, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1881
	cmp	edx, DWORD PTR [rcx+28]
	jg	SHORT $LN14@stbtt__tra
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN2@stbtt__tra
$LN14@stbtt__tra:
	mov	DWORD PTR [rcx+28], edx
$LN2@stbtt__tra:
; Line 1882
	cmp	r8d, DWORD PTR [rcx+36]
	jg	SHORT $LN15@stbtt__tra
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN4@stbtt__tra
$LN15@stbtt__tra:
	mov	DWORD PTR [rcx+36], r8d
$LN4@stbtt__tra:
; Line 1883
	cmp	edx, DWORD PTR [rcx+24]
	jl	SHORT $LN16@stbtt__tra
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN6@stbtt__tra
$LN16@stbtt__tra:
	mov	DWORD PTR [rcx+24], edx
$LN6@stbtt__tra:
; Line 1884
	cmp	r8d, DWORD PTR [rcx+32]
	jl	SHORT $LN9@stbtt__tra
	cmp	DWORD PTR [rcx+4], 0
	jne	SHORT $LN18@stbtt__tra
$LN9@stbtt__tra:
	mov	DWORD PTR [rcx+32], r8d
$LN18@stbtt__tra:
; Line 1886
	mov	DWORD PTR [rcx+4], 1
	ret	0
?stbtt__track_vertex@@YAXPEAUstbtt__csctx@@HH@Z ENDP	; stbtt__track_vertex
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z
_TEXT	SEGMENT
i$1$ = 80
tv3661 = 84
cx$1$ = 88
scy$1$ = 92
scx$1$ = 96
next_move$1$ = 100
cy$1$ = 104
endPtsOfContours$1$ = 112
tv3655 = 120
mtx$1 = 128
flags$4$ = 368
comp_verts$2 = 368
info$ = 368
glyph_index$ = 376
pvertices$ = 384
tv4336 = 392
?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z PROC ; stbtt__GetGlyphShapeTT, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1640
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], r8
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 304				; 00000130H
; Line 1643
	mov	rbx, QWORD PTR [rcx+8]
; Line 1644
	xor	r12d, r12d
	movaps	XMMWORD PTR [rax-72], xmm6
	mov	r13, rcx
	movaps	XMMWORD PTR [rax-88], xmm7
	mov	edi, r12d
	movaps	XMMWORD PTR [rax-104], xmm8
; Line 1645
	mov	r15d, r12d
	movaps	XMMWORD PTR [rax-120], xmm9
	movaps	XMMWORD PTR [rax-136], xmm10
	movaps	XMMWORD PTR [rax-152], xmm11
	movaps	XMMWORD PTR [rax-168], xmm12
	movaps	XMMWORD PTR [rax-184], xmm13
	movaps	XMMWORD PTR [rax-200], xmm14
; Line 1646
	call	?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z ; stbtt__GetGlyfOffset
; Line 1648
	mov	rcx, QWORD PTR pvertices$[rsp]
	mov	QWORD PTR [rcx], r12
; Line 1650
	test	eax, eax
	js	$LN64@stbtt__Get
; Line 1652
	movsxd	r10, eax
; Line 1270
	mov	r9d, 256				; 00000100H
	movsx	eax, r9w
	movzx	edx, BYTE PTR [r10+rbx]
	imul	edx, eax
	movzx	eax, BYTE PTR [r10+rbx+1]
	add	dx, ax
; Line 1654
	test	dx, dx
	jle	$LN26@stbtt__Get
; Line 1660
	movsx	eax, dx
	lea	r9, QWORD PTR [rbx+10]
	add	r9, r10
	mov	ebp, r12d
	xor	sil, sil
	mov	QWORD PTR endPtsOfContours$1$[rsp], r9
	lea	r8d, DWORD PTR [rax+rax]
	movsxd	r12, r8d
; Line 1663
	movzx	r14d, BYTE PTR [r12+r9-2]
	lea	rcx, QWORD PTR [r10+r12]
	movzx	eax, BYTE PTR [rcx+rbx+10]
	movzx	edx, BYTE PTR [rcx+rbx+11]
	add	rbx, 12
	shl	rax, 8
	add	rax, r10
	shl	r14d, 8
	add	rdx, rax
	movzx	eax, BYTE PTR [r12+r9-1]
	add	r14d, eax
	add	rdx, r12
; Line 1665
	lea	eax, DWORD PTR [r8+1]
	add	rbx, rdx
	add	eax, r14d
; Line 1666
	movsxd	rcx, eax
	imul	rcx, rcx, 14
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdi, rax
; Line 1667
	test	rax, rax
	je	$LN64@stbtt__Get
; Line 1670
	lea	ecx, DWORD PTR [r14+1]
	xor	r13d, r13d
; Line 1671
	xor	dl, dl
; Line 1681
	mov	r14d, ecx
	mov	QWORD PTR tv3655[rsp], r14
	mov	DWORD PTR next_move$1$[rsp], r13d
	test	ecx, ecx
	je	SHORT $LN3@stbtt__Get
	imul	rcx, r12, 14
	lea	r8, QWORD PTR [rax+12]
	mov	r9d, r14d
	add	r8, rcx
	npad	2
$LL4@stbtt__Get:
; Line 1682
	test	dl, dl
	jne	SHORT $LN29@stbtt__Get
; Line 1683
	movzx	esi, BYTE PTR [rbx]
; Line 1684
	movzx	ecx, sil
	and	cl, 8
	je	SHORT $LN31@stbtt__Get
; Line 1685
	movzx	edx, BYTE PTR [rbx+1]
$LN31@stbtt__Get:
; Line 1686
	test	cl, cl
	mov	rax, r13
	setne	al
	inc	rax
	add	rbx, rax
	jmp	SHORT $LN30@stbtt__Get
$LN29@stbtt__Get:
; Line 1687
	add	dl, 255					; 000000ffH
$LN30@stbtt__Get:
; Line 1688
	mov	BYTE PTR [r8], sil
	add	r8, 14
	sub	r9, 1
	jne	SHORT $LL4@stbtt__Get
$LN3@stbtt__Get:
; Line 1692
	mov	r8d, r13d
; Line 1693
	mov	r11d, 256				; 00000100H
	test	r14, r14
	je	SHORT $LN6@stbtt__Get
	imul	r9, r12, 14
	mov	r10, r14
	add	r9, rdi
	npad	4
$LL7@stbtt__Get:
; Line 1695
	movzx	edx, BYTE PTR [r9+12]
	and	dl, 16
	test	BYTE PTR [r9+12], 2
	je	SHORT $LN32@stbtt__Get
; Line 1696
	movzx	ecx, BYTE PTR [rbx]
	inc	rbx
; Line 1697
	mov	eax, ecx
	neg	eax
	test	dl, dl
	cmove	ecx, eax
	add	r8d, ecx
; Line 1698
	jmp	SHORT $LN34@stbtt__Get
$LN32@stbtt__Get:
; Line 1699
	test	dl, dl
	jne	SHORT $LN34@stbtt__Get
; Line 1700
	movzx	eax, BYTE PTR [rbx+1]
	movzx	edx, BYTE PTR [rbx]
	movsx	ecx, r11w
	imul	edx, ecx
	add	ax, dx
	cwde
	add	r8d, eax
; Line 1701
	add	rbx, 2
$LN34@stbtt__Get:
; Line 1704
	mov	WORD PTR [r9], r8w
	add	r9, 14
	sub	r10, 1
	jne	SHORT $LL7@stbtt__Get
$LN6@stbtt__Get:
; Line 1708
	mov	r8d, r13d
; Line 1709
	test	r14, r14
	je	SHORT $LN9@stbtt__Get
	imul	rax, r12, 14
	lea	r9, QWORD PTR [rdi+2]
	mov	r10, r14
	add	r9, rax
	npad	12
$LL10@stbtt__Get:
; Line 1711
	movzx	edx, BYTE PTR [r9+10]
	and	dl, 32					; 00000020H
	test	BYTE PTR [r9+10], 4
	je	SHORT $LN35@stbtt__Get
; Line 1712
	movzx	ecx, BYTE PTR [rbx]
	inc	rbx
; Line 1713
	mov	eax, ecx
	neg	eax
	test	dl, dl
	cmove	ecx, eax
	add	r8d, ecx
; Line 1714
	jmp	SHORT $LN37@stbtt__Get
$LN35@stbtt__Get:
; Line 1715
	test	dl, dl
	jne	SHORT $LN37@stbtt__Get
; Line 1716
	movzx	eax, BYTE PTR [rbx+1]
	movzx	edx, BYTE PTR [rbx]
	movsx	ecx, r11w
	imul	edx, ecx
	add	ax, dx
	cwde
	add	r8d, eax
; Line 1717
	add	rbx, 2
$LN37@stbtt__Get:
; Line 1720
	mov	WORD PTR [r9], r8w
	add	r9, 14
	sub	r10, 1
	jne	SHORT $LL10@stbtt__Get
$LN9@stbtt__Get:
; Line 1725
	mov	DWORD PTR scy$1$[rsp], r13d
	mov	edx, r13d
	mov	DWORD PTR cx$1$[rsp], edx
; Line 1726
	mov	eax, r13d
	mov	DWORD PTR i$1$[rsp], eax
	mov	r10d, r13d
	mov	DWORD PTR scx$1$[rsp], r13d
	mov	r9d, r13d
	mov	DWORD PTR cy$1$[rsp], r13d
	mov	r11d, r13d
	mov	esi, r13d
	test	r14, r14
	je	$LN12@stbtt__Get
	imul	rbx, r12, 14
	mov	r14, r13
	add	rbx, rdi
	npad	6
$LL13@stbtt__Get:
; Line 1728
	movsx	r8d, WORD PTR [rbx]
	mov	r12d, r8d
	movzx	ecx, BYTE PTR [rbx+12]
	mov	WORD PTR tv4336[rsp], r8w
; Line 1729
	movsx	r8d, WORD PTR [rbx+2]
	mov	r13d, r8d
	mov	BYTE PTR flags$4$[rsp], cl
; Line 1731
	cmp	DWORD PTR next_move$1$[rsp], eax
	jne	$LN38@stbtt__Get
; Line 1732
	test	r14, r14
	je	SHORT $LN40@stbtt__Get
; Line 1733
	mov	eax, DWORD PTR scy$1$[rsp]
	mov	r8d, ebp
	mov	DWORD PTR [rsp+72], r9d
	mov	rcx, rdi
	mov	DWORD PTR [rsp+64], edx
	mov	r9d, r15d
	mov	DWORD PTR [rsp+56], eax
	mov	edx, r10d
	mov	eax, DWORD PTR scx$1$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	DWORD PTR [rsp+40], r11d
	mov	DWORD PTR [rsp+32], esi
	call	?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z ; stbtt__close_shape
	mov	r9d, DWORD PTR cy$1$[rsp]
	mov	r10d, eax
	mov	eax, DWORD PTR i$1$[rsp]
	mov	edx, DWORD PTR cx$1$[rsp]
	movzx	ecx, BYTE PTR flags$4$[rsp]
$LN40@stbtt__Get:
; Line 1736
	movzx	r15d, cl
	not	r15d
	and	r15d, 1
; Line 1737
	je	SHORT $LN41@stbtt__Get
; Line 1742
	test	BYTE PTR [rbx+26], 1
	movsx	esi, WORD PTR [rbx+14]
	movsx	r11d, WORD PTR [rbx+16]
	mov	DWORD PTR scx$1$[rsp], r12d
	mov	DWORD PTR scy$1$[rsp], r13d
	jne	SHORT $LN43@stbtt__Get
; Line 1744
	add	esi, r12d
; Line 1745
	add	r11d, r13d
	sar	esi, 1
	sar	r11d, 1
; Line 1746
	jmp	SHORT $LN42@stbtt__Get
$LN43@stbtt__Get:
; Line 1750
	inc	eax
	inc	r14
	mov	DWORD PTR i$1$[rsp], eax
	add	rbx, 14
; Line 1752
	jmp	SHORT $LN42@stbtt__Get
$LN41@stbtt__Get:
; Line 1753
	mov	esi, r12d
; Line 1754
	mov	r11d, r13d
$LN42@stbtt__Get:
; Line 1758
	mov	r8, QWORD PTR endPtsOfContours$1$[rsp]
; Line 1564
	xor	r12d, r12d
; Line 1756
	movsxd	rax, r10d
	inc	r10d
	imul	rcx, rax, 14
; Line 1561
	mov	BYTE PTR [rcx+rdi+12], 1
; Line 1562
	mov	WORD PTR [rcx+rdi], si
; Line 1563
	mov	WORD PTR [rcx+rdi+2], r11w
; Line 1564
	mov	DWORD PTR [rcx+rdi+4], r12d
; Line 1758
	movzx	ecx, BYTE PTR [r8]
	movzx	eax, BYTE PTR [r8+1]
	shl	ecx, 8
	inc	eax
	add	eax, ecx
; Line 1759
	add	r8, 2
	mov	DWORD PTR next_move$1$[rsp], eax
	mov	QWORD PTR endPtsOfContours$1$[rsp], r8
; Line 1760
	jmp	$LN312@stbtt__Get
$LN38@stbtt__Get:
; Line 1761
	test	cl, 1
	jne	SHORT $LN45@stbtt__Get
; Line 1762
	test	ebp, ebp
	je	SHORT $LN308@stbtt__Get
; Line 1763
	movsxd	rax, r10d
	imul	rcx, rax, 14
	lea	eax, DWORD PTR [rdx+r12]
	sar	eax, 1
; Line 1562
	mov	WORD PTR [rcx+rdi], ax
; Line 1763
	lea	eax, DWORD PTR [r9+r8]
	sar	eax, 1
; Line 1563
	mov	WORD PTR [rcx+rdi+2], ax
; Line 1763
	inc	r10d
	mov	eax, DWORD PTR i$1$[rsp]
; Line 1561
	mov	BYTE PTR [rcx+rdi+12], 3
; Line 1564
	mov	WORD PTR [rcx+rdi+4], dx
; Line 1565
	mov	WORD PTR [rcx+rdi+6], r9w
$LN308@stbtt__Get:
; Line 1764
	mov	edx, r12d
; Line 1765
	mov	DWORD PTR cy$1$[rsp], r13d
	mov	DWORD PTR cx$1$[rsp], edx
	mov	r9d, r13d
; Line 1766
	mov	ebp, 1
; Line 1767
	jmp	SHORT $LN11@stbtt__Get
$LN45@stbtt__Get:
; Line 1768
	movsxd	rax, r10d
; Line 1772
	mov	r12d, 0
	imul	r8, rax, 14
	inc	r10d
	movzx	ecx, r9w
	test	ebp, ebp
	cmove	dx, r12w
	setne	al
	cmove	cx, r12w
	add	al, 2
	mov	BYTE PTR [r8+rdi+12], al
	movzx	eax, WORD PTR tv4336[rsp]
	mov	WORD PTR [r8+rdi], ax
	mov	WORD PTR [r8+rdi+2], r13w
	mov	WORD PTR [r8+rdi+4], dx
	mov	edx, DWORD PTR cx$1$[rsp]
	mov	WORD PTR [r8+rdi+6], cx
$LN312@stbtt__Get:
; Line 1726
	mov	eax, DWORD PTR i$1$[rsp]
	mov	ebp, r12d
$LN11@stbtt__Get:
	inc	eax
	inc	r14
	add	rbx, 14
	mov	DWORD PTR i$1$[rsp], eax
	cmp	r14, QWORD PTR tv3655[rsp]
	jl	$LL13@stbtt__Get
$LN12@stbtt__Get:
; Line 1776
	mov	eax, DWORD PTR scy$1$[rsp]
	mov	r8d, ebp
	mov	DWORD PTR [rsp+72], r9d
	mov	rcx, rdi
	mov	DWORD PTR [rsp+64], edx
	mov	r9d, r15d
	mov	DWORD PTR [rsp+56], eax
	mov	edx, r10d
	mov	eax, DWORD PTR scx$1$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	DWORD PTR [rsp+40], r11d
	mov	DWORD PTR [rsp+32], esi
	call	?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z ; stbtt__close_shape
	mov	r15d, eax
; Line 1861
	mov	rax, QWORD PTR pvertices$[rsp]
	mov	QWORD PTR [rax], rdi
; Line 1862
	mov	eax, r15d
	jmp	$LN1@stbtt__Get
$LN26@stbtt__Get:
; Line 1777
	cmp	dx, -1
	jne	$LN50@stbtt__Get
; Line 1782
	movss	xmm14, DWORD PTR __real@38800000
	add	rbx, 10
	add	rbx, r10
	npad	2
$LL14@stbtt__Get:
; Line 1270
	movzx	ebp, BYTE PTR [rbx+1]
	xorps	xmm10, xmm10
	movzx	esi, BYTE PTR [rbx+2]
	xorps	xmm11, xmm11
	movzx	r14d, BYTE PTR [rbx+3]
; Line 1790
	add	rbx, 4
	movaps	xmm0, XMMWORD PTR __xmm@3f80000000000000000000003f800000
	mov	QWORD PTR comp_verts$2[rsp], r12
	movups	XMMWORD PTR mtx$1[rsp], xmm0
; Line 1792
	test	bpl, 2
	je	SHORT $LN18@stbtt__Get
; Line 1793
	test	bpl, 1
	je	SHORT $LN54@stbtt__Get
; Line 1270
	movzx	eax, BYTE PTR [rbx+1]
	movzx	edx, BYTE PTR [rbx]
	movsx	ecx, r9w
	imul	edx, ecx
	movsx	ecx, r9w
	add	ax, dx
	movzx	edx, BYTE PTR [rbx+2]
	cwde
	imul	edx, ecx
	movd	xmm10, eax
	movzx	eax, BYTE PTR [rbx+3]
	add	ax, dx
	cwde
; Line 1795
	add	rbx, 4
	cvtdq2ps xmm10, xmm10
	movd	xmm11, eax
	cvtdq2ps xmm11, xmm11
; Line 1796
	jmp	SHORT $LN17@stbtt__Get
$LN54@stbtt__Get:
; Line 1797
	movsx	eax, BYTE PTR [rbx]
	movd	xmm10, eax
; Line 1798
	movsx	eax, BYTE PTR [rbx+1]
	add	rbx, 2
	cvtdq2ps xmm10, xmm10
	movd	xmm11, eax
	cvtdq2ps xmm11, xmm11
; Line 1800
	jmp	SHORT $LN17@stbtt__Get
$LN18@stbtt__Get:
; Line 1803
	mov	r8d, 1803				; 0000070bH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	mov	r9d, 256				; 00000100H
$LN17@stbtt__Get:
; Line 1805
	test	bpl, 8
	je	SHORT $LN56@stbtt__Get
; Line 1270
	movzx	eax, BYTE PTR [rbx+1]
	xorps	xmm8, xmm8
	movzx	edx, BYTE PTR [rbx]
	xorps	xmm9, xmm9
	movsx	ecx, r9w
	imul	edx, ecx
	add	ax, dx
	cwde
; Line 1806
	add	rbx, 2
	movd	xmm6, eax
	cvtdq2ps xmm6, xmm6
	mulss	xmm6, xmm14
	movaps	xmm7, xmm6
; Line 1807
	jmp	$LN60@stbtt__Get
$LN56@stbtt__Get:
; Line 1808
	test	bpl, 64					; 00000040H
	je	SHORT $LN58@stbtt__Get
; Line 1270
	movzx	eax, BYTE PTR [rbx+1]
	xorps	xmm8, xmm8
	movzx	edx, BYTE PTR [rbx]
	xorps	xmm9, xmm9
	movsx	ecx, r9w
	imul	edx, ecx
	movsx	ecx, r9w
	add	ax, dx
	movzx	edx, BYTE PTR [rbx+2]
	cwde
	imul	edx, ecx
	movd	xmm7, eax
	movzx	eax, BYTE PTR [rbx+3]
	add	ax, dx
	cwde
; Line 1811
	add	rbx, 4
	cvtdq2ps xmm7, xmm7
	movd	xmm6, eax
	cvtdq2ps xmm6, xmm6
	mulss	xmm7, xmm14
	mulss	xmm6, xmm14
	jmp	$LN60@stbtt__Get
$LN58@stbtt__Get:
; Line 1812
	test	bpl, bpl
	jns	$LN310@stbtt__Get
; Line 1270
	movzx	eax, BYTE PTR [rbx+1]
	movzx	edx, BYTE PTR [rbx]
	movsx	ecx, r9w
	imul	edx, ecx
	movsx	ecx, r9w
	add	ax, dx
	movzx	edx, BYTE PTR [rbx+2]
	cwde
	imul	edx, ecx
	movsx	ecx, r9w
	movd	xmm7, eax
	movzx	eax, BYTE PTR [rbx+3]
	add	ax, dx
	movzx	edx, BYTE PTR [rbx+4]
	cwde
	imul	edx, ecx
	movsx	ecx, r9w
; Line 1813
	cvtdq2ps xmm7, xmm7
	movd	xmm9, eax
; Line 1270
	movzx	eax, BYTE PTR [rbx+5]
	add	ax, dx
; Line 1813
	mulss	xmm7, xmm14
; Line 1270
	movzx	edx, BYTE PTR [rbx+6]
	cwde
	imul	edx, ecx
; Line 1814
	cvtdq2ps xmm9, xmm9
	movd	xmm8, eax
; Line 1270
	movzx	eax, BYTE PTR [rbx+7]
	add	ax, dx
; Line 1814
	mulss	xmm9, xmm14
; Line 1270
	cwde
; Line 1816
	add	rbx, 8
	cvtdq2ps xmm8, xmm8
	movd	xmm6, eax
	cvtdq2ps xmm6, xmm6
	mulss	xmm8, xmm14
	mulss	xmm6, xmm14
	jmp	SHORT $LN60@stbtt__Get
$LN310@stbtt__Get:
; Line 1812
	movss	xmm6, DWORD PTR mtx$1[rsp+12]
	movss	xmm8, DWORD PTR mtx$1[rsp+8]
	movss	xmm9, DWORD PTR mtx$1[rsp+4]
	movss	xmm7, DWORD PTR mtx$1[rsp]
$LN60@stbtt__Get:
; Line 1820
	movaps	xmm0, xmm9
	movaps	xmm1, xmm7
	mulss	xmm0, xmm9
	mulss	xmm1, xmm7
	addss	xmm0, xmm1
	call	sqrtf
	movaps	xmm12, xmm0
; Line 1821
	movaps	xmm1, xmm8
	movaps	xmm0, xmm6
	mulss	xmm1, xmm8
	mulss	xmm0, xmm6
	addss	xmm0, xmm1
	call	sqrtf
; Line 1824
	mov	edx, esi
; Line 2267
	lea	r8, QWORD PTR comp_verts$2[rsp]
; Line 1824
	shl	edx, 8
	movaps	xmm13, xmm0
	add	edx, r14d
; Line 2267
	mov	rcx, r13
	cmp	DWORD PTR [r13+76], 0
	jne	SHORT $LN115@stbtt__Get
; Line 2268
	call	?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z ; stbtt__GetGlyphShapeTT
	jmp	SHORT $LN313@stbtt__Get
$LN115@stbtt__Get:
; Line 2270
	call	?stbtt__GetGlyphShapeT2@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z ; stbtt__GetGlyphShapeT2
$LN313@stbtt__Get:
; Line 1825
	mov	r10d, eax
	test	eax, eax
	jle	$LN61@stbtt__Get
; Line 1827
	movsxd	rsi, eax
	mov	r9, r12
	cmp	rsi, 4
	jl	$LC295@stbtt__Get
; Line 1832
	lea	rdx, QWORD PTR [rsi-4]
	mov	r8, r12
	shr	rdx, 2
	inc	rdx
	lea	r9, QWORD PTR [rdx*4]
	npad	7
$LL296@stbtt__Get:
; Line 1831
	mov	rcx, QWORD PTR comp_verts$2[rsp]
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movsx	eax, WORD PTR [r8+rcx+2]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [r8+rcx]
	cvtsi2ss xmm3, eax
	movaps	xmm0, xmm2
; Line 1832
	mulss	xmm2, xmm6
	movaps	xmm1, xmm3
	mulss	xmm0, xmm8
	mulss	xmm1, xmm7
	mulss	xmm3, xmm9
	addss	xmm1, xmm0
	addss	xmm3, xmm2
	xorps	xmm2, xmm2
	addss	xmm1, xmm10
	addss	xmm3, xmm11
	mulss	xmm1, xmm12
	mulss	xmm3, xmm13
	cvttss2si eax, xmm1
	mov	WORD PTR [r8+rcx], ax
	cvttss2si eax, xmm3
	xorps	xmm3, xmm3
	mov	WORD PTR [r8+rcx+2], ax
; Line 1834
	movsx	eax, WORD PTR [r8+rcx+6]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [r8+rcx+4]
	cvtsi2ss xmm3, eax
	movaps	xmm0, xmm2
; Line 1835
	mulss	xmm2, xmm6
	movaps	xmm1, xmm3
	mulss	xmm0, xmm8
	mulss	xmm1, xmm7
	mulss	xmm3, xmm9
	addss	xmm1, xmm0
	addss	xmm3, xmm2
	xorps	xmm2, xmm2
	addss	xmm1, xmm10
	addss	xmm3, xmm11
	mulss	xmm1, xmm12
	mulss	xmm3, xmm13
	cvttss2si eax, xmm1
	mov	WORD PTR [r8+rcx+4], ax
	cvttss2si eax, xmm3
	xorps	xmm3, xmm3
	mov	WORD PTR [r8+rcx+6], ax
	mov	rcx, QWORD PTR comp_verts$2[rsp]
	movsx	eax, WORD PTR [r8+rcx+16]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [r8+rcx+14]
	cvtsi2ss xmm3, eax
	movaps	xmm0, xmm2
	mulss	xmm2, xmm6
	movaps	xmm1, xmm3
	mulss	xmm0, xmm8
	mulss	xmm1, xmm7
	mulss	xmm3, xmm9
	addss	xmm1, xmm0
	addss	xmm3, xmm2
	xorps	xmm2, xmm2
	addss	xmm1, xmm10
	addss	xmm3, xmm11
	mulss	xmm1, xmm12
	mulss	xmm3, xmm13
	cvttss2si eax, xmm1
	mov	WORD PTR [r8+rcx+14], ax
	cvttss2si eax, xmm3
	xorps	xmm3, xmm3
	mov	WORD PTR [r8+rcx+16], ax
	movsx	eax, WORD PTR [r8+rcx+20]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [r8+rcx+18]
	cvtsi2ss xmm3, eax
	movaps	xmm0, xmm2
	movaps	xmm1, xmm3
	mulss	xmm0, xmm8
	mulss	xmm1, xmm7
	addss	xmm1, xmm0
	addss	xmm1, xmm10
	mulss	xmm1, xmm12
	mulss	xmm3, xmm9
	cvttss2si eax, xmm1
	mulss	xmm2, xmm6
	mov	WORD PTR [r8+rcx+18], ax
	addss	xmm3, xmm2
	xorps	xmm2, xmm2
	addss	xmm3, xmm11
	mulss	xmm3, xmm13
	cvttss2si eax, xmm3
	xorps	xmm3, xmm3
	mov	WORD PTR [r8+rcx+20], ax
	mov	rcx, QWORD PTR comp_verts$2[rsp]
	movsx	eax, WORD PTR [r8+rcx+30]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [r8+rcx+28]
	cvtsi2ss xmm3, eax
	movaps	xmm0, xmm2
	mulss	xmm2, xmm6
	movaps	xmm1, xmm3
	mulss	xmm0, xmm8
	mulss	xmm3, xmm9
	mulss	xmm1, xmm7
	addss	xmm3, xmm2
	xorps	xmm2, xmm2
	addss	xmm1, xmm0
	addss	xmm3, xmm11
	addss	xmm1, xmm10
	mulss	xmm3, xmm13
	mulss	xmm1, xmm12
	cvttss2si eax, xmm1
	mov	WORD PTR [r8+rcx+28], ax
	cvttss2si eax, xmm3
	xorps	xmm3, xmm3
	mov	WORD PTR [r8+rcx+30], ax
	movsx	eax, WORD PTR [r8+rcx+34]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [r8+rcx+32]
	cvtsi2ss xmm3, eax
	movaps	xmm0, xmm2
	mulss	xmm2, xmm6
	movaps	xmm1, xmm3
	mulss	xmm0, xmm8
	mulss	xmm3, xmm9
	mulss	xmm1, xmm7
	addss	xmm3, xmm2
	xorps	xmm2, xmm2
	addss	xmm1, xmm0
	addss	xmm3, xmm11
	addss	xmm1, xmm10
	mulss	xmm3, xmm13
	mulss	xmm1, xmm12
	cvttss2si eax, xmm1
	mov	WORD PTR [r8+rcx+32], ax
	cvttss2si eax, xmm3
	xorps	xmm3, xmm3
	mov	WORD PTR [r8+rcx+34], ax
	mov	rcx, QWORD PTR comp_verts$2[rsp]
	movsx	eax, WORD PTR [r8+rcx+44]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [r8+rcx+42]
	cvtsi2ss xmm3, eax
	movaps	xmm0, xmm2
	mulss	xmm2, xmm6
	movaps	xmm1, xmm3
	mulss	xmm0, xmm8
	mulss	xmm1, xmm7
	mulss	xmm3, xmm9
	addss	xmm1, xmm0
	addss	xmm3, xmm2
	xorps	xmm2, xmm2
	addss	xmm1, xmm10
	addss	xmm3, xmm11
	mulss	xmm1, xmm12
	mulss	xmm3, xmm13
	cvttss2si eax, xmm1
	mov	WORD PTR [r8+rcx+42], ax
	cvttss2si eax, xmm3
	mov	WORD PTR [r8+rcx+44], ax
	movsx	eax, WORD PTR [r8+rcx+48]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [r8+rcx+46]
; Line 1834
	xorps	xmm3, xmm3
	movaps	xmm0, xmm2
	cvtsi2ss xmm3, eax
	mulss	xmm0, xmm8
	movaps	xmm1, xmm3
; Line 1835
	mulss	xmm2, xmm6
	mulss	xmm1, xmm7
	mulss	xmm3, xmm9
	addss	xmm1, xmm0
	addss	xmm3, xmm2
	addss	xmm1, xmm10
	addss	xmm3, xmm11
	mulss	xmm1, xmm12
	mulss	xmm3, xmm13
	cvttss2si eax, xmm1
	mov	WORD PTR [r8+rcx+46], ax
	cvttss2si eax, xmm3
	mov	WORD PTR [r8+rcx+48], ax
	add	r8, 56					; 00000038H
	sub	rdx, 1
	jne	$LL296@stbtt__Get
; Line 1827
	cmp	r9, rsi
	jl	SHORT $LN307@stbtt__Get
	jmp	$LN294@stbtt__Get
$LC295@stbtt__Get:
	test	r10d, r10d
	jle	$LN294@stbtt__Get
$LN307@stbtt__Get:
	imul	rdx, r9, 14
	mov	r8, rsi
	sub	r8, r9
$LC306@stbtt__Get:
; Line 1828
	mov	rcx, QWORD PTR comp_verts$2[rsp]
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
; Line 1831
	movsx	eax, WORD PTR [rdx+rcx+2]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [rdx+rcx]
	cvtsi2ss xmm3, eax
	movaps	xmm0, xmm2
; Line 1832
	mulss	xmm2, xmm6
	movaps	xmm1, xmm3
	mulss	xmm0, xmm8
	mulss	xmm3, xmm9
	mulss	xmm1, xmm7
	addss	xmm3, xmm2
	xorps	xmm2, xmm2
	addss	xmm1, xmm0
	addss	xmm3, xmm11
	addss	xmm1, xmm10
	mulss	xmm3, xmm13
	mulss	xmm1, xmm12
	cvttss2si eax, xmm1
	mov	WORD PTR [rdx+rcx], ax
	cvttss2si eax, xmm3
	xorps	xmm3, xmm3
	mov	WORD PTR [rdx+rcx+2], ax
; Line 1834
	movsx	eax, WORD PTR [rdx+rcx+6]
	cvtsi2ss xmm2, eax
	movsx	eax, WORD PTR [rdx+rcx+4]
	cvtsi2ss xmm3, eax
	movaps	xmm0, xmm2
; Line 1835
	mulss	xmm2, xmm6
	movaps	xmm1, xmm3
	mulss	xmm0, xmm8
	mulss	xmm1, xmm7
	mulss	xmm3, xmm9
	addss	xmm1, xmm0
	addss	xmm3, xmm2
	addss	xmm1, xmm10
	addss	xmm3, xmm11
	mulss	xmm1, xmm12
	mulss	xmm3, xmm13
	cvttss2si eax, xmm1
	mov	WORD PTR [rdx+rcx+4], ax
	cvttss2si eax, xmm3
	mov	WORD PTR [rdx+rcx+6], ax
	add	rdx, 14
	sub	r8, 1
	jne	$LC306@stbtt__Get
$LN294@stbtt__Get:
; Line 1838
	lea	r12d, DWORD PTR [r10+r15]
	movsxd	rax, r12d
	imul	rcx, rax, 14
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	r14, rax
; Line 1839
	test	rax, rax
	je	SHORT $LN281@stbtt__Get
; Line 1844
	test	r15d, r15d
	jle	SHORT $LN65@stbtt__Get
	movsxd	rcx, r15d
	mov	rdx, rdi
	imul	r8, rcx, 14
	mov	rcx, rax
	call	memcpy
$LN65@stbtt__Get:
; Line 1845
	mov	rdx, QWORD PTR comp_verts$2[rsp]
	movsxd	rax, r15d
	imul	rcx, rax, 14
	imul	r8, rsi, 14
	add	rcx, r14
	call	memcpy
; Line 1846
	test	rdi, rdi
	je	SHORT $LN66@stbtt__Get
	mov	rcx, rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN66@stbtt__Get:
; Line 1848
	mov	rcx, QWORD PTR comp_verts$2[rsp]
	mov	rdi, r14
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 1849
	mov	r15d, r12d
	xor	r12d, r12d
$LN61@stbtt__Get:
; Line 1852
	test	bpl, 32					; 00000020H
	je	$LN67@stbtt__Get
; Line 1783
	mov	r9d, 256				; 00000100H
	jmp	$LL14@stbtt__Get
$LN281@stbtt__Get:
; Line 1840
	test	rdi, rdi
	je	SHORT $LN63@stbtt__Get
	mov	rcx, rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN63@stbtt__Get:
; Line 1841
	mov	rcx, QWORD PTR comp_verts$2[rsp]
	test	rcx, rcx
	je	SHORT $LN64@stbtt__Get
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN64@stbtt__Get:
; Line 1842
	xor	eax, eax
$LN1@stbtt__Get:
; Line 1863
	lea	r11, QWORD PTR [rsp+304]
	mov	rbx, QWORD PTR [r11+72]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	movaps	xmm14, XMMWORD PTR [r11-144]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN50@stbtt__Get:
; Line 1854
	test	dx, dx
	jns	SHORT $LN67@stbtt__Get
; Line 1856
	mov	r8d, 1856				; 00000740H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
$LN67@stbtt__Get:
; Line 1861
	mov	rax, QWORD PTR pvertices$[rsp]
	mov	QWORD PTR [rax], rdi
; Line 1862
	mov	eax, r15d
	jmp	SHORT $LN1@stbtt__Get
?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z ENDP ; stbtt__GetGlyphShapeTT
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z
_TEXT	SEGMENT
vertices$ = 16
num_vertices$ = 24
was_off$ = 32
start_off$ = 40
sx$ = 48
sy$ = 56
scx$ = 64
scy$ = 72
cx$ = 80
cy$ = 88
?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z PROC ; stbtt__close_shape, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1625
	sub	rsp, 8
	movsxd	r10, edx
	mov	r11, rcx
; Line 1626
	test	r9d, r9d
	je	$LN2@stbtt__clo
; Line 1627
	mov	r9d, DWORD PTR scy$[rsp]
	mov	QWORD PTR [rsp], rbx
	mov	ebx, DWORD PTR scx$[rsp]
	test	r8d, r8d
	je	SHORT $LN4@stbtt__clo
; Line 1628
	mov	edx, DWORD PTR cx$[rsp]
	imul	r8, r10, 14
	lea	eax, DWORD PTR [rbx+rdx]
	sar	eax, 1
; Line 1562
	mov	WORD PTR [r8+rcx], ax
	mov	BYTE PTR [r8+rcx+12], 3
; Line 1628
	mov	ecx, DWORD PTR cy$[rsp]
; Line 1564
	mov	WORD PTR [r8+r11+4], dx
; Line 1565
	mov	WORD PTR [r8+r11+6], cx
; Line 1628
	lea	eax, DWORD PTR [r9+rcx]
	sar	eax, 1
; Line 1563
	mov	WORD PTR [r8+r11+2], ax
; Line 1628
	inc	r10d
$LN4@stbtt__clo:
; Line 1629
	movsxd	rax, r10d
	imul	rcx, rax, 14
; Line 1562
	movzx	eax, WORD PTR sx$[rsp]
	mov	WORD PTR [rcx+r11], ax
; Line 1563
	movzx	eax, WORD PTR sy$[rsp]
	mov	WORD PTR [rcx+r11+2], ax
; Line 1637
	lea	eax, DWORD PTR [r10+1]
; Line 1564
	mov	WORD PTR [rcx+r11+4], bx
; Line 1636
	mov	rbx, QWORD PTR [rsp]
; Line 1561
	mov	BYTE PTR [rcx+r11+12], 3
; Line 1565
	mov	WORD PTR [rcx+r11+6], r9w
; Line 1637
	add	rsp, 8
	ret	0
$LN2@stbtt__clo:
; Line 1631
	movzx	eax, WORD PTR sx$[rsp]
	imul	rcx, r10, 14
	mov	WORD PTR [rcx+r11], ax
	movzx	eax, WORD PTR sy$[rsp]
	mov	WORD PTR [rcx+r11+2], ax
	test	r8d, r8d
	je	SHORT $LN5@stbtt__clo
; Line 1564
	movzx	eax, WORD PTR cx$[rsp]
	mov	WORD PTR [rcx+r11+4], ax
; Line 1565
	movzx	eax, WORD PTR cy$[rsp]
	mov	WORD PTR [rcx+r11+6], ax
; Line 1637
	lea	eax, DWORD PTR [r10+1]
; Line 1561
	mov	BYTE PTR [rcx+r11+12], 3
; Line 1637
	add	rsp, 8
	ret	0
$LN5@stbtt__clo:
; Line 1564
	xor	eax, eax
	mov	BYTE PTR [rcx+r11+12], 2
	mov	DWORD PTR [rcx+r11+4], eax
; Line 1637
	lea	eax, DWORD PTR [r10+1]
	add	rsp, 8
	ret	0
?stbtt__close_shape@@YAHPEAUstbtt_vertex@@HHHHHHHHH@Z ENDP ; stbtt__close_shape
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__GetGlyphInfoT2@@YAHPEBUstbtt_fontinfo@@HPEAH111@Z
_TEXT	SEGMENT
c$ = 32
info$ = 112
glyph_index$ = 120
x0$ = 128
y0$ = 136
x1$ = 144
y1$ = 152
?stbtt__GetGlyphInfoT2@@YAHPEBUstbtt_fontinfo@@HPEAH111@Z PROC ; stbtt__GetGlyphInfoT2, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2255
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rsi, r8
; Line 2256
	mov	QWORD PTR [rax-72], 1
	xor	ebx, ebx
; Line 2257
	lea	r8, QWORD PTR [rax-72]
	xorps	xmm0, xmm0
	mov	QWORD PTR [rax-32], rbx
	xorps	xmm1, xmm1
	mov	DWORD PTR [rax-24], ebx
	movups	XMMWORD PTR [rax-64], xmm0
	mov	rdi, r9
	movdqu	XMMWORD PTR [rax-48], xmm1
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
	mov	edx, eax
; Line 2258
	test	rsi, rsi
	je	SHORT $LN2@stbtt__Get
	test	edx, edx
	mov	eax, ebx
	cmovne	eax, DWORD PTR c$[rsp+24]
	mov	DWORD PTR [rsi], eax
$LN2@stbtt__Get:
; Line 2259
	test	rdi, rdi
	je	SHORT $LN3@stbtt__Get
	test	edx, edx
	mov	eax, ebx
	cmovne	eax, DWORD PTR c$[rsp+32]
	mov	DWORD PTR [rdi], eax
$LN3@stbtt__Get:
; Line 2260
	mov	rcx, QWORD PTR x1$[rsp]
	test	rcx, rcx
	je	SHORT $LN4@stbtt__Get
	test	edx, edx
	mov	eax, ebx
	cmovne	eax, DWORD PTR c$[rsp+28]
	mov	DWORD PTR [rcx], eax
$LN4@stbtt__Get:
; Line 2261
	mov	rax, QWORD PTR y1$[rsp]
	test	rax, rax
	je	SHORT $LN5@stbtt__Get
	test	edx, edx
	mov	ecx, ebx
	cmovne	ecx, DWORD PTR c$[rsp+36]
	mov	DWORD PTR [rax], ecx
$LN5@stbtt__Get:
; Line 2263
	mov	rsi, QWORD PTR [rsp+120]
	test	edx, edx
	cmovne	ebx, DWORD PTR c$[rsp+48]
	mov	eax, ebx
	mov	rbx, QWORD PTR [rsp+112]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?stbtt__GetGlyphInfoT2@@YAHPEBUstbtt_fontinfo@@HPEAH111@Z ENDP ; stbtt__GetGlyphInfoT2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z
_TEXT	SEGMENT
info$ = 48
glyph_index$ = 56
?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z PROC	; stbtt__GetGlyfOffset, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1569
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 1572
	cmp	DWORD PTR [rcx+76], 0
	mov	edi, edx
	mov	rbx, rcx
	je	SHORT $LN2@stbtt__Get
	mov	r8d, 1572				; 00000624H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CA@MDABGEPC@?$AA?$CB?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAc?$AAf?$AAf?$AA?4?$AAs?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN2@stbtt__Get:
; Line 1574
	cmp	edi, DWORD PTR [rbx+20]
	jge	$LN19@stbtt__Get
; Line 1575
	mov	eax, DWORD PTR [rbx+56]
	cmp	eax, 2
	jge	$LN19@stbtt__Get
; Line 1577
	movsxd	rdx, DWORD PTR [rbx+24]
	mov	r8, QWORD PTR [rbx+8]
	test	eax, eax
	jne	SHORT $LN7@stbtt__Get
; Line 1578
	lea	eax, DWORD PTR [rdi+rdi]
	movsxd	rcx, eax
	add	rcx, r8
	mov	r8d, DWORD PTR [rbx+32]
	add	rdx, rcx
	movzx	eax, BYTE PTR [rdx+1]
	movzx	ecx, BYTE PTR [rdx]
; Line 1269
	shl	ecx, 8
; Line 1578
	add	ecx, eax
; Line 1579
	movzx	eax, BYTE PTR [rdx+3]
	lea	r10d, DWORD PTR [r8+rcx*2]
	movzx	ecx, BYTE PTR [rdx+2]
; Line 1269
	shl	ecx, 8
; Line 1579
	add	ecx, eax
; Line 1585
	mov	eax, -1
	lea	r9d, DWORD PTR [r8+rcx*2]
	cmp	r10d, r9d
	cmove	r10d, eax
	mov	eax, r10d
; Line 1586
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@stbtt__Get:
; Line 1581
	lea	eax, DWORD PTR [rdi*4]
	movsxd	r9, eax
	add	r9, r8
	add	r9, rdx
; Line 1271
	movzx	eax, BYTE PTR [r9+1]
	movzx	ecx, BYTE PTR [r9]
	movzx	r10d, BYTE PTR [r9+3]
	movzx	edx, BYTE PTR [r9+4]
	shl	ecx, 8
; Line 1581
	add	ecx, eax
; Line 1271
	shl	edx, 8
	movzx	eax, BYTE PTR [r9+2]
; Line 1581
	shl	ecx, 8
	add	eax, ecx
; Line 1271
	movzx	ecx, BYTE PTR [r9+6]
; Line 1581
	shl	eax, 8
	add	eax, DWORD PTR [rbx+32]
	add	r10d, eax
; Line 1271
	movzx	eax, BYTE PTR [r9+5]
	movzx	r9d, BYTE PTR [r9+7]
; Line 1582
	add	edx, eax
	shl	edx, 8
; Line 1585
	mov	eax, -1
	add	ecx, edx
	shl	ecx, 8
	add	ecx, DWORD PTR [rbx+32]
	add	r9d, ecx
	cmp	r10d, r9d
	cmove	r10d, eax
	mov	eax, r10d
; Line 1586
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN19@stbtt__Get:
	mov	rbx, QWORD PTR [rsp+48]
	mov	eax, -1
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z ENDP	; stbtt__GetGlyfOffset
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt_setvertex@@YAXPEAUstbtt_vertex@@EHHHH@Z
_TEXT	SEGMENT
v$ = 8
type$ = 16
x$ = 24
y$ = 32
cx$ = 40
cy$ = 48
?stbtt_setvertex@@YAXPEAUstbtt_vertex@@EHHHH@Z PROC	; stbtt_setvertex, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1564
	movzx	eax, WORD PTR cx$[rsp]
	mov	WORD PTR [rcx+4], ax
; Line 1565
	movzx	eax, WORD PTR cy$[rsp]
	mov	WORD PTR [rcx+6], ax
	mov	BYTE PTR [rcx+12], dl
	mov	WORD PTR [rcx], r8w
	mov	WORD PTR [rcx+2], r9w
; Line 1566
	ret	0
?stbtt_setvertex@@YAXPEAUstbtt_vertex@@EHHHH@Z ENDP	; stbtt_setvertex
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z
_TEXT	SEGMENT
b$1 = 32
$T2 = 48
$T3 = 48
$T4 = 48
topdict$5 = 48
$T6 = 48
$T7 = 48
$T8 = 48
$T9 = 48
$T10 = 64
operands$11 = 64
$T12 = 64
operands$13 = 64
$T14 = 64
operands$15 = 64
$T16 = 64
operands$17 = 64
$T18 = 64
$T19 = 64
$T20 = 64
$T21 = 64
$T22 = 64
$T23 = 64
$T24 = 80
$T25 = 80
$T26 = 80
cstype$1$ = 160
tv1249 = 160
info$ = 160
tv1250 = 168
data$ = 168
fontstart$ = 176
?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z PROC ; stbtt_InitFont_internal, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1351
	mov	QWORD PTR [rsp+32], rbx
	mov	DWORD PTR [rsp+24], r8d
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 96					; 00000060H
	mov	r14, rdx
; Line 1355
	mov	QWORD PTR [rcx+8], rdx
; Line 1356
	mov	DWORD PTR [rcx+16], r8d
; Line 1155
	xor	ebx, ebx
; Line 1351
	mov	r13d, r8d
; Line 1155
	mov	QWORD PTR $T9[rbp-96], rbx
; Line 1351
	mov	rdi, rcx
; Line 1157
	mov	QWORD PTR $T9[rbp-88], rbx
; Line 1357
	movups	xmm0, XMMWORD PTR $T9[rbp-96]
; Line 1359
	lea	r8, OFFSET FLAT:??_C@_04EICJPCEA@cmap@
	mov	edx, r13d
	movups	XMMWORD PTR [rcx+64], xmm0
	mov	rcx, r14
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
; Line 1360
	mov	edx, r13d
	mov	esi, eax
	mov	rcx, r14
	lea	r8, OFFSET FLAT:??_C@_04DACNFKGE@loca@
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
; Line 1361
	mov	edx, r13d
	mov	DWORD PTR [rdi+24], eax
	mov	rcx, r14
	lea	r8, OFFSET FLAT:??_C@_04NEODDMOL@head@
	mov	r12d, eax
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
; Line 1362
	mov	edx, r13d
	mov	DWORD PTR [rdi+28], eax
	mov	rcx, r14
	lea	r8, OFFSET FLAT:??_C@_04LLIHEPK@glyf@
	mov	r15d, eax
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
; Line 1363
	mov	edx, r13d
	mov	DWORD PTR tv1250[rbp-96], eax
	mov	rcx, r14
	mov	DWORD PTR [rdi+32], eax
	lea	r8, OFFSET FLAT:??_C@_04FMPHLIKP@hhea@
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
; Line 1364
	mov	edx, DWORD PTR fontstart$[rbp-96]
	lea	r8, OFFSET FLAT:??_C@_04ONMNCIMC@hmtx@
	mov	rcx, r14
	mov	DWORD PTR [rdi+36], eax
	mov	r13d, eax
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
; Line 1365
	mov	edx, DWORD PTR fontstart$[rbp-96]
	lea	r8, OFFSET FLAT:??_C@_04HHMMLDJI@kern@
	mov	rcx, r14
	mov	DWORD PTR tv1249[rbp-96], eax
	mov	DWORD PTR [rdi+40], eax
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
; Line 1366
	mov	edx, DWORD PTR fontstart$[rbp-96]
	lea	r8, OFFSET FLAT:??_C@_04PCFDEHHD@GPOS@
	mov	rcx, r14
	mov	DWORD PTR [rdi+44], eax
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
	mov	DWORD PTR [rdi+48], eax
; Line 1368
	test	esi, esi
	je	SHORT $LN10@stbtt_Init
	test	r15d, r15d
	je	SHORT $LN10@stbtt_Init
	test	r13d, r13d
	je	SHORT $LN10@stbtt_Init
	cmp	DWORD PTR tv1249[rbp-96], ebx
	je	SHORT $LN10@stbtt_Init
; Line 1370
	cmp	DWORD PTR tv1250[rbp-96], ebx
	je	SHORT $LN11@stbtt_Init
; Line 1372
	test	r12d, r12d
	jne	$LN12@stbtt_Init
$LN10@stbtt_Init:
; Line 1369
	xor	eax, eax
$LN1@stbtt_Init:
; Line 1459
	mov	rbx, QWORD PTR [rsp+184]
	add	rsp, 96					; 00000060H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN11@stbtt_Init:
; Line 1379
	mov	edx, DWORD PTR fontstart$[rbp-96]
	lea	r8, OFFSET FLAT:??_C@_04HJGCPIEK@CFF?5@
	mov	rcx, r14
	mov	DWORD PTR cstype$1$[rbp-96], 2
	mov	r15d, ebx
	mov	r12d, ebx
	mov	r13d, ebx
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
; Line 1380
	test	eax, eax
	je	SHORT $LN10@stbtt_Init
; Line 1155
	mov	QWORD PTR $T8[rbp-96], rbx
; Line 1157
	mov	QWORD PTR $T8[rbp-88], rbx
; Line 1382
	movups	xmm0, XMMWORD PTR $T8[rbp-96]
; Line 1157
	mov	QWORD PTR $T7[rbp-88], rbx
	mov	QWORD PTR $T7[rbp-96], rbx
; Line 1382
	movups	XMMWORD PTR [rdi+128], xmm0
; Line 1386
	mov	eax, eax
	movups	xmm0, XMMWORD PTR $T7[rbp-96]
	add	rax, r14
; Line 1156
	mov	DWORD PTR $T6[rbp-84], 536870912	; 20000000H
	mov	QWORD PTR $T6[rbp-96], rax
; Line 1383
	movups	XMMWORD PTR [rdi+144], xmm0
; Line 1157
	mov	DWORD PTR $T6[rbp-88], ebx
; Line 1386
	movaps	xmm0, XMMWORD PTR $T6[rbp-96]
	movups	XMMWORD PTR [rdi+64], xmm0
; Line 1387
	movdqa	XMMWORD PTR b$1[rbp-96], xmm0
; Line 1132
	psrldq	xmm0, 8
	movq	rax, xmm0
	shr	rax, 32					; 00000020H
	cmp	eax, 2
	jge	SHORT $LN156@stbtt_Init
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
$LN156@stbtt_Init:
; Line 1118
	mov	ecx, DWORD PTR b$1[rbp-84]
	cmp	ecx, 2
	jg	SHORT $LN62@stbtt_Init
; Line 1119
	xor	al, al
	jmp	SHORT $LN61@stbtt_Init
$LN62@stbtt_Init:
; Line 1120
	mov	rax, QWORD PTR b$1[rbp-96]
	movzx	eax, BYTE PTR [rax+2]
$LN61@stbtt_Init:
; Line 1391
	movzx	eax, al
; Line 1132
	cmp	eax, ecx
	jle	SHORT $LN157@stbtt_Init
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
; Line 1133
	mov	eax, DWORD PTR b$1[rbp-84]
$LN157@stbtt_Init:
; Line 1395
	lea	rdx, QWORD PTR b$1[rbp-96]
	mov	DWORD PTR b$1[rbp-88], eax
	lea	rcx, QWORD PTR $T23[rbp-96]
	call	?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z ; stbtt__cff_get_index
; Line 1396
	lea	rdx, QWORD PTR b$1[rbp-96]
	lea	rcx, QWORD PTR $T22[rbp-96]
	call	?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z ; stbtt__cff_get_index
; Line 1397
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T3[rbp-96]
	lea	rcx, QWORD PTR $T21[rbp-96]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T3[rbp-96], xmm0
	call	?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z ; stbtt__cff_index_get
; Line 1398
	lea	rdx, QWORD PTR b$1[rbp-96]
	lea	rcx, QWORD PTR $T20[rbp-96]
	movups	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR topdict$5[rbp-96], xmm0
	call	?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z ; stbtt__cff_get_index
; Line 1399
	lea	rdx, QWORD PTR b$1[rbp-96]
	lea	rcx, QWORD PTR $T19[rbp-96]
	call	?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z ; stbtt__cff_get_index
; Line 1232
	mov	r8d, 17
	lea	rdx, QWORD PTR topdict$5[rbp-96]
	lea	rcx, QWORD PTR $T16[rbp-96]
; Line 1399
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rdi+96], xmm0
; Line 1232
	call	?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z ; stbtt__dict_get
	movups	xmm1, XMMWORD PTR [rax]
; Line 1233
	movdqa	xmm0, xmm1
	movups	XMMWORD PTR operands$17[rbp-96], xmm1
	psrldq	xmm0, 8
	psrldq	xmm1, 12
	movd	ecx, xmm0
	movd	eax, xmm1
	cmp	ecx, eax
	jge	SHORT $LN75@stbtt_Init
; Line 1234
	lea	rcx, QWORD PTR operands$17[rbp-96]
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
	mov	r15d, eax
$LN75@stbtt_Init:
; Line 1232
	mov	r8d, 262				; 00000106H
	lea	rdx, QWORD PTR topdict$5[rbp-96]
	lea	rcx, QWORD PTR $T14[rbp-96]
	call	?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z ; stbtt__dict_get
	movups	xmm1, XMMWORD PTR [rax]
; Line 1233
	movdqa	xmm0, xmm1
	movups	XMMWORD PTR operands$15[rbp-96], xmm1
	psrldq	xmm0, 8
	psrldq	xmm1, 12
	movd	ecx, xmm0
	movd	eax, xmm1
	cmp	ecx, eax
	jge	SHORT $LN80@stbtt_Init
; Line 1234
	lea	rcx, QWORD PTR operands$15[rbp-96]
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
	mov	DWORD PTR cstype$1$[rbp-96], eax
$LN80@stbtt_Init:
; Line 1232
	mov	r8d, 292				; 00000124H
	lea	rdx, QWORD PTR topdict$5[rbp-96]
	lea	rcx, QWORD PTR $T12[rbp-96]
	call	?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z ; stbtt__dict_get
	movups	xmm1, XMMWORD PTR [rax]
; Line 1233
	movdqa	xmm0, xmm1
	movups	XMMWORD PTR operands$13[rbp-96], xmm1
	psrldq	xmm0, 8
	psrldq	xmm1, 12
	movd	ecx, xmm0
	movd	eax, xmm1
	cmp	ecx, eax
	jge	SHORT $LN85@stbtt_Init
; Line 1234
	lea	rcx, QWORD PTR operands$13[rbp-96]
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
	mov	r12d, eax
$LN85@stbtt_Init:
; Line 1232
	mov	r8d, 293				; 00000125H
	lea	rdx, QWORD PTR topdict$5[rbp-96]
	lea	rcx, QWORD PTR $T10[rbp-96]
	call	?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z ; stbtt__dict_get
	movups	xmm1, XMMWORD PTR [rax]
; Line 1233
	movdqa	xmm0, xmm1
	movups	XMMWORD PTR operands$11[rbp-96], xmm1
	psrldq	xmm0, 8
	psrldq	xmm1, 12
	movd	ecx, xmm0
	movd	eax, xmm1
	cmp	ecx, eax
	jge	SHORT $LN90@stbtt_Init
; Line 1234
	lea	rcx, QWORD PTR operands$11[rbp-96]
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
	mov	r13d, eax
$LN90@stbtt_Init:
; Line 1405
	movaps	xmm0, XMMWORD PTR topdict$5[rbp-96]
	lea	r8, QWORD PTR $T18[rbp-96]
	movaps	xmm1, XMMWORD PTR b$1[rbp-96]
	lea	rdx, QWORD PTR $T2[rbp-96]
	lea	rcx, QWORD PTR $T26[rbp-96]
	movdqa	XMMWORD PTR $T18[rbp-96], xmm0
	movdqa	XMMWORD PTR $T2[rbp-96], xmm1
	call	?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z ; stbtt__get_subrs
; Line 1408
	cmp	DWORD PTR cstype$1$[rbp-96], 2
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rdi+112], xmm0
	jne	$LN10@stbtt_Init
; Line 1409
	test	r15d, r15d
	je	$LN10@stbtt_Init
; Line 1411
	test	r12d, r12d
	je	$LN159@stbtt_Init
; Line 1413
	test	r13d, r13d
	je	$LN10@stbtt_Init
; Line 1132
	mov	eax, DWORD PTR b$1[rbp-84]
	cmp	r12d, eax
	jg	SHORT $LN98@stbtt_Init
	test	r12d, r12d
	jns	SHORT $LN94@stbtt_Init
$LN98@stbtt_Init:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR b$1[rbp-84]
$LN94@stbtt_Init:
; Line 1133
	cmp	r12d, eax
	jg	SHORT $LN100@stbtt_Init
	mov	DWORD PTR b$1[rbp-88], r12d
	test	r12d, r12d
	jns	SHORT $LN101@stbtt_Init
$LN100@stbtt_Init:
	mov	DWORD PTR b$1[rbp-88], eax
$LN101@stbtt_Init:
; Line 1415
	lea	rdx, QWORD PTR b$1[rbp-96]
	lea	rcx, QWORD PTR $T25[rbp-96]
	call	?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z ; stbtt__cff_get_index
; Line 1416
	mov	r12d, DWORD PTR b$1[rbp-84]
	mov	ecx, r12d
	sub	ecx, r13d
; Line 1166
	mov	QWORD PTR $T4[rbp-96], rbx
	mov	QWORD PTR $T4[rbp-88], rbx
; Line 1415
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rdi+128], xmm0
; Line 1167
	test	r13d, r13d
	js	SHORT $LN104@stbtt_Init
	test	ecx, ecx
	js	SHORT $LN104@stbtt_Init
	cmp	r13d, r12d
	jg	SHORT $LN104@stbtt_Init
; Line 1168
	movsxd	rax, r13d
	add	rax, QWORD PTR b$1[rbp-96]
	mov	QWORD PTR $T4[rbp-96], rax
; Line 1169
	mov	DWORD PTR $T4[rbp-84], ecx
$LN104@stbtt_Init:
; Line 1416
	movups	xmm0, XMMWORD PTR $T4[rbp-96]
	movups	XMMWORD PTR [rdi+144], xmm0
	jmp	SHORT $LN17@stbtt_Init
$LN159@stbtt_Init:
; Line 1411
	mov	r12d, DWORD PTR b$1[rbp-84]
$LN17@stbtt_Init:
; Line 1132
	cmp	r15d, r12d
	jg	SHORT $LN117@stbtt_Init
	test	r15d, r15d
	jns	SHORT $LN113@stbtt_Init
$LN117@stbtt_Init:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
$LN113@stbtt_Init:
; Line 1133
	cmp	r15d, r12d
	jg	SHORT $LN119@stbtt_Init
	mov	DWORD PTR b$1[rbp-88], r15d
	test	r15d, r15d
	jns	SHORT $LN120@stbtt_Init
$LN119@stbtt_Init:
	mov	DWORD PTR b$1[rbp-88], r12d
$LN120@stbtt_Init:
; Line 1420
	lea	rdx, QWORD PTR b$1[rbp-96]
	lea	rcx, QWORD PTR $T24[rbp-96]
	call	?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z ; stbtt__cff_get_index
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rdi+80], xmm0
$LN12@stbtt_Init:
; Line 1423
	mov	edx, DWORD PTR fontstart$[rbp-96]
	lea	r8, OFFSET FLAT:??_C@_04KODIGLGG@maxp@
	mov	rcx, r14
	call	?stbtt__find_table@@YAIPEAEIPEBD@Z	; stbtt__find_table
; Line 1424
	test	eax, eax
	je	SHORT $LN19@stbtt_Init
; Line 1425
	mov	eax, eax
	movzx	ecx, BYTE PTR [rax+r14+4]
	movzx	eax, BYTE PTR [rax+r14+5]
	shl	ecx, 8
	add	ecx, eax
	jmp	SHORT $LN20@stbtt_Init
$LN19@stbtt_Init:
; Line 1427
	mov	ecx, 65535				; 0000ffffH
$LN20@stbtt_Init:
; Line 1432
	mov	DWORD PTR [rdi+20], ecx
	movzx	r9d, BYTE PTR [rsi+r14+2]
	movzx	eax, BYTE PTR [rsi+r14+3]
	shl	r9d, 8
; Line 1433
	mov	DWORD PTR [rdi+52], ebx
	add	r9d, eax
; Line 1434
	je	$LN10@stbtt_Init
	npad	10
$LL4@stbtt_Init:
; Line 1435
	lea	eax, DWORD PTR [rsi+4]
	lea	eax, DWORD PTR [rax+rbx*8]
; Line 1437
	movzx	r8d, BYTE PTR [rax+r14]
	mov	ecx, eax
	movzx	eax, BYTE PTR [rax+r14+1]
	shl	r8d, 8
	add	r8d, eax
	je	SHORT $LN23@stbtt_Init
	cmp	r8d, 3
	jne	SHORT $LN2@stbtt_Init
; Line 1439
	movzx	eax, BYTE PTR [rcx+r14+2]
	movzx	edx, BYTE PTR [rcx+r14+3]
	shl	eax, 8
	add	edx, eax
	sub	edx, 1
	je	SHORT $LN23@stbtt_Init
	cmp	edx, 9
	jne	SHORT $LN2@stbtt_Init
$LN23@stbtt_Init:
; Line 1434
	movzx	eax, BYTE PTR [rcx+r14+4]
	movzx	r8d, BYTE PTR [rcx+r14+5]
	movzx	edx, BYTE PTR [rcx+r14+7]
	shl	eax, 8
	add	r8d, eax
	movzx	eax, BYTE PTR [rcx+r14+6]
	shl	r8d, 8
	add	eax, r8d
	shl	eax, 8
	add	eax, esi
	add	edx, eax
	mov	DWORD PTR [rdi+52], edx
$LN2@stbtt_Init:
	inc	ebx
	cmp	ebx, r9d
	jl	SHORT $LL4@stbtt_Init
; Line 1454
	cmp	DWORD PTR [rdi+52], 0
	je	$LN10@stbtt_Init
; Line 1457
	movsxd	rax, DWORD PTR [rdi+28]
	movzx	ecx, BYTE PTR [rax+r14+50]
	movzx	edx, BYTE PTR [rax+r14+51]
; Line 1458
	mov	eax, 1
	shl	ecx, 8
	add	edx, ecx
	mov	DWORD PTR [rdi+56], edx
	jmp	$LN1@stbtt_Init
?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z ENDP ; stbtt_InitFont_internal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z
_TEXT	SEGMENT
operands$1 = 32
$T2 = 32
operands$3 = 32
$T4 = 32
pdict$ = 32
$T5 = 48
private_loc$ = 96
$T6 = 96
cff$ = 104
fontdict$ = 112
?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z PROC		; stbtt__get_subrs, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1338
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 64					; 00000040H
; Line 1339
	xor	r14d, r14d
	mov	rax, r8
	mov	rsi, rdx
	mov	QWORD PTR private_loc$[rsp], r14
	mov	rdi, rcx
; Line 1232
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
; Line 1339
	mov	ebp, r14d
; Line 1232
	lea	r8d, QWORD PTR [r14+18]
	call	?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z ; stbtt__dict_get
	mov	ebx, r14d
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR operands$3[rsp], xmm0
$LL9@stbtt__get:
; Line 1233
	mov	eax, DWORD PTR operands$3[rsp+12]
	cmp	DWORD PTR operands$3[rsp+8], eax
	jge	SHORT $LN8@stbtt__get
; Line 1234
	lea	rcx, QWORD PTR operands$3[rsp]
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
	mov	DWORD PTR private_loc$[rsp+rbx*4], eax
	inc	rbx
	cmp	rbx, 2
	jl	SHORT $LL9@stbtt__get
$LN8@stbtt__get:
; Line 1342
	movsxd	rbx, DWORD PTR private_loc$[rsp+4]
	test	ebx, ebx
	je	$LN14@stbtt__get
	mov	ecx, DWORD PTR private_loc$[rsp]
	test	ecx, ecx
	je	$LN14@stbtt__get
; Line 1166
	mov	QWORD PTR $T4[rsp], r14
	mov	QWORD PTR $T4[rsp+8], r14
; Line 1167
	test	ebx, ebx
	js	SHORT $LN19@stbtt__get
	test	ecx, ecx
	js	SHORT $LN19@stbtt__get
	mov	eax, DWORD PTR [rsi+12]
	cmp	ebx, eax
	jg	SHORT $LN19@stbtt__get
	sub	eax, ebx
	cmp	ecx, eax
	jg	SHORT $LN19@stbtt__get
; Line 1168
	mov	rax, rbx
; Line 1169
	mov	DWORD PTR $T4[rsp+12], ecx
	add	rax, QWORD PTR [rsi]
	mov	QWORD PTR $T4[rsp], rax
$LN19@stbtt__get:
; Line 1343
	movaps	xmm0, XMMWORD PTR $T4[rsp]
; Line 1232
	lea	rdx, QWORD PTR pdict$[rsp]
	mov	r8d, 19
; Line 1343
	movdqa	XMMWORD PTR pdict$[rsp], xmm0
; Line 1232
	lea	rcx, QWORD PTR $T5[rsp]
	call	?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z ; stbtt__dict_get
	movups	xmm1, XMMWORD PTR [rax]
; Line 1233
	movdqa	xmm0, xmm1
	movups	XMMWORD PTR operands$1[rsp], xmm1
	psrldq	xmm0, 8
	psrldq	xmm1, 12
	movd	ecx, xmm0
	movd	eax, xmm1
	cmp	ecx, eax
	jge	SHORT $LN29@stbtt__get
; Line 1234
	lea	rcx, QWORD PTR operands$1[rsp]
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
	mov	ebp, eax
$LN29@stbtt__get:
; Line 1345
	test	ebp, ebp
	je	SHORT $LN14@stbtt__get
; Line 1346
	lea	edx, DWORD PTR [rbx+rbp]
	mov	rcx, rsi
	call	?stbtt__buf_seek@@YAXPEAUstbtt__buf@@H@Z ; stbtt__buf_seek
; Line 1347
	mov	rdx, rsi
	mov	rcx, rdi
	call	?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z ; stbtt__cff_get_index
	jmp	SHORT $LN46@stbtt__get
$LN14@stbtt__get:
; Line 1348
	mov	QWORD PTR [rdi+8], r14
	mov	QWORD PTR [rdi], r14
$LN46@stbtt__get:
	mov	rbx, QWORD PTR [rsp+104]
	mov	rax, rdi
	mov	rbp, QWORD PTR [rsp+112]
	add	rsp, 64					; 00000040H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z ENDP		; stbtt__get_subrs
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt_GetFontOffsetForIndex_internal@@YAHPEAEH@Z
_TEXT	SEGMENT
font_collection$ = 48
index$ = 56
?stbtt_GetFontOffsetForIndex_internal@@YAHPEAEH@Z PROC	; stbtt_GetFontOffsetForIndex_internal, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1303
	sub	rsp, 40					; 00000028H
	mov	r8, rcx
; Line 1305
	call	?stbtt__isfont@@YAHPEAE@Z		; stbtt__isfont
	test	eax, eax
	je	SHORT $LN2@stbtt_GetF
; Line 1306
	neg	edx
	sbb	eax, eax
; Line 1319
	add	rsp, 40					; 00000028H
	ret	0
$LN2@stbtt_GetF:
; Line 1309
	cmp	BYTE PTR [rcx], 116			; 00000074H
	jne	$LN4@stbtt_GetF
	cmp	BYTE PTR [rcx+1], 116			; 00000074H
	jne	$LN4@stbtt_GetF
	cmp	BYTE PTR [rcx+2], 99			; 00000063H
	jne	$LN4@stbtt_GetF
	cmp	BYTE PTR [rcx+3], 102			; 00000066H
	jne	$LN4@stbtt_GetF
; Line 1271
	movzx	ecx, BYTE PTR [rcx+5]
	movzx	eax, BYTE PTR [r8+6]
	shl	eax, 8
	shl	ecx, 16
	add	ecx, eax
	movzx	eax, BYTE PTR [r8+4]
	shl	eax, 24
	add	ecx, eax
	movzx	eax, BYTE PTR [r8+7]
	add	eax, -65536				; ffff0000H
	add	ecx, eax
; Line 1311
	test	ecx, -65537				; fffeffffH
	jne	SHORT $LN4@stbtt_GetF
; Line 1272
	movzx	eax, BYTE PTR [r8+9]
	movzx	ecx, BYTE PTR [r8+8]
	shl	ecx, 8
	add	ecx, eax
	movzx	eax, BYTE PTR [r8+10]
	shl	ecx, 8
	add	ecx, eax
	movzx	eax, BYTE PTR [r8+11]
	shl	ecx, 8
	add	ecx, eax
; Line 1313
	cmp	edx, ecx
	jge	SHORT $LN4@stbtt_GetF
; Line 1315
	lea	eax, DWORD PTR [rdx*4]
	movsxd	rdx, eax
	add	rdx, r8
; Line 1271
	movzx	ecx, BYTE PTR [rdx+13]
	movzx	eax, BYTE PTR [rdx+12]
	shl	eax, 8
	add	eax, ecx
	movzx	ecx, BYTE PTR [rdx+14]
	shl	eax, 8
	add	eax, ecx
	movzx	ecx, BYTE PTR [rdx+15]
	shl	eax, 8
	add	eax, ecx
; Line 1319
	add	rsp, 40					; 00000028H
	ret	0
$LN4@stbtt_GetF:
; Line 1318
	mov	eax, -1
; Line 1319
	add	rsp, 40					; 00000028H
	ret	0
?stbtt_GetFontOffsetForIndex_internal@@YAHPEAEH@Z ENDP	; stbtt_GetFontOffsetForIndex_internal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__find_table@@YAIPEAEIPEBD@Z
_TEXT	SEGMENT
data$ = 8
fontstart$ = 16
tag$ = 24
?stbtt__find_table@@YAIPEAEIPEBD@Z PROC			; stbtt__find_table, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1290
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rdi
; Line 1291
	mov	eax, edx
; Line 1292
	lea	edi, DWORD PTR [rdx+12]
; Line 1294
	xor	edx, edx
	mov	r11, rcx
	movzx	r10d, BYTE PTR [rax+rcx+4]
	movzx	eax, BYTE PTR [rax+rcx+5]
	shl	r10d, 8
	add	r10d, eax
	je	SHORT $LN16@stbtt__fin
	movsx	ebx, BYTE PTR [r8]
	npad	4
$LL4@stbtt__fin:
; Line 1295
	mov	eax, edx
	shl	eax, 4
	add	eax, edi
; Line 1296
	mov	r9d, eax
	movzx	eax, BYTE PTR [rax+r11]
	cmp	eax, ebx
	jne	SHORT $LN2@stbtt__fin
	movzx	ecx, BYTE PTR [r9+r11+1]
	movsx	eax, BYTE PTR [r8+1]
	cmp	ecx, eax
	jne	SHORT $LN2@stbtt__fin
	movzx	ecx, BYTE PTR [r9+r11+2]
	movsx	eax, BYTE PTR [r8+2]
	cmp	ecx, eax
	jne	SHORT $LN2@stbtt__fin
	movzx	ecx, BYTE PTR [r9+r11+3]
	movsx	eax, BYTE PTR [r8+3]
	cmp	ecx, eax
	je	SHORT $LN12@stbtt__fin
$LN2@stbtt__fin:
; Line 1294
	inc	edx
	cmp	edx, r10d
	jl	SHORT $LL4@stbtt__fin
$LN16@stbtt__fin:
; Line 1299
	xor	eax, eax
; Line 1300
	mov	rbx, QWORD PTR [rsp+8]
	mov	rdi, QWORD PTR [rsp+16]
	ret	0
$LN12@stbtt__fin:
; Line 1271
	movzx	ecx, BYTE PTR [r9+r11+9]
	movzx	eax, BYTE PTR [r9+r11+8]
; Line 1300
	mov	rbx, QWORD PTR [rsp+8]
	mov	rdi, QWORD PTR [rsp+16]
; Line 1271
	shl	eax, 8
	add	eax, ecx
	movzx	ecx, BYTE PTR [r9+r11+10]
	shl	eax, 8
	add	eax, ecx
	movzx	ecx, BYTE PTR [r9+r11+11]
	shl	eax, 8
	add	eax, ecx
; Line 1300
	ret	0
?stbtt__find_table@@YAIPEAEIPEBD@Z ENDP			; stbtt__find_table
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__isfont@@YAHPEAE@Z
_TEXT	SEGMENT
font$ = 8
?stbtt__isfont@@YAHPEAE@Z PROC				; stbtt__isfont, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1280
	movzx	eax, BYTE PTR [rcx]
	cmp	al, 49					; 00000031H
	jne	SHORT $LN2@stbtt__isf
	cmp	BYTE PTR [rcx+1], 0
	jne	SHORT $LN2@stbtt__isf
	cmp	BYTE PTR [rcx+2], 0
	jne	SHORT $LN2@stbtt__isf
	cmp	BYTE PTR [rcx+3], 0
	je	SHORT $LN8@stbtt__isf
$LN2@stbtt__isf:
; Line 1281
	cmp	al, 116					; 00000074H
	jne	SHORT $LN3@stbtt__isf
	cmp	BYTE PTR [rcx+1], 121			; 00000079H
	jne	SHORT $LN3@stbtt__isf
	cmp	BYTE PTR [rcx+2], 112			; 00000070H
	jne	SHORT $LN3@stbtt__isf
	cmp	BYTE PTR [rcx+3], 49			; 00000031H
	je	SHORT $LN8@stbtt__isf
$LN3@stbtt__isf:
; Line 1282
	cmp	al, 79					; 0000004fH
	jne	SHORT $LN4@stbtt__isf
	cmp	BYTE PTR [rcx+1], 84			; 00000054H
	jne	SHORT $LN6@stbtt__isf
	cmp	BYTE PTR [rcx+2], 84			; 00000054H
	jne	SHORT $LN6@stbtt__isf
	cmp	BYTE PTR [rcx+3], al
	jmp	SHORT $LN9@stbtt__isf
$LN4@stbtt__isf:
; Line 1283
	test	al, al
	jne	SHORT $LN5@stbtt__isf
	cmp	BYTE PTR [rcx+1], 1
	jne	SHORT $LN6@stbtt__isf
	cmp	BYTE PTR [rcx+2], al
	jne	SHORT $LN6@stbtt__isf
	cmp	BYTE PTR [rcx+3], al
	jmp	SHORT $LN9@stbtt__isf
$LN5@stbtt__isf:
; Line 1284
	cmp	al, 116					; 00000074H
	jne	SHORT $LN6@stbtt__isf
	cmp	BYTE PTR [rcx+1], 114			; 00000072H
	jne	SHORT $LN6@stbtt__isf
	cmp	BYTE PTR [rcx+2], 117			; 00000075H
	jne	SHORT $LN6@stbtt__isf
	cmp	BYTE PTR [rcx+3], 101			; 00000065H
$LN9@stbtt__isf:
	jne	SHORT $LN6@stbtt__isf
$LN8@stbtt__isf:
	mov	eax, 1
; Line 1286
	ret	0
$LN6@stbtt__isf:
; Line 1285
	xor	eax, eax
; Line 1286
	ret	0
?stbtt__isfont@@YAHPEAE@Z ENDP				; stbtt__isfont
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ttLONG@@YAHPEAE@Z
_TEXT	SEGMENT
p$ = 8
?ttLONG@@YAHPEAE@Z PROC					; ttLONG, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1272
	movzx	edx, BYTE PTR [rcx+1]
	movzx	eax, BYTE PTR [rcx]
	shl	eax, 8
	add	eax, edx
	movzx	edx, BYTE PTR [rcx+2]
	movzx	ecx, BYTE PTR [rcx+3]
	shl	eax, 8
	add	eax, edx
	shl	eax, 8
	add	eax, ecx
	ret	0
?ttLONG@@YAHPEAE@Z ENDP					; ttLONG
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ttULONG@@YAIPEAE@Z
_TEXT	SEGMENT
p$ = 8
?ttULONG@@YAIPEAE@Z PROC				; ttULONG, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1271
	movzx	edx, BYTE PTR [rcx+1]
	movzx	eax, BYTE PTR [rcx]
	shl	eax, 8
	add	eax, edx
	movzx	edx, BYTE PTR [rcx+2]
	movzx	ecx, BYTE PTR [rcx+3]
	shl	eax, 8
	add	eax, edx
	shl	eax, 8
	add	eax, ecx
	ret	0
?ttULONG@@YAIPEAE@Z ENDP				; ttULONG
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ttSHORT@@YAFPEAE@Z
_TEXT	SEGMENT
p$ = 8
?ttSHORT@@YAFPEAE@Z PROC				; ttSHORT, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1270
	movzx	eax, BYTE PTR [rcx]
	mov	edx, 256				; 00000100H
	movzx	ecx, BYTE PTR [rcx+1]
	movsx	edx, dx
	imul	eax, edx
	add	ax, cx
	ret	0
?ttSHORT@@YAFPEAE@Z ENDP				; ttSHORT
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ttUSHORT@@YAGPEAE@Z
_TEXT	SEGMENT
p$ = 8
?ttUSHORT@@YAGPEAE@Z PROC				; ttUSHORT, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1269
	movzx	eax, BYTE PTR [rcx]
	mov	edx, 256				; 00000100H
	movzx	ecx, BYTE PTR [rcx+1]
	imul	eax, edx
	add	ax, cx
	ret	0
?ttUSHORT@@YAGPEAE@Z ENDP				; ttUSHORT
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 96
b$ = 104
i$ = 112
?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z PROC	; stbtt__cff_index_get, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1244
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
; Line 1132
	movsxd	rbp, DWORD PTR [rdx+12]
; Line 1244
	mov	r12d, r8d
	mov	r14, rdx
	mov	rsi, rcx
; Line 1132
	test	ebp, ebp
	jns	SHORT $LN14@stbtt__cff
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
$LN14@stbtt__cff:
; Line 1133
	xor	edi, edi
	test	ebp, ebp
	cmovs	edi, ebp
	movsxd	rcx, edi
; Line 1118
	cmp	rcx, rbp
	jl	SHORT $LN33@stbtt__cff
; Line 1119
	xor	al, al
	jmp	SHORT $LN32@stbtt__cff
$LN33@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [r14]
	inc	edi
	movzx	eax, BYTE PTR [rcx+rax]
	inc	rcx
$LN32@stbtt__cff:
; Line 1147
	movzx	r15d, al
; Line 1118
	cmp	rcx, rbp
	jl	SHORT $LN62@stbtt__cff
; Line 1119
	xor	al, al
	jmp	SHORT $LN63@stbtt__cff
$LN62@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [r14]
	inc	edi
	movzx	eax, BYTE PTR [rcx+rax]
$LN63@stbtt__cff:
; Line 1147
	shl	r15d, 8
	movzx	eax, al
	or	r15d, eax
; Line 1118
	cmp	edi, ebp
	jl	SHORT $LN36@stbtt__cff
; Line 1119
	xor	al, al
	jmp	SHORT $LN35@stbtt__cff
$LN36@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [r14]
	movsxd	rcx, edi
	inc	edi
	movzx	eax, BYTE PTR [rcx+rax]
$LN35@stbtt__cff:
; Line 1248
	movzx	r13d, al
; Line 1249
	test	r12d, r12d
	js	SHORT $LN9@stbtt__cff
	cmp	r12d, r15d
	jl	SHORT $LN2@stbtt__cff
$LN9@stbtt__cff:
	mov	r8d, 1249				; 000004e1H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CI@PFMEGAIA@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAc@
	call	QWORD PTR __imp__wassert
$LN2@stbtt__cff:
; Line 1250
	lea	eax, DWORD PTR [r13-1]
	cmp	eax, 3
	jbe	SHORT $LN5@stbtt__cff
	mov	r8d, 1250				; 000004e2H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DK@IJDIOPHB@?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG@
	call	QWORD PTR __imp__wassert
$LN5@stbtt__cff:
; Line 1251
	mov	ebx, r13d
	imul	ebx, r12d
; Line 1138
	add	ebx, edi
; Line 1132
	cmp	ebx, ebp
	jg	SHORT $LN45@stbtt__cff
	test	ebx, ebx
	jns	SHORT $LN41@stbtt__cff
$LN45@stbtt__cff:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
$LN41@stbtt__cff:
; Line 1133
	cmp	ebx, ebp
	jg	SHORT $LN47@stbtt__cff
	test	ebx, ebx
	jns	SHORT $LN48@stbtt__cff
$LN47@stbtt__cff:
	mov	ebx, ebp
$LN48@stbtt__cff:
; Line 1252
	mov	edx, r13d
; Line 1133
	mov	DWORD PTR [r14+8], ebx
; Line 1252
	mov	rcx, r14
	call	?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z	; stbtt__buf_get
; Line 1253
	mov	edx, r13d
	mov	rcx, r14
	mov	ebx, eax
	call	?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z	; stbtt__buf_get
	mov	edx, eax
; Line 1254
	lea	ecx, DWORD PTR [r15+1]
; Line 1155
	xor	eax, eax
; Line 1254
	imul	ecx, r13d
; Line 1155
	mov	QWORD PTR $T1[rsp], rax
; Line 1254
	lea	r8d, DWORD PTR [rbx+2]
; Line 1157
	mov	QWORD PTR $T1[rsp+8], rax
; Line 1254
	sub	edx, ebx
; Line 1166
	movups	xmm0, XMMWORD PTR $T1[rsp]
; Line 1254
	add	r8d, ecx
; Line 1166
	movups	XMMWORD PTR [rsi], xmm0
; Line 1167
	js	SHORT $LN51@stbtt__cff
	test	edx, edx
	js	SHORT $LN51@stbtt__cff
	mov	eax, DWORD PTR [r14+12]
	cmp	r8d, eax
	jg	SHORT $LN51@stbtt__cff
	sub	eax, r8d
	cmp	edx, eax
	jg	SHORT $LN51@stbtt__cff
; Line 1168
	movsxd	rax, r8d
	add	rax, QWORD PTR [r14]
	mov	QWORD PTR [rsi], rax
; Line 1169
	mov	DWORD PTR [rsi+12], edx
; Line 1170
	jmp	SHORT $LN67@stbtt__cff
$LN51@stbtt__cff:
; Line 1167
	movups	XMMWORD PTR [rsi], xmm0
$LN67@stbtt__cff:
; Line 1255
	mov	rbx, QWORD PTR [rsp+96]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+112]
	mov	rbp, QWORD PTR [rsp+104]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z ENDP	; stbtt__cff_index_get
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__cff_index_count@@YAHPEAUstbtt__buf@@@Z
_TEXT	SEGMENT
b$ = 48
?stbtt__cff_index_count@@YAHPEAUstbtt__buf@@@Z PROC	; stbtt__cff_index_count, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1238
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 1132
	mov	edx, DWORD PTR [rcx+12]
; Line 1238
	mov	rbx, rcx
; Line 1132
	test	edx, edx
	jns	SHORT $LN4@stbtt__cff
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	mov	edx, DWORD PTR [rbx+12]
$LN4@stbtt__cff:
; Line 1133
	xor	r8d, r8d
	test	edx, edx
	cmovs	r8d, edx
	mov	DWORD PTR [rbx+8], r8d
; Line 1118
	cmp	r8d, edx
	jl	SHORT $LN23@stbtt__cff
; Line 1119
	xor	al, al
	jmp	SHORT $LN22@stbtt__cff
$LN23@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, r8d
	inc	r8d
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR [rbx+8], r8d
$LN22@stbtt__cff:
; Line 1147
	movzx	eax, al
; Line 1118
	cmp	r8d, edx
	jl	SHORT $LN28@stbtt__cff
; Line 1119
	xor	dl, dl
; Line 1147
	shl	eax, 8
	movzx	ecx, dl
	or	eax, ecx
; Line 1241
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN28@stbtt__cff:
; Line 1120
	mov	rcx, QWORD PTR [rbx]
	movsxd	rdx, r8d
; Line 1147
	shl	eax, 8
; Line 1120
	movzx	edx, BYTE PTR [rdx+rcx]
	lea	ecx, DWORD PTR [r8+1]
	mov	DWORD PTR [rbx+8], ecx
; Line 1147
	movzx	ecx, dl
	or	eax, ecx
; Line 1241
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?stbtt__cff_index_count@@YAHPEAUstbtt__buf@@@Z ENDP	; stbtt__cff_index_count
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z
_TEXT	SEGMENT
$T1 = 32
operands$ = 32
b$ = 64
key$ = 72
outcount$ = 80
out$ = 88
?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z PROC	; stbtt__dict_get_ints, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1230
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	movsxd	rbx, r8d
	mov	rsi, r9
; Line 1232
	mov	r8d, edx
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T1[rsp]
	call	?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z ; stbtt__dict_get
; Line 1233
	mov	rdi, rbx
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR operands$[rsp], xmm0
	test	ebx, ebx
	jle	SHORT $LN10@stbtt__dic
	xor	ebx, ebx
$LL4@stbtt__dic:
	mov	eax, DWORD PTR operands$[rsp+12]
	cmp	DWORD PTR operands$[rsp+8], eax
	jge	SHORT $LN10@stbtt__dic
; Line 1234
	lea	rcx, QWORD PTR operands$[rsp]
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
	mov	DWORD PTR [rsi+rbx*4], eax
	inc	rbx
	cmp	rbx, rdi
	jl	SHORT $LL4@stbtt__dic
$LN10@stbtt__dic:
; Line 1235
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z ENDP	; stbtt__dict_get_ints
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 80
b$ = 88
key$ = 96
?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z PROC	; stbtt__dict_get, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1215
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	r12
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
; Line 1132
	mov	eax, DWORD PTR [rdx+12]
; Line 1215
	mov	r15d, r8d
	mov	rsi, rdx
	mov	r14, rcx
; Line 1132
	test	eax, eax
	jns	SHORT $LN10@stbtt__dic
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rsi+12]
$LN10@stbtt__dic:
; Line 1133
	xor	r12d, r12d
	mov	QWORD PTR [rsp+80], rbx
	test	eax, eax
	mov	QWORD PTR [rsp+88], rdi
	mov	ebp, r12d
	cmovs	ebp, eax
	mov	DWORD PTR [rsi+8], ebp
; Line 1217
	cmp	ebp, eax
	jge	$LN70@stbtt__dic
; Line 1120
	mov	ebx, ebp
$LL2@stbtt__dic:
; Line 1219
	mov	rcx, rsi
	call	?stbtt__buf_peek8@@YAEPEAUstbtt__buf@@@Z ; stbtt__buf_peek8
	cmp	al, 28
	jb	$LN5@stbtt__dic
$LL4@stbtt__dic:
; Line 1125
	mov	r9d, DWORD PTR [rsi+12]
	cmp	ebx, r9d
	jl	SHORT $LN31@stbtt__dic
; Line 1126
	xor	dil, dil
	jmp	SHORT $LN30@stbtt__dic
$LN31@stbtt__dic:
; Line 1127
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, ebx
	movzx	edi, BYTE PTR [rcx+rax]
$LN30@stbtt__dic:
; Line 1201
	cmp	dil, 28
	jae	SHORT $LN19@stbtt__dic
	mov	r8d, 1201				; 000004b1H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KDMJFGHG@?$AAb?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA8@
	call	QWORD PTR __imp__wassert
	mov	r9d, DWORD PTR [rsi+12]
	mov	ebx, DWORD PTR [rsi+8]
$LN19@stbtt__dic:
; Line 1202
	cmp	dil, 30
	jne	$LN24@stbtt__dic
; Line 1138
	inc	ebx
; Line 1132
	cmp	ebx, r9d
	jg	SHORT $LN40@stbtt__dic
	mov	r11d, r9d
	test	ebx, ebx
	jns	SHORT $LN36@stbtt__dic
$LN40@stbtt__dic:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	mov	r11d, DWORD PTR [rsi+12]
	mov	r9d, r11d
$LN36@stbtt__dic:
; Line 1133
	cmp	ebx, r9d
	jg	SHORT $LN42@stbtt__dic
	test	ebx, ebx
	jns	SHORT $LN43@stbtt__dic
$LN42@stbtt__dic:
	mov	ebx, r9d
$LN43@stbtt__dic:
	mov	DWORD PTR [rsi+8], ebx
; Line 1204
	cmp	ebx, r9d
	jge	SHORT $LN25@stbtt__dic
; Line 1118
	mov	r8d, r9d
	mov	eax, ebx
$LL22@stbtt__dic:
	cmp	eax, r9d
	jl	SHORT $LN45@stbtt__dic
; Line 1119
	xor	cl, cl
	jmp	SHORT $LN85@stbtt__dic
$LN45@stbtt__dic:
; Line 1120
	mov	rcx, QWORD PTR [rsi]
	mov	r8d, r11d
	movsxd	rdx, eax
	inc	eax
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	DWORD PTR [rsi+8], eax
$LN85@stbtt__dic:
; Line 1205
	movzx	edx, cl
	mov	r10d, eax
; Line 1206
	mov	ecx, edx
	mov	ebx, eax
	and	ecx, 15
	cmp	cl, 15
	je	SHORT $LN25@stbtt__dic
	and	edx, -16				; fffffff0H
	cmp	edx, 240				; 000000f0H
	je	SHORT $LN25@stbtt__dic
; Line 1204
	cmp	eax, r8d
	jl	SHORT $LL22@stbtt__dic
; Line 1209
	jmp	SHORT $LN25@stbtt__dic
$LN24@stbtt__dic:
; Line 1210
	mov	rcx, rsi
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
	mov	ebx, DWORD PTR [rsi+8]
$LN25@stbtt__dic:
; Line 1219
	mov	rcx, rsi
	call	?stbtt__buf_peek8@@YAEPEAUstbtt__buf@@@Z ; stbtt__buf_peek8
	cmp	al, 28
	jae	$LL4@stbtt__dic
$LN5@stbtt__dic:
; Line 1118
	mov	r8d, DWORD PTR [rsi+12]
; Line 1221
	mov	r9d, ebx
; Line 1118
	cmp	ebx, r8d
	jl	SHORT $LN48@stbtt__dic
; Line 1119
	xor	al, al
	jmp	SHORT $LN86@stbtt__dic
$LN48@stbtt__dic:
; Line 1120
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, ebx
	inc	ebx
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR [rsi+8], ebx
$LN86@stbtt__dic:
; Line 1222
	movzx	eax, al
	mov	edx, ebx
; Line 1223
	cmp	eax, 12
	jne	SHORT $LN6@stbtt__dic
; Line 1118
	cmp	ebx, r8d
	jl	SHORT $LN51@stbtt__dic
; Line 1119
	xor	al, al
	jmp	SHORT $LN50@stbtt__dic
$LN51@stbtt__dic:
; Line 1120
	mov	rax, QWORD PTR [rsi]
	lea	ebx, DWORD PTR [rdx+1]
	movsxd	rcx, edx
	mov	edx, ebx
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR [rsi+8], ebx
$LN50@stbtt__dic:
; Line 1223
	movzx	eax, al
	bts	eax, 8
$LN6@stbtt__dic:
; Line 1224
	cmp	eax, r15d
	je	SHORT $LN77@stbtt__dic
; Line 1217
	mov	ebp, edx
	cmp	edx, r8d
	jl	$LL2@stbtt__dic
$LN70@stbtt__dic:
; Line 1155
	mov	QWORD PTR $T1[rsp], r12
; Line 1157
	mov	QWORD PTR $T1[rsp+8], r12
; Line 1166
	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [r14], xmm0
; Line 1167
	cmp	DWORD PTR [rsi+12], r12d
	jl	SHORT $LN65@stbtt__dic
; Line 1168
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR [r14], rax
; Line 1169
	mov	DWORD PTR [r14+12], r12d
; Line 1170
	jmp	SHORT $LN87@stbtt__dic
$LN77@stbtt__dic:
; Line 1155
	mov	QWORD PTR $T2[rsp], r12
; Line 1224
	sub	r9d, ebp
; Line 1157
	mov	QWORD PTR $T2[rsp+8], r12
; Line 1166
	movups	xmm0, XMMWORD PTR $T2[rsp]
	movups	XMMWORD PTR [r14], xmm0
; Line 1167
	test	ebp, ebp
	js	SHORT $LN65@stbtt__dic
	test	r9d, r9d
	js	SHORT $LN65@stbtt__dic
	mov	eax, DWORD PTR [rsi+12]
	cmp	ebp, eax
	jg	SHORT $LN65@stbtt__dic
	sub	eax, ebp
	cmp	r9d, eax
	jg	SHORT $LN65@stbtt__dic
; Line 1168
	movsxd	rax, ebp
	add	rax, QWORD PTR [rsi]
	mov	QWORD PTR [r14], rax
; Line 1169
	mov	DWORD PTR [r14+12], r9d
; Line 1170
	jmp	SHORT $LN87@stbtt__dic
$LN65@stbtt__dic:
; Line 1227
	movups	XMMWORD PTR [r14], xmm0
$LN87@stbtt__dic:
	mov	rdi, QWORD PTR [rsp+88]
	mov	rax, r14
	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r12
	ret	0
?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z ENDP	; stbtt__dict_get
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__cff_skip_operand@@YAXPEAUstbtt__buf@@@Z
_TEXT	SEGMENT
b$ = 48
?stbtt__cff_skip_operand@@YAXPEAUstbtt__buf@@@Z PROC	; stbtt__cff_skip_operand, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1199
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 1125
	movsxd	rax, DWORD PTR [rcx+8]
; Line 1199
	mov	rdi, rcx
; Line 1125
	cmp	eax, DWORD PTR [rcx+12]
	jl	SHORT $LN14@stbtt__cff
; Line 1126
	xor	bl, bl
	jmp	SHORT $LN13@stbtt__cff
$LN14@stbtt__cff:
; Line 1127
	mov	rcx, rax
	mov	rax, QWORD PTR [rdi]
	movzx	ebx, BYTE PTR [rcx+rax]
$LN13@stbtt__cff:
; Line 1201
	cmp	bl, 28
	jae	SHORT $LN2@stbtt__cff
	mov	r8d, 1201				; 000004b1H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KDMJFGHG@?$AAb?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA8@
	call	QWORD PTR __imp__wassert
$LN2@stbtt__cff:
; Line 1202
	cmp	bl, 30
	jne	$LN7@stbtt__cff
; Line 1138
	mov	ebx, DWORD PTR [rdi+8]
; Line 1132
	mov	r9d, DWORD PTR [rdi+12]
; Line 1138
	inc	ebx
; Line 1132
	cmp	ebx, r9d
	jg	SHORT $LN23@stbtt__cff
	mov	r8d, r9d
	test	ebx, ebx
	jns	SHORT $LN19@stbtt__cff
$LN23@stbtt__cff:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	mov	r9d, DWORD PTR [rdi+12]
	mov	r8d, r9d
$LN19@stbtt__cff:
; Line 1133
	cmp	ebx, r8d
	jg	SHORT $LN25@stbtt__cff
	test	ebx, ebx
	jns	SHORT $LN26@stbtt__cff
$LN25@stbtt__cff:
	mov	ebx, r8d
$LN26@stbtt__cff:
	mov	DWORD PTR [rdi+8], ebx
; Line 1204
	cmp	ebx, r8d
	jge	SHORT $LN8@stbtt__cff
$LL5@stbtt__cff:
; Line 1118
	cmp	ebx, r8d
	jl	SHORT $LN28@stbtt__cff
; Line 1119
	xor	al, al
	jmp	SHORT $LN27@stbtt__cff
$LN28@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, ebx
	inc	ebx
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR [rdi+8], ebx
$LN27@stbtt__cff:
; Line 1205
	movzx	ecx, al
; Line 1206
	mov	eax, ecx
	and	eax, 15
	cmp	al, 15
	je	SHORT $LN8@stbtt__cff
	and	ecx, -16				; fffffff0H
	cmp	ecx, 240				; 000000f0H
	je	SHORT $LN8@stbtt__cff
; Line 1204
	cmp	ebx, r9d
	jl	SHORT $LL5@stbtt__cff
; Line 1212
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@stbtt__cff:
; Line 1210
	mov	rcx, rdi
	call	?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z	; stbtt__cff_int
$LN8@stbtt__cff:
; Line 1212
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stbtt__cff_skip_operand@@YAXPEAUstbtt__buf@@@Z ENDP	; stbtt__cff_skip_operand
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z
_TEXT	SEGMENT
b$ = 48
?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z PROC		; stbtt__cff_int, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1188
	sub	rsp, 40					; 00000028H
; Line 1118
	movsxd	r8, DWORD PTR [rcx+8]
; Line 1188
	mov	r9, rcx
; Line 1118
	mov	r10d, DWORD PTR [rcx+12]
	cmp	r8d, r10d
	jl	SHORT $LN17@stbtt__cff
; Line 1119
	xor	al, al
	jmp	SHORT $LN16@stbtt__cff
$LN17@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [rcx]
	movzx	eax, BYTE PTR [r8+rax]
	inc	r8d
	mov	DWORD PTR [rcx+8], r8d
$LN16@stbtt__cff:
; Line 1189
	movzx	edx, al
; Line 1190
	lea	eax, DWORD PTR [rdx-32]
	cmp	eax, 214				; 000000d6H
	ja	SHORT $LN5@stbtt__cff
	lea	eax, DWORD PTR [rdx-139]
; Line 1197
	add	rsp, 40					; 00000028H
	ret	0
$LN5@stbtt__cff:
; Line 1191
	lea	eax, DWORD PTR [rdx-247]
	cmp	eax, 3
	ja	SHORT $LN7@stbtt__cff
; Line 1118
	cmp	r8d, r10d
	jl	SHORT $LN20@stbtt__cff
; Line 1119
	xor	cl, cl
; Line 1191
	shl	edx, 8
	movzx	eax, cl
	add	eax, -63124				; ffffffffffff096cH
	add	eax, edx
; Line 1197
	add	rsp, 40					; 00000028H
	ret	0
$LN20@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [r9]
	movsxd	rcx, r8d
; Line 1191
	shl	edx, 8
; Line 1120
	movzx	ecx, BYTE PTR [rcx+rax]
	lea	eax, DWORD PTR [r8+1]
	mov	DWORD PTR [r9+8], eax
; Line 1191
	movzx	eax, cl
	add	eax, -63124				; ffffffffffff096cH
	add	eax, edx
; Line 1197
	add	rsp, 40					; 00000028H
	ret	0
$LN7@stbtt__cff:
; Line 1192
	lea	eax, DWORD PTR [rdx-251]
	cmp	eax, 3
	ja	SHORT $LN9@stbtt__cff
; Line 1118
	cmp	r8d, r10d
	jl	SHORT $LN23@stbtt__cff
; Line 1119
	xor	cl, cl
; Line 1192
	shl	edx, 8
	mov	eax, 64148				; 0000fa94H
	movzx	ecx, cl
	sub	eax, edx
	sub	eax, ecx
; Line 1197
	add	rsp, 40					; 00000028H
	ret	0
$LN23@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [r9]
	movsxd	rcx, r8d
; Line 1192
	shl	edx, 8
; Line 1120
	movzx	ecx, BYTE PTR [rcx+rax]
	lea	eax, DWORD PTR [r8+1]
	mov	DWORD PTR [r9+8], eax
; Line 1192
	mov	eax, 64148				; 0000fa94H
	sub	eax, edx
	movzx	ecx, cl
	sub	eax, ecx
; Line 1197
	add	rsp, 40					; 00000028H
	ret	0
$LN9@stbtt__cff:
; Line 1193
	cmp	edx, 28
	jne	SHORT $LN11@stbtt__cff
; Line 1118
	cmp	r8d, r10d
	jl	SHORT $LN36@stbtt__cff
; Line 1119
	xor	al, al
	jmp	SHORT $LN35@stbtt__cff
$LN36@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [r9]
	movsxd	rcx, r8d
	inc	r8d
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR [r9+8], r8d
$LN35@stbtt__cff:
; Line 1147
	movzx	eax, al
; Line 1118
	cmp	r8d, r10d
	jl	SHORT $LN41@stbtt__cff
; Line 1119
	xor	dl, dl
; Line 1147
	shl	eax, 8
	movzx	ecx, dl
	or	eax, ecx
; Line 1197
	add	rsp, 40					; 00000028H
	ret	0
$LN41@stbtt__cff:
; Line 1120
	mov	rcx, QWORD PTR [r9]
	movsxd	rdx, r8d
; Line 1147
	shl	eax, 8
; Line 1120
	movzx	edx, BYTE PTR [rdx+rcx]
	lea	ecx, DWORD PTR [r8+1]
	mov	DWORD PTR [r9+8], ecx
; Line 1147
	movzx	ecx, dl
	or	eax, ecx
; Line 1197
	add	rsp, 40					; 00000028H
	ret	0
$LN11@stbtt__cff:
; Line 1194
	cmp	edx, 29
	jne	SHORT $LN4@stbtt__cff
	mov	edx, 4
; Line 1197
	add	rsp, 40					; 00000028H
; Line 1194
	jmp	?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z	; stbtt__buf_get
$LN4@stbtt__cff:
; Line 1195
	mov	r8d, 1195				; 000004abH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
; Line 1196
	xor	eax, eax
; Line 1197
	add	rsp, 40					; 00000028H
	ret	0
?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z ENDP		; stbtt__cff_int
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 80
b$ = 88
?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z PROC	; stbtt__cff_get_index, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1174
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rdi
	push	r14
	sub	rsp, 48					; 00000030H
; Line 1176
	movsxd	rbp, DWORD PTR [rdx+8]
	mov	rdi, rdx
; Line 1118
	mov	edx, DWORD PTR [rdx+12]
; Line 1174
	mov	r14, rcx
	mov	QWORD PTR [rsp+80], rsi
; Line 1118
	cmp	ebp, edx
	jl	SHORT $LN20@stbtt__cff
; Line 1119
	xor	al, al
	mov	ebx, ebp
	jmp	SHORT $LN19@stbtt__cff
$LN20@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [rdi]
	lea	ebx, DWORD PTR [rbp+1]
	movzx	eax, BYTE PTR [rbp+rax]
	mov	DWORD PTR [rdi+8], ebx
$LN19@stbtt__cff:
; Line 1147
	movzx	esi, al
; Line 1118
	cmp	ebx, edx
	jl	SHORT $LN60@stbtt__cff
; Line 1119
	xor	al, al
	jmp	SHORT $LN61@stbtt__cff
$LN60@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, ebx
	inc	ebx
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR [rdi+8], ebx
$LN61@stbtt__cff:
; Line 1147
	shl	esi, 8
	movzx	eax, al
	or	esi, eax
; Line 1178
	je	$LN63@stbtt__cff
; Line 1118
	mov	QWORD PTR [rsp+88], r15
	cmp	ebx, edx
	jl	SHORT $LN23@stbtt__cff
; Line 1119
	xor	al, al
	jmp	SHORT $LN22@stbtt__cff
$LN23@stbtt__cff:
; Line 1120
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, ebx
	inc	ebx
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR [rdi+8], ebx
$LN22@stbtt__cff:
; Line 1179
	movzx	r15d, al
; Line 1180
	cmp	r15d, 1
	jb	SHORT $LN7@stbtt__cff
	cmp	r15d, 4
	jbe	SHORT $LN2@stbtt__cff
$LN7@stbtt__cff:
	mov	r8d, 1180				; 0000049cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DK@IJDIOPHB@?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG@
	call	QWORD PTR __imp__wassert
	mov	edx, DWORD PTR [rdi+12]
	mov	ebx, DWORD PTR [rdi+8]
$LN2@stbtt__cff:
; Line 1181
	imul	esi, r15d
; Line 1138
	add	esi, ebx
; Line 1132
	cmp	esi, edx
	jg	SHORT $LN32@stbtt__cff
	test	esi, esi
	jns	SHORT $LN28@stbtt__cff
$LN32@stbtt__cff:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	mov	edx, DWORD PTR [rdi+12]
$LN28@stbtt__cff:
; Line 1133
	cmp	esi, edx
	jg	SHORT $LN34@stbtt__cff
	test	esi, esi
	jns	SHORT $LN35@stbtt__cff
$LN34@stbtt__cff:
	mov	esi, edx
$LN35@stbtt__cff:
; Line 1182
	mov	edx, r15d
; Line 1133
	mov	DWORD PTR [rdi+8], esi
; Line 1182
	mov	rcx, rdi
	call	?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z	; stbtt__buf_get
; Line 1132
	mov	r15, QWORD PTR [rsp+88]
; Line 1182
	lea	ebx, DWORD PTR [rax-1]
; Line 1132
	mov	eax, DWORD PTR [rdi+12]
; Line 1138
	add	ebx, DWORD PTR [rdi+8]
; Line 1132
	cmp	ebx, eax
	jg	SHORT $LN43@stbtt__cff
	test	ebx, ebx
	jns	SHORT $LN39@stbtt__cff
$LN43@stbtt__cff:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rdi+12]
$LN39@stbtt__cff:
; Line 1133
	cmp	ebx, eax
	jg	SHORT $LN45@stbtt__cff
	test	ebx, ebx
	jns	SHORT $LN46@stbtt__cff
$LN45@stbtt__cff:
	mov	ebx, eax
$LN46@stbtt__cff:
	mov	DWORD PTR [rdi+8], ebx
$LN63@stbtt__cff:
; Line 1166
	mov	rsi, QWORD PTR [rsp+80]
; Line 1155
	xor	eax, eax
	mov	QWORD PTR $T1[rsp], rax
; Line 1184
	sub	ebx, ebp
; Line 1157
	mov	QWORD PTR $T1[rsp+8], rax
; Line 1166
	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [r14], xmm0
; Line 1167
	test	ebp, ebp
	js	SHORT $LN49@stbtt__cff
	test	ebx, ebx
	js	SHORT $LN49@stbtt__cff
	mov	eax, DWORD PTR [rdi+12]
	cmp	ebp, eax
	jg	SHORT $LN49@stbtt__cff
	sub	eax, ebp
	cmp	ebx, eax
	jg	SHORT $LN49@stbtt__cff
; Line 1168
	mov	rax, rbp
	add	rax, QWORD PTR [rdi]
	mov	QWORD PTR [r14], rax
; Line 1185
	mov	rax, r14
; Line 1169
	mov	DWORD PTR [r14+12], ebx
; Line 1185
	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
$LN49@stbtt__cff:
	mov	rbx, QWORD PTR [rsp+96]
	mov	rax, r14
; Line 1167
	movups	XMMWORD PTR [r14], xmm0
; Line 1185
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z ENDP	; stbtt__cff_get_index
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z
_TEXT	SEGMENT
$T1 = 0
$T2 = 32
b$ = 40
o$ = 48
s$ = 56
?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z PROC	; stbtt__buf_range, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1165
	sub	rsp, 24
; Line 1155
	xor	eax, eax
	mov	QWORD PTR $T1[rsp], rax
; Line 1157
	mov	QWORD PTR $T1[rsp+8], rax
; Line 1166
	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rcx], xmm0
; Line 1167
	test	r8d, r8d
	js	SHORT $LN3@stbtt__buf
	test	r9d, r9d
	js	SHORT $LN3@stbtt__buf
	mov	eax, DWORD PTR [rdx+12]
	cmp	r8d, eax
	jg	SHORT $LN3@stbtt__buf
	sub	eax, r8d
	cmp	r9d, eax
	jg	SHORT $LN3@stbtt__buf
; Line 1168
	movsxd	rax, r8d
	add	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
; Line 1171
	mov	rax, rcx
	mov	DWORD PTR [rcx+12], r9d
	add	rsp, 24
	ret	0
$LN3@stbtt__buf:
; Line 1167
	movups	XMMWORD PTR [rcx], xmm0
; Line 1171
	mov	rax, rcx
	add	rsp, 24
	ret	0
?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z ENDP	; stbtt__buf_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__new_buf@@YA?AUstbtt__buf@@PEBX_K@Z
_TEXT	SEGMENT
$T1 = 48
p$ = 56
size$ = 64
?stbtt__new_buf@@YA?AUstbtt__buf@@PEBX_K@Z PROC		; stbtt__new_buf, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1152
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx
; Line 1154
	cmp	r8, 1073741824				; 40000000H
	jb	SHORT $LN2@stbtt__new
	mov	r8d, 1154				; 00000482H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CE@EPOLDKHI@?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx?$AA4?$AA0?$AA0?$AA0?$AA0?$AA0@
	call	QWORD PTR __imp__wassert
$LN2@stbtt__new:
; Line 1155
	mov	QWORD PTR [rbx], rsi
; Line 1158
	mov	rax, rbx
; Line 1159
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx+12], edi
	mov	DWORD PTR [rbx+8], 0
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stbtt__new_buf@@YA?AUstbtt__buf@@PEBX_K@Z ENDP		; stbtt__new_buf
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z
_TEXT	SEGMENT
b$ = 48
n$ = 56
?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z PROC		; stbtt__buf_get, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1142
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	esi, edx
; Line 1143
	xor	ebx, ebx
	mov	rdi, rcx
; Line 1145
	lea	eax, DWORD PTR [rsi-1]
	cmp	eax, 3
	jbe	SHORT $LN2@stbtt__buf
	mov	r8d, 1145				; 00000479H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5@
	call	QWORD PTR __imp__wassert
$LN2@stbtt__buf:
; Line 1146
	test	esi, esi
	jle	SHORT $LN19@stbtt__buf
; Line 1118
	mov	r8d, DWORD PTR [rdi+12]
	mov	r9, rsi
	mov	eax, DWORD PTR [rdi+8]
$LL7@stbtt__buf:
	cmp	eax, r8d
	jl	SHORT $LN12@stbtt__buf
; Line 1119
	xor	cl, cl
	jmp	SHORT $LN11@stbtt__buf
$LN12@stbtt__buf:
; Line 1120
	mov	rcx, QWORD PTR [rdi]
	movsxd	rdx, eax
	inc	eax
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	DWORD PTR [rdi+8], eax
$LN11@stbtt__buf:
; Line 1147
	shl	ebx, 8
	movzx	ecx, cl
	or	ebx, ecx
	sub	r9, 1
	jne	SHORT $LL7@stbtt__buf
$LN19@stbtt__buf:
; Line 1149
	mov	rsi, QWORD PTR [rsp+56]
	mov	eax, ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stbtt__buf_get@@YAIPEAUstbtt__buf@@H@Z ENDP		; stbtt__buf_get
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__buf_skip@@YAXPEAUstbtt__buf@@H@Z
_TEXT	SEGMENT
b$ = 48
o$ = 56
?stbtt__buf_skip@@YAXPEAUstbtt__buf@@H@Z PROC		; stbtt__buf_skip, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1137
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 1138
	mov	ebx, DWORD PTR [rcx+8]
	mov	rdi, rcx
; Line 1132
	mov	eax, DWORD PTR [rcx+12]
; Line 1138
	add	ebx, edx
; Line 1132
	cmp	ebx, eax
	jg	SHORT $LN8@stbtt__buf
	test	ebx, ebx
	jns	SHORT $LN4@stbtt__buf
$LN8@stbtt__buf:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rdi+12]
$LN4@stbtt__buf:
; Line 1133
	cmp	ebx, eax
	jg	SHORT $LN10@stbtt__buf
	test	ebx, ebx
	js	SHORT $LN10@stbtt__buf
	mov	DWORD PTR [rdi+8], ebx
; Line 1139
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN10@stbtt__buf:
	mov	rbx, QWORD PTR [rsp+48]
; Line 1133
	mov	DWORD PTR [rdi+8], eax
; Line 1139
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stbtt__buf_skip@@YAXPEAUstbtt__buf@@H@Z ENDP		; stbtt__buf_skip
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__buf_seek@@YAXPEAUstbtt__buf@@H@Z
_TEXT	SEGMENT
b$ = 48
o$ = 56
?stbtt__buf_seek@@YAXPEAUstbtt__buf@@H@Z PROC		; stbtt__buf_seek, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1131
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 1132
	mov	eax, DWORD PTR [rcx+12]
	mov	ebx, edx
	mov	rdi, rcx
	cmp	edx, eax
	jg	SHORT $LN6@stbtt__buf
	test	edx, edx
	jns	SHORT $LN2@stbtt__buf
$LN6@stbtt__buf:
	mov	r8d, 1132				; 0000046cH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rdi+12]
$LN2@stbtt__buf:
; Line 1133
	cmp	ebx, eax
	jg	SHORT $LN8@stbtt__buf
	test	ebx, ebx
	js	SHORT $LN8@stbtt__buf
	mov	DWORD PTR [rdi+8], ebx
; Line 1134
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN8@stbtt__buf:
	mov	rbx, QWORD PTR [rsp+48]
	mov	DWORD PTR [rdi+8], eax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stbtt__buf_seek@@YAXPEAUstbtt__buf@@H@Z ENDP		; stbtt__buf_seek
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__buf_peek8@@YAEPEAUstbtt__buf@@@Z
_TEXT	SEGMENT
b$ = 8
?stbtt__buf_peek8@@YAEPEAUstbtt__buf@@@Z PROC		; stbtt__buf_peek8, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1124
	mov	rax, rcx
; Line 1125
	movsxd	rcx, DWORD PTR [rcx+8]
	cmp	ecx, DWORD PTR [rax+12]
	jl	SHORT $LN2@stbtt__buf
; Line 1126
	xor	al, al
; Line 1128
	ret	0
$LN2@stbtt__buf:
; Line 1127
	mov	rax, QWORD PTR [rax]
	movzx	eax, BYTE PTR [rcx+rax]
; Line 1128
	ret	0
?stbtt__buf_peek8@@YAEPEAUstbtt__buf@@@Z ENDP		; stbtt__buf_peek8
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbtt__buf_get8@@YAEPEAUstbtt__buf@@@Z
_TEXT	SEGMENT
b$ = 8
?stbtt__buf_get8@@YAEPEAUstbtt__buf@@@Z PROC		; stbtt__buf_get8, COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1118
	movsxd	r8, DWORD PTR [rcx+8]
	mov	rdx, rcx
	cmp	r8d, DWORD PTR [rcx+12]
	jl	SHORT $LN2@stbtt__buf
; Line 1119
	xor	al, al
; Line 1121
	ret	0
$LN2@stbtt__buf:
; Line 1120
	mov	rax, QWORD PTR [rcx]
	lea	ecx, DWORD PTR [r8+1]
	movzx	eax, BYTE PTR [r8+rax]
	mov	DWORD PTR [rdx+8], ecx
; Line 1121
	ret	0
?stbtt__buf_get8@@YAEPEAUstbtt__buf@@@Z ENDP		; stbtt__buf_get8
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_Rasterize
_TEXT	SEGMENT
winding_lengths$ = 96
result$ = 160
winding_count$ = 168
flatness_in_pixels$ = 168
vertices$ = 176
num_verts$ = 184
scale_x$ = 192
scale_y$ = 200
shift_x$ = 208
shift_y$ = 216
x_off$ = 224
y_off$ = 232
invert$ = 240
userdata$ = 248
stbtt_Rasterize PROC					; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3536
	mov	r11, rsp
	mov	QWORD PTR [r11+8], rbx
	mov	QWORD PTR [r11+24], rsi
	push	rdi
	sub	rsp, 144				; 00000090H
; Line 3540
	mov	rbx, QWORD PTR userdata$[rsp]
	xor	eax, eax
	movaps	XMMWORD PTR [r11-24], xmm6
	mov	edx, r9d
	movss	xmm6, DWORD PTR scale_y$[rsp]
	lea	r9, QWORD PTR [r11-56]
	movaps	xmm0, xmm6
	movaps	XMMWORD PTR [rsp+112], xmm7
	movss	xmm7, DWORD PTR scale_x$[rsp]
	mov	rsi, rcx
	minss	xmm0, xmm7
	mov	DWORD PTR [r11+16], eax
	mov	QWORD PTR [r11-56], rax
	mov	rcx, r8
	lea	rax, QWORD PTR [r11+16]
	mov	QWORD PTR [r11-112], rbx
	mov	QWORD PTR [r11-120], rax
	divss	xmm1, xmm0
	movaps	xmm2, xmm1
	call	?stbtt_FlattenCurves@@YAPEAUstbtt__point@@PEAUstbtt_vertex@@HMPEAPEAHPEAHPEAX@Z ; stbtt_FlattenCurves
	mov	rdi, rax
; Line 3541
	test	rax, rax
	je	SHORT $LN2@stbtt_Rast
; Line 3542
	mov	ecx, DWORD PTR invert$[rsp]
	mov	rdx, rax
	movss	xmm0, DWORD PTR shift_y$[rsp]
	movss	xmm1, DWORD PTR shift_x$[rsp]
	mov	r9d, DWORD PTR winding_count$[rsp]
	mov	r8, QWORD PTR winding_lengths$[rsp]
	mov	QWORD PTR [rsp+88], rbx
	mov	DWORD PTR [rsp+80], ecx
	mov	ecx, DWORD PTR y_off$[rsp]
	mov	DWORD PTR [rsp+72], ecx
	mov	ecx, DWORD PTR x_off$[rsp]
	mov	DWORD PTR [rsp+64], ecx
	mov	rcx, rsi
	movss	DWORD PTR [rsp+56], xmm0
	movss	DWORD PTR [rsp+48], xmm1
	movss	DWORD PTR [rsp+40], xmm6
	movss	DWORD PTR [rsp+32], xmm7
	call	?stbtt__rasterize@@YAXPEAUstbtt__bitmap@@PEAUstbtt__point@@PEAHHMMMMHHHPEAX@Z ; stbtt__rasterize
; Line 3543
	mov	rcx, QWORD PTR winding_lengths$[rsp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 3544
	mov	rcx, rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@stbtt_Rast:
; Line 3546
	movaps	xmm7, XMMWORD PTR [rsp+112]
	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+32]
	movaps	xmm6, XMMWORD PTR [r11-16]
	mov	rsp, r11
	pop	rdi
	ret	0
stbtt_Rasterize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_GetGlyphBitmapBoxSubpixel
_TEXT	SEGMENT
c$1 = 32
font$ = 160
glyph$ = 168
scale_x$ = 176
scale_y$ = 184
shift_x$ = 192
shift_y$ = 200
ix0$ = 208
iy0$ = 216
ix1$ = 224
iy1$ = 232
stbtt_GetGlyphBitmapBoxSubpixel PROC			; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2630
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	mov	QWORD PTR [rax+24], rsi
	push	rdi
	sub	rsp, 144				; 00000090H
; Line 1592
	cmp	DWORD PTR [rcx+76], 0
; Line 2630
	mov	rdi, rcx
	movaps	XMMWORD PTR [rax-40], xmm8
	movaps	xmm8, xmm3
	movaps	XMMWORD PTR [rax-56], xmm9
	movaps	xmm9, xmm2
; Line 1592
	je	SHORT $LN14@stbtt_GetG
; Line 2256
	xor	ebx, ebx
	mov	QWORD PTR [rax-120], 1
	xorps	xmm0, xmm0
	mov	QWORD PTR [rax-80], rbx
	xorps	xmm1, xmm1
	mov	DWORD PTR [rax-72], ebx
; Line 2257
	lea	r8, QWORD PTR [rax-120]
	movups	XMMWORD PTR [rax-112], xmm0
	movdqu	XMMWORD PTR [rax-96], xmm1
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
; Line 2261
	test	eax, eax
	mov	esi, ebx
	mov	r11d, ebx
	mov	ebp, ebx
	cmovne	esi, DWORD PTR c$1[rsp+36]
	cmovne	r11d, DWORD PTR c$1[rsp+24]
	cmovne	ebp, DWORD PTR c$1[rsp+28]
	cmovne	ebx, DWORD PTR c$1[rsp+32]
; Line 1594
	jmp	SHORT $LN20@stbtt_GetG
$LN14@stbtt_GetG:
; Line 1595
	call	?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z ; stbtt__GetGlyfOffset
; Line 1596
	test	eax, eax
	js	$LN39@stbtt_GetG
; Line 1598
	mov	r9, QWORD PTR [rdi+8]
; Line 1270
	mov	ebx, 256				; 00000100H
; Line 1598
	movsxd	r10, eax
; Line 1270
	movsx	eax, bx
	movsx	ecx, bx
	movzx	edx, BYTE PTR [r9+r10+8]
	movzx	r8d, BYTE PTR [r9+r10+7]
	imul	edx, eax
	movzx	eax, BYTE PTR [r9+r10+9]
	add	dx, ax
	movzx	eax, BYTE PTR [r9+r10+3]
; Line 1601
	movsx	esi, dx
; Line 1270
	movzx	edx, BYTE PTR [r9+r10+2]
	imul	edx, ecx
	movsx	ecx, bx
	add	dx, ax
	movzx	eax, BYTE PTR [r9+r10+5]
; Line 1598
	movsx	r11d, dx
; Line 1270
	movzx	edx, BYTE PTR [r9+r10+6]
	imul	edx, ecx
	movsx	ecx, bx
	add	r8w, dx
	movzx	edx, BYTE PTR [r9+r10+4]
	imul	edx, ecx
; Line 1600
	movsx	ebp, r8w
; Line 1270
	add	dx, ax
; Line 1599
	movsx	ebx, dx
$LN20@stbtt_GetG:
; Line 2640
	mov	rdi, QWORD PTR ix0$[rsp]
	movaps	XMMWORD PTR [rsp+128], xmm6
	test	rdi, rdi
	je	SHORT $LN8@stbtt_GetG
	movd	xmm0, r11d
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm9
	addss	xmm0, DWORD PTR shift_x$[rsp]
	call	floorf
	cvttss2si eax, xmm0
	mov	DWORD PTR [rdi], eax
$LN8@stbtt_GetG:
; Line 2641
	mov	rdi, QWORD PTR iy0$[rsp]
	movss	xmm6, DWORD PTR shift_y$[rsp]
	test	rdi, rdi
	je	SHORT $LN9@stbtt_GetG
	movd	xmm1, esi
	movaps	xmm0, xmm6
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, xmm8
	subss	xmm0, xmm1
	call	floorf
	cvttss2si eax, xmm0
	mov	DWORD PTR [rdi], eax
$LN9@stbtt_GetG:
; Line 2642
	mov	rdi, QWORD PTR ix1$[rsp]
	test	rdi, rdi
	je	SHORT $LN10@stbtt_GetG
	movd	xmm0, ebp
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm9
	addss	xmm0, DWORD PTR shift_x$[rsp]
	call	ceilf
	cvttss2si eax, xmm0
	mov	DWORD PTR [rdi], eax
$LN10@stbtt_GetG:
; Line 2643
	mov	rdi, QWORD PTR iy1$[rsp]
	test	rdi, rdi
	je	SHORT $LN40@stbtt_GetG
	movd	xmm1, ebx
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, xmm8
	subss	xmm6, xmm1
	movaps	xmm0, xmm6
	call	ceilf
	cvttss2si eax, xmm0
	mov	DWORD PTR [rdi], eax
$LN40@stbtt_GetG:
	movaps	xmm6, XMMWORD PTR [rsp+128]
$LN11@stbtt_GetG:
; Line 2645
	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	movaps	xmm8, XMMWORD PTR [r11-32]
	movaps	xmm9, XMMWORD PTR [r11-48]
	mov	rsp, r11
	pop	rdi
	ret	0
$LN39@stbtt_GetG:
; Line 2634
	mov	rax, QWORD PTR ix0$[rsp]
	xor	ebx, ebx
	test	rax, rax
	je	SHORT $LN4@stbtt_GetG
	mov	DWORD PTR [rax], ebx
$LN4@stbtt_GetG:
; Line 2635
	mov	rax, QWORD PTR iy0$[rsp]
	test	rax, rax
	je	SHORT $LN5@stbtt_GetG
	mov	DWORD PTR [rax], ebx
$LN5@stbtt_GetG:
; Line 2636
	mov	rax, QWORD PTR ix1$[rsp]
	test	rax, rax
	je	SHORT $LN6@stbtt_GetG
	mov	DWORD PTR [rax], ebx
$LN6@stbtt_GetG:
; Line 2637
	mov	rax, QWORD PTR iy1$[rsp]
	test	rax, rax
	je	SHORT $LN11@stbtt_GetG
	mov	DWORD PTR [rax], ebx
	jmp	SHORT $LN11@stbtt_GetG
stbtt_GetGlyphBitmapBoxSubpixel ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_GetGlyphBitmapBox
_TEXT	SEGMENT
font$ = 96
glyph$ = 104
scale_x$ = 112
scale_y$ = 120
ix0$ = 128
iy0$ = 136
ix1$ = 144
iy1$ = 152
stbtt_GetGlyphBitmapBox PROC				; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2648
	sub	rsp, 88					; 00000058H
; Line 2649
	mov	rax, QWORD PTR iy1$[rsp]
	xorps	xmm0, xmm0
	mov	QWORD PTR [rsp+72], rax
	mov	rax, QWORD PTR ix1$[rsp]
	mov	QWORD PTR [rsp+64], rax
	mov	rax, QWORD PTR iy0$[rsp]
	mov	QWORD PTR [rsp+56], rax
	mov	rax, QWORD PTR ix0$[rsp]
	mov	QWORD PTR [rsp+48], rax
	movss	DWORD PTR [rsp+40], xmm0
	movss	DWORD PTR [rsp+32], xmm0
	call	stbtt_GetGlyphBitmapBoxSubpixel
; Line 2650
	add	rsp, 88					; 00000058H
	ret	0
stbtt_GetGlyphBitmapBox ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_MakeGlyphBitmapSubpixel
_TEXT	SEGMENT
gbm$ = 96
c$1 = 120
vertices$ = 288
info$ = 288
output$ = 296
out_w$ = 304
out_h$ = 312
out_stride$ = 320
scale_x$ = 328
scale_y$ = 336
shift_x$ = 344
shift_y$ = 352
glyph$ = 360
stbtt_MakeGlyphBitmapSubpixel PROC			; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3599
	mov	rax, rsp
	mov	QWORD PTR [rax+32], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r13
	push	r14
	sub	rsp, 240				; 000000f0H
; Line 3602
	mov	esi, DWORD PTR glyph$[rsp]
	mov	r14d, r9d
	movaps	XMMWORD PTR [rax-56], xmm6
	mov	rdi, rcx
	movaps	XMMWORD PTR [rax-72], xmm7
	movaps	XMMWORD PTR [rax-88], xmm8
	movaps	XMMWORD PTR [rax-104], xmm9
	mov	QWORD PTR [rax+16], r12
	mov	r12, rdx
	mov	QWORD PTR [rax+24], r15
	mov	edx, esi
	mov	r15d, r8d
	lea	r8, QWORD PTR [rax+8]
	call	stbtt_GetGlyphShape
; Line 1592
	cmp	DWORD PTR [rdi+76], 0
; Line 3602
	mov	r13d, eax
; Line 1592
	movss	xmm6, DWORD PTR shift_y$[rsp]
	mov	edx, esi
	movss	xmm7, DWORD PTR shift_x$[rsp]
	mov	rcx, rdi
	movss	xmm8, DWORD PTR scale_y$[rsp]
	movss	xmm9, DWORD PTR scale_x$[rsp]
	je	SHORT $LN17@stbtt_Make
; Line 2256
	xor	ebx, ebx
	mov	QWORD PTR c$1[rsp], 1
	xorps	xmm0, xmm0
	mov	QWORD PTR c$1[rsp+40], rbx
	xorps	xmm1, xmm1
	mov	DWORD PTR c$1[rsp+48], ebx
; Line 2257
	lea	r8, QWORD PTR c$1[rsp]
	movups	XMMWORD PTR c$1[rsp+8], xmm0
	movdqu	XMMWORD PTR c$1[rsp+24], xmm1
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
; Line 2261
	test	eax, eax
	mov	r10d, ebx
	cmovne	r10d, DWORD PTR c$1[rsp+36]
	cmovne	ebx, DWORD PTR c$1[rsp+24]
; Line 1594
	jmp	SHORT $LN23@stbtt_Make
$LN17@stbtt_Make:
; Line 1595
	call	?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z ; stbtt__GetGlyfOffset
; Line 1596
	test	eax, eax
	js	SHORT $LN42@stbtt_Make
; Line 1598
	mov	r8, QWORD PTR [rdi+8]
; Line 1270
	mov	r11d, 256				; 00000100H
; Line 1598
	movsxd	r9, eax
; Line 1270
	movsx	eax, r11w
	movsx	ecx, r11w
	movzx	edx, BYTE PTR [r8+r9+8]
	imul	edx, eax
	movzx	eax, BYTE PTR [r8+r9+9]
	add	dx, ax
	movzx	eax, BYTE PTR [r8+r9+3]
; Line 1601
	movsx	r10d, dx
; Line 1270
	movzx	edx, BYTE PTR [r8+r9+2]
	imul	edx, ecx
	add	dx, ax
; Line 1598
	movsx	ebx, dx
$LN23@stbtt_Make:
	movd	xmm1, r10d
; Line 2641
	movaps	xmm0, xmm6
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, xmm8
	subss	xmm0, xmm1
	call	floorf
	cvttss2si ebp, xmm0
	movd	xmm0, ebx
; Line 2640
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm9
	addss	xmm0, xmm7
	call	floorf
	cvttss2si ebx, xmm0
; Line 2641
	jmp	SHORT $LN12@stbtt_Make
$LN42@stbtt_Make:
; Line 2635
	xor	ebx, ebx
	mov	ebp, ebx
$LN12@stbtt_Make:
; Line 3609
	mov	eax, DWORD PTR out_stride$[rsp]
	test	r15d, r15d
	mov	rsi, QWORD PTR vertices$[rsp]
	mov	QWORD PTR gbm$[rsp+16], r12
	mov	r12, QWORD PTR [rsp+296]
	mov	DWORD PTR gbm$[rsp], r15d
	mov	r15, QWORD PTR [rsp+304]
	mov	DWORD PTR gbm$[rsp+8], eax
	mov	DWORD PTR gbm$[rsp+4], r14d
; Line 3611
	je	SHORT $LN2@stbtt_Make
	test	r14d, r14d
	je	SHORT $LN2@stbtt_Make
; Line 3612
	mov	rax, QWORD PTR [rdi]
	lea	rcx, QWORD PTR gbm$[rsp]
	movss	xmm1, DWORD PTR __real@3eb33333
	mov	r9d, r13d
	mov	QWORD PTR [rsp+88], rax
	mov	r8, rsi
	mov	DWORD PTR [rsp+80], 1
	mov	DWORD PTR [rsp+72], ebp
	mov	DWORD PTR [rsp+64], ebx
	movss	DWORD PTR [rsp+56], xmm6
	movss	DWORD PTR [rsp+48], xmm7
	movss	DWORD PTR [rsp+40], xmm8
	movss	DWORD PTR [rsp+32], xmm9
	call	stbtt_Rasterize
$LN2@stbtt_Make:
; Line 3614
	mov	rcx, rsi
; Line 3615
	lea	r11, QWORD PTR [rsp+240]
	mov	rbx, QWORD PTR [r11+72]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	mov	rsp, r11
	pop	r14
	pop	r13
	pop	rdi
	pop	rsi
	pop	rbp
; Line 3614
	jmp	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
stbtt_MakeGlyphBitmapSubpixel ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_GetGlyphShape
_TEXT	SEGMENT
count_ctx$1 = 32
output_ctx$2 = 88
info$ = 160
glyph_index$ = 168
pvertices$ = 176
stbtt_GetGlyphShape PROC				; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2266
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 144				; 00000090H
; Line 2267
	cmp	DWORD PTR [rcx+76], 0
	mov	rsi, r8
	mov	ebp, edx
	mov	rdi, rcx
	jne	SHORT $LN2@stbtt_GetG
; Line 2268
	call	?stbtt__GetGlyphShapeTT@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z ; stbtt__GetGlyphShapeTT
	jmp	$LN3@stbtt_GetG
$LN2@stbtt_GetG:
	xorps	xmm0, xmm0
	mov	QWORD PTR [rsp+160], rbx
; Line 2240
	xor	ebx, ebx
	mov	QWORD PTR count_ctx$1[rsp], 1
	xorps	xmm1, xmm1
	mov	QWORD PTR count_ctx$1[rsp+40], rbx
; Line 2242
	lea	r8, QWORD PTR count_ctx$1[rsp]
	mov	DWORD PTR count_ctx$1[rsp+48], ebx
	mov	QWORD PTR output_ctx$2[rsp], rbx
	mov	DWORD PTR output_ctx$2[rsp+48], ebx
	movups	XMMWORD PTR count_ctx$1[rsp+8], xmm0
	movdqu	XMMWORD PTR count_ctx$1[rsp+24], xmm1
	movups	XMMWORD PTR output_ctx$2[rsp+8], xmm0
	movdqu	XMMWORD PTR output_ctx$2[rsp+24], xmm1
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
	test	eax, eax
	je	SHORT $LN10@stbtt_GetG
; Line 2243
	movsxd	rax, DWORD PTR count_ctx$1[rsp+48]
	imul	rcx, rax, 14
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 2245
	lea	r8, QWORD PTR output_ctx$2[rsp]
	mov	QWORD PTR [rsi], rax
	mov	edx, ebp
	mov	QWORD PTR output_ctx$2[rsp+40], rax
	mov	rcx, rdi
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
	test	eax, eax
	je	SHORT $LN10@stbtt_GetG
; Line 2246
	mov	ebx, DWORD PTR output_ctx$2[rsp+48]
	cmp	ebx, DWORD PTR count_ctx$1[rsp+48]
	je	SHORT $LN5@stbtt_GetG
	mov	r8d, 2246				; 000008c6H
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1GE@KABFAMEA@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA_?$AAc?$AAt?$AAx?$AA?4?$AAn?$AAu?$AAm?$AA_@
	call	QWORD PTR __imp__wassert
; Line 2247
	jmp	SHORT $LN5@stbtt_GetG
$LN10@stbtt_GetG:
; Line 2250
	mov	QWORD PTR [rsi], rbx
$LN5@stbtt_GetG:
; Line 2270
	mov	eax, ebx
	mov	rbx, QWORD PTR [rsp+160]
$LN3@stbtt_GetG:
; Line 2271
	lea	r11, QWORD PTR [rsp+144]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
stbtt_GetGlyphShape ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_GetGlyphBox
_TEXT	SEGMENT
c$1 = 32
info$ = 112
glyph_index$ = 120
x0$ = 128
y0$ = 136
x1$ = 144
y1$ = 152
stbtt_GetGlyphBox PROC					; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1591
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	mov	QWORD PTR [rax+24], rdi
	push	r14
	sub	rsp, 96					; 00000060H
; Line 1592
	cmp	DWORD PTR [rcx+76], 0
	mov	rdi, r9
	mov	r14, r8
	mov	rsi, rcx
	je	$LN2@stbtt_GetG
; Line 2256
	xor	ebx, ebx
	mov	QWORD PTR [rax-72], 1
	xorps	xmm0, xmm0
	mov	QWORD PTR [rax-32], rbx
	xorps	xmm1, xmm1
	mov	DWORD PTR [rax-24], ebx
; Line 2257
	lea	r8, QWORD PTR [rax-72]
	movups	XMMWORD PTR [rax-64], xmm0
	movdqu	XMMWORD PTR [rax-48], xmm1
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
	mov	ecx, eax
; Line 2258
	test	r14, r14
	je	SHORT $LN11@stbtt_GetG
	test	ecx, ecx
	mov	eax, ebx
	cmovne	eax, DWORD PTR c$1[rsp+24]
	mov	DWORD PTR [r14], eax
$LN11@stbtt_GetG:
; Line 2259
	test	rdi, rdi
	je	SHORT $LN12@stbtt_GetG
	test	ecx, ecx
	mov	eax, ebx
	cmovne	eax, DWORD PTR c$1[rsp+32]
	mov	DWORD PTR [rdi], eax
$LN12@stbtt_GetG:
; Line 2260
	mov	rdx, QWORD PTR x1$[rsp]
	test	rdx, rdx
	je	SHORT $LN13@stbtt_GetG
	test	ecx, ecx
	mov	eax, ebx
	cmovne	eax, DWORD PTR c$1[rsp+28]
	mov	DWORD PTR [rdx], eax
$LN13@stbtt_GetG:
; Line 2261
	mov	rax, QWORD PTR y1$[rsp]
	test	rax, rax
	je	$LN8@stbtt_GetG
	test	ecx, ecx
	cmovne	ebx, DWORD PTR c$1[rsp+36]
	mov	DWORD PTR [rax], ebx
; Line 1594
	jmp	$LN8@stbtt_GetG
$LN2@stbtt_GetG:
; Line 1595
	call	?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z ; stbtt__GetGlyfOffset
; Line 1596
	test	eax, eax
	jns	SHORT $LN4@stbtt_GetG
	xor	eax, eax
	jmp	$LN1@stbtt_GetG
$LN4@stbtt_GetG:
; Line 1598
	movsxd	r10, eax
	mov	ebx, 256				; 00000100H
	test	r14, r14
	je	SHORT $LN24@stbtt_GetG
	mov	r8, QWORD PTR [rsi+8]
; Line 1270
	movsx	ecx, bx
	movzx	eax, BYTE PTR [r8+r10+3]
	movzx	edx, BYTE PTR [r8+r10+2]
	imul	edx, ecx
	add	ax, dx
; Line 1598
	cwde
	mov	DWORD PTR [r14], eax
$LN24@stbtt_GetG:
; Line 1599
	test	rdi, rdi
	je	SHORT $LN6@stbtt_GetG
	mov	r8, QWORD PTR [rsi+8]
; Line 1270
	movsx	ecx, bx
	movzx	eax, BYTE PTR [r8+r10+5]
	movzx	edx, BYTE PTR [r8+r10+4]
	imul	edx, ecx
	add	ax, dx
; Line 1599
	cwde
	mov	DWORD PTR [rdi], eax
$LN6@stbtt_GetG:
; Line 1600
	mov	r9, QWORD PTR x1$[rsp]
	test	r9, r9
	je	SHORT $LN7@stbtt_GetG
	mov	r8, QWORD PTR [rsi+8]
; Line 1270
	movsx	ecx, bx
	movzx	eax, BYTE PTR [r8+r10+7]
	movzx	edx, BYTE PTR [r8+r10+6]
	imul	edx, ecx
	add	ax, dx
; Line 1600
	cwde
	mov	DWORD PTR [r9], eax
$LN7@stbtt_GetG:
; Line 1601
	mov	r11, QWORD PTR y1$[rsp]
	test	r11, r11
	je	SHORT $LN8@stbtt_GetG
	mov	r9, QWORD PTR [rsi+8]
; Line 1270
	movsx	edx, bx
	movzx	ecx, BYTE PTR [r9+r10+9]
	movzx	r8d, BYTE PTR [r9+r10+8]
	imul	r8d, edx
	add	r8w, cx
; Line 1601
	movsx	ecx, r8w
	mov	DWORD PTR [r11], ecx
$LN8@stbtt_GetG:
; Line 1603
	mov	eax, 1
$LN1@stbtt_GetG:
; Line 1604
	mov	rbx, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	mov	rdi, QWORD PTR [rsp+128]
	add	rsp, 96					; 00000060H
	pop	r14
	ret	0
stbtt_GetGlyphBox ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_GetGlyphHMetrics
_TEXT	SEGMENT
info$ = 24
glyph_index$ = 32
advanceWidth$ = 40
leftSideBearing$ = 48
stbtt_GetGlyphHMetrics PROC				; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2274
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	push	r15
; Line 2275
	mov	r14, QWORD PTR [rcx+8]
	mov	rbx, r9
	movsxd	rax, DWORD PTR [rcx+36]
	mov	r11, r8
	mov	edi, edx
	mov	r10, rcx
; Line 2276
	mov	r9d, 256				; 00000100H
; Line 1269
	movzx	ebp, BYTE PTR [rax+r14+34]
	movzx	r15d, BYTE PTR [rax+r14+35]
; Line 2276
	mov	esi, ebp
	shl	esi, 8
	add	esi, r15d
	cmp	edx, esi
	jge	SHORT $LN2@stbtt_GetG
; Line 2277
	test	r8, r8
	je	SHORT $LN20@stbtt_GetG
	movsxd	rcx, DWORD PTR [rcx+40]
	lea	eax, DWORD PTR [rdx*4]
	movsxd	r8, eax
	lea	rax, QWORD PTR [r14+rcx]
; Line 1270
	movsx	ecx, r9w
	movzx	edx, BYTE PTR [r8+rax]
	movzx	eax, BYTE PTR [r8+rax+1]
	imul	edx, ecx
	add	ax, dx
; Line 2277
	cwde
	mov	DWORD PTR [r11], eax
$LN20@stbtt_GetG:
; Line 2278
	test	rbx, rbx
	je	$LN7@stbtt_GetG
	movsxd	r8, DWORD PTR [r10+40]
	lea	eax, DWORD PTR [rdi*4]
	movsxd	rcx, eax
	mov	rax, QWORD PTR [r10+8]
	add	r8, rcx
; Line 1270
	movzx	edx, BYTE PTR [r8+rax+2]
	movzx	eax, BYTE PTR [r8+rax+3]
; Line 2279
	jmp	SHORT $LN22@stbtt_GetG
$LN2@stbtt_GetG:
; Line 2280
	test	r11, r11
	je	SHORT $LN21@stbtt_GetG
	movsxd	rcx, DWORD PTR [rcx+40]
	mov	rdx, rbp
	shl	rdx, 8
	add	rcx, r14
	add	rdx, r15
; Line 1270
	movzx	eax, BYTE PTR [rcx+rdx*4-3]
; Line 2280
	lea	r8, QWORD PTR [rcx+rdx*4]
; Line 1270
	movzx	edx, BYTE PTR [rcx+rdx*4-4]
	movsx	ecx, r9w
	imul	edx, ecx
	add	ax, dx
; Line 2280
	cwde
	mov	DWORD PTR [r11], eax
$LN21@stbtt_GetG:
; Line 2281
	test	rbx, rbx
	je	SHORT $LN7@stbtt_GetG
	sub	edi, esi
	mov	rcx, rbp
	shl	rcx, 8
	add	rcx, r15
	lea	eax, DWORD PTR [rdi+rdi]
	cdqe
	lea	r8, QWORD PTR [rax+rcx*4]
	movsxd	rax, DWORD PTR [r10+40]
	add	r8, rax
	add	r8, QWORD PTR [r10+8]
; Line 1270
	movzx	edx, BYTE PTR [r8]
	movzx	eax, BYTE PTR [r8+1]
$LN22@stbtt_GetG:
; Line 2283
	movsx	ecx, r9w
	imul	edx, ecx
	add	ax, dx
	cwde
	mov	DWORD PTR [rbx], eax
$LN7@stbtt_GetG:
	mov	rbx, QWORD PTR [rsp+24]
	mov	rbp, QWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+40]
	mov	rdi, QWORD PTR [rsp+48]
	pop	r15
	pop	r14
	ret	0
stbtt_GetGlyphHMetrics ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_GetFontVMetrics
_TEXT	SEGMENT
info$ = 8
ascent$ = 16
descent$ = 24
lineGap$ = 32
stbtt_GetFontVMetrics PROC				; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2582
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	mov	rsi, r9
	mov	rdi, r8
	mov	rbx, rcx
; Line 2583
	mov	ebp, 256				; 00000100H
	test	rdx, rdx
	je	SHORT $LN2@stbtt_GetF
	movsxd	r11, DWORD PTR [rcx+36]
	mov	rax, QWORD PTR [rcx+8]
; Line 1270
	movsx	r10d, bp
	movzx	r9d, BYTE PTR [r11+rax+4]
	movzx	eax, BYTE PTR [r11+rax+5]
	imul	r9d, r10d
	add	ax, r9w
; Line 2583
	cwde
	mov	DWORD PTR [rdx], eax
$LN2@stbtt_GetF:
; Line 2584
	test	rdi, rdi
	je	SHORT $LN3@stbtt_GetF
	movsxd	r8, DWORD PTR [rcx+36]
	mov	rax, QWORD PTR [rcx+8]
; Line 1270
	movsx	ecx, bp
	movzx	edx, BYTE PTR [r8+rax+6]
	movzx	eax, BYTE PTR [r8+rax+7]
	imul	edx, ecx
	add	ax, dx
; Line 2584
	cwde
	mov	DWORD PTR [rdi], eax
$LN3@stbtt_GetF:
; Line 2585
	test	rsi, rsi
	je	SHORT $LN4@stbtt_GetF
	movsxd	r8, DWORD PTR [rbx+36]
	mov	rax, QWORD PTR [rbx+8]
; Line 1270
	movsx	ecx, bp
	movzx	edx, BYTE PTR [r8+rax+8]
	movzx	eax, BYTE PTR [r8+rax+9]
	imul	edx, ecx
	add	ax, dx
; Line 2585
	cwde
	mov	DWORD PTR [rsi], eax
$LN4@stbtt_GetF:
; Line 2586
	mov	rbx, QWORD PTR [rsp+8]
	mov	rbp, QWORD PTR [rsp+16]
	mov	rsi, QWORD PTR [rsp+24]
	mov	rdi, QWORD PTR [rsp+32]
	ret	0
stbtt_GetFontVMetrics ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_ScaleForMappingEmToPixels
_TEXT	SEGMENT
info$ = 8
pixels$ = 16
stbtt_ScaleForMappingEmToPixels PROC			; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2615
	movsxd	rdx, DWORD PTR [rcx+28]
	mov	rax, QWORD PTR [rcx+8]
; Line 1269
	movzx	ecx, BYTE PTR [rdx+rax+18]
	movzx	eax, BYTE PTR [rdx+rax+19]
	shl	ecx, 8
	add	ecx, eax
	movd	xmm0, ecx
; Line 2616
	cvtdq2ps xmm0, xmm0
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
; Line 2617
	ret	0
stbtt_ScaleForMappingEmToPixels ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_ScaleForPixelHeight
_TEXT	SEGMENT
info$ = 8
height$ = 16
stbtt_ScaleForPixelHeight PROC				; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2609
	movsxd	r10, DWORD PTR [rcx+36]
; Line 1270
	mov	r11d, 256				; 00000100H
; Line 2609
	mov	r9, QWORD PTR [rcx+8]
; Line 1270
	movsx	eax, r11w
	movsx	ecx, r11w
	movzx	edx, BYTE PTR [r10+r9+6]
	imul	edx, eax
	movzx	eax, BYTE PTR [r10+r9+7]
	add	dx, ax
	movzx	eax, BYTE PTR [r10+r9+5]
; Line 2609
	movsx	r8d, dx
; Line 1270
	movzx	edx, BYTE PTR [r10+r9+4]
	imul	edx, ecx
	add	ax, dx
; Line 2609
	cwde
	sub	eax, r8d
	movd	xmm0, eax
; Line 2610
	cvtdq2ps xmm0, xmm0
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
; Line 2611
	ret	0
stbtt_ScaleForPixelHeight ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_FindGlyphIndex
_TEXT	SEGMENT
info$ = 80
unicode_codepoint$ = 88
stbtt_FindGlyphIndex PROC				; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1462
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	sub	rsp, 32					; 00000020H
; Line 1464
	mov	r14d, DWORD PTR [rcx+52]
; Line 1269
	mov	r13d, 256				; 00000100H
; Line 1463
	mov	rdi, QWORD PTR [rcx+8]
; Line 1466
	mov	esi, r14d
; Line 1269
	movzx	eax, r13w
; Line 1462
	movsxd	rbx, edx
; Line 1269
	movzx	r11d, BYTE PTR [r14+rdi]
	imul	r11d, eax
	movzx	eax, BYTE PTR [r14+rdi+1]
	add	r11w, ax
; Line 1467
	jne	SHORT $LN15@stbtt_Find
; Line 1468
	movzx	ecx, BYTE PTR [r14+rdi+2]
	movzx	eax, BYTE PTR [r14+rdi+3]
	shl	ecx, 8
	add	eax, -6
	add	ecx, eax
; Line 1469
	cmp	ebx, ecx
	jge	SHORT $LN11@stbtt_Find
; Line 1470
	lea	rax, QWORD PTR [r14+rbx]
	movzx	eax, BYTE PTR [rax+rdi+6]
	jmp	SHORT $LN1@stbtt_Find
$LN15@stbtt_Find:
; Line 1472
	cmp	r11w, 6
	jne	SHORT $LN18@stbtt_Find
; Line 1473
	movzx	edx, BYTE PTR [r14+rdi+6]
	movzx	eax, BYTE PTR [r14+rdi+7]
	shl	edx, 8
	add	edx, eax
; Line 1475
	cmp	ebx, edx
	jb	SHORT $LN11@stbtt_Find
; Line 1474
	movzx	eax, BYTE PTR [r14+rdi+8]
	movzx	ecx, BYTE PTR [r14+rdi+9]
	shl	eax, 8
; Line 1475
	add	eax, edx
	add	ecx, eax
	cmp	ebx, ecx
	jae	SHORT $LN11@stbtt_Find
; Line 1476
	sub	ebx, edx
	lea	eax, DWORD PTR [rbx+rbx]
	add	rax, rsi
	movzx	edx, BYTE PTR [rax+rdi+10]
	movzx	eax, BYTE PTR [rax+rdi+11]
	shl	edx, 8
	add	eax, edx
	jmp	SHORT $LN1@stbtt_Find
$LN18@stbtt_Find:
; Line 1478
	cmp	r11w, 2
	jne	SHORT $LN21@stbtt_Find
; Line 1479
	mov	r8d, 1479				; 000005c7H
$LN90@stbtt_Find:
; Line 1552
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
$LN11@stbtt_Find:
	xor	eax, eax
$LN1@stbtt_Find:
	mov	rbx, QWORD PTR [rsp+88]
	mov	rbp, QWORD PTR [rsp+96]
	add	rsp, 32					; 00000020H
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN21@stbtt_Find:
; Line 1481
	cmp	r11w, 4
	jne	$LN23@stbtt_Find
; Line 1269
	movzx	eax, BYTE PTR [r14+rdi+7]
; Line 1491
	mov	ebp, 65535				; 0000ffffH
; Line 1269
	movzx	r12d, BYTE PTR [r14+rdi+6]
	movzx	edx, BYTE PTR [r14+rdi+8]
	movzx	r10d, BYTE PTR [r14+rdi+9]
	movzx	r8d, BYTE PTR [r14+rdi+12]
	movzx	r11d, BYTE PTR [r14+rdi+11]
	movzx	ecx, r13w
	imul	r12d, ecx
	movzx	ecx, r13w
	imul	edx, ecx
	movzx	ecx, r13w
	add	r12w, ax
	movzx	eax, BYTE PTR [r14+rdi+13]
; Line 1482
	shr	r12w, 1
; Line 1269
	add	r10w, dx
	movzx	edx, BYTE PTR [r14+rdi+10]
	imul	edx, ecx
; Line 1488
	add	r14d, 14
; Line 1269
	movzx	ecx, r13w
; Line 1489
	mov	r9d, r14d
; Line 1269
	imul	r8d, ecx
; Line 1483
	shr	r10w, 1
; Line 1269
	add	r11w, dx
	add	r8w, ax
; Line 1485
	shr	r8w, 1
; Line 1491
	cmp	ebx, ebp
	jg	$LN11@stbtt_Find
; Line 1496
	movzx	eax, r8w
	mov	QWORD PTR [rsp+80], r15
	lea	rcx, QWORD PTR [r14+rax*2]
	movzx	edx, BYTE PTR [rcx+rdi]
	movzx	eax, BYTE PTR [rcx+rdi+1]
	shl	edx, 8
	add	edx, eax
	cmp	ebx, edx
	jl	SHORT $LN26@stbtt_Find
; Line 1497
	movzx	eax, r8w
	lea	r9d, DWORD PTR [r14+rax*2]
$LN26@stbtt_Find:
; Line 1500
	add	r9d, -2					; fffffffeH
; Line 1501
	test	r11w, r11w
	je	SHORT $LN6@stbtt_Find
	npad	10
$LL5@stbtt_Find:
; Line 1503
	shr	r10w, 1
	movzx	edx, r10w
; Line 1504
	mov	ecx, r9d
	add	rcx, rdi
; Line 1505
	movzx	r8d, BYTE PTR [rcx+rdx*2]
	movzx	eax, BYTE PTR [rcx+rdx*2+1]
	shl	r8d, 8
	add	r8d, eax
	cmp	ebx, r8d
	jle	SHORT $LN27@stbtt_Find
; Line 1506
	movzx	eax, r10w
	lea	r9d, DWORD PTR [r9+rax*2]
$LN27@stbtt_Find:
; Line 1507
	add	r11w, bp
	jne	SHORT $LL5@stbtt_Find
$LN6@stbtt_Find:
; Line 1515
	mov	r15, QWORD PTR [rsp+80]
	sub	r9d, r14d
	add	r9d, 2
	shr	r9d, 1
	movzx	ebp, r9w
	add	rbp, rbp
	lea	rax, QWORD PTR [r14+rbp]
	movzx	ecx, BYTE PTR [rax+rdi]
	movzx	eax, BYTE PTR [rax+rdi+1]
	shl	ecx, 8
	add	ecx, eax
	cmp	ebx, ecx
	jle	SHORT $LN7@stbtt_Find
	mov	r8d, 1515				; 000005ebH
	lea	rdx, OFFSET FLAT:??_C@_1EO@KALNALDI@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1HA@EBGBJFDE@?$AAu?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAc?$AAo?$AAd?$AAe?$AAp?$AAo?$AAi@
	call	QWORD PTR __imp__wassert
$LN7@stbtt_Find:
; Line 1516
	movzx	r10d, r12w
	lea	ecx, DWORD PTR [r10+r10]
	add	rcx, rbp
	add	rcx, rsi
; Line 1517
	movzx	r8d, BYTE PTR [rcx+rdi+16]
	movzx	eax, BYTE PTR [rcx+rdi+17]
	shl	r8d, 8
	add	r8d, eax
	cmp	ebx, r8d
	jl	$LN11@stbtt_Find
; Line 1520
	lea	eax, DWORD PTR [r10+r10*2]
; Line 1269
	movzx	ecx, r13w
; Line 1520
	add	eax, eax
	mov	r11d, eax
	lea	rdx, QWORD PTR [rax+rbp]
	add	rdx, rsi
; Line 1269
	movzx	r9d, BYTE PTR [rdx+rdi+16]
	movzx	eax, BYTE PTR [rdx+rdi+17]
	imul	r9d, ecx
	add	r9w, ax
; Line 1521
	jne	SHORT $LN29@stbtt_Find
; Line 1522
	lea	ecx, DWORD PTR [r10*4]
	add	rcx, rbp
	add	rcx, rsi
; Line 1270
	movzx	r8d, BYTE PTR [rcx+rdi+17]
	movzx	edx, BYTE PTR [rcx+rdi+16]
	movzx	ecx, r13w
	imul	edx, ecx
; Line 1522
	add	r8w, dx
	add	r8w, bx
	movzx	eax, r8w
	jmp	$LN1@stbtt_Find
$LN29@stbtt_Find:
; Line 1524
	sub	ebx, r8d
	movzx	ecx, r9w
	lea	eax, DWORD PTR [rbx+rbx]
	cdqe
	add	rax, r11
	add	rcx, rax
	add	rcx, rbp
	add	rcx, rsi
	movzx	eax, BYTE PTR [rcx+rdi+17]
	movzx	ecx, BYTE PTR [rcx+rdi+16]
	shl	ecx, 8
	add	eax, ecx
	jmp	$LN1@stbtt_Find
$LN23@stbtt_Find:
; Line 1526
	lea	eax, DWORD PTR [r11-12]
	cmp	ax, 1
	jbe	SHORT $LN31@stbtt_Find
; Line 1550
	mov	r8d, 1550				; 0000060eH
; Line 1551
	jmp	$LN90@stbtt_Find
$LN31@stbtt_Find:
; Line 1271
	movzx	eax, BYTE PTR [r14+rdi+13]
; Line 1529
	xor	edx, edx
; Line 1271
	movzx	r10d, BYTE PTR [r14+rdi+12]
	shl	r10d, 8
	add	r10d, eax
	movzx	eax, BYTE PTR [r14+rdi+14]
	shl	r10d, 8
	add	r10d, eax
	movzx	eax, BYTE PTR [r14+rdi+15]
	shl	r10d, 8
	add	r10d, eax
; Line 1531
	test	r10d, r10d
	jle	$LN11@stbtt_Find
$LL10@stbtt_Find:
; Line 1532
	mov	eax, r10d
	sub	eax, edx
	sar	eax, 1
	add	eax, edx
; Line 1533
	lea	ecx, DWORD PTR [rax+rax*2]
	shl	ecx, 2
	movsxd	r14, ecx
	lea	r8, QWORD PTR [r14+rsi]
	add	r8, rdi
; Line 1271
	movzx	r9d, BYTE PTR [r8+17]
	movzx	ecx, BYTE PTR [r8+18]
	shl	ecx, 8
	shl	r9d, 16
	add	r9d, ecx
	movzx	ecx, BYTE PTR [r8+16]
	shl	ecx, 24
	add	r9d, ecx
	movzx	ecx, BYTE PTR [r8+19]
	add	r9d, ecx
; Line 1535
	cmp	ebx, r9d
	jae	SHORT $LN32@stbtt_Find
; Line 1536
	mov	r10d, eax
	jmp	SHORT $LN37@stbtt_Find
$LN32@stbtt_Find:
; Line 1271
	movzx	edx, BYTE PTR [r8+21]
	movzx	ecx, BYTE PTR [r8+22]
	shl	ecx, 8
	shl	edx, 16
	add	edx, ecx
	movzx	ecx, BYTE PTR [r8+20]
	shl	ecx, 24
	add	edx, ecx
	movzx	ecx, BYTE PTR [r8+23]
	add	edx, ecx
; Line 1537
	cmp	ebx, edx
	jbe	SHORT $LN34@stbtt_Find
; Line 1538
	lea	edx, DWORD PTR [rax+1]
$LN37@stbtt_Find:
; Line 1531
	cmp	edx, r10d
	jl	SHORT $LL10@stbtt_Find
; Line 1526
	jmp	$LN11@stbtt_Find
$LN34@stbtt_Find:
; Line 1540
	lea	rcx, QWORD PTR [r14+rsi]
	add	rcx, rdi
; Line 1271
	movzx	edx, BYTE PTR [rcx+25]
	movzx	eax, BYTE PTR [rcx+26]
	shl	eax, 8
	shl	edx, 16
	add	edx, eax
	movzx	eax, BYTE PTR [rcx+24]
	shl	eax, 24
	add	edx, eax
	movzx	eax, BYTE PTR [rcx+27]
	add	edx, eax
; Line 1541
	cmp	r11w, 12
	jne	SHORT $LN36@stbtt_Find
; Line 1542
	sub	edx, r9d
	lea	eax, DWORD PTR [rbx+rdx]
	jmp	$LN1@stbtt_Find
$LN36@stbtt_Find:
; Line 1544
	mov	eax, edx
	jmp	$LN1@stbtt_Find
stbtt_FindGlyphIndex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_InitFont
_TEXT	SEGMENT
info$ = 8
data$ = 16
offset$ = 24
stbtt_InitFont PROC					; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 4786
	jmp	?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z ; stbtt_InitFont_internal
stbtt_InitFont ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_GetFontOffsetForIndex
_TEXT	SEGMENT
data$ = 48
index$ = 56
stbtt_GetFontOffsetForIndex PROC			; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 4775
	sub	rsp, 40					; 00000028H
	mov	r8, rcx
; Line 1305
	call	?stbtt__isfont@@YAHPEAE@Z		; stbtt__isfont
	test	eax, eax
	je	SHORT $LN4@stbtt_GetF
; Line 1306
	neg	edx
	sbb	eax, eax
; Line 4777
	add	rsp, 40					; 00000028H
	ret	0
$LN4@stbtt_GetF:
; Line 1309
	cmp	BYTE PTR [rcx], 116			; 00000074H
	jne	$LN6@stbtt_GetF
	cmp	BYTE PTR [rcx+1], 116			; 00000074H
	jne	$LN6@stbtt_GetF
	cmp	BYTE PTR [rcx+2], 99			; 00000063H
	jne	$LN6@stbtt_GetF
	cmp	BYTE PTR [rcx+3], 102			; 00000066H
	jne	$LN6@stbtt_GetF
; Line 1271
	movzx	ecx, BYTE PTR [rcx+5]
	movzx	eax, BYTE PTR [r8+6]
	shl	eax, 8
	shl	ecx, 16
	add	ecx, eax
	movzx	eax, BYTE PTR [r8+4]
	shl	eax, 24
	add	ecx, eax
	movzx	eax, BYTE PTR [r8+7]
	add	eax, -65536				; ffff0000H
	add	ecx, eax
; Line 1311
	test	ecx, -65537				; fffeffffH
	jne	SHORT $LN6@stbtt_GetF
; Line 1272
	movzx	eax, BYTE PTR [r8+9]
	movzx	ecx, BYTE PTR [r8+8]
	shl	ecx, 8
	add	ecx, eax
	movzx	eax, BYTE PTR [r8+10]
	shl	ecx, 8
	add	ecx, eax
	movzx	eax, BYTE PTR [r8+11]
	shl	ecx, 8
	add	ecx, eax
; Line 1313
	cmp	edx, ecx
	jge	SHORT $LN6@stbtt_GetF
; Line 1315
	lea	eax, DWORD PTR [rdx*4]
	movsxd	rdx, eax
	add	rdx, r8
; Line 1271
	movzx	ecx, BYTE PTR [rdx+13]
	movzx	eax, BYTE PTR [rdx+12]
	shl	eax, 8
	add	eax, ecx
	movzx	ecx, BYTE PTR [rdx+14]
	shl	eax, 8
	add	eax, ecx
	movzx	ecx, BYTE PTR [rdx+15]
	shl	eax, 8
	add	eax, ecx
; Line 4777
	add	rsp, 40					; 00000028H
	ret	0
$LN6@stbtt_GetF:
	mov	eax, -1
	add	rsp, 40					; 00000028H
	ret	0
stbtt_GetFontOffsetForIndex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_PackFontRangesRenderIntoRects
_TEXT	SEGMENT
return_value$1$ = 80
j$1$ = 84
advance$1$ = 88
old_h_over$1$ = 92
old_v_over$1$ = 96
$T1 = 104
tv2111 = 112
tv2134 = 120
c$2 = 128
y0$1$ = 416
spc$ = 416
info$ = 424
ranges$ = 432
x0$1$ = 440
num_ranges$ = 440
rects$ = 448
stbtt_PackFontRangesRenderIntoRects PROC		; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 4046
	mov	r11, rsp
	push	rbp
	push	rdi
	push	r15
	sub	rsp, 384				; 00000180H
; Line 4050
	mov	eax, DWORD PTR [rcx+36]
	mov	r15d, 1
	mov	DWORD PTR old_h_over$1$[rsp], eax
	mov	rbp, rdx
; Line 4051
	mov	eax, DWORD PTR [rcx+40]
	mov	rdi, rcx
	mov	DWORD PTR old_v_over$1$[rsp], eax
; Line 4054
	movsxd	rax, r9d
	mov	QWORD PTR tv2134[rsp], rax
	mov	DWORD PTR return_value$1$[rsp], r15d
	test	r9d, r9d
	jle	$LN3@stbtt_Pack
	mov	QWORD PTR [r11+16], rbx
	xor	r9d, r9d
	mov	QWORD PTR [r11-32], rsi
	mov	ebx, 256				; 00000100H
	mov	QWORD PTR [r11-40], r12
	mov	QWORD PTR [r11-48], r13
	mov	QWORD PTR [r11-56], r14
	lea	r14, QWORD PTR [r8+8]
	movaps	XMMWORD PTR [r11-72], xmm6
	movaps	XMMWORD PTR [r11-88], xmm7
	movaps	XMMWORD PTR [r11-104], xmm8
	movaps	XMMWORD PTR [r11-120], xmm9
	xorps	xmm9, xmm9
	movaps	XMMWORD PTR [r11-136], xmm10
	movaps	XMMWORD PTR [r11-152], xmm11
	movaps	XMMWORD PTR [r11-168], xmm12
	movaps	XMMWORD PTR [r11-184], xmm13
	movaps	XMMWORD PTR [r11-200], xmm14
	movss	xmm14, DWORD PTR __real@3f800000
	movaps	XMMWORD PTR [r11-216], xmm15
	movss	xmm15, DWORD PTR __xmm@80000000800000008000000080000000
	mov	QWORD PTR $T1[rsp], r9
	npad	3
$LL4@stbtt_Pack:
; Line 4055
	movss	xmm8, DWORD PTR [r14-8]
; Line 4056
	comiss	xmm8, xmm9
	jbe	SHORT $LN13@stbtt_Pack
; Line 2609
	movsxd	r11, DWORD PTR [rbp+36]
	mov	r10, QWORD PTR [rbp+8]
; Line 1270
	movsx	ecx, bx
	movzx	r8d, BYTE PTR [r11+r10+7]
	movzx	edx, BYTE PTR [r11+r10+6]
	movzx	eax, BYTE PTR [r11+r10+4]
	imul	edx, ecx
	movsx	ecx, bx
	imul	eax, ecx
	add	r8w, dx
; Line 2609
	movsx	r9d, r8w
; Line 1270
	movzx	r8d, BYTE PTR [r11+r10+5]
	add	ax, r8w
; Line 2609
	cwde
	sub	eax, r9d
; Line 4056
	mov	r9, QWORD PTR $T1[rsp]
	movd	xmm0, eax
; Line 2610
	cvtdq2ps xmm0, xmm0
	divss	xmm8, xmm0
; Line 4056
	jmp	SHORT $LN14@stbtt_Pack
$LN13@stbtt_Pack:
; Line 2615
	movsxd	rcx, DWORD PTR [rbp+28]
	mov	rax, QWORD PTR [rbp+8]
; Line 1269
	movzx	edx, BYTE PTR [rcx+rax+18]
	movzx	eax, BYTE PTR [rcx+rax+19]
	shl	edx, 8
	add	edx, eax
	movd	xmm0, edx
; Line 2616
	cvtdq2ps xmm0, xmm0
	divss	xmm8, xmm0
	xorps	xmm8, xmm15
$LN14@stbtt_Pack:
; Line 4058
	movzx	edx, BYTE PTR [r14+24]
	xorps	xmm0, xmm0
	mov	DWORD PTR [rdi+36], edx
; Line 4060
	movaps	xmm12, xmm14
	movzx	ecx, BYTE PTR [r14+25]
; Line 4061
	movaps	xmm13, xmm14
	mov	DWORD PTR [rdi+40], ecx
	cvtsi2ss xmm0, rdx
	divss	xmm12, xmm0
	xorps	xmm0, xmm0
	cvtsi2ss xmm0, rcx
	divss	xmm13, xmm0
; Line 3978
	test	edx, edx
	jne	SHORT $LN28@stbtt_Pack
; Line 3979
	movaps	xmm11, xmm9
	jmp	SHORT $LN27@stbtt_Pack
$LN28@stbtt_Pack:
; Line 3985
	mov	eax, 1
	movd	xmm0, edx
	sub	eax, edx
	cvtdq2ps xmm0, xmm0
	movd	xmm11, eax
	cvtdq2ps xmm11, xmm11
	addss	xmm0, xmm0
	divss	xmm11, xmm0
$LN27@stbtt_Pack:
; Line 3978
	test	ecx, ecx
	jne	SHORT $LN31@stbtt_Pack
; Line 3979
	movaps	xmm10, xmm9
	jmp	SHORT $LN30@stbtt_Pack
$LN31@stbtt_Pack:
; Line 3985
	mov	eax, 1
	movd	xmm0, ecx
	sub	eax, ecx
	cvtdq2ps xmm0, xmm0
	movd	xmm10, eax
	cvtdq2ps xmm10, xmm10
	addss	xmm0, xmm0
	divss	xmm10, xmm0
$LN30@stbtt_Pack:
; Line 4064
	xor	r12d, r12d
	mov	DWORD PTR j$1$[rsp], r12d
	cmp	DWORD PTR [r14+8], r12d
	jle	$LN2@stbtt_Pack
	mov	rbx, QWORD PTR rects$[rsp]
	xor	ecx, ecx
	mov	rax, r9
	mov	QWORD PTR tv2111[rsp], rcx
	shl	rax, 4
	add	rbx, 8
	xor	esi, esi
	add	rbx, rax
	npad	7
$LL7@stbtt_Pack:
; Line 4066
	cmp	DWORD PTR [rbx+4], 0
	je	$LN8@stbtt_Pack
	cmp	WORD PTR [rbx-4], 0
	je	$LN8@stbtt_Pack
	cmp	WORD PTR [rbx-2], 0
	je	$LN8@stbtt_Pack
; Line 4069
	mov	rax, QWORD PTR [r14]
	mov	r15, QWORD PTR [r14+16]
	test	rax, rax
	jne	SHORT $LN15@stbtt_Pack
	mov	edx, DWORD PTR [r14-4]
	add	edx, r12d
	jmp	SHORT $LN16@stbtt_Pack
$LN15@stbtt_Pack:
	mov	edx, DWORD PTR [rcx+rax]
$LN16@stbtt_Pack:
; Line 4070
	mov	rcx, rbp
	call	stbtt_FindGlyphIndex
	mov	r13d, eax
; Line 4071
	movzx	eax, WORD PTR [rdi+28]
; Line 4074
	add	WORD PTR [rbx], ax
; Line 4075
	add	WORD PTR [rbx+2], ax
; Line 4076
	sub	WORD PTR [rbx-4], ax
; Line 4077
	sub	WORD PTR [rbx-2], ax
; Line 2275
	movsxd	rax, DWORD PTR [rbp+36]
	mov	r9, QWORD PTR [rbp+8]
; Line 2276
	movsxd	r8, DWORD PTR [rbp+40]
; Line 1269
	movzx	ecx, BYTE PTR [rax+r9+34]
	movzx	edx, BYTE PTR [rax+r9+35]
; Line 2276
	mov	eax, ecx
	shl	eax, 8
	add	eax, edx
	cmp	r13d, eax
	jge	SHORT $LN34@stbtt_Pack
; Line 2277
	lea	eax, DWORD PTR [r13*4]
; Line 1270
	mov	ecx, 256				; 00000100H
; Line 2277
	movsxd	rdx, eax
	add	rdx, r8
; Line 1270
	movsx	ecx, cx
	movzx	r8d, BYTE PTR [rdx+r9]
	movzx	eax, BYTE PTR [rdx+r9+1]
	imul	r8d, ecx
	add	r8w, ax
; Line 2279
	jmp	SHORT $LN96@stbtt_Pack
$LN34@stbtt_Pack:
; Line 2280
	shl	rcx, 8
	add	rcx, rdx
	lea	r8, QWORD PTR [r8+rcx*4]
; Line 1270
	mov	ecx, 256				; 00000100H
	movzx	edx, BYTE PTR [r8+r9-4]
	movzx	r8d, BYTE PTR [r8+r9-3]
	movsx	ecx, cx
	imul	edx, ecx
	add	r8w, dx
$LN96@stbtt_Pack:
; Line 1592
	cmp	DWORD PTR [rbp+76], 0
	xorps	xmm6, xmm6
; Line 4079
	movsx	eax, r8w
	xorps	xmm7, xmm7
	mov	DWORD PTR advance$1$[rsp], eax
; Line 1592
	mov	edx, r13d
; Line 4079
	mov	eax, DWORD PTR [rdi+40]
; Line 1592
	mov	rcx, rbp
; Line 4079
	cvtsi2ss xmm6, rax
	mov	eax, DWORD PTR [rdi+36]
	cvtsi2ss xmm7, rax
	mulss	xmm6, xmm8
	mulss	xmm7, xmm8
; Line 1592
	je	SHORT $LN66@stbtt_Pack
; Line 2256
	xor	r12d, r12d
	mov	QWORD PTR c$2[rsp], 1
	xorps	xmm0, xmm0
	mov	QWORD PTR c$2[rsp+40], r12
	xorps	xmm1, xmm1
	mov	DWORD PTR c$2[rsp+48], r12d
; Line 2257
	lea	r8, QWORD PTR c$2[rsp]
	movups	XMMWORD PTR c$2[rsp+8], xmm0
	movdqu	XMMWORD PTR c$2[rsp+24], xmm1
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
; Line 2261
	test	eax, eax
	mov	r11d, r12d
	cmovne	r11d, DWORD PTR c$2[rsp+36]
	cmovne	r12d, DWORD PTR c$2[rsp+24]
; Line 1594
	jmp	SHORT $LN72@stbtt_Pack
$LN66@stbtt_Pack:
; Line 1595
	call	?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z ; stbtt__GetGlyfOffset
; Line 1596
	test	eax, eax
	js	$LN103@stbtt_Pack
; Line 1598
	mov	r9, QWORD PTR [rbp+8]
; Line 1270
	mov	r12d, 256				; 00000100H
; Line 1598
	movsxd	r10, eax
; Line 1270
	movsx	ecx, r12w
	movzx	edx, BYTE PTR [r10+r9+8]
	movzx	eax, BYTE PTR [r10+r9+9]
	movzx	r8d, BYTE PTR [r10+r9+3]
	imul	edx, ecx
	movsx	ecx, r12w
	add	dx, ax
; Line 1601
	movsx	r11d, dx
; Line 1270
	movzx	edx, BYTE PTR [r10+r9+2]
	imul	edx, ecx
	add	r8w, dx
; Line 1598
	movsx	r12d, r8w
$LN72@stbtt_Pack:
	movd	xmm1, r11d
; Line 2641
	movaps	xmm0, xmm9
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, xmm6
	subss	xmm0, xmm1
	call	floorf
	cvttss2si eax, xmm0
	movd	xmm0, r12d
; Line 2640
	cvtdq2ps xmm0, xmm0
; Line 2641
	mov	DWORD PTR y0$1$[rsp], eax
	mulss	xmm0, xmm7
	addss	xmm0, xmm9
	call	floorf
	mov	r12d, DWORD PTR j$1$[rsp]
	cvttss2si eax, xmm0
	jmp	SHORT $LN105@stbtt_Pack
$LN103@stbtt_Pack:
; Line 2635
	xor	eax, eax
	mov	DWORD PTR y0$1$[rsp], eax
$LN105@stbtt_Pack:
; Line 4083
	mov	ecx, DWORD PTR [rdi+36]
	xorps	xmm1, xmm1
	mov	r10d, DWORD PTR [rdi+24]
	xorps	xmm0, xmm0
	movzx	r9d, WORD PTR [rbx-2]
	movzx	r8d, WORD PTR [rbx-4]
	mov	DWORD PTR x0$1$[rsp], eax
	sub	r8d, ecx
	mov	eax, DWORD PTR [rdi+40]
	inc	r8d
	sub	r9d, eax
	mov	DWORD PTR [rsp+72], r13d
	movss	DWORD PTR [rsp+64], xmm9
	inc	r9d
	cvtsi2ss xmm0, rcx
	mov	rcx, rbp
	cvtsi2ss xmm1, rax
	movzx	eax, WORD PTR [rbx+2]
	imul	eax, r10d
	movss	DWORD PTR [rsp+56], xmm9
	mulss	xmm1, xmm8
	mulss	xmm0, xmm8
	movsxd	rdx, eax
	movzx	eax, WORD PTR [rbx]
	movss	DWORD PTR [rsp+48], xmm1
	add	rdx, rax
	add	rdx, QWORD PTR [rdi+48]
	movss	DWORD PTR [rsp+40], xmm0
	mov	DWORD PTR [rsp+32], r10d
	call	stbtt_MakeGlyphBitmapSubpixel
; Line 4093
	mov	r10d, DWORD PTR [rdi+36]
	cmp	r10d, 1
	jbe	SHORT $LN10@stbtt_Pack
; Line 4094
	movzx	eax, WORD PTR [rbx+2]
	mov	r9d, DWORD PTR [rdi+24]
	movzx	r8d, WORD PTR [rbx-2]
	movzx	edx, WORD PTR [rbx-4]
	imul	eax, r9d
	mov	DWORD PTR [rsp+32], r10d
	movsxd	rcx, eax
	movzx	eax, WORD PTR [rbx]
	add	rcx, rax
	add	rcx, QWORD PTR [rdi+48]
	call	?stbtt__h_prefilter@@YAXPEAEHHHI@Z	; stbtt__h_prefilter
$LN10@stbtt_Pack:
; Line 4098
	mov	r10d, DWORD PTR [rdi+40]
	cmp	r10d, 1
	jbe	SHORT $LN11@stbtt_Pack
; Line 4099
	movzx	eax, WORD PTR [rbx+2]
	mov	r9d, DWORD PTR [rdi+24]
	movzx	r8d, WORD PTR [rbx-2]
	movzx	edx, WORD PTR [rbx-4]
	imul	eax, r9d
	mov	DWORD PTR [rsp+32], r10d
	movsxd	rcx, eax
	movzx	eax, WORD PTR [rbx]
	add	rcx, rax
	add	rcx, QWORD PTR [rdi+48]
	call	?stbtt__v_prefilter@@YAXPEAEHHHI@Z	; stbtt__v_prefilter
$LN11@stbtt_Pack:
; Line 4103
	movzx	eax, WORD PTR [rbx]
; Line 4108
	mov	ecx, DWORD PTR x0$1$[rsp]
; Line 4109
	mov	edx, DWORD PTR y0$1$[rsp]
	movd	xmm0, DWORD PTR advance$1$[rsp]
; Line 4112
	mov	r9, QWORD PTR $T1[rsp]
	cvtdq2ps xmm0, xmm0
	mov	WORD PTR [rsi+r15], ax
	movzx	eax, WORD PTR [rbx+2]
	mov	WORD PTR [rsi+r15+2], ax
	movzx	eax, WORD PTR [rbx-4]
	add	ax, WORD PTR [rbx]
	mulss	xmm0, xmm8
	mov	WORD PTR [rsi+r15+4], ax
	movzx	eax, WORD PTR [rbx+2]
	add	ax, WORD PTR [rbx-2]
	movss	DWORD PTR [rsi+r15+16], xmm0
	mov	WORD PTR [rsi+r15+6], ax
	movd	xmm1, ecx
	cvtdq2ps xmm1, xmm1
	movd	xmm0, edx
	cvtdq2ps xmm0, xmm0
	mulss	xmm1, xmm12
	mulss	xmm0, xmm13
	addss	xmm1, xmm11
	addss	xmm0, xmm10
	movss	DWORD PTR [rsi+r15+8], xmm1
	movss	DWORD PTR [rsi+r15+12], xmm0
	movzx	eax, WORD PTR [rbx-4]
	add	eax, ecx
	mov	rcx, QWORD PTR tv2111[rsp]
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm12
	addss	xmm0, xmm11
	movss	DWORD PTR [rsi+r15+20], xmm0
	movzx	eax, WORD PTR [rbx-2]
	add	eax, edx
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm13
	addss	xmm0, xmm10
	movss	DWORD PTR [rsi+r15+24], xmm0
	mov	r15d, DWORD PTR return_value$1$[rsp]
	jmp	SHORT $LN9@stbtt_Pack
$LN8@stbtt_Pack:
; Line 4113
	xor	r15d, r15d
	mov	DWORD PTR return_value$1$[rsp], r15d
$LN9@stbtt_Pack:
; Line 4116
	inc	r9
	inc	r12d
	add	rcx, 4
	mov	QWORD PTR $T1[rsp], r9
	add	rbx, 16
	mov	DWORD PTR j$1$[rsp], r12d
	add	rsi, 28
	mov	QWORD PTR tv2111[rsp], rcx
	cmp	r12d, DWORD PTR [r14+8]
	jl	$LL7@stbtt_Pack
	mov	ebx, 256				; 00000100H
$LN2@stbtt_Pack:
; Line 4054
	add	r14, 40					; 00000028H
	sub	QWORD PTR tv2134[rsp], 1
	jne	$LL4@stbtt_Pack
	movaps	xmm15, XMMWORD PTR [rsp+192]
	movaps	xmm14, XMMWORD PTR [rsp+208]
	movaps	xmm13, XMMWORD PTR [rsp+224]
	movaps	xmm12, XMMWORD PTR [rsp+240]
	movaps	xmm11, XMMWORD PTR [rsp+256]
	movaps	xmm10, XMMWORD PTR [rsp+272]
	movaps	xmm9, XMMWORD PTR [rsp+288]
	movaps	xmm8, XMMWORD PTR [rsp+304]
	movaps	xmm7, XMMWORD PTR [rsp+320]
	movaps	xmm6, XMMWORD PTR [rsp+336]
	mov	r14, QWORD PTR [rsp+352]
	mov	r13, QWORD PTR [rsp+360]
	mov	r12, QWORD PTR [rsp+368]
	mov	rsi, QWORD PTR [rsp+376]
	mov	rbx, QWORD PTR [rsp+424]
$LN3@stbtt_Pack:
; Line 4121
	mov	eax, DWORD PTR old_h_over$1$[rsp]
	mov	DWORD PTR [rdi+36], eax
; Line 4122
	mov	eax, DWORD PTR old_v_over$1$[rsp]
	mov	DWORD PTR [rdi+40], eax
; Line 4124
	mov	eax, r15d
; Line 4125
	add	rsp, 384				; 00000180H
	pop	r15
	pop	rdi
	pop	rbp
	ret	0
stbtt_PackFontRangesRenderIntoRects ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_GetPackedQuad
_TEXT	SEGMENT
chardata$ = 96
pw$ = 104
ph$ = 112
char_index$ = 120
xpos$ = 128
ypos$ = 136
q$ = 144
align_to_integer$ = 152
stbtt_GetPackedQuad PROC				; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 4194
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 80					; 00000050H
; Line 4196
	mov	rsi, QWORD PTR xpos$[rsp]
	mov	rdi, QWORD PTR q$[rsp]
	movaps	XMMWORD PTR [rsp+48], xmm8
	movss	xmm8, DWORD PTR __real@3f800000
	movaps	XMMWORD PTR [rsp+32], xmm9
	movaps	xmm9, xmm8
	movd	xmm0, edx
	cvtdq2ps xmm0, xmm0
	movsxd	rax, r9d
	imul	rbx, rax, 28
	divss	xmm9, xmm0
	add	rbx, rcx
; Line 4198
	cmp	DWORD PTR align_to_integer$[rsp], 0
	movd	xmm0, r8d
	cvtdq2ps xmm0, xmm0
	divss	xmm8, xmm0
	movss	xmm0, DWORD PTR [rsi]
	addss	xmm0, DWORD PTR [rbx+8]
	je	SHORT $LN2@stbtt_GetP
; Line 4199
	addss	xmm0, DWORD PTR __real@3f000000
	movaps	XMMWORD PTR [rsp+64], xmm7
	call	floorf
	cvttss2si eax, xmm0
	xorps	xmm7, xmm7
	cvtsi2ss xmm7, eax
; Line 4200
	mov	rax, QWORD PTR ypos$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rbx+12]
	addss	xmm0, DWORD PTR __real@3f000000
	call	floorf
; Line 4201
	movss	DWORD PTR [rdi], xmm7
	xorps	xmm1, xmm1
	cvttss2si eax, xmm0
	cvtsi2ss xmm1, eax
; Line 4202
	movss	DWORD PTR [rdi+4], xmm1
; Line 4203
	addss	xmm7, DWORD PTR [rbx+20]
	subss	xmm7, DWORD PTR [rbx+8]
	movss	DWORD PTR [rdi+16], xmm7
; Line 4204
	addss	xmm1, DWORD PTR [rbx+24]
	movaps	xmm7, XMMWORD PTR [rsp+64]
	subss	xmm1, DWORD PTR [rbx+12]
; Line 4205
	jmp	SHORT $LN3@stbtt_GetP
$LN2@stbtt_GetP:
; Line 4207
	mov	rax, QWORD PTR ypos$[rsp]
	movss	DWORD PTR [rdi], xmm0
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rbx+12]
	movss	DWORD PTR [rdi+4], xmm0
; Line 4208
	movss	xmm1, DWORD PTR [rbx+20]
	addss	xmm1, DWORD PTR [rsi]
	movss	DWORD PTR [rdi+16], xmm1
; Line 4209
	movss	xmm1, DWORD PTR [rbx+24]
	addss	xmm1, DWORD PTR [rax]
$LN3@stbtt_GetP:
; Line 4212
	movss	DWORD PTR [rdi+20], xmm1
	movzx	eax, WORD PTR [rbx]
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm9
	movss	DWORD PTR [rdi+8], xmm0
; Line 4213
	movzx	eax, WORD PTR [rbx+2]
	movd	xmm1, eax
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, xmm8
	movss	DWORD PTR [rdi+12], xmm1
; Line 4214
	movzx	eax, WORD PTR [rbx+4]
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, xmm9
; Line 4218
	movaps	xmm9, XMMWORD PTR [rsp+32]
	movss	DWORD PTR [rdi+24], xmm0
	movzx	eax, WORD PTR [rbx+6]
	movd	xmm1, eax
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, xmm8
	movaps	xmm8, XMMWORD PTR [rsp+48]
	movss	DWORD PTR [rdi+28], xmm1
	movss	xmm0, DWORD PTR [rbx+16]
	addss	xmm0, DWORD PTR [rsi]
	mov	rbx, QWORD PTR [rsp+96]
	movss	DWORD PTR [rsi], xmm0
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
stbtt_GetPackedQuad ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_PackEnd
_TEXT	SEGMENT
spc$ = 48
stbtt_PackEnd PROC					; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3830
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 3831
	mov	rcx, QWORD PTR [rcx+56]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 3832
	mov	rcx, QWORD PTR [rbx+8]
; Line 3833
	add	rsp, 32					; 00000020H
	pop	rbx
; Line 3832
	jmp	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
stbtt_PackEnd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbtt_PackBegin
_TEXT	SEGMENT
spc$ = 80
pixels$ = 88
pw$ = 96
ph$ = 104
stride_in_bytes$ = 112
padding$ = 120
alloc_context$ = 128
stbtt_PackBegin PROC					; COMDAT
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3798
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx
	mov	ebp, r9d
; Line 3799
	mov	ecx, 72					; 00000048H
	mov	ebx, r8d
	mov	r14, rdx
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 3800
	mov	r12d, DWORD PTR padding$[rsp]
	mov	r15d, ebx
	sub	r15d, r12d
	mov	rsi, rax
; Line 3801
	movsxd	rcx, r15d
	shl	rcx, 4
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	r9, rax
; Line 3803
	test	rsi, rsi
	je	$LN4@stbtt_Pack
	test	rax, rax
	je	SHORT $LN3@stbtt_Pack
; Line 3809
	mov	rcx, QWORD PTR alloc_context$[rsp]
; Line 3821
	mov	r8d, ebp
	mov	QWORD PTR [rdi], rcx
	mov	edx, r15d
	mov	QWORD PTR [rdi+56], rax
	mov	ecx, ebx
	mov	eax, DWORD PTR stride_in_bytes$[rsp]
	test	eax, eax
	mov	DWORD PTR [rdi+16], ebx
	cmovne	ecx, eax
	mov	DWORD PTR [rdi+20], ebp
	mov	DWORD PTR [rdi+24], ecx
	sub	r8d, r12d
	mov	rcx, rsi
	mov	QWORD PTR [rdi+48], r14
	mov	QWORD PTR [rdi+8], rsi
	mov	DWORD PTR [rdi+28], r12d
	mov	DWORD PTR [rdi+36], 1
	mov	DWORD PTR [rdi+40], 1
	mov	DWORD PTR [rdi+32], 0
	mov	DWORD PTR [rsp+32], r15d
	call	stbrp_init_target
; Line 3823
	test	r14, r14
	je	SHORT $LN6@stbtt_Pack
; Line 3824
	imul	ebx, ebp
	xor	edx, edx
	mov	rcx, r14
	movsxd	r8, ebx
	call	memset
$LN6@stbtt_Pack:
; Line 3826
	mov	eax, 1
	jmp	SHORT $LN1@stbtt_Pack
$LN3@stbtt_Pack:
; Line 3804
	mov	rcx, rsi
; Line 3805
	jmp	SHORT $LN8@stbtt_Pack
$LN4@stbtt_Pack:
	test	r9, r9
	je	SHORT $LN5@stbtt_Pack
	mov	rcx, r9
$LN8@stbtt_Pack:
; Line 3806
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN5@stbtt_Pack:
	xor	eax, eax
$LN1@stbtt_Pack:
; Line 3827
	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+104]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r12
	ret	0
stbtt_PackBegin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?rect_original_order@@YAHPEBX0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?rect_original_order@@YAHPEBX0@Z PROC			; rect_original_order, COMDAT
; File E:\reps\ocornut\imgui\imstb_rectpack.h
; Line 549
	mov	r8d, DWORD PTR [rcx+12]
	mov	ecx, DWORD PTR [rdx+12]
	cmp	r8d, ecx
	jge	SHORT $LN3@rect_origi
	mov	eax, -1
; Line 550
	ret	0
$LN3@rect_origi:
; Line 549
	xor	eax, eax
	cmp	r8d, ecx
	setg	al
; Line 550
	ret	0
?rect_original_order@@YAHPEBX0@Z ENDP			; rect_original_order
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?rect_height_compare@@YAHPEBX0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?rect_height_compare@@YAHPEBX0@Z PROC			; rect_height_compare, COMDAT
; File E:\reps\ocornut\imgui\imstb_rectpack.h
; Line 537
	movzx	eax, WORD PTR [rcx+6]
	cmp	ax, WORD PTR [rdx+6]
	ja	SHORT $LN7@rect_heigh
; Line 539
	jae	SHORT $LN3@rect_heigh
; Line 540
	mov	eax, 1
; Line 542
	ret	0
$LN3@rect_heigh:
; Line 541
	movzx	ecx, WORD PTR [rcx+4]
	movzx	edx, WORD PTR [rdx+4]
	cmp	cx, dx
	jbe	SHORT $LN5@rect_heigh
$LN7@rect_heigh:
; Line 542
	mov	eax, -1
	ret	0
$LN5@rect_heigh:
; Line 541
	xor	eax, eax
	cmp	cx, dx
	setb	al
; Line 542
	ret	0
?rect_height_compare@@YAHPEBX0@Z ENDP			; rect_height_compare
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
context$ = 72
width$ = 80
height$ = 88
?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z PROC ; stbrp__skyline_pack_rectangle, COMDAT
; File E:\reps\ocornut\imgui\imstb_rectpack.h
; Line 454
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx
	mov	ebp, r9d
; Line 456
	lea	rcx, QWORD PTR $T1[rsp]
	mov	esi, r8d
	mov	rbx, rdx
	call	?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z ; stbrp__skyline_find_best_pos
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rdi], xmm0
; Line 463
	mov	rdx, QWORD PTR [rdi+8]
	test	rdx, rdx
	je	$LN5@stbrp__sky
	mov	ecx, DWORD PTR [rdi+4]
	lea	eax, DWORD PTR [rcx+rbp]
	cmp	eax, DWORD PTR [rbx+4]
	jg	$LN5@stbrp__sky
	mov	r9, QWORD PTR [rbx+32]
	test	r9, r9
	je	SHORT $LN5@stbrp__sky
; Line 470
	movzx	eax, WORD PTR [rdi]
; Line 471
	add	cx, bp
; Line 480
	mov	r8d, DWORD PTR [rdi]
	mov	WORD PTR [r9], ax
	mov	rax, QWORD PTR [r9+8]
	mov	WORD PTR [r9+2], cx
	mov	QWORD PTR [rbx+32], rax
	mov	rax, QWORD PTR [rdx]
	movzx	ecx, WORD PTR [rax]
	cmp	ecx, r8d
	jge	SHORT $LN6@stbrp__sky
; Line 482
	lea	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rax+8]
; Line 483
	mov	QWORD PTR [rcx], r9
; Line 485
	jmp	SHORT $LN10@stbrp__sky
$LN6@stbrp__sky:
; Line 486
	mov	QWORD PTR [rdx], r9
$LN10@stbrp__sky:
; Line 491
	mov	rdx, QWORD PTR [rax+8]
	test	rdx, rdx
	je	SHORT $LN14@stbrp__sky
	lea	r10d, DWORD PTR [r8+rsi]
$LL2@stbrp__sky:
	movzx	ecx, WORD PTR [rdx]
	cmp	ecx, r10d
	jg	SHORT $LN14@stbrp__sky
; Line 494
	mov	rcx, QWORD PTR [rbx+32]
	mov	QWORD PTR [rax+8], rcx
; Line 495
	mov	QWORD PTR [rbx+32], rax
; Line 496
	mov	rax, rdx
	mov	rdx, QWORD PTR [rdx+8]
	test	rdx, rdx
	jne	SHORT $LL2@stbrp__sky
$LN14@stbrp__sky:
; Line 500
	mov	QWORD PTR [r9+8], rax
; Line 502
	lea	edx, DWORD PTR [r8+rsi]
	movzx	ecx, WORD PTR [rax]
	cmp	ecx, edx
	jge	SHORT $LN8@stbrp__sky
; Line 503
	add	r8w, si
	mov	WORD PTR [rax], r8w
; Line 529
	jmp	SHORT $LN8@stbrp__sky
$LN5@stbrp__sky:
; Line 464
	mov	QWORD PTR [rdi+8], 0
$LN8@stbrp__sky:
; Line 530
	mov	rbx, QWORD PTR [rsp+64]
	mov	rax, rdi
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z ENDP ; stbrp__skyline_pack_rectangle
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z
_TEXT	SEGMENT
best$1$ = 48
tv515 = 56
$T1 = 144
waste$2 = 152
c$ = 152
best_waste$1$ = 160
waste$3 = 160
width$ = 160
height$ = 168
?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z PROC ; stbrp__skyline_find_best_pos, COMDAT
; File E:\reps\ocornut\imgui\imstb_rectpack.h
; Line 352
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rbp
	push	rsi
	push	r12
	push	r14
	push	r15
	sub	rsp, 88					; 00000058H
; Line 358
	mov	r10d, DWORD PTR [rdx+8]
	lea	r15d, DWORD PTR [r8-1]
	mov	r12, rdx
	add	r15d, r10d
; Line 359
	mov	eax, r15d
	xor	ebx, ebx
	cdq
	mov	QWORD PTR tv515[rsp], rbx
	idiv	r10d
	mov	esi, 1073741824				; 40000000H
	mov	QWORD PTR best$1$[rsp], rbx
	sub	r15d, edx
	mov	DWORD PTR best_waste$1$[rsp], esi
; Line 360
	mov	eax, r15d
	mov	rbp, rcx
	cdq
	mov	r14d, esi
	idiv	r10d
	test	edx, edx
	je	SHORT $LN2@stbrp__sky
	mov	r8d, 360				; 00000168H
	lea	rdx, OFFSET FLAT:??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CM@LEHAODMI@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CF?$AA?5?$AAc?$AA?9?$AA?$DO?$AAa?$AAl?$AAi?$AAg@
	call	QWORD PTR __imp__wassert
	mov	r9d, DWORD PTR height$[rsp]
$LN2@stbrp__sky:
; Line 363
	mov	edx, DWORD PTR [r12]
	cmp	r15d, edx
	jg	$LN23@stbrp__sky
	cmp	r9d, DWORD PTR [r12+4]
	jg	$LN23@stbrp__sky
; Line 369
	mov	QWORD PTR [rsp+80], rdi
	mov	rdi, QWORD PTR [r12+24]
	mov	QWORD PTR [rsp+72], r13
	lea	r13, QWORD PTR [r12+24]
; Line 370
	mov	rbx, r13
; Line 371
	movzx	ecx, WORD PTR [rdi]
	lea	eax, DWORD PTR [r15+rcx]
	cmp	eax, edx
	jg	$LN55@stbrp__sky
	mov	r13, QWORD PTR best$1$[rsp]
	mov	ebp, DWORD PTR height$[rsp]
	npad	12
$LL5@stbrp__sky:
; Line 373
	movzx	r8d, cx
	lea	rax, QWORD PTR waste$3[rsp]
	mov	rcx, r12
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, r15d
	mov	rdx, rdi
	call	?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z ; stbrp__skyline_find_min_y
; Line 374
	mov	edx, DWORD PTR [r12+16]
	mov	ecx, eax
	test	edx, edx
	jne	SHORT $LN24@stbrp__sky
; Line 376
	cmp	eax, r14d
	jge	SHORT $LN28@stbrp__sky
; Line 380
	jmp	SHORT $LN67@stbrp__sky
$LN24@stbrp__sky:
; Line 382
	add	eax, ebp
	cmp	eax, DWORD PTR [r12+4]
	jg	SHORT $LN28@stbrp__sky
; Line 384
	mov	eax, DWORD PTR waste$3[rsp]
	cmp	ecx, r14d
	jl	SHORT $LN29@stbrp__sky
	jne	SHORT $LN28@stbrp__sky
	cmp	eax, esi
	jge	SHORT $LN28@stbrp__sky
$LN29@stbrp__sky:
; Line 386
	mov	esi, eax
$LN67@stbrp__sky:
; Line 391
	mov	r13, rbx
	mov	r14d, ecx
$LN28@stbrp__sky:
	lea	rbx, QWORD PTR [rdi+8]
; Line 392
	mov	rdi, QWORD PTR [rdi+8]
	movzx	eax, WORD PTR [rdi]
	movzx	ecx, ax
	add	eax, r15d
	cmp	eax, DWORD PTR [r12]
	jle	SHORT $LL5@stbrp__sky
; Line 395
	mov	rbp, QWORD PTR $T1[rsp]
	test	r13, r13
	mov	QWORD PTR best$1$[rsp], r13
	lea	r13, QWORD PTR [r12+24]
	mov	DWORD PTR best_waste$1$[rsp], esi
	je	SHORT $LN62@stbrp__sky
	mov	rcx, QWORD PTR best$1$[rsp]
	mov	rax, QWORD PTR [rcx]
	movzx	r8d, WORD PTR [rax]
	mov	QWORD PTR tv515[rsp], r8
	jmp	SHORT $LN38@stbrp__sky
$LN55@stbrp__sky:
	mov	edx, DWORD PTR [r12+16]
$LN62@stbrp__sky:
	mov	rcx, QWORD PTR best$1$[rsp]
	xor	r8d, r8d
$LN38@stbrp__sky:
; Line 414
	cmp	edx, 1
	jne	$LN10@stbrp__sky
; Line 415
	mov	rbp, QWORD PTR [r13]
; Line 416
	mov	rsi, rbp
; Line 419
	movzx	eax, WORD PTR [rbp]
	cmp	eax, r15d
	jge	SHORT $LN60@stbrp__sky
$LL7@stbrp__sky:
; Line 420
	mov	rbp, QWORD PTR [rbp+8]
	movzx	eax, WORD PTR [rbp]
	cmp	eax, r15d
	jl	SHORT $LL7@stbrp__sky
$LN60@stbrp__sky:
	lea	rdi, QWORD PTR [rsi+8]
$LL9@stbrp__sky:
; Line 422
	movzx	ebx, WORD PTR [rbp]
	sub	ebx, r15d
; Line 424
	jns	SHORT $LN11@stbrp__sky
	mov	r8d, 424				; 000001a8H
	lea	rdx, OFFSET FLAT:??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BE@MNLKNDNL@?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
$LN11@stbrp__sky:
; Line 426
	mov	rcx, QWORD PTR [rdi]
	movzx	eax, WORD PTR [rcx]
	cmp	eax, ebx
	jg	SHORT $LN18@stbrp__sky
$LL14@stbrp__sky:
; Line 427
	mov	r13, rdi
; Line 428
	mov	rsi, rcx
	lea	rdi, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rcx+8]
	movzx	eax, WORD PTR [rcx]
	cmp	eax, ebx
	jle	SHORT $LL14@stbrp__sky
$LN18@stbrp__sky:
; Line 430
	mov	rax, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR [rsi+8]
	movzx	ecx, WORD PTR [rax]
	cmp	ecx, ebx
	jle	SHORT $LN40@stbrp__sky
	movzx	eax, WORD PTR [rsi]
	cmp	eax, ebx
	jle	SHORT $LN16@stbrp__sky
$LN40@stbrp__sky:
	mov	r8d, 430				; 000001aeH
	lea	rdx, OFFSET FLAT:??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1FA@GPDJEJHP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO@
	call	QWORD PTR __imp__wassert
$LN16@stbrp__sky:
; Line 431
	lea	rax, QWORD PTR waste$2[rsp]
	mov	r9d, r15d
	mov	r8d, ebx
	mov	QWORD PTR [rsp+32], rax
	mov	rdx, rsi
	mov	rcx, r12
	call	?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z ; stbrp__skyline_find_min_y
; Line 432
	mov	ecx, DWORD PTR height$[rsp]
	add	ecx, eax
	cmp	ecx, DWORD PTR [r12+4]
	jg	SHORT $LN64@stbrp__sky
; Line 433
	cmp	eax, r14d
	jg	SHORT $LN64@stbrp__sky
; Line 434
	mov	ecx, DWORD PTR waste$2[rsp]
	jl	SHORT $LN34@stbrp__sky
	cmp	ecx, DWORD PTR best_waste$1$[rsp]
	jl	SHORT $LN34@stbrp__sky
	mov	r8, QWORD PTR tv515[rsp]
	jne	SHORT $LN66@stbrp__sky
	cmp	ebx, r8d
	jge	SHORT $LN66@stbrp__sky
$LN34@stbrp__sky:
; Line 438
	mov	DWORD PTR best_waste$1$[rsp], ecx
	mov	r8d, ebx
; Line 439
	mov	rcx, r13
	mov	QWORD PTR tv515[rsp], r8
	mov	QWORD PTR best$1$[rsp], rcx
	mov	r14d, eax
	jmp	SHORT $LN33@stbrp__sky
$LN64@stbrp__sky:
; Line 443
	mov	r8, QWORD PTR tv515[rsp]
$LN66@stbrp__sky:
	mov	rcx, QWORD PTR best$1$[rsp]
$LN33@stbrp__sky:
	mov	rbp, QWORD PTR [rbp+8]
	test	rbp, rbp
	jne	$LL9@stbrp__sky
	mov	rbp, QWORD PTR $T1[rsp]
$LN10@stbrp__sky:
; Line 450
	mov	r13, QWORD PTR [rsp+72]
; Line 451
	mov	rax, rbp
	mov	rdi, QWORD PTR [rsp+80]
	mov	QWORD PTR [rbp+8], rcx
	mov	DWORD PTR [rbp], r8d
	mov	DWORD PTR [rbp+4], r14d
	add	rsp, 88					; 00000058H
	pop	r15
	pop	r14
	pop	r12
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN23@stbrp__sky:
; Line 364
	mov	QWORD PTR [rbp+8], rbx
; Line 451
	mov	rax, rbp
	mov	QWORD PTR [rbp], rbx
	add	rsp, 88					; 00000058H
	pop	r15
	pop	r14
	pop	r12
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z ENDP ; stbrp__skyline_find_best_pos
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z
_TEXT	SEGMENT
c$ = 64
first$ = 72
x0$ = 80
width$ = 88
pwaste$ = 96
?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z PROC ; stbrp__skyline_find_min_y, COMDAT
; File E:\reps\ocornut\imgui\imstb_rectpack.h
; Line 296
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; Line 303
	movzx	eax, WORD PTR [rdx]
	lea	r14d, DWORD PTR [r8+r9]
	mov	r15d, r9d
	mov	esi, r8d
	mov	rbx, rdx
	cmp	eax, r8d
	jle	SHORT $LN2@stbrp__sky
	mov	r8d, 303				; 0000012fH
	lea	rdx, OFFSET FLAT:??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BO@KBODBKOH@?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0@
	call	QWORD PTR __imp__wassert
$LN2@stbrp__sky:
; Line 310
	mov	rax, QWORD PTR [rbx+8]
	movzx	ecx, WORD PTR [rax]
	cmp	ecx, esi
	jg	SHORT $LN5@stbrp__sky
	mov	r8d, 310				; 00000136H
	lea	rdx, OFFSET FLAT:??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CG@BDIGDJGP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO@
	call	QWORD PTR __imp__wassert
$LN5@stbrp__sky:
; Line 313
	movzx	eax, WORD PTR [rbx]
	cmp	eax, esi
	jle	SHORT $LN8@stbrp__sky
	mov	r8d, 313				; 00000139H
	lea	rdx, OFFSET FLAT:??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BM@JHJLEEND@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0@
	call	QWORD PTR __imp__wassert
	movzx	eax, WORD PTR [rbx]
$LN8@stbrp__sky:
; Line 315
	xor	r11d, r11d
; Line 318
	movzx	eax, ax
	mov	ebp, r11d
	mov	r10d, r11d
	cmp	eax, r14d
	jge	$LN26@stbrp__sky
	mov	QWORD PTR [rsp+64], rdi
$LL11@stbrp__sky:
; Line 319
	movzx	edi, WORD PTR [rbx+2]
	cmp	edi, r11d
	jle	SHORT $LN13@stbrp__sky
; Line 326
	movzx	edx, WORD PTR [rbx]
	mov	r8d, edi
	mov	rbx, QWORD PTR [rbx+8]
	sub	r8d, r11d
	imul	r8d, r10d
	mov	r11d, edi
	movzx	eax, WORD PTR [rbx]
	mov	ecx, eax
	cmp	edx, esi
	jge	SHORT $LN15@stbrp__sky
; Line 327
	sub	ecx, esi
	add	r10d, ecx
	jmp	SHORT $LN14@stbrp__sky
$LN15@stbrp__sky:
; Line 329
	sub	ecx, edx
	add	r10d, ecx
; Line 330
	jmp	SHORT $LN14@stbrp__sky
$LN13@stbrp__sky:
; Line 332
	mov	r8, QWORD PTR [rbx+8]
; Line 335
	mov	edx, r15d
	movzx	eax, WORD PTR [rbx]
	sub	edx, r10d
; Line 336
	mov	rbx, r8
	movzx	r9d, WORD PTR [r8]
	mov	r8d, r11d
	mov	ecx, r9d
	sub	ecx, eax
	lea	eax, DWORD PTR [rcx+r10]
	cmp	eax, r15d
	movzx	eax, r9w
	cmovle	edx, ecx
	sub	r8d, edi
	add	r10d, edx
	imul	r8d, edx
$LN14@stbrp__sky:
; Line 338
	add	ebp, r8d
	movzx	ecx, ax
	cmp	ecx, r14d
	jl	SHORT $LL11@stbrp__sky
; Line 341
	mov	rcx, QWORD PTR pwaste$[rsp]
; Line 342
	mov	rdi, QWORD PTR [rsp+64]
	mov	DWORD PTR [rcx], ebp
	jmp	SHORT $LN27@stbrp__sky
$LN26@stbrp__sky:
; Line 341
	mov	rax, QWORD PTR pwaste$[rsp]
	mov	DWORD PTR [rax], r11d
$LN27@stbrp__sky:
; Line 343
	mov	rbx, QWORD PTR [rsp+72]
	mov	eax, r11d
	mov	rbp, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rsi
	ret	0
?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z ENDP ; stbrp__skyline_find_min_y
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbrp_setup_allow_out_of_mem
_TEXT	SEGMENT
context$ = 8
allow_out_of_mem$ = 16
stbrp_setup_allow_out_of_mem PROC			; COMDAT
; File E:\reps\ocornut\imgui\imstb_rectpack.h
; Line 244
	test	edx, edx
	je	SHORT $LN2@stbrp_setu
; Line 260
	mov	DWORD PTR [rcx+8], 1
	ret	0
$LN2@stbrp_setu:
; Line 258
	mov	eax, DWORD PTR [rcx]
	dec	eax
	add	eax, DWORD PTR [rcx+20]
	cdq
	idiv	DWORD PTR [rcx+20]
; Line 260
	mov	DWORD PTR [rcx+8], eax
	ret	0
stbrp_setup_allow_out_of_mem ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbrp_init_target
_TEXT	SEGMENT
context$ = 96
width$ = 104
height$ = 112
nodes$ = 120
num_nodes$ = 128
stbrp_init_target PROC					; COMDAT
; File E:\reps\ocornut\imgui\imstb_rectpack.h
; Line 263
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	movaps	XMMWORD PTR [rsp+48], xmm6
; Line 266
	mov	r15d, 65535				; 0000ffffH
; Line 269
	movq	xmm6, r9
	mov	rdi, r9
	punpcklqdq xmm6, xmm6
	mov	ebp, r8d
	mov	esi, edx
	mov	rbx, rcx
	cmp	edx, r15d
	jg	SHORT $LN9@stbrp_init
; Line 266
	cmp	r8d, r15d
	jle	SHORT $LN2@stbrp_init
$LN9@stbrp_init:
	mov	r8d, 266				; 0000010aH
	lea	rdx, OFFSET FLAT:??_C@_1EO@HBPFCPFM@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1EI@NNJKMECF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf@
	call	QWORD PTR __imp__wassert
$LN2@stbrp_init:
; Line 269
	mov	r11d, DWORD PTR num_nodes$[rsp]
	xor	r14d, r14d
	mov	r9d, r14d
	lea	ecx, DWORD PTR [r11-1]
	test	ecx, ecx
	jle	$LN18@stbrp_init
	cmp	ecx, 4
	jb	$LN18@stbrp_init
	cmp	DWORD PTR __isa_available, 2
	jl	$LN18@stbrp_init
	mov	eax, ecx
	movaps	XMMWORD PTR [rsp+32], xmm7
	movdqa	xmm7, XMMWORD PTR __xmm@00000003000000020000000100000000
	and	eax, -2147483645			; ffffffff80000003H
	jge	SHORT $LN24@stbrp_init
	dec	eax
	or	eax, -4
	inc	eax
$LN24@stbrp_init:
	movdqa	xmm4, XMMWORD PTR __xmm@00000001000000010000000100000001
	lea	rdx, QWORD PTR [rdi+40]
	mov	r8d, ecx
	sub	r8d, eax
	mov	eax, 4
	movd	xmm5, eax
	npad	13
$LL7@stbrp_init:
; Line 270
	movd	xmm1, r9d
	lea	eax, DWORD PTR [r9+2]
	pshufd	xmm1, xmm1, 0
	lea	rdx, QWORD PTR [rdx+64]
	movq	xmm3, xmm7
	movq	xmm0, xmm4
	paddd	xmm1, xmm3
	add	r9d, 4
	paddd	xmm1, xmm0
	pmovsxdq xmm2, xmm1
	movd	xmm1, eax
	pshufd	xmm1, xmm1, 0
	paddd	xmm1, xmm3
	paddd	xmm1, xmm0
	psllq	xmm2, xmm5
	paddq	xmm2, xmm6
	movq	QWORD PTR [rdx-96], xmm2
	psrldq	xmm2, 8
	movq	QWORD PTR [rdx-80], xmm2
	pmovsxdq xmm2, xmm1
	psllq	xmm2, xmm5
	paddq	xmm2, xmm6
	movq	QWORD PTR [rdx-64], xmm2
	psrldq	xmm2, 8
	movq	QWORD PTR [rdx-48], xmm2
	cmp	r9d, r8d
	jl	SHORT $LL7@stbrp_init
; Line 269
	movaps	xmm7, XMMWORD PTR [rsp+32]
$LN18@stbrp_init:
	movaps	xmm6, XMMWORD PTR [rsp+48]
	movsxd	r10, r9d
	movsxd	r8, ecx
	cmp	r10, r8
	jge	SHORT $LN6@stbrp_init
	mov	rax, r10
	lea	edx, DWORD PTR [r9+1]
	shl	rax, 4
	sub	r8, r10
	add	rax, 8
	add	rax, rdi
	add	r9d, r8d
	npad	15
$LL17@stbrp_init:
; Line 270
	movsxd	rcx, edx
	lea	rax, QWORD PTR [rax+16]
	shl	rcx, 4
	inc	edx
	add	rcx, rdi
	mov	QWORD PTR [rax-16], rcx
	sub	r8, 1
	jne	SHORT $LL17@stbrp_init
$LN6@stbrp_init:
; Line 271
	movsxd	rax, r9d
; Line 275
	lea	rcx, QWORD PTR [rbx+40]
	add	rax, rax
	mov	QWORD PTR [rdi+rax*8+8], r14
; Line 258
	lea	eax, DWORD PTR [r11-1]
; Line 276
	mov	DWORD PTR [rbx], esi
; Line 258
	add	eax, esi
; Line 277
	mov	DWORD PTR [rbx+4], ebp
; Line 258
	cdq
; Line 292
	mov	rbp, QWORD PTR [rsp+104]
	mov	QWORD PTR [rbx+12], 1
	mov	QWORD PTR [rbx+32], rdi
	mov	QWORD PTR [rbx+24], rcx
	mov	DWORD PTR [rbx+20], r11d
; Line 258
	idiv	r11d
	mov	DWORD PTR [rbx+8], eax
; Line 284
	lea	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rbx+48], rax
; Line 285
	mov	WORD PTR [rax], si
; Line 292
	mov	rsi, QWORD PTR [rsp+112]
	mov	WORD PTR [rbx+42], r14w
	mov	WORD PTR [rbx+58], r15w
	mov	QWORD PTR [rbx+64], r14
	mov	rbx, QWORD PTR [rsp+96]
	mov	WORD PTR [rcx], r14w
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
stbrp_init_target ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stbrp_pack_rects
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
context$ = 128
rects$ = 136
num_rects$ = 144
tv933 = 152
stbrp_pack_rects PROC					; COMDAT
; File E:\reps\ocornut\imgui\imstb_rectpack.h
; Line 559
	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rsi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
; Line 560
	xor	r14d, r14d
	mov	QWORD PTR [rsp+72], rdi
	mov	rbx, rdx
	mov	rdi, rcx
	mov	r12d, 1
	mov	eax, r14d
; Line 563
	test	r8d, r8d
	jle	SHORT $LN3@stbrp_pack
	lea	r9, QWORD PTR [rdx+12]
$LL4@stbrp_pack:
; Line 564
	mov	DWORD PTR [r9], eax
	lea	r9, QWORD PTR [r9+16]
	inc	eax
	cmp	eax, r8d
	jl	SHORT $LL4@stbrp_pack
$LN3@stbrp_pack:
; Line 568
	movsxd	r15, r8d
	lea	r9, OFFSET FLAT:?rect_height_compare@@YAHPEBX0@Z ; rect_height_compare
	mov	rdx, r15
	mov	r8d, 16
	mov	rcx, rbx
	call	QWORD PTR __imp_qsort
; Line 570
	mov	esi, 65535				; 0000ffffH
	test	r15, r15
	jle	$LN6@stbrp_pack
	mov	QWORD PTR [rsp+128], rbp
	add	rbx, 10
	mov	QWORD PTR [rsp+64], r13
	mov	QWORD PTR tv933[rsp], r15
$LL7@stbrp_pack:
; Line 571
	movzx	ebp, WORD PTR [rbx-6]
	test	bp, bp
	je	$LN13@stbrp_pack
	movzx	esi, WORD PTR [rbx-4]
	test	si, si
	je	$LN52@stbrp_pack
; Line 456
	mov	r9d, esi
	lea	rcx, QWORD PTR $T2[rsp]
	mov	r8d, ebp
	mov	rdx, rdi
	call	?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z ; stbrp__skyline_find_best_pos
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T1[rsp], xmm0
; Line 463
	psrldq	xmm0, 8
	movq	rdx, xmm0
	test	rdx, rdx
	je	$LN14@stbrp_pack
	mov	r9, QWORD PTR $T1[rsp]
	mov	r8, r9
	shr	r8, 32					; 00000020H
	lea	eax, DWORD PTR [r8+rsi]
	cmp	eax, DWORD PTR [rdi+4]
	jg	$LN14@stbrp_pack
	mov	r10, QWORD PTR [rdi+32]
	test	r10, r10
	je	$LN14@stbrp_pack
; Line 470
	mov	WORD PTR [r10], r9w
; Line 471
	lea	eax, DWORD PTR [rsi+r8]
	mov	WORD PTR [r10+2], ax
; Line 473
	mov	rax, QWORD PTR [r10+8]
	mov	QWORD PTR [rdi+32], rax
; Line 479
	mov	rax, QWORD PTR [rdx]
; Line 480
	movzx	ecx, WORD PTR [rax]
	cmp	ecx, r9d
	jge	SHORT $LN25@stbrp_pack
; Line 482
	lea	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rax+8]
; Line 483
	mov	QWORD PTR [rcx], r10
; Line 485
	jmp	SHORT $LN31@stbrp_pack
$LN25@stbrp_pack:
; Line 486
	mov	QWORD PTR [rdx], r10
$LN31@stbrp_pack:
; Line 491
	mov	rdx, QWORD PTR [rax+8]
	test	rdx, rdx
	je	SHORT $LN51@stbrp_pack
	lea	r11d, DWORD PTR [r9+rbp]
	npad	3
$LL21@stbrp_pack:
	movzx	ecx, WORD PTR [rdx]
	cmp	ecx, r11d
	jg	SHORT $LN51@stbrp_pack
; Line 494
	mov	rcx, QWORD PTR [rdi+32]
	mov	QWORD PTR [rax+8], rcx
; Line 495
	mov	QWORD PTR [rdi+32], rax
; Line 496
	mov	rax, rdx
	mov	rdx, QWORD PTR [rdx+8]
	test	rdx, rdx
	jne	SHORT $LL21@stbrp_pack
$LN51@stbrp_pack:
; Line 500
	mov	QWORD PTR [r10+8], rax
; Line 502
	lea	edx, DWORD PTR [r9+rbp]
	movzx	ecx, WORD PTR [rax]
	cmp	ecx, edx
	jge	SHORT $LN20@stbrp_pack
; Line 503
	add	bp, r9w
	mov	WORD PTR [rax], bp
$LN20@stbrp_pack:
; Line 576
	mov	WORD PTR [rbx-2], r9w
; Line 578
	xor	r14d, r14d
	mov	esi, 65535				; 0000ffffH
	jmp	SHORT $LN5@stbrp_pack
$LN14@stbrp_pack:
; Line 579
	mov	esi, 65535				; 0000ffffH
	xor	r14d, r14d
	mov	WORD PTR [rbx-2], si
	movzx	r8d, si
	jmp	SHORT $LN5@stbrp_pack
$LN52@stbrp_pack:
; Line 571
	mov	esi, 65535				; 0000ffffH
$LN13@stbrp_pack:
; Line 572
	mov	WORD PTR [rbx-2], r14w
	movzx	r8d, r14w
$LN5@stbrp_pack:
; Line 570
	mov	WORD PTR [rbx], r8w
	add	rbx, 16
	sub	QWORD PTR tv933[rsp], r12
	jne	$LL7@stbrp_pack
	mov	rbx, QWORD PTR rects$[rsp]
	mov	r13, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+128]
$LN6@stbrp_pack:
; Line 585
	lea	r9, OFFSET FLAT:?rect_original_order@@YAHPEBX0@Z ; rect_original_order
	mov	r8d, 16
	mov	rdx, r15
	mov	rcx, rbx
	call	QWORD PTR __imp_qsort
	mov	rdi, QWORD PTR [rsp+72]
; Line 588
	test	r15, r15
	jle	SHORT $LN50@stbrp_pack
	lea	rax, QWORD PTR [rbx+10]
$LL37@stbrp_pack:
; Line 589
	cmp	WORD PTR [rax-2], si
	jne	SHORT $LN38@stbrp_pack
	mov	edx, r14d
	cmp	WORD PTR [rax], si
	je	SHORT $LN39@stbrp_pack
$LN38@stbrp_pack:
	mov	edx, 1
$LN39@stbrp_pack:
; Line 588
	test	edx, edx
; Line 589
	mov	DWORD PTR [rax+2], edx
	mov	ecx, r14d
	cmovne	ecx, r12d
	add	rax, 16
	mov	r12d, ecx
	sub	r15, 1
	jne	SHORT $LL37@stbrp_pack
$LN50@stbrp_pack:
; Line 596
	mov	eax, r12d
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r12
	pop	rsi
	pop	rbx
	ret	0
stbrp_pack_rects ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z
_TEXT	SEGMENT
table$ = 16
pixels$ = 24
x$ = 32
y$ = 40
w$ = 48
h$ = 56
stride$ = 64
?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z PROC ; ImFontAtlasBuildMultiplyRectAlpha8, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1903
$LN18:
	push	rbx
; Line 1906
	movsxd	rbx, DWORD PTR w$[rsp]
	mov	r10, rcx
	movsxd	rcx, DWORD PTR stride$[rsp]
	imul	r9d, ecx
	movsxd	r11, r8d
	movsxd	rax, r9d
	mov	r9d, DWORD PTR h$[rsp]
	add	rax, rdx
	add	r11, rax
	test	r9d, r9d
	jle	SHORT $LN3@ImFontAtla
	mov	QWORD PTR [rsp+16], rdi
	mov	rdi, rcx
$LL4@ImFontAtla:
	test	rbx, rbx
	jle	SHORT $LN2@ImFontAtla
	mov	rax, r11
	mov	r8, rbx
	npad	4
$LL7@ImFontAtla:
; Line 1907
	movzx	ecx, BYTE PTR [rax]
	lea	rax, QWORD PTR [rax+1]
	movzx	edx, BYTE PTR [rcx+r10]
	mov	BYTE PTR [rax-1], dl
	sub	r8, 1
	jne	SHORT $LL7@ImFontAtla
$LN2@ImFontAtla:
; Line 1905
	dec	r9d
	add	r11, rdi
	test	r9d, r9d
	jg	SHORT $LL4@ImFontAtla
	mov	rdi, QWORD PTR [rsp+16]
$LN3@ImFontAtla:
; Line 1908
	pop	rbx
	ret	0
?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z ENDP ; ImFontAtlasBuildMultiplyRectAlpha8
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImFontAtlasBuildMultiplyCalcLookupTable@@YAXQEAEM@Z
_TEXT	SEGMENT
out_table$ = 8
in_brighten_factor$ = 16
?ImFontAtlasBuildMultiplyCalcLookupTable@@YAXQEAEM@Z PROC ; ImFontAtlasBuildMultiplyCalcLookupTable, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1895
	xor	r9d, r9d
	npad	13
$LL10@ImFontAtla:
; Line 1897
	mov	eax, r9d
	lea	rcx, QWORD PTR [rcx+1]
	xorps	xmm0, xmm0
; Line 1898
	mov	r8d, 255				; 000000ffH
	cvtsi2ss xmm0, rax
	mulss	xmm0, xmm1
	cvttss2si rdx, xmm0
	cmp	edx, r8d
	movzx	eax, dl
	cmovbe	r8d, eax
	inc	r9d
	mov	BYTE PTR [rcx-1], r8b
	cmp	r9d, 256				; 00000100H
	jb	SHORT $LL10@ImFontAtla
; Line 1900
	ret	0
?ImFontAtlasBuildMultiplyCalcLookupTable@@YAXQEAEM@Z ENDP ; ImFontAtlasBuildMultiplyCalcLookupTable
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z
_TEXT	SEGMENT
ellipsis_variants$1 = 176
atlas$ = 176
?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z PROC	; ImFontAtlasBuildFinish, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2286
$LN76:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 144				; 00000090H
	mov	rbx, rcx
; Line 2288
	call	?ImFontAtlasBuildRenderDefaultTexData@@YAXPEAUImFontAtlas@@@Z ; ImFontAtlasBuildRenderDefaultTexData
; Line 2291
	mov	eax, DWORD PTR [rbx+80]
	xor	ebp, ebp
	mov	r14d, 65535				; 0000ffffH
	test	eax, eax
	jle	$LN3@ImFontAtla
	movaps	XMMWORD PTR [rsp+128], xmm6
	xor	edi, edi
	movaps	XMMWORD PTR [rsp+112], xmm7
	movaps	XMMWORD PTR [rsp+96], xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebp, eax
	jl	SHORT $LN23@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN23@ImFontAtla:
	mov	rsi, QWORD PTR [rbx+88]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2294
	mov	rax, QWORD PTR [rdi+rsi+24]
	test	rax, rax
	je	$LN2@ImFontAtla
	cmp	DWORD PTR [rdi+rsi+8], 0
	je	$LN2@ImFontAtla
; Line 2297
	cmp	QWORD PTR [rax+72], rbx
	je	SHORT $LN20@ImFontAtla
	mov	r8d, 2297				; 000008f9H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1EA@GJDLMPMC@?$AAr?$AA?4?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn@
	call	QWORD PTR __imp__wassert
$LN20@ImFontAtla:
; Line 1860
	cmp	DWORD PTR [rbx+40], 0
	jle	SHORT $LN30@ImFontAtla
	cmp	DWORD PTR [rbx+44], 0
	jg	SHORT $LN31@ImFontAtla
$LN30@ImFontAtla:
	mov	r8d, 1860				; 00000744H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DM@CMBJAGBP@?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG@
	call	QWORD PTR __imp__wassert
$LN31@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 2162
	movzx	eax, WORD PTR [rdi+rsi+4]
	cmp	ax, r14w
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1861
	jne	SHORT $LN32@ImFontAtla
	mov	r8d, 1861				; 00000745H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CC@DEJIAPCP@?$AAr?$AAe?$AAc?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI@
	call	QWORD PTR __imp__wassert
	movzx	eax, WORD PTR [rdi+rsi+4]
$LN32@ImFontAtla:
; Line 1862
	movzx	ecx, WORD PTR [rdi+rsi+6]
; Line 1863
	movzx	edx, WORD PTR [rdi+rsi+2]
	movzx	r9d, WORD PTR [rdi+rsi]
; Line 2300
	movss	xmm3, DWORD PTR [rdi+rsi+20]
	movss	xmm2, DWORD PTR [rdi+rsi+16]
	movss	xmm0, DWORD PTR [rdi+rsi+12]
	movss	DWORD PTR [rsp+80], xmm0
; Line 1862
	movzx	r8d, ax
; Line 1863
	lea	eax, DWORD PTR [rdx+rcx]
	movd	xmm8, eax
	movd	xmm6, ecx
; Line 2300
	mov	rcx, QWORD PTR [rdi+rsi+24]
	movd	xmm4, edx
; Line 1863
	lea	eax, DWORD PTR [r8+r9]
; Line 2300
	movzx	edx, WORD PTR [rdi+rsi+8]
	movd	xmm7, eax
	movd	xmm5, r8d
	movd	xmm1, r9d
; Line 1862
	cvtdq2ps xmm5, xmm5
; Line 2300
	cvtdq2ps xmm4, xmm4
; Line 1862
	mulss	xmm5, DWORD PTR [rbx+48]
; Line 2300
	cvtdq2ps xmm1, xmm1
	addss	xmm4, xmm3
	addss	xmm1, xmm2
; Line 1863
	cvtdq2ps xmm8, xmm8
	cvtdq2ps xmm7, xmm7
	mulss	xmm8, DWORD PTR [rbx+52]
	mulss	xmm7, DWORD PTR [rbx+48]
; Line 2300
	movss	DWORD PTR [rsp+72], xmm8
; Line 1862
	cvtdq2ps xmm6, xmm6
; Line 2300
	movss	DWORD PTR [rsp+64], xmm7
; Line 1862
	mulss	xmm6, DWORD PTR [rbx+52]
; Line 2300
	movss	DWORD PTR [rsp+56], xmm6
	movss	DWORD PTR [rsp+48], xmm5
	movss	DWORD PTR [rsp+40], xmm4
	movss	DWORD PTR [rsp+32], xmm1
	call	?AddGlyph@ImFont@@QEAAXGMMMMMMMMM@Z	; ImFont::AddGlyph
$LN2@ImFontAtla:
; Line 2291
	mov	eax, DWORD PTR [rbx+80]
	inc	ebp
	add	rdi, 32					; 00000020H
	cmp	ebp, eax
	jl	$LN23@ImFontAtla
	movaps	xmm8, XMMWORD PTR [rsp+96]
	movaps	xmm7, XMMWORD PTR [rsp+112]
	movaps	xmm6, XMMWORD PTR [rsp+128]
$LN3@ImFontAtla:
; Line 2304
	mov	ecx, DWORD PTR [rbx+64]
	xor	edi, edi
	test	ecx, ecx
	jle	SHORT $LN6@ImFontAtla
	mov	eax, ecx
	xor	esi, esi
$LL7@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, eax
	jl	SHORT $LN41@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	ecx, DWORD PTR [rbx+64]
$LN41@ImFontAtla:
	mov	rdx, QWORD PTR [rbx+72]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2305
	mov	rax, QWORD PTR [rsi+rdx]
	cmp	BYTE PTR [rax+94], 0
	je	SHORT $LN5@ImFontAtla
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, ecx
	jl	SHORT $LN44@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	rdx, QWORD PTR [rbx+72]
$LN44@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2306
	mov	rcx, QWORD PTR [rsi+rdx]
	call	?BuildLookupTable@ImFont@@QEAAXXZ	; ImFont::BuildLookupTable
$LN5@ImFontAtla:
; Line 2304
	mov	ecx, DWORD PTR [rbx+64]
	inc	edi
	add	rsi, 8
	mov	eax, ecx
	cmp	edi, ecx
	jl	SHORT $LL7@ImFontAtla
$LN6@ImFontAtla:
; Line 2311
	xor	edi, edi
	test	ecx, ecx
	jle	$LN9@ImFontAtla
	xor	esi, esi
	mov	QWORD PTR [rsp+184], r15
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, ecx
	jl	SHORT $LN49@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN49@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2313
	mov	rax, QWORD PTR [rbx+72]
	mov	r9, QWORD PTR [rsi+rax]
; Line 2314
	cmp	WORD PTR [r9+92], r14w
	jne	SHORT $LN8@ImFontAtla
; Line 2317
	movsxd	r11, DWORD PTR [r9+24]
	xor	edx, edx
	mov	DWORD PTR ellipsis_variants$1[rsp], 8724518 ; 00852026H
	npad	3
$LL13@ImFontAtla:
; Line 2318
	movzx	r10d, WORD PTR ellipsis_variants$1[rsp+rdx*2]
; Line 2761
	cmp	r10, r11
	jae	SHORT $LN71@ImFontAtla
; Line 2763
	mov	rax, QWORD PTR [r9+32]
	movzx	r8d, WORD PTR [rax+r10*2]
; Line 2764
	cmp	r8w, r14w
	je	SHORT $LN71@ImFontAtla
; Line 2766
	mov	rax, QWORD PTR [r9+48]
	lea	rcx, QWORD PTR [r8+r8*4]
	lea	rcx, QWORD PTR [rax+rcx*8]
; Line 2318
	test	rcx, rcx
	jne	SHORT $LN58@ImFontAtla
$LN71@ImFontAtla:
; Line 2317
	inc	rdx
	cmp	rdx, 2
	jl	SHORT $LL13@ImFontAtla
	jmp	SHORT $LN8@ImFontAtla
$LN58@ImFontAtla:
; Line 2320
	mov	WORD PTR [r9+92], r10w
$LN8@ImFontAtla:
; Line 2311
	mov	ecx, DWORD PTR [rbx+64]
	inc	edi
	add	rsi, 8
	cmp	edi, ecx
	jl	SHORT $LN49@ImFontAtla
	mov	r15, QWORD PTR [rsp+184]
$LN9@ImFontAtla:
; Line 2324
	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+48]
	mov	rbp, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z ENDP	; ImFontAtlasBuildFinish
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z
_TEXT	SEGMENT
pack_rects$ = 32
atlas$ = 96
stbrp_context_opaque$ = 104
?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z PROC ; ImFontAtlasBuildPackCustomRects, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2229
$LN87:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+16], rdx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
	mov	r14, rdx
	mov	rdi, rcx
; Line 2231
	test	rdx, rdx
	jne	SHORT $LN10@ImFontAtla
	mov	r8d, 2231				; 000008b7H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CE@FMMHMDCM@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CB?$AA?$DN@
	call	QWORD PTR __imp__wassert
$LN10@ImFontAtla:
; Line 2234
	mov	edx, DWORD PTR [rdi+80]
	cmp	edx, 1
	jge	SHORT $LN11@ImFontAtla
	mov	r8d, 2234				; 000008baH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CK@POMOOFJC@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	edx, DWORD PTR [rdi+80]
$LN11@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	ebx, ebx
	mov	QWORD PTR pack_rects$[rsp], rbx
	mov	QWORD PTR pack_rects$[rsp+8], rbx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2237
	lea	rcx, QWORD PTR pack_rects$[rsp]
	call	?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z ; ImVector<stbrp_rect>::resize
; File E:\reps\ocornut\imgui\imgui.h
; Line 1324
	mov	ebp, DWORD PTR pack_rects$[rsp]
	mov	eax, ebp
	shl	eax, 4
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2238
	movsxd	r8, eax
	xor	edx, edx
	mov	r15, QWORD PTR pack_rects$[rsp+8]
	mov	rcx, r15
	call	memset
; Line 2239
	mov	esi, ebx
	mov	eax, DWORD PTR [rdi+80]
	test	eax, eax
	jle	$LN3@ImFontAtla
	mov	r14d, ebx
	add	r15, 6
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, eax
	jl	SHORT $LN21@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN21@ImFontAtla:
	mov	r12, QWORD PTR [rdi+88]
	cmp	esi, ebp
	jl	SHORT $LN24@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN24@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2241
	movzx	eax, WORD PTR [r12+r14]
	mov	WORD PTR [r15-2], ax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	esi, DWORD PTR [rdi+80]
	jl	SHORT $LN27@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN27@ImFontAtla:
	mov	r13, QWORD PTR [rdi+88]
	cmp	esi, ebp
	jl	SHORT $LN30@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN30@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2242
	movzx	eax, WORD PTR [r13+r14+2]
	mov	WORD PTR [r15], ax
; Line 2239
	inc	esi
	add	r14, 32					; 00000020H
	add	r15, 16
	mov	eax, DWORD PTR [rdi+80]
	cmp	esi, eax
	jl	$LN21@ImFontAtla
	mov	r14, QWORD PTR stbrp_context_opaque$[rsp]
	mov	r15, QWORD PTR pack_rects$[rsp+8]
$LN3@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	test	ebp, ebp
	jg	SHORT $LN33@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN33@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2244
	mov	r8d, ebp
	mov	rdx, r15
	mov	rcx, r14
	call	stbrp_pack_rects
; Line 2245
	test	ebp, ebp
	jle	$LN6@ImFontAtla
	mov	r14, rbx
	lea	rsi, QWORD PTR [r15+8]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, ebp
	jl	SHORT $LN36@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN36@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2246
	cmp	DWORD PTR [rsi+4], 0
	je	$LN5@ImFontAtla
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, ebp
	jl	SHORT $LN39@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN39@ImFontAtla:
	cmp	ebx, DWORD PTR [rdi+80]
	jl	SHORT $LN42@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN42@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2248
	mov	rcx, QWORD PTR [rdi+88]
	movzx	eax, WORD PTR [rsi]
	mov	WORD PTR [r14+rcx+4], ax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, ebp
	jl	SHORT $LN45@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN45@ImFontAtla:
	cmp	ebx, DWORD PTR [rdi+80]
	jl	SHORT $LN48@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN48@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2249
	mov	rcx, QWORD PTR [rdi+88]
	movzx	eax, WORD PTR [rsi+2]
	mov	WORD PTR [r14+rcx+6], ax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, ebp
	jl	SHORT $LN51@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN51@ImFontAtla:
	cmp	ebx, DWORD PTR [rdi+80]
	jl	SHORT $LN54@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN54@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2250
	mov	rax, QWORD PTR [rdi+88]
	movzx	ecx, WORD PTR [r14+rax]
	cmp	WORD PTR [rsi-4], cx
	jne	SHORT $LN81@ImFontAtla
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, ebp
	jl	SHORT $LN57@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN57@ImFontAtla:
	cmp	ebx, DWORD PTR [rdi+80]
	jl	SHORT $LN60@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN60@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2250
	mov	rax, QWORD PTR [rdi+88]
	movzx	ecx, WORD PTR [r14+rax+2]
	cmp	WORD PTR [rsi-2], cx
	je	SHORT $LN13@ImFontAtla
$LN81@ImFontAtla:
	mov	r8d, 2250				; 000008caH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1KE@CBAIECN@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAw@
	call	QWORD PTR __imp__wassert
$LN13@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, ebp
	jl	SHORT $LN66@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN66@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2251
	movzx	ecx, WORD PTR [rsi-2]
	movzx	eax, WORD PTR [rsi+2]
	add	ecx, eax
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	cmp	DWORD PTR [rdi+44], ecx
	cmovge	ecx, DWORD PTR [rdi+44]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2251
	mov	DWORD PTR [rdi+44], ecx
$LN5@ImFontAtla:
; Line 2245
	inc	ebx
	add	r14, 32					; 00000020H
	add	rsi, 16
	cmp	ebx, ebp
	jl	$LN36@ImFontAtla
$LN6@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	test	r15, r15
	je	SHORT $LN82@ImFontAtla
	mov	rcx, r15
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN82@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2253
	mov	rbx, QWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z ENDP ; ImFontAtlasBuildPackCustomRects
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
pack_rects$ = 32
atlas$ = 96
stbrp_context_opaque$ = 104
?dtor$0@?0??ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z@4HA PROC ; `ImFontAtlasBuildPackCustomRects'::`1'::dtor$0
	lea	rcx, QWORD PTR pack_rects$[rdx]
	jmp	??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ	; ImVector<stbrp_rect>::~ImVector<stbrp_rect>
?dtor$0@?0??ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z@4HA ENDP ; `ImFontAtlasBuildPackCustomRects'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
pack_rects$ = 32
atlas$ = 96
stbrp_context_opaque$ = 104
?dtor$0@?0??ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z@4HA PROC ; `ImFontAtlasBuildPackCustomRects'::`1'::dtor$0
	lea	rcx, QWORD PTR pack_rects$[rdx]
	jmp	??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ	; ImVector<stbrp_rect>::~ImVector<stbrp_rect>
?dtor$0@?0??ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z@4HA ENDP ; `ImFontAtlasBuildPackCustomRects'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImFontAtlasBuildSetupFont@@YAXPEAUImFontAtlas@@PEAUImFont@@PEAUImFontConfig@@MM@Z
_TEXT	SEGMENT
atlas$ = 64
font$ = 72
font_config$ = 80
ascent$ = 88
descent$ = 96
?ImFontAtlasBuildSetupFont@@YAXPEAUImFontAtlas@@PEAUImFont@@PEAUImFontConfig@@MM@Z PROC ; ImFontAtlasBuildSetupFont, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2215
$LN6:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 2216
	cmp	BYTE PTR [r8+72], 0
	mov	rdi, r8
	movaps	XMMWORD PTR [rsp+32], xmm6
	mov	rbx, rdx
	movaps	xmm6, xmm3
	mov	rsi, rcx
	jne	SHORT $LN4@ImFontAtla
; Line 2218
	mov	rcx, rdx
	call	?ClearOutputData@ImFont@@QEAAXXZ	; ImFont::ClearOutputData
; Line 2219
	mov	eax, DWORD PTR [rdi+20]
; Line 2223
	movss	xmm0, DWORD PTR descent$[rsp]
; Line 2225
	inc	WORD PTR [rbx+88]
	movss	DWORD PTR [rbx+104], xmm0
	movss	DWORD PTR [rbx+100], xmm6
	mov	DWORD PTR [rbx+20], eax
	mov	QWORD PTR [rbx+80], rdi
	mov	QWORD PTR [rbx+72], rsi
	jmp	SHORT $LN2@ImFontAtla
$LN4@ImFontAtla:
	inc	WORD PTR [rdx+88]
$LN2@ImFontAtla:
; Line 2226
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	movaps	xmm6, XMMWORD PTR [rsp+32]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?ImFontAtlasBuildSetupFont@@YAXPEAUImFontAtlas@@PEAUImFont@@PEAUImFontConfig@@MM@Z ENDP ; ImFontAtlasBuildSetupFont
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImFontAtlasBuildInit@@YAXPEAUImFontAtlas@@@Z
_TEXT	SEGMENT
atlas$ = 48
?ImFontAtlasBuildInit@@YAXPEAUImFontAtlas@@@Z PROC	; ImFontAtlasBuildInit, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2205
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 2206
	cmp	DWORD PTR [rcx+112], 0
	mov	rbx, rcx
	jge	SHORT $LN4@ImFontAtla
; Line 2208
	test	BYTE PTR [rcx+4], 2
	jne	SHORT $LN3@ImFontAtla
; Line 2209
	mov	edx, 217				; 000000d9H
	mov	r8d, 27
; Line 2212
	call	?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z ; ImFontAtlas::AddCustomRectRegular
	mov	DWORD PTR [rbx+112], eax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN3@ImFontAtla:
; Line 2211
	mov	edx, 2
	mov	r8d, edx
; Line 2212
	call	?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z ; ImFontAtlas::AddCustomRectRegular
	mov	DWORD PTR [rbx+112], eax
$LN4@ImFontAtla:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?ImFontAtlasBuildInit@@YAXPEAUImFontAtlas@@@Z ENDP	; ImFontAtlasBuildInit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z
_TEXT	SEGMENT
src_tmp_array$2$ = 96
src_i$1$ = 100
total_glyphs_count$1$ = 100
new_size$1$ = 104
total_surface$1$ = 104
$T4 = 108
src_i$1$ = 108
src_i$1$ = 108
atlas$GSCopy$1$ = 112
src_tmp_array$1$ = 120
entries_32$1$ = 128
src_i$1$ = 128
dst_tmp_array$1$ = 136
it_begin$1$ = 144
tv7163 = 144
tv7133 = 144
glyph_i$1$ = 152
buf_rects_out_n$1$ = 156
buf_packedchars_out_n$1$ = 160
buf_rects$1$ = 168
it_end$1$ = 176
tv7162 = 176
buf_rects$ = 184
dst_tmp_array$ = 200
padding$1$ = 216
buf_packedchars$1$ = 224
c$5 = 240
spc$ = 240
src_tmp_array$ = 304
buf_packedchars$ = 320
multiply_table$6 = 336
__$ArrayPad$ = 592
atlas$ = 800
?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z PROC ; ImFontAtlasBuildWithStbTruetype, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1948
$LN596:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rsi
	mov	QWORD PTR [rax+32], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-536]
	sub	rsp, 752				; 000002f0H
	movaps	XMMWORD PTR [rax-56], xmm6
	movaps	XMMWORD PTR [rax-72], xmm7
	movaps	XMMWORD PTR [rax-88], xmm8
	movaps	XMMWORD PTR [rax-104], xmm9
	movaps	XMMWORD PTR [rax-120], xmm10
	movaps	XMMWORD PTR [rax-136], xmm11
	movaps	XMMWORD PTR [rax-152], xmm12
	movaps	XMMWORD PTR [rax-168], xmm13
	movaps	XMMWORD PTR [rax-184], xmm14
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rsi, rcx
	mov	QWORD PTR atlas$GSCopy$1$[rsp], rcx
; Line 1949
	cmp	DWORD PTR [rcx+96], 0
	jg	SHORT $LN70@ImFontAtla
	mov	r8d, 1949				; 0000079dH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DG@BBHAKCJP@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAD?$AAa@
	call	QWORD PTR __imp__wassert
$LN70@ImFontAtla:
; Line 2206
	cmp	DWORD PTR [rsi+112], 0
	jge	SHORT $LN99@ImFontAtla
; Line 2208
	mov	rcx, rsi
	test	BYTE PTR [rsi+4], 2
	jne	SHORT $LN98@ImFontAtla
; Line 2209
	mov	edx, 217				; 000000d9H
	mov	r8d, 27
	jmp	SHORT $LN588@ImFontAtla
$LN98@ImFontAtla:
; Line 2211
	mov	edx, 2
	mov	r8d, edx
$LN588@ImFontAtla:
; Line 1954
	call	?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z ; ImFontAtlas::AddCustomRectRegular
	mov	DWORD PTR [rsi+112], eax
$LN99@ImFontAtla:
	xor	r15d, r15d
	mov	QWORD PTR [rsi+8], r15
; Line 1955
	mov	QWORD PTR [rsi+40], r15
; Line 1956
	mov	QWORD PTR [rsi+48], r15
; Line 1957
	mov	QWORD PTR [rsi+56], r15
; Line 1638
	cmp	BYTE PTR [rsi], r15b
	je	SHORT $LN110@ImFontAtla
	mov	r8d, 1638				; 00000666H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN110@ImFontAtla:
; Line 1639
	mov	rcx, QWORD PTR [rsi+24]
	test	rcx, rcx
	je	SHORT $LN106@ImFontAtla
; Line 1640
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN106@ImFontAtla:
; Line 1641
	mov	rcx, QWORD PTR [rsi+32]
	test	rcx, rcx
	je	SHORT $LN107@ImFontAtla
; Line 1642
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN107@ImFontAtla:
; Line 1643
	mov	QWORD PTR [rsi+24], r15
; Line 1644
	mov	QWORD PTR [rsi+32], r15
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	mov	QWORD PTR src_tmp_array$[rbp-256], r15
	mov	r13, r15
	mov	QWORD PTR src_tmp_array$1$[rsp], r15
	mov	QWORD PTR src_tmp_array$[rbp-248], r15
	mov	QWORD PTR dst_tmp_array$[rbp-256], r15
	mov	rdi, r15
	mov	QWORD PTR dst_tmp_array$1$[rbp-256], r15
	mov	QWORD PTR dst_tmp_array$[rbp-248], r15
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1963
	mov	r12d, DWORD PTR [rsi+96]
	mov	DWORD PTR src_tmp_array$2$[rsp], r12d
	mov	eax, 8
	test	r12d, r12d
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	jle	SHORT $LN122@ImFontAtla
; Line 1340
	mov	ebx, r12d
	cmp	r12d, eax
	cmovl	ebx, eax
; Line 1341
	test	ebx, ebx
; Line 1344
	jle	SHORT $LN122@ImFontAtla
	movsxd	rax, ebx
	imul	rcx, rax, 272				; 00000110H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	r13, rax
	mov	QWORD PTR src_tmp_array$1$[rsp], rax
	mov	QWORD PTR src_tmp_array$[rbp-248], rax
	mov	DWORD PTR src_tmp_array$[rbp-252], ebx
	mov	eax, 8
$LN122@ImFontAtla:
; Line 1341
	mov	DWORD PTR src_tmp_array$[rbp-256], r12d
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1964
	mov	r14d, DWORD PTR [rsi+64]
	mov	DWORD PTR new_size$1$[rsp], r14d
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	test	r14d, r14d
	jle	SHORT $LN133@ImFontAtla
; Line 1340
	mov	ebx, r14d
	cmp	r14d, 8
	cmovl	ebx, eax
; Line 1344
	test	ebx, ebx
	jle	SHORT $LN133@ImFontAtla
	movsxd	rcx, ebx
	shl	rcx, 5
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdi, rax
	mov	QWORD PTR dst_tmp_array$1$[rbp-256], rax
	mov	QWORD PTR dst_tmp_array$[rbp-248], rax
	mov	DWORD PTR dst_tmp_array$[rbp-252], ebx
$LN133@ImFontAtla:
; Line 1341
	mov	DWORD PTR dst_tmp_array$[rbp-256], r14d
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1965
	imul	ecx, r12d, 272				; 00000110H
	movsxd	r8, ecx
	xor	edx, edx
	mov	rcx, r13
	call	memset
; Line 1966
	mov	ecx, r14d
	shl	ecx, 5
	movsxd	r8, ecx
	xor	edx, edx
	mov	rcx, rdi
	call	memset
; Line 1969
	mov	r13d, r15d
	cmp	DWORD PTR [rsi+96], r15d
	jle	$LN3@ImFontAtla
	mov	r12, r15
	mov	rdi, QWORD PTR src_tmp_array$1$[rsp]
	add	rdi, 228				; 000000e4H
	npad	5
$LL4@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r13d, DWORD PTR src_tmp_array$2$[rsp]
	jl	SHORT $LN143@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN143@ImFontAtla:
	cmp	r13d, DWORD PTR [rsi+96]
	jl	SHORT $LN146@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN146@ImFontAtla:
	mov	r14, QWORD PTR [rsi+104]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1973
	mov	rax, QWORD PTR [r12+r14+128]
	test	rax, rax
	je	SHORT $LN72@ImFontAtla
; File E:\reps\ocornut\imgui\imgui.h
; Line 2311
	mov	rax, QWORD PTR [rax+72]
	test	rax, rax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1973
	je	SHORT $LN71@ImFontAtla
	cmp	rax, rsi
	je	SHORT $LN71@ImFontAtla
$LN72@ImFontAtla:
	mov	r8d, 1973				; 000007b5H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1KE@NPGLPIC@?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
$LN71@ImFontAtla:
; Line 1976
	mov	DWORD PTR [rdi-4], -1
; Line 1977
	mov	ebx, r15d
	mov	ecx, DWORD PTR [rsi+64]
	mov	eax, -1
	test	ecx, ecx
	jle	SHORT $LN6@ImFontAtla
; Line 1979
	mov	edx, eax
	mov	rsi, r15
	mov	r15, QWORD PTR atlas$GSCopy$1$[rsp]
	npad	6
$LL7@ImFontAtla:
; Line 1977
	mov	eax, edx
	cmp	edx, -1
	jne	SHORT $LN581@ImFontAtla
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, ecx
	jl	SHORT $LN151@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN151@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1978
	mov	rax, QWORD PTR [r15+72]
	mov	rcx, QWORD PTR [rsi+rax]
	cmp	QWORD PTR [r12+r14+128], rcx
	jne	SHORT $LN540@ImFontAtla
; Line 1979
	mov	DWORD PTR [rdi-4], ebx
	mov	eax, ebx
	jmp	SHORT $LN5@ImFontAtla
$LN540@ImFontAtla:
	mov	eax, DWORD PTR [rdi-4]
$LN5@ImFontAtla:
; Line 1977
	inc	ebx
	add	rsi, 8
	mov	ecx, DWORD PTR [r15+64]
	mov	edx, eax
	cmp	ebx, ecx
	jl	SHORT $LL7@ImFontAtla
$LN581@ImFontAtla:
	xor	r15d, r15d
$LN6@ImFontAtla:
; Line 1980
	cmp	eax, -1
	jne	SHORT $LN573@ImFontAtla
	mov	r8d, 1980				; 000007bcH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CO@NKKOCLPN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAD?$AAs?$AAt?$AAI?$AAn?$AAd?$AAe@
	call	QWORD PTR __imp__wassert
; Line 1981
	cmp	DWORD PTR [rdi-4], -1
	je	$LN489@ImFontAtla
$LN573@ImFontAtla:
; Line 1985
	mov	r9, QWORD PTR [r12+r14]
	mov	edx, DWORD PTR [r12+r14+16]
	mov	rcx, r9
	call	stbtt_GetFontOffsetForIndex
	mov	esi, eax
; Line 1986
	test	eax, eax
	jns	SHORT $LN75@ImFontAtla
	mov	r8d, 1986				; 000007c2H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1JA@MENENCJI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5@
	call	QWORD PTR __imp__wassert
	mov	r9, QWORD PTR [r12+r14]
$LN75@ImFontAtla:
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 4786
	mov	r8d, esi
	mov	rdx, r9
	lea	rcx, QWORD PTR [rdi-228]
	call	?stbtt_InitFont_internal@@YAHPEAUstbtt_fontinfo@@PEAEH@Z ; stbtt_InitFont_internal
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1987
	test	eax, eax
	je	$LN489@ImFontAtla
; Line 1991
	movsxd	rbx, DWORD PTR [rdi-4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, DWORD PTR new_size$1$[rsp]
	jl	SHORT $LN172@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN172@ImFontAtla:
	mov	r8, rbx
	shl	r8, 5
	add	r8, QWORD PTR dst_tmp_array$1$[rbp-256]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1992
	mov	rax, QWORD PTR [r12+r14+56]
	lea	rdx, OFFSET FLAT:?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB
	test	rax, rax
	cmovne	rdx, rax
	mov	QWORD PTR [rdi-12], rdx
; Line 1993
	cmp	WORD PTR [rdx], 0
	je	SHORT $LN9@ImFontAtla
	npad	8
$LL10@ImFontAtla:
	movzx	eax, WORD PTR [rdx+2]
	test	ax, ax
	je	SHORT $LN9@ImFontAtla
; Line 1994
	mov	ecx, eax
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	cmp	DWORD PTR [rdi], eax
	cmovge	ecx, DWORD PTR [rdi]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1994
	mov	DWORD PTR [rdi], ecx
; Line 1993
	add	rdx, 4
	cmp	WORD PTR [rdx], 0
	jne	SHORT $LL10@ImFontAtla
$LN9@ImFontAtla:
; Line 1995
	inc	DWORD PTR [r8]
; Line 1996
	mov	ecx, DWORD PTR [rdi]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	cmp	DWORD PTR [r8+4], ecx
	cmovge	ecx, DWORD PTR [r8+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1996
	mov	DWORD PTR [r8+4], ecx
; Line 1969
	inc	r13d
	add	rdi, 272				; 00000110H
	add	r12, 136				; 00000088H
	mov	rsi, QWORD PTR atlas$GSCopy$1$[rsp]
	cmp	r13d, DWORD PTR [rsi+96]
	jl	$LL4@ImFontAtla
; Line 1987
	mov	r14d, DWORD PTR new_size$1$[rsp]
	mov	r12d, DWORD PTR src_tmp_array$2$[rsp]
$LN3@ImFontAtla:
; Line 2000
	mov	DWORD PTR total_glyphs_count$1$[rsp], r15d
	mov	edi, r15d
	mov	DWORD PTR src_i$1$[rsp], r15d
; Line 2001
	mov	esi, 1
	test	r12d, r12d
	jle	$LN12@ImFontAtla
; Line 1979
	mov	r15, QWORD PTR src_tmp_array$1$[rsp]
	add	r15, 232				; 000000e8H
	npad	1
$LL13@ImFontAtla:
; Line 2004
	movsxd	rbx, DWORD PTR [r15-8]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, r14d
	jl	SHORT $LN184@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN184@ImFontAtla:
	mov	r13, rbx
	shl	r13, 5
	add	r13, QWORD PTR dst_tmp_array$1$[rbp-256]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 461
	mov	edx, DWORD PTR [r15-4]
	add	edx, 32					; 00000020H
	sar	edx, 5
	lea	rcx, QWORD PTR [r15+8]
	call	?resize@?$ImVector@I@@QEAAXH@Z		; ImVector<unsigned int>::resize
	movsxd	r8, DWORD PTR [r15+8]
	shl	r8, 2
	xor	edx, edx
	mov	rcx, QWORD PTR [r15+16]
	call	memset
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	cmp	DWORD PTR [r13+16], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2006
	jne	SHORT $LN56@ImFontAtla
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 461
	mov	edx, DWORD PTR [r13+4]
	add	edx, 32					; 00000020H
	sar	edx, 5
	lea	rcx, QWORD PTR [r13+16]
	call	?resize@?$ImVector@I@@QEAAXH@Z		; ImVector<unsigned int>::resize
	movsxd	r8, DWORD PTR [r13+16]
	shl	r8, 2
	xor	edx, edx
	mov	rcx, QWORD PTR [r13+24]
	call	memset
$LN56@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2009
	mov	r12, QWORD PTR [r15-16]
	movzx	eax, WORD PTR [r12]
	test	ax, ax
	je	$LN11@ImFontAtla
	npad	13
$LL16@ImFontAtla:
	movzx	ecx, WORD PTR [r12+2]
	test	cx, cx
	je	$LN583@ImFontAtla
; Line 2010
	movzx	ebx, ax
	cmp	ebx, ecx
	ja	$LN14@ImFontAtla
	npad	6
$LL19@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 463
	mov	eax, DWORD PTR [r13+16]
	shl	eax, 5
	cmp	ebx, eax
	jl	SHORT $LN193@ImFontAtla
	mov	r8d, 463				; 000001cfH
	lea	rdx, OFFSET FLAT:??_C@_1EO@FHOHIDNF@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi@
	call	QWORD PTR __imp__wassert
$LN193@ImFontAtla:
; Line 441
	mov	ecx, ebx
	and	ecx, 31
	shl	esi, cl
	movsxd	rdi, ebx
	sar	rdi, 5
	mov	rax, QWORD PTR [r13+24]
	test	DWORD PTR [rax+rdi*4], esi
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2012
	jne	SHORT $LN17@ImFontAtla
; Line 2014
	lea	rcx, QWORD PTR [r15-232]
	mov	edx, ebx
	call	stbtt_FindGlyphIndex
	test	eax, eax
	je	SHORT $LN17@ImFontAtla
; Line 2018
	inc	DWORD PTR [r15]
; Line 2019
	inc	DWORD PTR [r13+8]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 464
	mov	eax, DWORD PTR [r15+8]
	shl	eax, 5
	cmp	ebx, eax
	jl	SHORT $LN198@ImFontAtla
	mov	r8d, 464				; 000001d0H
	lea	rdx, OFFSET FLAT:??_C@_1EO@FHOHIDNF@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi@
	call	QWORD PTR __imp__wassert
$LN198@ImFontAtla:
	mov	rax, QWORD PTR [r15+16]
; Line 443
	or	DWORD PTR [rax+rdi*4], esi
; Line 464
	mov	eax, DWORD PTR [r13+16]
	shl	eax, 5
	cmp	ebx, eax
	jl	SHORT $LN203@ImFontAtla
	mov	r8d, 464				; 000001d0H
	lea	rdx, OFFSET FLAT:??_C@_1EO@FHOHIDNF@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi@
	call	QWORD PTR __imp__wassert
$LN203@ImFontAtla:
	mov	rax, QWORD PTR [r13+24]
; Line 443
	or	DWORD PTR [rax+rdi*4], esi
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2022
	inc	DWORD PTR total_glyphs_count$1$[rsp]
$LN17@ImFontAtla:
; Line 2010
	inc	ebx
	movzx	eax, WORD PTR [r12+2]
	cmp	ebx, eax
	mov	esi, 1
	jbe	$LL19@ImFontAtla
$LN14@ImFontAtla:
; Line 2009
	add	r12, 4
	movzx	eax, WORD PTR [r12]
	test	ax, ax
	jne	$LL16@ImFontAtla
$LN583@ImFontAtla:
	mov	edi, DWORD PTR src_i$1$[rsp]
$LN11@ImFontAtla:
; Line 2001
	inc	edi
	mov	DWORD PTR src_i$1$[rsp], edi
	add	r15, 272				; 00000110H
	mov	r12d, DWORD PTR src_tmp_array$2$[rsp]
	cmp	edi, r12d
	mov	r14d, DWORD PTR new_size$1$[rsp]
	jl	$LL13@ImFontAtla
	xor	r15d, r15d
$LN12@ImFontAtla:
; Line 2027
	mov	r14d, r15d
	mov	DWORD PTR src_i$1$[rsp], r15d
	test	r12d, r12d
	jle	$LN21@ImFontAtla
; Line 1979
	mov	rbx, QWORD PTR src_tmp_array$1$[rsp]
	add	rbx, 256				; 00000100H
	npad	4
$LL22@ImFontAtla:
; Line 2030
	movsxd	rdi, DWORD PTR [rbx-24]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
	cmp	edi, DWORD PTR [rbx+4]
	jle	SHORT $LN575@ImFontAtla
	mov	rcx, rdi
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rsi, rax
	mov	rdx, QWORD PTR [rbx+8]
	test	rdx, rdx
	je	SHORT $LN211@ImFontAtla
	movsxd	r8, DWORD PTR [rbx]
	shl	r8, 2
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN211@ImFontAtla:
	mov	QWORD PTR [rbx+8], rsi
	mov	DWORD PTR [rbx+4], edi
$LN575@ImFontAtla:
; Line 1331
	mov	rdx, QWORD PTR [rbx-8]
	mov	QWORD PTR it_begin$1$[rbp-256], rdx
; Line 1333
	movsxd	rax, DWORD PTR [rbx-16]
	lea	rax, QWORD PTR [rdx+rax*4]
	mov	QWORD PTR it_end$1$[rbp-256], rax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1940
	mov	r13, rdx
	cmp	rdx, rax
	jae	$LN215@ImFontAtla
$LL216@ImFontAtla:
; Line 1941
	mov	eax, DWORD PTR [r13]
	mov	DWORD PTR entries_32$1$[rbp-256], eax
	test	eax, eax
	je	$LN214@ImFontAtla
; Line 1942
	mov	r14d, r15d
; Line 1979
	mov	esi, 1
$LL219@ImFontAtla:
; Line 1943
	test	eax, esi
	je	$LN217@ImFontAtla
; Line 1944
	lea	r12, QWORD PTR [r13*8]
	lea	rax, QWORD PTR [rdx*8]
	sub	r12d, eax
	and	r12d, -32				; ffffffffffffffe0H
	add	r12d, r14d
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rbx+4]
	mov	r8d, DWORD PTR [rbx]
	cmp	r8d, ecx
	jne	SHORT $LN234@ImFontAtla
	lea	edi, DWORD PTR [r8+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN232@ImFontAtla
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN233@ImFontAtla
$LN489@ImFontAtla:
	xor	bl, bl
	jmp	$LN457@ImFontAtla
$LN232@ImFontAtla:
	mov	eax, 8
$LN233@ImFontAtla:
	cmp	eax, edi
	cmovg	edi, eax
; Line 1344
	cmp	edi, ecx
	jle	SHORT $LN234@ImFontAtla
	movsxd	rcx, edi
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	r15, rax
	mov	rdx, QWORD PTR [rbx+8]
	test	rdx, rdx
	je	SHORT $LN236@ImFontAtla
	movsxd	r8, DWORD PTR [rbx]
	shl	r8, 2
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN236@ImFontAtla:
	mov	QWORD PTR [rbx+8], r15
	mov	DWORD PTR [rbx+4], edi
	mov	r8d, DWORD PTR [rbx]
$LN234@ImFontAtla:
; Line 1347
	movsxd	rcx, r8d
	mov	rax, QWORD PTR [rbx+8]
	mov	DWORD PTR [rax+rcx*4], r12d
	inc	DWORD PTR [rbx]
	mov	eax, DWORD PTR entries_32$1$[rbp-256]
	mov	rdx, QWORD PTR it_begin$1$[rbp-256]
$LN217@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1942
	inc	r14d
	rol	esi, 1
	cmp	r14d, 32				; 00000020H
	jb	$LL219@ImFontAtla
	xor	r15d, r15d
$LN214@ImFontAtla:
; Line 1940
	add	r13, 4
	cmp	r13, QWORD PTR it_end$1$[rbp-256]
	jb	$LL216@ImFontAtla
	mov	r14d, DWORD PTR src_i$1$[rsp]
	mov	r12d, DWORD PTR src_tmp_array$2$[rsp]
$LN215@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rbx-8]
	test	rcx, rcx
	je	SHORT $LN576@ImFontAtla
	mov	QWORD PTR [rbx-16], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx-8], r15
$LN576@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2033
	mov	eax, DWORD PTR [rbx-24]
	cmp	DWORD PTR [rbx], eax
	je	SHORT $LN20@ImFontAtla
	mov	r8d, 2033				; 000007f1H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1FO@GJGKHCEN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AAL@
	call	QWORD PTR __imp__wassert
$LN20@ImFontAtla:
; Line 2027
	inc	r14d
	mov	DWORD PTR src_i$1$[rsp], r14d
	add	rbx, 272				; 00000110H
	cmp	r14d, r12d
	jl	$LL22@ImFontAtla
$LN21@ImFontAtla:
; Line 2035
	mov	edi, r15d
	mov	esi, DWORD PTR new_size$1$[rsp]
	test	esi, esi
	jle	SHORT $LN24@ImFontAtla
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	rbx, QWORD PTR dst_tmp_array$1$[rbp-256]
	add	rbx, 24
	npad	6
$LL25@ImFontAtla:
; Line 1329
	mov	rcx, QWORD PTR [rbx]
	test	rcx, rcx
	je	SHORT $LN23@ImFontAtla
	mov	QWORD PTR [rbx-8], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx], r15
$LN23@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2035
	inc	edi
	add	rbx, 32					; 00000020H
	cmp	edi, esi
	jl	SHORT $LL25@ImFontAtla
$LN24@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rbx, QWORD PTR dst_tmp_array$1$[rbp-256]
	test	rbx, rbx
	je	SHORT $LN252@ImFontAtla
	mov	QWORD PTR dst_tmp_array$[rbp-256], 0
	mov	rcx, rbx
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rbx, r15
	mov	QWORD PTR dst_tmp_array$1$[rbp-256], rbx
	mov	QWORD PTR dst_tmp_array$[rbp-248], rbx
$LN252@ImFontAtla:
; Line 1317
	mov	QWORD PTR buf_rects$[rbp-256], 0
	mov	QWORD PTR buf_rects$[rbp-248], r15
	mov	QWORD PTR buf_packedchars$[rbp-256], 0
	mov	rsi, r15
	mov	QWORD PTR buf_packedchars$1$[rbp-256], r15
	mov	QWORD PTR buf_packedchars$[rbp-248], r15
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2043
	mov	edi, DWORD PTR total_glyphs_count$1$[rsp]
	mov	edx, edi
	lea	rcx, QWORD PTR buf_rects$[rbp-256]
	call	?resize@?$ImVector@Ustbrp_rect@@@@QEAAXH@Z ; ImVector<stbrp_rect>::resize
	test	edi, edi
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	jle	SHORT $LN265@ImFontAtla
; Line 1340
	mov	ebx, edi
	cmp	edi, 8
	mov	eax, 8
	cmovl	ebx, eax
; Line 1341
	test	ebx, ebx
; Line 1344
	jle	SHORT $LN265@ImFontAtla
	movsxd	rax, ebx
	imul	rcx, rax, 28
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rsi, rax
	mov	QWORD PTR buf_packedchars$1$[rbp-256], rax
	mov	QWORD PTR buf_packedchars$[rbp-248], rax
	mov	DWORD PTR buf_packedchars$[rbp-252], ebx
$LN265@ImFontAtla:
; Line 1341
	mov	DWORD PTR buf_packedchars$[rbp-256], edi
; Line 1324
	mov	r13d, DWORD PTR buf_rects$[rbp-256]
	mov	ecx, r13d
	shl	ecx, 4
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2045
	movsxd	r8, ecx
	xor	edx, edx
	mov	rax, QWORD PTR buf_rects$[rbp-248]
	mov	QWORD PTR buf_rects$1$[rbp-256], rax
	mov	rcx, rax
	call	memset
; Line 2046
	imul	ecx, edi, 28
	movsxd	r8, ecx
	xor	edx, edx
	mov	rcx, rsi
	call	memset
; Line 2049
	mov	edx, r15d
	mov	DWORD PTR total_surface$1$[rsp], edx
; Line 2050
	mov	edi, r15d
; Line 2051
	mov	r12d, r15d
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	mov	esi, r15d
	mov	DWORD PTR src_i$1$[rbp-256], r15d
	xorps	xmm14, xmm14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2052
	cmp	DWORD PTR src_tmp_array$2$[rsp], 0
	jle	$LN27@ImFontAtla
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	r14, r15
	mov	rbx, QWORD PTR src_tmp_array$1$[rsp]
	add	rbx, 208				; 000000d0H
	movss	xmm9, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, DWORD PTR src_tmp_array$2$[rsp]
$LL28@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2055
	cmp	DWORD PTR [rbx+24], 0
	je	$LN26@ImFontAtla
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, r13d
	jl	SHORT $LN278@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN278@ImFontAtla:
	movsxd	rax, edi
	shl	rax, 4
	add	rax, QWORD PTR buf_rects$1$[rbp-256]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2058
	mov	QWORD PTR [rbx-8], rax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r12d, DWORD PTR total_glyphs_count$1$[rsp]
	jl	SHORT $LN281@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN281@ImFontAtla:
	movsxd	rax, r12d
	imul	rdx, rax, 28
	add	rdx, QWORD PTR buf_packedchars$1$[rbp-256]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2059
	mov	QWORD PTR [rbx], rdx
; Line 2060
	add	edi, DWORD PTR [rbx+24]
	mov	DWORD PTR buf_rects_out_n$1$[rbp-256], edi
; Line 2061
	add	r12d, DWORD PTR [rbx+24]
	mov	DWORD PTR buf_packedchars_out_n$1$[rbp-256], r12d
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	mov	rdi, QWORD PTR atlas$GSCopy$1$[rsp]
	cmp	esi, DWORD PTR [rdi+96]
	jl	SHORT $LN284@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	rdx, QWORD PTR [rbx]
$LN284@ImFontAtla:
	mov	r12, QWORD PTR [rdi+104]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2065
	mov	eax, DWORD PTR [r14+r12+20]
	mov	DWORD PTR [rbx-48], eax
; Line 2066
	mov	DWORD PTR [rbx-44], r15d
; Line 2067
	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rbx-40], rax
; Line 2068
	mov	edi, DWORD PTR [rbx+48]
	mov	DWORD PTR [rbx-32], edi
; Line 2069
	mov	QWORD PTR [rbx-24], rdx
; Line 2070
	movzx	eax, BYTE PTR [r14+r12+24]
	mov	BYTE PTR [rbx-16], al
; Line 2071
	movzx	eax, BYTE PTR [r14+r12+28]
	mov	BYTE PTR [rbx-15], al
; Line 2074
	movss	xmm8, DWORD PTR [r14+r12+20]
	comiss	xmm8, xmm14
	jbe	SHORT $LN79@ImFontAtla
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2609
	movsxd	r11, DWORD PTR [rbx-172]
	mov	r10, QWORD PTR [rbx-200]
; Line 1270
	movzx	r8d, BYTE PTR [r11+r10+7]
	movzx	edx, BYTE PTR [r11+r10+6]
	mov	ecx, 256				; 00000100H
	movsx	ecx, cx
	imul	edx, ecx
	add	r8w, dx
; Line 2609
	movsx	r9d, r8w
; Line 1270
	movzx	r8d, BYTE PTR [r11+r10+5]
	movzx	eax, BYTE PTR [r11+r10+4]
	mov	ecx, 256				; 00000100H
	movsx	ecx, cx
	imul	eax, ecx
	add	ax, r8w
; Line 2609
	cwde
	sub	eax, r9d
	movd	xmm0, eax
; Line 2610
	cvtdq2ps xmm0, xmm0
	divss	xmm8, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2074
	jmp	SHORT $LN80@ImFontAtla
$LN79@ImFontAtla:
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2615
	movsxd	rcx, DWORD PTR [rbx-180]
	mov	rax, QWORD PTR [rbx-200]
	movzx	edx, BYTE PTR [rcx+rax+19]
	movzx	eax, BYTE PTR [rcx+rax+18]
	shl	eax, 8
	add	edx, eax
	movd	xmm0, edx
; Line 2616
	cvtdq2ps xmm0, xmm0
	divss	xmm8, xmm0
	xorps	xmm8, xmm9
$LN80@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2075
	mov	rax, QWORD PTR atlas$GSCopy$1$[rsp]
	mov	eax, DWORD PTR [rax+20]
	mov	DWORD PTR padding$1$[rbp-256], eax
; Line 2076
	mov	eax, r15d
	mov	DWORD PTR glyph_i$1$[rbp-256], eax
	test	edi, edi
	jle	$LN585@ImFontAtla
; Line 2081
	mov	QWORD PTR tv7163[rbp-256], r15
	mov	rsi, r15
	mov	QWORD PTR tv7162[rbp-256], r15
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	eax, edi
	jl	SHORT $LN297@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN297@ImFontAtla:
	mov	rax, QWORD PTR [rbx+56]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2079
	mov	edx, DWORD PTR [rsi+rax]
	lea	rcx, QWORD PTR [rbx-208]
	call	stbtt_FindGlyphIndex
	mov	esi, eax
; Line 2080
	test	eax, eax
	jne	SHORT $LN81@ImFontAtla
	mov	r8d, 2080				; 00000820H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DC@ENBGOGEF@?$AAg?$AAl?$AAy?$AAp?$AAh?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA_?$AAi?$AAn?$AA_@
	call	QWORD PTR __imp__wassert
$LN81@ImFontAtla:
	movd	xmm6, DWORD PTR [r14+r12+28]
; Line 2081
	cvtdq2ps xmm6, xmm6
	mulss	xmm6, xmm8
	movd	xmm7, DWORD PTR [r14+r12+24]
	cvtdq2ps xmm7, xmm7
	mulss	xmm7, xmm8
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1592
	mov	edx, esi
	lea	rcx, QWORD PTR [rbx-208]
	cmp	DWORD PTR [rbx-132], 0
	je	SHORT $LN311@ImFontAtla
; Line 2256
	mov	QWORD PTR c$5[rbp-256], 1
	xorps	xmm0, xmm0
	movups	XMMWORD PTR c$5[rbp-248], xmm0
	xorps	xmm1, xmm1
	movdqu	XMMWORD PTR c$5[rbp-232], xmm1
	mov	QWORD PTR c$5[rbp-216], r15
	mov	DWORD PTR c$5[rbp-208], r15d
; Line 2257
	lea	r8, QWORD PTR c$5[rbp-256]
	call	?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z ; stbtt__run_charstring
; Line 2261
	mov	esi, r15d
	test	eax, eax
	cmovne	esi, DWORD PTR c$5[rbp-220]
; Line 2258
	mov	r11d, r15d
	cmovne	r11d, DWORD PTR c$5[rbp-232]
; Line 2260
	mov	r13d, r15d
	cmovne	r13d, DWORD PTR c$5[rbp-228]
; Line 2259
	mov	ecx, r15d
	cmovne	ecx, DWORD PTR c$5[rbp-224]
	mov	DWORD PTR $T4[rsp], ecx
; Line 1594
	jmp	$LN317@ImFontAtla
$LN311@ImFontAtla:
; Line 1595
	call	?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z ; stbtt__GetGlyfOffset
; Line 1596
	test	eax, eax
	js	$LN572@ImFontAtla
; Line 1598
	movsxd	r10, eax
	mov	r9, QWORD PTR [rbx-200]
; Line 1270
	movzx	r8d, BYTE PTR [r10+r9+9]
	movzx	edx, BYTE PTR [r10+r9+8]
	mov	edi, 256				; 00000100H
	movsx	ecx, di
	imul	edx, ecx
	add	r8w, dx
; Line 1601
	movsx	esi, r8w
; Line 1270
	movzx	edx, BYTE PTR [r10+r9+2]
	movsx	ecx, di
	imul	edx, ecx
	movzx	eax, BYTE PTR [r10+r9+3]
	add	dx, ax
; Line 1598
	movsx	r11d, dx
; Line 1270
	movzx	r8d, BYTE PTR [r10+r9+7]
	movzx	edx, BYTE PTR [r10+r9+6]
	movsx	ecx, di
	imul	edx, ecx
	add	r8w, dx
; Line 1600
	movsx	r13d, r8w
; Line 1270
	movzx	r8d, BYTE PTR [r10+r9+5]
	movzx	eax, BYTE PTR [r10+r9+4]
	movsx	ecx, di
	imul	eax, ecx
	add	ax, r8w
; Line 1599
	cwde
	mov	DWORD PTR $T4[rsp], eax
$LN317@ImFontAtla:
	xorps	xmm0, xmm0
; Line 2640
	cvtsi2ss xmm0, r11d
	mulss	xmm0, xmm7
	addss	xmm0, xmm14
	call	floorf
	cvttss2si edi, xmm0
	xorps	xmm1, xmm1
; Line 2641
	cvtsi2ss xmm1, esi
	mulss	xmm1, xmm6
	movaps	xmm0, xmm14
	subss	xmm0, xmm1
	call	floorf
	cvttss2si esi, xmm0
	xorps	xmm0, xmm0
	cvtsi2ss xmm0, r13d
; Line 2642
	mulss	xmm0, xmm7
	addss	xmm0, xmm14
	call	ceilf
	cvttss2si r13d, xmm0
	xorps	xmm1, xmm1
	cvtsi2ss xmm1, DWORD PTR $T4[rsp]
; Line 2643
	mulss	xmm1, xmm6
	movaps	xmm0, xmm14
	subss	xmm0, xmm1
	call	ceilf
	cvttss2si edx, xmm0
	jmp	SHORT $LN308@ImFontAtla
$LN572@ImFontAtla:
; Line 2634
	mov	edi, r15d
; Line 2635
	mov	esi, r15d
; Line 2636
	mov	r13d, r15d
; Line 2637
	mov	edx, r15d
$LN308@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2082
	mov	r9d, DWORD PTR padding$1$[rbp-256]
	movzx	ecx, r9w
	sub	cx, di
	dec	cx
	add	cx, WORD PTR [r14+r12+24]
	add	cx, r13w
	mov	rax, QWORD PTR [rbx-8]
	mov	r8, QWORD PTR tv7163[rbp-256]
	mov	WORD PTR [rax+r8+4], cx
; Line 2083
	movzx	ecx, WORD PTR [r14+r12+28]
	sub	cx, si
	add	cx, r9w
	dec	dx
	add	cx, dx
	mov	rax, QWORD PTR [rbx-8]
	mov	WORD PTR [rax+r8+6], cx
; Line 2084
	mov	rax, QWORD PTR [rbx-8]
	movzx	ecx, WORD PTR [rax+r8+6]
	movzx	eax, WORD PTR [rax+r8+4]
	imul	ecx, eax
	mov	edx, DWORD PTR total_surface$1$[rsp]
	add	edx, ecx
	mov	DWORD PTR total_surface$1$[rsp], edx
; Line 2076
	mov	eax, DWORD PTR glyph_i$1$[rbp-256]
	inc	eax
	mov	DWORD PTR glyph_i$1$[rbp-256], eax
	mov	rsi, QWORD PTR tv7162[rbp-256]
	add	rsi, 4
	mov	QWORD PTR tv7162[rbp-256], rsi
	add	r8, 16
	mov	QWORD PTR tv7163[rbp-256], r8
	mov	edi, DWORD PTR [rbx+48]
	cmp	eax, edi
	jl	$LN297@ImFontAtla
	mov	esi, DWORD PTR src_i$1$[rbp-256]
	mov	r13d, DWORD PTR buf_rects$[rbp-256]
	jmp	SHORT $LN590@ImFontAtla
$LN585@ImFontAtla:
	mov	edx, DWORD PTR total_surface$1$[rsp]
$LN590@ImFontAtla:
; Line 2052
	mov	eax, DWORD PTR src_tmp_array$2$[rsp]
	mov	r12d, DWORD PTR buf_packedchars_out_n$1$[rbp-256]
	mov	edi, DWORD PTR buf_rects_out_n$1$[rbp-256]
$LN26@ImFontAtla:
	inc	esi
	mov	DWORD PTR src_i$1$[rbp-256], esi
	add	rbx, 272				; 00000110H
	add	r14, 136				; 00000088H
	cmp	esi, eax
	jl	$LL28@ImFontAtla
$LN27@ImFontAtla:
	movd	xmm0, edx
; Line 2091
	cvtdq2ps xmm0, xmm0
	call	sqrtf
	cvttss2si ecx, xmm0
	inc	ecx
; Line 2092
	mov	rdx, QWORD PTR atlas$GSCopy$1$[rsp]
	mov	DWORD PTR [rdx+44], r15d
; Line 2093
	mov	eax, DWORD PTR [rdx+16]
	test	eax, eax
	jg	SHORT $LN61@ImFontAtla
	movd	xmm0, ecx
; Line 2096
	cvtdq2ps xmm0, xmm0
	comiss	xmm0, DWORD PTR __real@45333333
	jb	SHORT $LN84@ImFontAtla
	mov	eax, 4096				; 00001000H
	jmp	SHORT $LN61@ImFontAtla
$LN84@ImFontAtla:
	comiss	xmm0, DWORD PTR __real@44b33333
	jb	SHORT $LN82@ImFontAtla
	mov	eax, 2048				; 00000800H
	jmp	SHORT $LN61@ImFontAtla
$LN82@ImFontAtla:
	mov	eax, 512				; 00000200H
	mov	ecx, 1024				; 00000400H
	comiss	xmm0, DWORD PTR __real@44333333
	cmovae	eax, ecx
$LN61@ImFontAtla:
; Line 2101
	mov	DWORD PTR [rdx+40], eax
	mov	QWORD PTR spc$[rbp-256], r15
	mov	rsi, r15
	mov	QWORD PTR spc$[rbp-248], r15
	mov	DWORD PTR spc$[rbp-240], r15d
	mov	QWORD PTR spc$[rbp-232], r15
	xorps	xmm0, xmm0
	movdqa	XMMWORD PTR spc$[rbp-224], xmm0
	mov	r13, r15
	mov	QWORD PTR spc$[rbp-200], r15
; Line 2102
	mov	r14d, DWORD PTR [rdx+20]
	mov	r12d, DWORD PTR [rdx+40]
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3799
	mov	ecx, 72					; 00000048H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdi, rax
; Line 3800
	mov	ebx, r12d
	sub	ebx, r14d
; Line 3801
	movsxd	rcx, ebx
	shl	rcx, 4
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 3803
	test	rdi, rdi
	je	SHORT $LN336@ImFontAtla
	mov	rcx, rdi
	test	rax, rax
	je	SHORT $LN335@ImFontAtla
; Line 3810
	mov	DWORD PTR spc$[rbp-240], r12d
; Line 3813
	mov	rsi, rdi
	mov	QWORD PTR spc$[rbp-248], rdi
; Line 3814
	mov	r13, rax
	mov	QWORD PTR spc$[rbp-200], rax
; Line 3815
	mov	DWORD PTR spc$[rbp-228], r14d
; Line 3816
	mov	DWORD PTR spc$[rbp-232], r12d
; Line 3817
	mov	DWORD PTR spc$[rbp-220], 1
; Line 3818
	mov	DWORD PTR spc$[rbp-216], 1
; Line 3819
	mov	DWORD PTR spc$[rbp-224], r15d
; Line 3821
	mov	r8d, 32768				; 00008000H
	sub	r8d, r14d
	mov	DWORD PTR [rsp+32], ebx
	mov	r9, rax
	mov	edx, ebx
	call	stbrp_init_target
; Line 3823
	jmp	SHORT $LN337@ImFontAtla
$LN336@ImFontAtla:
; Line 3805
	test	rax, rax
	je	SHORT $LN337@ImFontAtla
	mov	rcx, rax
$LN335@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2103
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN337@ImFontAtla:
	mov	rdx, rsi
	mov	r14, QWORD PTR atlas$GSCopy$1$[rsp]
	mov	rcx, r14
	call	?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z ; ImFontAtlasBuildPackCustomRects
	mov	edi, r15d
; Line 2106
	mov	r12d, DWORD PTR src_tmp_array$2$[rsp]
	test	r12d, r12d
	jle	$LN33@ImFontAtla
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 1600
	mov	rbx, QWORD PTR src_tmp_array$1$[rsp]
	add	rbx, 232				; 000000e8H
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r15d, r12d
	jl	SHORT $LN342@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN342@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2109
	mov	r8d, DWORD PTR [rbx]
	test	r8d, r8d
	je	SHORT $LN32@ImFontAtla
; Line 2112
	mov	rdx, QWORD PTR [rbx-32]
	mov	rcx, rsi
	call	stbrp_pack_rects
; Line 2116
	mov	r8d, r15d
	cmp	DWORD PTR [rbx], 0
	jle	SHORT $LN32@ImFontAtla
; Line 2112
	mov	rdx, r15
	npad	4
$LL37@ImFontAtla:
; Line 2117
	mov	rax, QWORD PTR [rbx-32]
	cmp	DWORD PTR [rdx+rax+12], 0
	je	SHORT $LN35@ImFontAtla
; Line 2118
	movzx	ecx, WORD PTR [rdx+rax+10]
	movzx	eax, WORD PTR [rdx+rax+6]
	add	ecx, eax
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	cmp	DWORD PTR [r14+44], ecx
	cmovge	ecx, DWORD PTR [r14+44]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2118
	mov	DWORD PTR [r14+44], ecx
$LN35@ImFontAtla:
; Line 2116
	inc	r8d
	add	rdx, 16
	cmp	r8d, DWORD PTR [rbx]
	jl	SHORT $LL37@ImFontAtla
$LN32@ImFontAtla:
; Line 2106
	inc	edi
	add	rbx, 272				; 00000110H
	cmp	edi, r12d
	jl	SHORT $LN342@ImFontAtla
$LN33@ImFontAtla:
; Line 2122
	mov	eax, DWORD PTR [r14+44]
	test	BYTE PTR [r14+4], 1
	jne	SHORT $LN87@ImFontAtla
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 256
	lea	ecx, DWORD PTR [rax-1]
	mov	eax, ecx
	sar	eax, 1
	or	ecx, eax
	mov	eax, ecx
	sar	eax, 2
	or	ecx, eax
	mov	eax, ecx
	sar	eax, 4
	or	ecx, eax
	mov	eax, ecx
	sar	eax, 8
	or	ecx, eax
	mov	eax, ecx
	sar	eax, 16
	or	eax, ecx
$LN87@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2122
	lea	ecx, DWORD PTR [rax+1]
	mov	DWORD PTR [r14+44], ecx
	movd	xmm0, ecx
; Line 2123
	cvtdq2ps xmm0, xmm0
	movss	xmm13, DWORD PTR __real@3f800000
	movaps	xmm2, xmm13
	divss	xmm2, xmm0
	mov	eax, DWORD PTR [r14+40]
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movaps	xmm1, xmm13
	divss	xmm1, xmm0
	movss	DWORD PTR [r14+48], xmm1
	movss	DWORD PTR [r14+52], xmm2
; Line 2124
	imul	ecx, eax
	movsxd	rcx, ecx
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR [r14+24], rax
; Line 2125
	mov	ecx, DWORD PTR [r14+44]
	imul	ecx, DWORD PTR [r14+40]
	movsxd	r8, ecx
	xor	edx, edx
	mov	rcx, rax
	call	memset
; Line 2126
	mov	rax, QWORD PTR [r14+24]
	mov	QWORD PTR spc$[rbp-208], rax
; Line 2127
	mov	eax, DWORD PTR [r14+44]
	mov	DWORD PTR spc$[rbp-236], eax
; Line 2122
	mov	r12d, r15d
; Line 2130
	mov	edi, DWORD PTR src_tmp_array$2$[rsp]
	test	edi, edi
	jle	$LN39@ImFontAtla
; Line 2118
	mov	r13, r15
	mov	r14, QWORD PTR src_tmp_array$1$[rsp]
	npad	9
$LL40@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	mov	rbx, QWORD PTR atlas$GSCopy$1$[rsp]
	cmp	r12d, DWORD PTR [rbx+96]
	jl	SHORT $LN351@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN351@ImFontAtla:
	mov	rbx, QWORD PTR [rbx+104]
	cmp	r12d, edi
	jl	SHORT $LN354@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN354@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2134
	cmp	DWORD PTR [r14+232], 0
	je	$LN38@ImFontAtla
; Line 2137
	lea	r8, QWORD PTR [r14+160]
	mov	rax, QWORD PTR [r14+200]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 1
	mov	rdx, r14
	lea	rcx, QWORD PTR spc$[rbp-256]
	call	stbtt_PackFontRangesRenderIntoRects
; Line 2140
	movss	xmm1, DWORD PTR [rbx+r13+80]
	ucomiss	xmm1, xmm13
	jp	SHORT $LN579@ImFontAtla
	je	$LN42@ImFontAtla
$LN579@ImFontAtla:
; Line 2143
	mov	r8d, r15d
	lea	r9, QWORD PTR multiply_table$6[rbp-256]
	mov	r15d, 256				; 00000100H
	npad	5
$LL513@ImFontAtla:
; Line 1897
	mov	eax, r8d
	xorps	xmm0, xmm0
	cvtsi2ss xmm0, rax
	mulss	xmm0, xmm1
	cvttss2si rcx, xmm0
; Line 1898
	mov	edx, 255				; 000000ffH
	movzx	eax, cl
	cmp	ecx, edx
	cmovbe	edx, eax
	mov	BYTE PTR [r9], dl
; Line 1895
	inc	r8d
	lea	r9, QWORD PTR [r9+1]
	cmp	r8d, r15d
	jb	SHORT $LL513@ImFontAtla
; Line 2144
	mov	rdi, QWORD PTR [r14+200]
; Line 2145
	xor	r15d, r15d
	mov	esi, r15d
	cmp	DWORD PTR [r14+232], r15d
	jle	$LN587@ImFontAtla
; Line 2144
	add	rdi, 6
	mov	r15, QWORD PTR atlas$GSCopy$1$[rsp]
$LL43@ImFontAtla:
; Line 2146
	cmp	DWORD PTR [rdi+6], 0
	je	SHORT $LN41@ImFontAtla
; Line 2147
	movsxd	rbx, DWORD PTR [r15+40]
	movzx	r11d, WORD PTR [rdi]
	movzx	eax, WORD PTR [rdi+4]
; Line 1904
	imul	eax, ebx
	cdqe
	movzx	r10d, WORD PTR [rdi+2]
	add	rax, QWORD PTR [r15+24]
	add	r10, rax
; Line 1906
	movzx	r9d, WORD PTR [rdi-2]
; Line 1905
	test	r11d, r11d
	je	SHORT $LN41@ImFontAtla
; Line 2147
	mov	r8, r10
	neg	r8
$LL365@ImFontAtla:
; Line 1906
	test	r9, r9
	je	SHORT $LN363@ImFontAtla
	mov	rdx, r10
	npad	2
$LL368@ImFontAtla:
; Line 1907
	movzx	eax, BYTE PTR [rdx]
	movzx	ecx, BYTE PTR multiply_table$6[rbp+rax-256]
	mov	BYTE PTR [rdx], cl
; Line 1906
	lea	rdx, QWORD PTR [rdx+1]
	lea	rax, QWORD PTR [r8+rdx]
	cmp	rax, r9
	jl	SHORT $LL368@ImFontAtla
$LN363@ImFontAtla:
; Line 1905
	dec	r11d
	add	r10, rbx
	sub	r8, rbx
	test	r11d, r11d
	jg	SHORT $LL365@ImFontAtla
$LN41@ImFontAtla:
; Line 2145
	inc	esi
	add	rdi, 16
	cmp	esi, DWORD PTR [r14+232]
	jl	SHORT $LL43@ImFontAtla
	xor	r15d, r15d
$LN587@ImFontAtla:
; Line 2149
	mov	edi, DWORD PTR src_tmp_array$2$[rsp]
$LN42@ImFontAtla:
	mov	QWORD PTR [r14+200], r15
$LN38@ImFontAtla:
; Line 2130
	inc	r12d
	add	r13, 136				; 00000088H
	add	r14, 272				; 00000110H
	cmp	r12d, edi
	jl	$LL40@ImFontAtla
	mov	r13, QWORD PTR spc$[rbp-200]
	mov	rsi, QWORD PTR spc$[rbp-248]
	mov	r14, QWORD PTR atlas$GSCopy$1$[rsp]
$LN39@ImFontAtla:
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 3831
	mov	rcx, r13
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 3832
	mov	rcx, rsi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR buf_rects$1$[rbp-256]
	test	rcx, rcx
	je	SHORT $LN373@ImFontAtla
	mov	QWORD PTR buf_rects$[rbp-256], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rcx, r15
	mov	QWORD PTR buf_rects$1$[rbp-256], rcx
	mov	QWORD PTR buf_rects$[rbp-248], rcx
$LN373@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2157
	mov	eax, r15d
	mov	DWORD PTR src_i$1$[rsp], eax
	test	edi, edi
	jle	$LN51@ImFontAtla
; Line 2118
	mov	rsi, r15
	mov	QWORD PTR tv7133[rbp-256], r15
	mov	rdi, QWORD PTR src_tmp_array$1$[rsp]
	add	rdi, 8
	movss	xmm12, DWORD PTR __real@3f000000
; Line 2157
	mov	ecx, DWORD PTR src_tmp_array$2$[rsp]
	jmp	SHORT $LN46@ImFontAtla
	npad	8
$LL586@ImFontAtla:
	mov	r14, QWORD PTR atlas$GSCopy$1$[rsp]
$LN46@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	eax, ecx
	jl	SHORT $LN377@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR src_i$1$[rsp]
	mov	ecx, DWORD PTR src_tmp_array$2$[rsp]
$LN377@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2160
	cmp	DWORD PTR [rdi+224], 0
	je	$LN44@ImFontAtla
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	eax, DWORD PTR [r14+96]
	jl	SHORT $LN380@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN380@ImFontAtla:
	mov	r14, QWORD PTR [r14+104]
	add	r14, rsi
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2164
	mov	rbx, QWORD PTR [r14+128]
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 2609
	movsxd	r10, DWORD PTR [rdi+28]
	mov	r9, QWORD PTR [rdi]
; Line 1270
	movzx	r8d, BYTE PTR [r10+r9+7]
	movzx	edx, BYTE PTR [r10+r9+6]
	mov	r12d, 256				; 00000100H
	movsx	ecx, r12w
	imul	edx, ecx
	add	r8w, dx
; Line 2609
	movsx	r11d, r8w
; Line 1270
	movzx	r8d, BYTE PTR [r10+r9+5]
	movzx	edx, BYTE PTR [r10+r9+4]
	movsx	ecx, r12w
	imul	edx, ecx
	add	r8w, dx
; Line 2609
	movsx	ecx, r8w
	mov	eax, ecx
	sub	eax, r11d
	movd	xmm0, eax
; Line 2610
	cvtdq2ps xmm0, xmm0
	movss	xmm2, DWORD PTR [r14+20]
	divss	xmm2, xmm0
	movd	xmm1, ecx
; Line 2584
	cvtdq2ps xmm1, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2170
	mov	eax, -1
	comiss	xmm1, xmm14
	mov	ecx, 1
	cmova	eax, ecx
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm1, xmm2
	addss	xmm0, xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 367
	cvttss2si eax, xmm0
	movd	xmm6, eax
	cvtdq2ps xmm6, xmm6
	movd	xmm1, r11d
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2170
	cvtdq2ps xmm1, xmm1
; Line 2171
	mov	eax, -1
	comiss	xmm1, xmm14
	cmova	eax, ecx
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm1, xmm2
	addss	xmm0, xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 367
	cvttss2si eax, xmm0
	movd	xmm7, eax
	cvtdq2ps xmm7, xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2216
	cmp	BYTE PTR [r14+72], 0
	jne	$LN548@ImFontAtla
; Line 2613
	mov	QWORD PTR [rbx+16], 0
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rbx+48]
	test	rcx, rcx
	je	SHORT $LN408@ImFontAtla
	mov	QWORD PTR [rbx+40], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+48], r15
$LN408@ImFontAtla:
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN411@ImFontAtla
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], r15
$LN411@ImFontAtla:
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN414@ImFontAtla
	mov	QWORD PTR [rbx+24], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+32], r15
$LN414@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2617
	mov	QWORD PTR [rbx+56], r15
; Line 2618
	mov	QWORD PTR [rbx+72], r15
; Line 2619
	mov	BYTE PTR [rbx+94], 1
; Line 2620
	mov	QWORD PTR [rbx+100], 0
; Line 2621
	mov	DWORD PTR [rbx+108], r15d
; Line 2219
	mov	eax, DWORD PTR [r14+20]
	mov	DWORD PTR [rbx+20], eax
; Line 2220
	mov	QWORD PTR [rbx+80], r14
; Line 2221
	mov	rax, QWORD PTR atlas$GSCopy$1$[rsp]
	mov	QWORD PTR [rbx+72], rax
; Line 2222
	movss	DWORD PTR [rbx+100], xmm6
; Line 2223
	movss	DWORD PTR [rbx+104], xmm7
	jmp	SHORT $LN403@ImFontAtla
$LN548@ImFontAtla:
	movss	xmm6, DWORD PTR [rbx+100]
$LN403@ImFontAtla:
; Line 2225
	inc	WORD PTR [rbx+88]
; Line 2173
	movss	xmm10, DWORD PTR [r14+44]
; Line 2174
	addss	xmm6, xmm12
	cvttss2si eax, xmm6
	movd	xmm11, eax
	cvtdq2ps xmm11, xmm11
	addss	xmm11, DWORD PTR [r14+48]
; Line 2176
	mov	r12d, r15d
	cmp	DWORD PTR [rdi+224], 0
	jle	$LN584@ImFontAtla
; Line 2225
	mov	rsi, r15
	mov	r13, r15
	mov	r15, QWORD PTR atlas$GSCopy$1$[rsp]
	npad	7
$LL49@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r12d, DWORD PTR [rdi+248]
	jl	SHORT $LN418@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN418@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2178
	mov	rax, QWORD PTR [rdi+256]
	mov	edx, DWORD PTR [rax+r13]
; Line 2179
	mov	rcx, QWORD PTR [rdi+200]
; Line 2181
	movss	xmm0, DWORD PTR [rsi+rcx+16]
; Line 2182
	movss	xmm9, DWORD PTR [r14+64]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm9, xmm0
	ja	SHORT $LN424@ImFontAtla
	movss	xmm9, DWORD PTR [r14+68]
	minss	xmm9, xmm0
$LN424@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2183
	movaps	xmm8, xmm10
; Line 2184
	ucomiss	xmm0, xmm9
	jp	SHORT $LN578@ImFontAtla
	je	SHORT $LN68@ImFontAtla
$LN578@ImFontAtla:
; Line 2185
	movaps	xmm8, xmm9
	subss	xmm8, xmm0
	mulss	xmm8, xmm12
	cmp	BYTE PTR [r14+32], 0
	je	SHORT $LN89@ImFontAtla
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 367
	cvttss2si eax, xmm8
	movd	xmm8, eax
	cvtdq2ps xmm8, xmm8
$LN89@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2185
	addss	xmm8, xmm10
$LN68@ImFontAtla:
	movd	xmm0, DWORD PTR [r15+40]
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 4195
	cvtdq2ps xmm0, xmm0
	movaps	xmm2, xmm13
	divss	xmm2, xmm0
	movd	xmm1, DWORD PTR [r15+44]
	cvtdq2ps xmm1, xmm1
	movaps	xmm0, xmm13
	divss	xmm0, xmm1
; Line 4212
	movzx	eax, WORD PTR [rsi+rcx]
	movd	xmm7, eax
	cvtdq2ps xmm7, xmm7
	mulss	xmm7, xmm2
; Line 4213
	movzx	eax, WORD PTR [rsi+rcx+2]
	movd	xmm6, eax
	cvtdq2ps xmm6, xmm6
	mulss	xmm6, xmm0
; Line 4214
	movzx	eax, WORD PTR [rsi+rcx+4]
	movd	xmm5, eax
	cvtdq2ps xmm5, xmm5
	mulss	xmm5, xmm2
; Line 4215
	movzx	eax, WORD PTR [rsi+rcx+6]
	movd	xmm1, eax
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, xmm0
; Line 4209
	movss	xmm4, DWORD PTR [rsi+rcx+24]
	addss	xmm4, xmm14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2191
	addss	xmm4, xmm11
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 4208
	movss	xmm0, DWORD PTR [rsi+rcx+20]
	addss	xmm0, xmm14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2191
	addss	xmm0, xmm8
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 4207
	movss	xmm3, DWORD PTR [rsi+rcx+12]
	addss	xmm3, xmm14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2191
	addss	xmm3, xmm11
; File E:\reps\ocornut\imgui\imstb_truetype.h
; Line 4206
	movss	xmm2, DWORD PTR [rsi+rcx+8]
	addss	xmm2, xmm14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2191
	addss	xmm2, xmm8
	movss	DWORD PTR [rsp+80], xmm9
	movss	DWORD PTR [rsp+72], xmm1
	movss	DWORD PTR [rsp+64], xmm5
	movss	DWORD PTR [rsp+56], xmm6
	movss	DWORD PTR [rsp+48], xmm7
	movss	DWORD PTR [rsp+40], xmm4
	movss	DWORD PTR [rsp+32], xmm0
	mov	rcx, rbx
	call	?AddGlyph@ImFont@@QEAAXGMMMMMMMMM@Z	; ImFont::AddGlyph
; Line 2176
	inc	r12d
	add	r13, 4
	add	rsi, 28
	cmp	r12d, DWORD PTR [rdi+224]
	jl	$LL49@ImFontAtla
	xor	r15d, r15d
	mov	rsi, QWORD PTR tv7133[rbp-256]
$LN584@ImFontAtla:
; Line 2157
	mov	ecx, DWORD PTR src_tmp_array$2$[rsp]
	mov	eax, DWORD PTR src_i$1$[rsp]
$LN44@ImFontAtla:
	inc	eax
	mov	DWORD PTR src_i$1$[rsp], eax
	add	rdi, 272				; 00000110H
	add	rsi, 136				; 00000088H
	mov	QWORD PTR tv7133[rbp-256], rsi
	cmp	eax, ecx
	jl	$LL586@ImFontAtla
	mov	edi, DWORD PTR src_tmp_array$2$[rsp]
; Line 2196
	test	edi, edi
	jle	SHORT $LN51@ImFontAtla
; Line 2223
	mov	rbx, QWORD PTR src_tmp_array$1$[rsp]
	add	rbx, 248				; 000000f8H
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r15d, edi
	jl	SHORT $LN433@ImFontAtla
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	npad	1
$LN433@ImFontAtla:
; Line 1320
	mov	rcx, QWORD PTR [rbx+16]
	test	rcx, rcx
	je	SHORT $LN441@ImFontAtla
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN441@ImFontAtla:
	mov	rcx, QWORD PTR [rbx]
	test	rcx, rcx
	je	SHORT $LN448@ImFontAtla
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN448@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2196
	inc	r15d
	add	rbx, 272				; 00000110H
	cmp	r15d, edi
	jl	SHORT $LN433@ImFontAtla
$LN51@ImFontAtla:
; Line 2199
	mov	rcx, QWORD PTR atlas$GSCopy$1$[rsp]
	call	?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z ; ImFontAtlasBuildFinish
; Line 2200
	mov	bl, 1
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	mov	rax, QWORD PTR buf_packedchars$1$[rbp-256]
	test	rax, rax
	je	SHORT $LN452@ImFontAtla
	mov	rcx, rax
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN452@ImFontAtla:
	mov	rax, QWORD PTR buf_rects$1$[rbp-256]
	test	rax, rax
	je	SHORT $LN456@ImFontAtla
	mov	rcx, rax
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN456@ImFontAtla:
$LN457@ImFontAtla:
	mov	rax, QWORD PTR dst_tmp_array$1$[rbp-256]
	test	rax, rax
	je	SHORT $LN460@ImFontAtla
	mov	rcx, rax
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN460@ImFontAtla:
	mov	rax, QWORD PTR src_tmp_array$1$[rsp]
	test	rax, rax
	je	SHORT $LN580@ImFontAtla
	mov	rcx, rax
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN580@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2201
	movzx	eax, bl
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+752]
	mov	rbx, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	mov	rdi, QWORD PTR [r11+72]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	movaps	xmm14, XMMWORD PTR [r11-144]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z ENDP ; ImFontAtlasBuildWithStbTruetype
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
src_tmp_array$2$ = 96
src_i$1$ = 100
total_glyphs_count$1$ = 100
new_size$1$ = 104
total_surface$1$ = 104
$T4 = 108
src_i$1$ = 108
src_i$1$ = 108
atlas$GSCopy$1$ = 112
src_tmp_array$1$ = 120
entries_32$1$ = 128
src_i$1$ = 128
dst_tmp_array$1$ = 136
it_begin$1$ = 144
tv7163 = 144
tv7133 = 144
glyph_i$1$ = 152
buf_rects_out_n$1$ = 156
buf_packedchars_out_n$1$ = 160
buf_rects$1$ = 168
it_end$1$ = 176
tv7162 = 176
buf_rects$ = 184
dst_tmp_array$ = 200
padding$1$ = 216
buf_packedchars$1$ = 224
c$5 = 240
spc$ = 240
src_tmp_array$ = 304
buf_packedchars$ = 320
multiply_table$6 = 336
__$ArrayPad$ = 592
atlas$ = 800
?dtor$0@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA PROC ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$0
	lea	rcx, QWORD PTR src_tmp_array$[rdx]
	jmp	??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ ; ImVector<ImFontBuildSrcData>::~ImVector<ImFontBuildSrcData>
?dtor$0@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA ENDP ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
src_tmp_array$2$ = 96
src_i$1$ = 100
total_glyphs_count$1$ = 100
new_size$1$ = 104
total_surface$1$ = 104
$T4 = 108
src_i$1$ = 108
src_i$1$ = 108
atlas$GSCopy$1$ = 112
src_tmp_array$1$ = 120
entries_32$1$ = 128
src_i$1$ = 128
dst_tmp_array$1$ = 136
it_begin$1$ = 144
tv7163 = 144
tv7133 = 144
glyph_i$1$ = 152
buf_rects_out_n$1$ = 156
buf_packedchars_out_n$1$ = 160
buf_rects$1$ = 168
it_end$1$ = 176
tv7162 = 176
buf_rects$ = 184
dst_tmp_array$ = 200
padding$1$ = 216
buf_packedchars$1$ = 224
c$5 = 240
spc$ = 240
src_tmp_array$ = 304
buf_packedchars$ = 320
multiply_table$6 = 336
__$ArrayPad$ = 592
atlas$ = 800
?dtor$1@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA PROC ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$1
	lea	rcx, QWORD PTR dst_tmp_array$[rdx]
	jmp	??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ ; ImVector<ImFontBuildDstData>::~ImVector<ImFontBuildDstData>
?dtor$1@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA ENDP ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
src_tmp_array$2$ = 96
src_i$1$ = 100
total_glyphs_count$1$ = 100
new_size$1$ = 104
total_surface$1$ = 104
$T4 = 108
src_i$1$ = 108
src_i$1$ = 108
atlas$GSCopy$1$ = 112
src_tmp_array$1$ = 120
entries_32$1$ = 128
src_i$1$ = 128
dst_tmp_array$1$ = 136
it_begin$1$ = 144
tv7163 = 144
tv7133 = 144
glyph_i$1$ = 152
buf_rects_out_n$1$ = 156
buf_packedchars_out_n$1$ = 160
buf_rects$1$ = 168
it_end$1$ = 176
tv7162 = 176
buf_rects$ = 184
dst_tmp_array$ = 200
padding$1$ = 216
buf_packedchars$1$ = 224
c$5 = 240
spc$ = 240
src_tmp_array$ = 304
buf_packedchars$ = 320
multiply_table$6 = 336
__$ArrayPad$ = 592
atlas$ = 800
?dtor$2@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA PROC ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$2
	lea	rcx, QWORD PTR buf_rects$[rdx]
	jmp	??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ	; ImVector<stbrp_rect>::~ImVector<stbrp_rect>
?dtor$2@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA ENDP ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
src_tmp_array$2$ = 96
src_i$1$ = 100
total_glyphs_count$1$ = 100
new_size$1$ = 104
total_surface$1$ = 104
$T4 = 108
src_i$1$ = 108
src_i$1$ = 108
atlas$GSCopy$1$ = 112
src_tmp_array$1$ = 120
entries_32$1$ = 128
src_i$1$ = 128
dst_tmp_array$1$ = 136
it_begin$1$ = 144
tv7163 = 144
tv7133 = 144
glyph_i$1$ = 152
buf_rects_out_n$1$ = 156
buf_packedchars_out_n$1$ = 160
buf_rects$1$ = 168
it_end$1$ = 176
tv7162 = 176
buf_rects$ = 184
dst_tmp_array$ = 200
padding$1$ = 216
buf_packedchars$1$ = 224
c$5 = 240
spc$ = 240
src_tmp_array$ = 304
buf_packedchars$ = 320
multiply_table$6 = 336
__$ArrayPad$ = 592
atlas$ = 800
?dtor$3@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA PROC ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$3
	lea	rcx, QWORD PTR buf_packedchars$[rdx]
	jmp	??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ ; ImVector<stbtt_packedchar>::~ImVector<stbtt_packedchar>
?dtor$3@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA ENDP ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
src_tmp_array$2$ = 96
src_i$1$ = 100
total_glyphs_count$1$ = 100
new_size$1$ = 104
total_surface$1$ = 104
$T4 = 108
src_i$1$ = 108
src_i$1$ = 108
atlas$GSCopy$1$ = 112
src_tmp_array$1$ = 120
entries_32$1$ = 128
src_i$1$ = 128
dst_tmp_array$1$ = 136
it_begin$1$ = 144
tv7163 = 144
tv7133 = 144
glyph_i$1$ = 152
buf_rects_out_n$1$ = 156
buf_packedchars_out_n$1$ = 160
buf_rects$1$ = 168
it_end$1$ = 176
tv7162 = 176
buf_rects$ = 184
dst_tmp_array$ = 200
padding$1$ = 216
buf_packedchars$1$ = 224
c$5 = 240
spc$ = 240
src_tmp_array$ = 304
buf_packedchars$ = 320
multiply_table$6 = 336
__$ArrayPad$ = 592
atlas$ = 800
?dtor$0@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA PROC ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$0
	lea	rcx, QWORD PTR src_tmp_array$[rdx]
	jmp	??1?$ImVector@UImFontBuildSrcData@@@@QEAA@XZ ; ImVector<ImFontBuildSrcData>::~ImVector<ImFontBuildSrcData>
?dtor$0@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA ENDP ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
src_tmp_array$2$ = 96
src_i$1$ = 100
total_glyphs_count$1$ = 100
new_size$1$ = 104
total_surface$1$ = 104
$T4 = 108
src_i$1$ = 108
src_i$1$ = 108
atlas$GSCopy$1$ = 112
src_tmp_array$1$ = 120
entries_32$1$ = 128
src_i$1$ = 128
dst_tmp_array$1$ = 136
it_begin$1$ = 144
tv7163 = 144
tv7133 = 144
glyph_i$1$ = 152
buf_rects_out_n$1$ = 156
buf_packedchars_out_n$1$ = 160
buf_rects$1$ = 168
it_end$1$ = 176
tv7162 = 176
buf_rects$ = 184
dst_tmp_array$ = 200
padding$1$ = 216
buf_packedchars$1$ = 224
c$5 = 240
spc$ = 240
src_tmp_array$ = 304
buf_packedchars$ = 320
multiply_table$6 = 336
__$ArrayPad$ = 592
atlas$ = 800
?dtor$1@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA PROC ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$1
	lea	rcx, QWORD PTR dst_tmp_array$[rdx]
	jmp	??1?$ImVector@UImFontBuildDstData@@@@QEAA@XZ ; ImVector<ImFontBuildDstData>::~ImVector<ImFontBuildDstData>
?dtor$1@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA ENDP ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
src_tmp_array$2$ = 96
src_i$1$ = 100
total_glyphs_count$1$ = 100
new_size$1$ = 104
total_surface$1$ = 104
$T4 = 108
src_i$1$ = 108
src_i$1$ = 108
atlas$GSCopy$1$ = 112
src_tmp_array$1$ = 120
entries_32$1$ = 128
src_i$1$ = 128
dst_tmp_array$1$ = 136
it_begin$1$ = 144
tv7163 = 144
tv7133 = 144
glyph_i$1$ = 152
buf_rects_out_n$1$ = 156
buf_packedchars_out_n$1$ = 160
buf_rects$1$ = 168
it_end$1$ = 176
tv7162 = 176
buf_rects$ = 184
dst_tmp_array$ = 200
padding$1$ = 216
buf_packedchars$1$ = 224
c$5 = 240
spc$ = 240
src_tmp_array$ = 304
buf_packedchars$ = 320
multiply_table$6 = 336
__$ArrayPad$ = 592
atlas$ = 800
?dtor$2@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA PROC ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$2
	lea	rcx, QWORD PTR buf_rects$[rdx]
	jmp	??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ	; ImVector<stbrp_rect>::~ImVector<stbrp_rect>
?dtor$2@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA ENDP ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
src_tmp_array$2$ = 96
src_i$1$ = 100
total_glyphs_count$1$ = 100
new_size$1$ = 104
total_surface$1$ = 104
$T4 = 108
src_i$1$ = 108
src_i$1$ = 108
atlas$GSCopy$1$ = 112
src_tmp_array$1$ = 120
entries_32$1$ = 128
src_i$1$ = 128
dst_tmp_array$1$ = 136
it_begin$1$ = 144
tv7163 = 144
tv7133 = 144
glyph_i$1$ = 152
buf_rects_out_n$1$ = 156
buf_packedchars_out_n$1$ = 160
buf_rects$1$ = 168
it_end$1$ = 176
tv7162 = 176
buf_rects$ = 184
dst_tmp_array$ = 200
padding$1$ = 216
buf_packedchars$1$ = 224
c$5 = 240
spc$ = 240
src_tmp_array$ = 304
buf_packedchars$ = 320
multiply_table$6 = 336
__$ArrayPad$ = 592
atlas$ = 800
?dtor$3@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA PROC ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$3
	lea	rcx, QWORD PTR buf_packedchars$[rdx]
	jmp	??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ ; ImVector<stbtt_packedchar>::~ImVector<stbtt_packedchar>
?dtor$3@?0??ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z@4HA ENDP ; `ImFontAtlasBuildWithStbTruetype'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z
_TEXT	SEGMENT
draw_list$ = 64
vert_start_idx$ = 72
vert_end_idx$ = 80
a$ = 88
b$ = 96
uv_a$ = 104
uv_b$ = 112
clamp$ = 120
?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z PROC ; ImGui::ShadeVertsLinearUV, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1488
$LN116:
	sub	rsp, 56					; 00000038H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	mov	rax, QWORD PTR b$[rsp]
	xorps	xmm5, xmm5
	mov	r10, QWORD PTR uv_a$[rsp]
	movaps	XMMWORD PTR [rsp+32], xmm6
	movaps	XMMWORD PTR [rsp+16], xmm7
	movss	xmm0, DWORD PTR [rax]
	movss	xmm1, DWORD PTR [rax+4]
	mov	rax, QWORD PTR uv_b$[rsp]
	subss	xmm1, DWORD PTR [r9+4]
	movss	xmm7, DWORD PTR [r10]
	subss	xmm0, DWORD PTR [r9]
	movss	xmm3, DWORD PTR [rax]
	movss	xmm4, DWORD PTR [rax+4]
	movaps	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	ucomiss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1488
	movsxd	r11, r8d
	movsxd	r8, edx
	movaps	XMMWORD PTR [rsp], xmm8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	subss	xmm2, xmm7
	movss	xmm8, DWORD PTR [r10+4]
	movaps	xmm6, xmm4
	subss	xmm6, xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	jp	SHORT $LN114@ShadeVerts
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1491
	jne	SHORT $LN114@ShadeVerts
	xorps	xmm6, xmm6
	jmp	SHORT $LN12@ShadeVerts
$LN114@ShadeVerts:
	divss	xmm6, xmm1
$LN12@ShadeVerts:
	ucomiss	xmm0, xmm5
	jp	SHORT $LN113@ShadeVerts
	je	SHORT $LN14@ShadeVerts
$LN113@ShadeVerts:
	movaps	xmm5, xmm2
	divss	xmm5, xmm0
$LN14@ShadeVerts:
; Line 1497
	cmp	BYTE PTR clamp$[rsp], 0
	mov	rdx, QWORD PTR [rcx+40]
	lea	rcx, QWORD PTR [r8+r8*4]
	lea	r8, QWORD PTR [rdx+rcx*4]
	lea	rcx, QWORD PTR [r11+r11*4]
	lea	r11, QWORD PTR [rdx+rcx*4]
	je	$LN8@ShadeVerts
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 357
	movaps	xmm0, xmm7
	movaps	xmm2, xmm8
	minss	xmm0, xmm3
	minss	xmm2, xmm4
; Line 358
	maxss	xmm7, xmm3
	maxss	xmm8, xmm4
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1501
	cmp	r8, r11
	jae	$LN106@ShadeVerts
	mov	rax, r11
	sub	rax, r8
	add	rax, 19
	cmp	rax, 80					; 00000050H
	jb	$LC88@ShadeVerts
	lea	rcx, QWORD PTR [r11-60]
	lea	rax, QWORD PTR [r8+32]
	npad	4
$LL105@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm3, DWORD PTR [rax-28]
	subss	xmm3, DWORD PTR [r9+4]
	movss	xmm1, DWORD PTR [r8]
	subss	xmm1, DWORD PTR [r9]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm3, xmm6
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm3, DWORD PTR [r10+4]
	addss	xmm1, DWORD PTR [r10]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	comiss	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 359
	jbe	SHORT $LN89@ShadeVerts
	movaps	xmm4, xmm2
	jmp	SHORT $LN90@ShadeVerts
$LN89@ShadeVerts:
	movaps	xmm4, xmm8
	minss	xmm4, xmm3
$LN90@ShadeVerts:
	comiss	xmm0, xmm1
	jbe	SHORT $LN91@ShadeVerts
	movaps	xmm3, xmm0
	jmp	SHORT $LN92@ShadeVerts
$LN91@ShadeVerts:
	movaps	xmm3, xmm7
	minss	xmm3, xmm1
$LN92@ShadeVerts:
; Line 295
	movss	xmm1, DWORD PTR [rax-12]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	movss	DWORD PTR [rax-24], xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm3, DWORD PTR [rax-8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	movss	DWORD PTR [rax-20], xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	subss	xmm3, DWORD PTR [r9+4]
	subss	xmm1, DWORD PTR [r9]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm3, xmm6
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm3, DWORD PTR [r10+4]
	addss	xmm1, DWORD PTR [r10]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	comiss	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 359
	jbe	SHORT $LN93@ShadeVerts
	movaps	xmm4, xmm2
	jmp	SHORT $LN94@ShadeVerts
$LN93@ShadeVerts:
	movaps	xmm4, xmm8
	minss	xmm4, xmm3
$LN94@ShadeVerts:
	comiss	xmm0, xmm1
	jbe	SHORT $LN95@ShadeVerts
	movaps	xmm3, xmm0
	jmp	SHORT $LN96@ShadeVerts
$LN95@ShadeVerts:
	movaps	xmm3, xmm7
	minss	xmm3, xmm1
$LN96@ShadeVerts:
; Line 295
	movss	xmm1, DWORD PTR [rax+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	movss	DWORD PTR [rax-4], xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm3, DWORD PTR [rax+12]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	movss	DWORD PTR [rax], xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	subss	xmm3, DWORD PTR [r9+4]
	subss	xmm1, DWORD PTR [r9]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm3, xmm6
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm3, DWORD PTR [r10+4]
	addss	xmm1, DWORD PTR [r10]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	comiss	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 359
	jbe	SHORT $LN97@ShadeVerts
	movaps	xmm4, xmm2
	jmp	SHORT $LN98@ShadeVerts
$LN97@ShadeVerts:
	movaps	xmm4, xmm8
	minss	xmm4, xmm3
$LN98@ShadeVerts:
	comiss	xmm0, xmm1
	jbe	SHORT $LN99@ShadeVerts
	movaps	xmm3, xmm0
	jmp	SHORT $LN100@ShadeVerts
$LN99@ShadeVerts:
	movaps	xmm3, xmm7
	minss	xmm3, xmm1
$LN100@ShadeVerts:
; Line 295
	movss	xmm1, DWORD PTR [rax+28]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	movss	DWORD PTR [rax+16], xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm3, DWORD PTR [rax+32]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	movss	DWORD PTR [rax+20], xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	subss	xmm3, DWORD PTR [r9+4]
	subss	xmm1, DWORD PTR [r9]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm3, xmm6
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm3, DWORD PTR [r10+4]
	addss	xmm1, DWORD PTR [r10]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	comiss	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 359
	jbe	SHORT $LN101@ShadeVerts
	movaps	xmm4, xmm2
	jmp	SHORT $LN102@ShadeVerts
$LN101@ShadeVerts:
	movaps	xmm4, xmm8
	minss	xmm4, xmm3
$LN102@ShadeVerts:
	comiss	xmm0, xmm1
	jbe	SHORT $LN103@ShadeVerts
	movaps	xmm3, xmm0
	jmp	SHORT $LN104@ShadeVerts
$LN103@ShadeVerts:
	movaps	xmm3, xmm7
	minss	xmm3, xmm1
$LN104@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	movss	DWORD PTR [rax+36], xmm3
	add	r8, 80					; 00000050H
	movss	DWORD PTR [rax+40], xmm4
	add	rax, 80					; 00000050H
	cmp	r8, rcx
	jb	$LL105@ShadeVerts
$LC88@ShadeVerts:
; Line 1501
	cmp	r8, r11
	jae	$LN106@ShadeVerts
	lea	rcx, QWORD PTR [r8+4]
$LC4@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm3, DWORD PTR [rcx]
	subss	xmm3, DWORD PTR [r9+4]
	movss	xmm1, DWORD PTR [rcx-4]
	subss	xmm1, DWORD PTR [r9]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm3, xmm6
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm3, DWORD PTR [r10+4]
	addss	xmm1, DWORD PTR [r10]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	comiss	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 359
	jbe	SHORT $LN59@ShadeVerts
	movaps	xmm4, xmm2
	jmp	SHORT $LN60@ShadeVerts
$LN59@ShadeVerts:
	movaps	xmm4, xmm8
	minss	xmm4, xmm3
$LN60@ShadeVerts:
	comiss	xmm0, xmm1
	jbe	SHORT $LN63@ShadeVerts
	movaps	xmm3, xmm0
	jmp	SHORT $LN64@ShadeVerts
$LN63@ShadeVerts:
	movaps	xmm3, xmm7
	minss	xmm3, xmm1
$LN64@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1502
	movss	DWORD PTR [rcx+4], xmm3
	movss	DWORD PTR [rcx+8], xmm4
	add	rcx, 20
	lea	rax, QWORD PTR [rcx-4]
	cmp	rax, r11
	jb	SHORT $LC4@ShadeVerts
; Line 1509
	movaps	xmm6, XMMWORD PTR [rsp+32]
	movaps	xmm7, XMMWORD PTR [rsp+16]
	movaps	xmm8, XMMWORD PTR [rsp]
	add	rsp, 56					; 00000038H
	ret	0
$LN8@ShadeVerts:
; Line 1506
	cmp	r8, r11
	jae	$LN106@ShadeVerts
	mov	rax, r11
	sub	rax, r8
	add	rax, 19
	cmp	rax, 80					; 00000050H
	jb	$LC107@ShadeVerts
	lea	rcx, QWORD PTR [r11-60]
	lea	rax, QWORD PTR [r8+32]
	npad	5
$LL108@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm0, DWORD PTR [rax-28]
	subss	xmm0, DWORD PTR [r9+4]
	movss	xmm1, DWORD PTR [r8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1507
	add	r8, 80					; 00000050H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	subss	xmm1, DWORD PTR [r9]
	movss	xmm2, DWORD PTR [rax-12]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm0, xmm6
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm0, DWORD PTR [r10+4]
	addss	xmm1, DWORD PTR [r10]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1507
	movss	DWORD PTR [rax-20], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm0, DWORD PTR [rax-8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1507
	movss	DWORD PTR [rax-24], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	subss	xmm0, DWORD PTR [r9+4]
	subss	xmm2, DWORD PTR [r9]
	movss	xmm1, DWORD PTR [rax+8]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm0, xmm6
	mulss	xmm2, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm0, DWORD PTR [r10+4]
	addss	xmm2, DWORD PTR [r10]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1507
	movss	DWORD PTR [rax], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm0, DWORD PTR [rax+12]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1507
	movss	DWORD PTR [rax-4], xmm2
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	subss	xmm0, DWORD PTR [r9+4]
	subss	xmm1, DWORD PTR [r9]
	movss	xmm2, DWORD PTR [rax+28]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm0, xmm6
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm0, DWORD PTR [r10+4]
	addss	xmm1, DWORD PTR [r10]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1507
	movss	DWORD PTR [rax+20], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm0, DWORD PTR [rax+32]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1507
	movss	DWORD PTR [rax+16], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	subss	xmm0, DWORD PTR [r9+4]
	subss	xmm2, DWORD PTR [r9]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm0, xmm6
	mulss	xmm2, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm0, DWORD PTR [r10+4]
	addss	xmm2, DWORD PTR [r10]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1507
	movss	DWORD PTR [rax+40], xmm0
	movss	DWORD PTR [rax+36], xmm2
	add	rax, 80					; 00000050H
	cmp	r8, rcx
	jb	$LL108@ShadeVerts
$LC107@ShadeVerts:
; Line 1506
	cmp	r8, r11
	jae	SHORT $LN106@ShadeVerts
	lea	rcx, QWORD PTR [r8+4]
$LC7@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm1, DWORD PTR [rcx-4]
	subss	xmm1, DWORD PTR [r9]
	movss	xmm0, DWORD PTR [rcx]
	subss	xmm0, DWORD PTR [r9+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm1, xmm5
	mulss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm1, DWORD PTR [r10]
	addss	xmm0, DWORD PTR [r10+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1507
	movss	DWORD PTR [rcx+4], xmm1
	movss	DWORD PTR [rcx+8], xmm0
	add	rcx, 20
	lea	rax, QWORD PTR [rcx-4]
	cmp	rax, r11
	jb	SHORT $LC7@ShadeVerts
$LN106@ShadeVerts:
; Line 1509
	movaps	xmm6, XMMWORD PTR [rsp+32]
	movaps	xmm7, XMMWORD PTR [rsp+16]
	movaps	xmm8, XMMWORD PTR [rsp]
	add	rsp, 56					; 00000038H
	ret	0
?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z ENDP ; ImGui::ShadeVertsLinearUV
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z
_TEXT	SEGMENT
draw_list$ = 176
gradient_p0$ = 176
vert_start_idx$ = 184
vert_end_idx$ = 192
gradient_p1$ = 208
col0$ = 216
col1$ = 224
?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z PROC ; ImGui::ShadeVertsLinearColorGradientKeepAlpha, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1470
$LN56:
	mov	rax, rsp
	sub	rsp, 168				; 000000a8H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm5, DWORD PTR gradient_p1$[rsp]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1472
	movss	xmm4, DWORD PTR __real@3f800000
	movaps	XMMWORD PTR [rax-24], xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm6, DWORD PTR gradient_p1$[rsp+4]
	movaps	XMMWORD PTR [rax-40], xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1472
	movaps	xmm7, xmm4
	movaps	XMMWORD PTR [rax-56], xmm8
	movsxd	r10, edx
; Line 1474
	mov	rdx, QWORD PTR [rcx+40]
	mov	QWORD PTR gradient_p0$[rsp], r9
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm8, DWORD PTR gradient_p0$[rsp]
	movaps	XMMWORD PTR [rax-72], xmm9
	subss	xmm5, xmm8
	movss	xmm9, DWORD PTR gradient_p0$[rsp+4]
	subss	xmm6, xmm9
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1474
	movsxd	rax, r8d
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 364
	movaps	xmm0, xmm5
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1474
	lea	rcx, QWORD PTR [rax+rax*4]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 364
	mulss	xmm0, xmm5
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1474
	lea	r11, QWORD PTR [rdx+rcx*4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movaps	xmm1, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1473
	lea	rcx, QWORD PTR [r10+r10*4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm1, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1473
	lea	r10, QWORD PTR [rdx+rcx*4]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 364
	addss	xmm1, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1472
	divss	xmm7, xmm1
; Line 1475
	cmp	r10, r11
	jae	$LN33@ShadeVerts
	mov	QWORD PTR [rsp+184], rbx
	mov	rax, r11
	mov	ebx, DWORD PTR col0$[rsp]
	sub	rax, r10
	mov	QWORD PTR [rsp+160], rdi
	add	rax, 19
	mov	edi, DWORD PTR col1$[rsp]
	xorps	xmm2, xmm2
	movaps	XMMWORD PTR [rsp+80], xmm10
	movaps	XMMWORD PTR [rsp+64], xmm11
	movaps	XMMWORD PTR [rsp+48], xmm12
	movaps	XMMWORD PTR [rsp+32], xmm13
	movaps	XMMWORD PTR [rsp+16], xmm14
	movaps	XMMWORD PTR [rsp], xmm15
	cmp	rax, 80					; 00000050H
	jb	$LN44@ShadeVerts
; Line 1479
	movzx	r9d, bl
	mov	eax, ebx
	shr	eax, 8
	movzx	r8d, al
	mov	eax, ebx
	shr	eax, 16
	movzx	edx, al
	mov	eax, edi
	shr	eax, 16
	movzx	ecx, al
	mov	eax, edi
	sub	ecx, edx
	shr	eax, 8
	movd	xmm11, edx
	lea	rdx, QWORD PTR [r10+44]
	movd	xmm13, r8d
	movd	xmm15, r9d
	movd	xmm10, ecx
	movzx	ecx, al
	sub	ecx, r8d
	movzx	eax, dil
	sub	eax, r9d
	lea	r8, QWORD PTR [r11-60]
	cvtdq2ps xmm10, xmm10
	movd	xmm14, eax
	movd	xmm12, ecx
	cvtdq2ps xmm14, xmm14
	cvtdq2ps xmm11, xmm11
	cvtdq2ps xmm12, xmm12
	cvtdq2ps xmm13, xmm13
	cvtdq2ps xmm15, xmm15
	npad	1
$LL43@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm1, DWORD PTR [rdx-40]
	movss	xmm0, DWORD PTR [r10]
	subss	xmm1, xmm9
	subss	xmm0, xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm1, xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 370
	mulss	xmm0, xmm5
	addss	xmm1, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1478
	mulss	xmm1, xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm2, xmm1
	jbe	SHORT $LN35@ShadeVerts
	movaps	xmm3, xmm2
	jmp	SHORT $LN36@ShadeVerts
$LN35@ShadeVerts:
	movaps	xmm3, xmm4
	minss	xmm3, xmm1
$LN36@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	and	DWORD PTR [rdx-28], -16777216		; ff000000H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	movaps	xmm0, xmm10
	mulss	xmm0, xmm3
	movaps	xmm1, xmm12
	mulss	xmm1, xmm3
	addss	xmm0, xmm11
	addss	xmm1, xmm13
	cvttss2si ecx, xmm0
	cvttss2si eax, xmm1
	shl	ecx, 8
	movaps	xmm0, xmm14
	mulss	xmm0, xmm3
	or	ecx, eax
	shl	ecx, 8
	addss	xmm0, xmm15
	cvttss2si eax, xmm0
	or	ecx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	or	DWORD PTR [rdx-28], ecx
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm1, DWORD PTR [rdx-24]
	movss	xmm0, DWORD PTR [rdx-20]
	subss	xmm1, xmm8
	subss	xmm0, xmm9
; Line 370
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 370
	addss	xmm1, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1478
	mulss	xmm1, xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm2, xmm1
	jbe	SHORT $LN37@ShadeVerts
	movaps	xmm3, xmm2
	jmp	SHORT $LN38@ShadeVerts
$LN37@ShadeVerts:
	movaps	xmm3, xmm4
	minss	xmm3, xmm1
$LN38@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	and	DWORD PTR [rdx-8], -16777216		; ff000000H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	movaps	xmm0, xmm10
	mulss	xmm0, xmm3
	movaps	xmm1, xmm12
	mulss	xmm1, xmm3
	addss	xmm0, xmm11
	addss	xmm1, xmm13
	cvttss2si ecx, xmm0
	cvttss2si eax, xmm1
	shl	ecx, 8
	movaps	xmm0, xmm14
	mulss	xmm0, xmm3
	or	ecx, eax
	shl	ecx, 8
	addss	xmm0, xmm15
	cvttss2si eax, xmm0
	or	ecx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	or	DWORD PTR [rdx-8], ecx
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm1, DWORD PTR [rdx-4]
	movss	xmm0, DWORD PTR [rdx]
	subss	xmm1, xmm8
	subss	xmm0, xmm9
; Line 370
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 370
	addss	xmm1, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1478
	mulss	xmm1, xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm2, xmm1
	jbe	SHORT $LN39@ShadeVerts
	movaps	xmm3, xmm2
	jmp	SHORT $LN40@ShadeVerts
$LN39@ShadeVerts:
	movaps	xmm3, xmm4
	minss	xmm3, xmm1
$LN40@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	and	DWORD PTR [rdx+12], -16777216		; ff000000H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	movaps	xmm0, xmm10
	mulss	xmm0, xmm3
	movaps	xmm1, xmm12
	mulss	xmm1, xmm3
	addss	xmm0, xmm11
	addss	xmm1, xmm13
	cvttss2si ecx, xmm0
	cvttss2si eax, xmm1
	shl	ecx, 8
	movaps	xmm0, xmm14
	mulss	xmm0, xmm3
	or	ecx, eax
	shl	ecx, 8
	addss	xmm0, xmm15
	cvttss2si eax, xmm0
	or	ecx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	or	DWORD PTR [rdx+12], ecx
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm1, DWORD PTR [rdx+16]
	movss	xmm0, DWORD PTR [rdx+20]
	subss	xmm1, xmm8
	subss	xmm0, xmm9
; Line 370
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 370
	addss	xmm1, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1478
	mulss	xmm1, xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm2, xmm1
	jbe	SHORT $LN41@ShadeVerts
	movaps	xmm3, xmm2
	jmp	SHORT $LN42@ShadeVerts
$LN41@ShadeVerts:
	movaps	xmm3, xmm4
	minss	xmm3, xmm1
$LN42@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	and	DWORD PTR [rdx+32], -16777216		; ff000000H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	movaps	xmm0, xmm10
	mulss	xmm0, xmm3
	movaps	xmm1, xmm12
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	add	r10, 80					; 00000050H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	mulss	xmm1, xmm3
	addss	xmm0, xmm11
	addss	xmm1, xmm13
	cvttss2si ecx, xmm0
	cvttss2si eax, xmm1
	shl	ecx, 8
	movaps	xmm0, xmm14
	or	ecx, eax
	mulss	xmm0, xmm3
	shl	ecx, 8
	addss	xmm0, xmm15
	cvttss2si eax, xmm0
	or	ecx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	or	DWORD PTR [rdx+32], ecx
	add	rdx, 80					; 00000050H
	cmp	r10, r8
	jb	$LL43@ShadeVerts
$LN44@ShadeVerts:
; Line 1475
	cmp	r10, r11
	jae	$LN54@ShadeVerts
	movzx	r9d, bl
	mov	eax, ebx
	shr	eax, 8
	movzx	r8d, al
	mov	eax, edi
	shr	eax, 16
	movzx	ecx, al
	mov	eax, edi
	shr	eax, 8
	shr	ebx, 16
	movzx	edx, bl
	sub	ecx, edx
	movd	xmm13, r8d
	movd	xmm15, r9d
	cvtdq2ps xmm13, xmm13
	movd	xmm11, edx
	lea	rdx, QWORD PTR [r10+16]
	movd	xmm10, ecx
	movzx	ecx, al
	sub	ecx, r8d
	movzx	eax, dil
	sub	eax, r9d
	cvtdq2ps xmm10, xmm10
	movd	xmm14, eax
	movd	xmm12, ecx
	cvtdq2ps xmm14, xmm14
	cvtdq2ps xmm11, xmm11
	cvtdq2ps xmm12, xmm12
	cvtdq2ps xmm15, xmm15
$LC4@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm1, DWORD PTR [rdx-16]
	movss	xmm0, DWORD PTR [rdx-12]
	subss	xmm1, xmm8
	subss	xmm0, xmm9
; Line 370
	mulss	xmm1, xmm5
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 370
	addss	xmm1, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1478
	mulss	xmm1, xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm2, xmm1
	jbe	SHORT $LN22@ShadeVerts
	movaps	xmm3, xmm2
	jmp	SHORT $LN23@ShadeVerts
$LN22@ShadeVerts:
	movaps	xmm3, xmm4
	minss	xmm3, xmm1
$LN23@ShadeVerts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	and	DWORD PTR [rdx], -16777216		; ff000000H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	movaps	xmm0, xmm10
	mulss	xmm0, xmm3
	movaps	xmm1, xmm12
	mulss	xmm1, xmm3
	addss	xmm0, xmm11
	addss	xmm1, xmm13
	cvttss2si ecx, xmm0
	cvttss2si eax, xmm1
	shl	ecx, 8
	movaps	xmm0, xmm14
	or	ecx, eax
	mulss	xmm0, xmm3
	shl	ecx, 8
	addss	xmm0, xmm15
	cvttss2si eax, xmm0
	or	ecx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1482
	or	DWORD PTR [rdx], ecx
	add	rdx, 20
	lea	rax, QWORD PTR [rdx-16]
	cmp	rax, r11
	jb	$LC4@ShadeVerts
$LN54@ShadeVerts:
	movaps	xmm14, XMMWORD PTR [rsp+16]
	movaps	xmm13, XMMWORD PTR [rsp+32]
	movaps	xmm12, XMMWORD PTR [rsp+48]
	movaps	xmm11, XMMWORD PTR [rsp+64]
	movaps	xmm10, XMMWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [rsp+184]
	movaps	xmm15, XMMWORD PTR [rsp]
$LN33@ShadeVerts:
; Line 1484
	lea	r11, QWORD PTR [rsp+168]
	movaps	xmm6, XMMWORD PTR [r11-24]
	movaps	xmm7, XMMWORD PTR [r11-40]
	movaps	xmm8, XMMWORD PTR [r11-56]
	movaps	xmm9, XMMWORD PTR [r11-72]
	mov	rsp, r11
	ret	0
?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z ENDP ; ImGui::ShadeVertsLinearColorGradientKeepAlpha
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z
_TEXT	SEGMENT
p1$ = 48
$T1 = 56
$T2 = 56
$T3 = 56
$T4 = 56
$T5 = 56
$T6 = 56
$T7 = 56
$T8 = 56
$T9 = 56
$T10 = 56
$T11 = 56
$T12 = 56
p0$ = 56
draw_list$ = 256
rect$ = 264
col$ = 272
p0$1$ = 280
x_start_norm$ = 280
inv_rounding$1$ = 288
x_end_norm$ = 288
rounding$ = 296
?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z PROC ; ImGui::RenderRectFilledRangeH, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3271
$LN131:
	mov	QWORD PTR [rsp+24], rdi
	push	rbp
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-55]
	sub	rsp, 224				; 000000e0H
; Line 3272
	movss	xmm1, DWORD PTR x_end_norm$[rbp-169]
	mov	r15d, r8d
	ucomiss	xmm1, xmm3
	mov	r14, rdx
	mov	rdi, rcx
	jp	SHORT $LN121@RenderRect
	je	$LN1@RenderRect
$LN121@RenderRect:
; Line 3274
	comiss	xmm3, xmm1
	movaps	XMMWORD PTR [rsp+208], xmm6
	movaps	XMMWORD PTR [rsp+192], xmm7
	movaps	XMMWORD PTR [rsp+176], xmm8
	movaps	XMMWORD PTR [rsp+160], xmm9
	movaps	XMMWORD PTR [rsp+96], xmm13
	movaps	XMMWORD PTR [rsp+80], xmm14
	movaps	XMMWORD PTR [rsp+64], xmm15
	jbe	SHORT $LN3@RenderRect
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 353
	movaps	xmm0, xmm3
	movaps	xmm3, xmm1
	movaps	xmm1, xmm0
$LN3@RenderRect:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3277
	movss	xmm6, DWORD PTR [rdx]
	xorps	xmm8, xmm8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	movss	xmm2, DWORD PTR [rdx+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3279
	movss	xmm7, DWORD PTR rounding$[rbp-169]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	subss	xmm2, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3279
	ucomiss	xmm7, xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm13, DWORD PTR [rdx+4]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	movaps	xmm15, xmm2
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm14, DWORD PTR [rdx+12]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	movaps	xmm9, xmm2
	mulss	xmm15, xmm3
	mulss	xmm9, xmm1
	addss	xmm15, xmm6
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR p0$[rbp-165], xmm13
	movss	DWORD PTR p1$[rbp-165], xmm14
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 352
	addss	xmm9, xmm6
	movss	DWORD PTR p0$1$[rbp-169], xmm15
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR p0$[rbp-169], xmm15
	movss	DWORD PTR p1$[rbp-169], xmm9
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3279
	jp	SHORT $LN4@RenderRect
	jne	SHORT $LN4@RenderRect
; Line 3281
	mov	DWORD PTR [rsp+40], 15
	lea	r8, QWORD PTR p1$[rbp-169]
	mov	r9d, r15d
	movss	DWORD PTR [rsp+32], xmm8
	lea	rdx, QWORD PTR p0$[rbp-169]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; Line 3282
	jmp	$LN128@RenderRect
$LN4@RenderRect:
; Line 3285
	mulss	xmm2, DWORD PTR __real@3f000000
	movaps	xmm1, xmm14
	mov	QWORD PTR [rsp+264], rsi
	movaps	XMMWORD PTR [rsp+144], xmm10
	subss	xmm1, xmm13
	movaps	XMMWORD PTR [rsp+128], xmm11
	movss	xmm11, DWORD PTR __real@3f800000
	movaps	XMMWORD PTR [rsp+112], xmm12
	mulss	xmm1, DWORD PTR __real@3f000000
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	minss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3285
	subss	xmm2, xmm11
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm8, xmm2
	jbe	SHORT $LN33@RenderRect
	xorps	xmm7, xmm7
	jmp	SHORT $LN32@RenderRect
$LN33@RenderRect:
	comiss	xmm2, xmm7
	ja	SHORT $LN32@RenderRect
	movaps	xmm7, xmm2
$LN32@RenderRect:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3263
	movss	xmm2, DWORD PTR __real@3fc90fdb
; Line 3286
	movaps	xmm10, xmm11
	divss	xmm10, xmm7
; Line 3287
	movaps	xmm0, xmm15
	movaps	xmm1, xmm11
	subss	xmm0, xmm6
	movss	DWORD PTR inv_rounding$1$[rbp-169], xmm10
	mulss	xmm0, xmm10
	subss	xmm1, xmm0
; Line 3263
	comiss	xmm8, xmm1
	jb	SHORT $LN36@RenderRect
	movaps	xmm12, xmm2
	jmp	SHORT $LN35@RenderRect
$LN36@RenderRect:
; Line 3264
	comiss	xmm1, xmm11
	jb	SHORT $LN37@RenderRect
	xorps	xmm12, xmm12
	jmp	SHORT $LN35@RenderRect
$LN37@RenderRect:
; Line 3265
	movaps	xmm0, xmm1
	call	acosf
	movss	xmm2, DWORD PTR __real@3fc90fdb
	movaps	xmm12, xmm0
$LN35@RenderRect:
; Line 3288
	movaps	xmm1, xmm9
	movaps	xmm0, xmm11
	subss	xmm1, xmm6
	mulss	xmm1, xmm10
	subss	xmm0, xmm1
; Line 3263
	comiss	xmm8, xmm0
	jb	SHORT $LN40@RenderRect
	movaps	xmm10, xmm2
	jmp	SHORT $LN39@RenderRect
$LN40@RenderRect:
; Line 3264
	comiss	xmm0, xmm11
	jb	SHORT $LN41@RenderRect
	xorps	xmm10, xmm10
	jmp	SHORT $LN39@RenderRect
$LN41@RenderRect:
; Line 3265
	call	acosf
	movaps	xmm10, xmm0
$LN39@RenderRect:
; Line 3291
	ucomiss	xmm12, xmm10
	mov	QWORD PTR [rsp+256], rbx
	mov	esi, 8
	addss	xmm6, xmm7
	maxss	xmm15, xmm6
	jp	$LN5@RenderRect
	jne	$LN5@RenderRect
; File E:\reps\ocornut\imgui\imgui.h
; Line 2032
	lea	rbx, QWORD PTR [rdi+128]
; Line 212
	movss	DWORD PTR $T12[rbp-169], xmm15
; Line 1347
	mov	eax, DWORD PTR [rbx]
	mov	ecx, DWORD PTR [rbx+4]
; Line 212
	movss	DWORD PTR $T12[rbp-165], xmm14
; Line 1347
	cmp	eax, ecx
	jne	SHORT $LN52@RenderRect
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN56@RenderRect
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN57@RenderRect
$LN56@RenderRect:
	mov	eax, esi
$LN57@RenderRect:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN52@RenderRect:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T12[rbp-169]
; Line 212
	movss	DWORD PTR $T11[rbp-169], xmm15
	movss	DWORD PTR $T11[rbp-165], xmm13
; Line 1347
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rbx]
	inc	eax
	mov	DWORD PTR [rbx], eax
	mov	r8d, DWORD PTR [rbx+4]
	cmp	eax, r8d
	jne	SHORT $LN63@RenderRect
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN67@RenderRect
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN68@RenderRect
$LN67@RenderRect:
	mov	eax, esi
$LN68@RenderRect:
	cmp	eax, ecx
	cmovg	ecx, eax
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN63@RenderRect:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T11[rbp-169]
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3295
	jmp	$LN129@RenderRect
$LN5@RenderRect:
; Line 3296
	ucomiss	xmm12, xmm8
	jp	SHORT $LN7@RenderRect
	jne	SHORT $LN7@RenderRect
	movss	xmm6, DWORD PTR __real@3fc90fdb
	ucomiss	xmm10, xmm6
	jp	SHORT $LN7@RenderRect
	jne	SHORT $LN7@RenderRect
; Line 3298
	movaps	xmm0, xmm14
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T10[rbp-169], xmm15
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3298
	subss	xmm0, xmm7
	mov	DWORD PTR [rsp+32], 6
	mov	r9d, 3
	lea	rdx, QWORD PTR $T10[rbp-169]
	movaps	xmm2, xmm7
	mov	rcx, rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T10[rbp-165], xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3298
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
; Line 3299
	movaps	xmm0, xmm13
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T9[rbp-169], xmm15
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3299
	addss	xmm0, xmm7
	mov	DWORD PTR [rsp+32], 9
	mov	r9d, 6
	lea	rdx, QWORD PTR $T9[rbp-169]
	movaps	xmm2, xmm7
	mov	rcx, rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T9[rbp-165], xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3299
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
; Line 3300
	jmp	$LN8@RenderRect
$LN7@RenderRect:
; Line 3303
	movss	xmm6, DWORD PTR __real@40490fdb
	lea	rdx, QWORD PTR $T8[rbp-169]
	movaps	xmm1, xmm6
	mov	DWORD PTR [rsp+40], 3
	movaps	xmm0, xmm14
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T8[rbp-169], xmm15
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3303
	movaps	xmm3, xmm6
	subss	xmm1, xmm12
	subss	xmm0, xmm7
	movaps	xmm2, xmm7
	subss	xmm3, xmm10
	mov	rcx, rdi
	movss	DWORD PTR [rsp+32], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T8[rbp-165], xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3303
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
; Line 3304
	movaps	xmm0, xmm13
	mov	DWORD PTR [rsp+40], 3
	addss	xmm0, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T7[rbp-169], xmm15
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3304
	addss	xmm12, xmm6
	movaps	xmm2, xmm7
	addss	xmm10, xmm6
	mov	rcx, rdi
	lea	rdx, QWORD PTR $T7[rbp-169]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T7[rbp-165], xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3304
	movaps	xmm3, xmm12
	movss	DWORD PTR [rsp+32], xmm10
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
$LN129@RenderRect:
; Line 3306
	movss	xmm6, DWORD PTR __real@3fc90fdb
$LN8@RenderRect:
	movaps	xmm0, xmm7
	addss	xmm0, DWORD PTR [r14]
	comiss	xmm9, xmm0
	jbe	$LN13@RenderRect
; Line 3308
	movss	xmm12, DWORD PTR [r14+8]
	movaps	xmm1, xmm11
	movss	xmm15, DWORD PTR inv_rounding$1$[rbp-169]
	movaps	xmm0, xmm12
	subss	xmm0, xmm9
	mulss	xmm0, xmm15
	subss	xmm1, xmm0
; Line 3263
	comiss	xmm8, xmm1
	jb	SHORT $LN78@RenderRect
	movaps	xmm10, xmm6
	jmp	SHORT $LN77@RenderRect
$LN78@RenderRect:
; Line 3264
	comiss	xmm1, xmm11
	jb	SHORT $LN79@RenderRect
	xorps	xmm10, xmm10
	jmp	SHORT $LN77@RenderRect
$LN79@RenderRect:
; Line 3265
	movaps	xmm0, xmm1
	call	acosf
	movaps	xmm10, xmm0
$LN77@RenderRect:
; Line 3309
	movaps	xmm1, xmm12
	movaps	xmm0, xmm11
	subss	xmm1, DWORD PTR p0$1$[rbp-169]
	mulss	xmm1, xmm15
	subss	xmm0, xmm1
; Line 3263
	comiss	xmm8, xmm0
	jae	SHORT $LN81@RenderRect
; Line 3264
	comiss	xmm0, xmm11
	jb	SHORT $LN83@RenderRect
	xorps	xmm6, xmm6
	jmp	SHORT $LN81@RenderRect
$LN83@RenderRect:
; Line 3265
	call	acosf
	movaps	xmm6, xmm0
$LN81@RenderRect:
; Line 3311
	ucomiss	xmm10, xmm6
	subss	xmm12, xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	minss	xmm9, xmm12
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3311
	jp	$LN10@RenderRect
	jne	$LN10@RenderRect
; File E:\reps\ocornut\imgui\imgui.h
; Line 2032
	lea	rbx, QWORD PTR [rdi+128]
; Line 212
	movss	DWORD PTR $T6[rbp-169], xmm9
; Line 1347
	mov	eax, DWORD PTR [rbx]
	mov	ecx, DWORD PTR [rbx+4]
; Line 212
	movss	DWORD PTR $T6[rbp-165], xmm13
; Line 1347
	cmp	eax, ecx
	jne	SHORT $LN94@RenderRect
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN98@RenderRect
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN99@RenderRect
$LN98@RenderRect:
	mov	eax, esi
$LN99@RenderRect:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN94@RenderRect:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T6[rbp-169]
; Line 212
	movss	DWORD PTR $T5[rbp-169], xmm9
	movss	DWORD PTR $T5[rbp-165], xmm14
; Line 1347
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rbx]
	inc	eax
	mov	DWORD PTR [rbx], eax
	mov	r8d, DWORD PTR [rbx+4]
	cmp	eax, r8d
	jne	SHORT $LN105@RenderRect
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN109@RenderRect
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	esi, DWORD PTR [r8+rax]
$LN109@RenderRect:
	cmp	esi, ecx
	cmovg	ecx, esi
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN105@RenderRect:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T5[rbp-169]
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3315
	jmp	$LN13@RenderRect
$LN10@RenderRect:
; Line 3316
	ucomiss	xmm10, xmm8
	jp	SHORT $LN12@RenderRect
	jne	SHORT $LN12@RenderRect
	ucomiss	xmm6, DWORD PTR __real@3fc90fdb
	jp	SHORT $LN12@RenderRect
	jne	SHORT $LN12@RenderRect
; Line 3318
	addss	xmm13, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T4[rbp-169], xmm9
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3318
	mov	r9d, 9
	mov	DWORD PTR [rsp+32], 12
	movaps	xmm2, xmm7
	lea	rdx, QWORD PTR $T4[rbp-169]
	mov	rcx, rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T4[rbp-165], xmm13
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3318
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
; Line 3319
	subss	xmm14, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T3[rbp-169], xmm9
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3319
	xor	r9d, r9d
	mov	DWORD PTR [rsp+32], 3
	movaps	xmm2, xmm7
	lea	rdx, QWORD PTR $T3[rbp-169]
	mov	rcx, rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T3[rbp-165], xmm14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3319
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
; Line 3320
	jmp	SHORT $LN13@RenderRect
$LN12@RenderRect:
; Line 3323
	movaps	xmm1, xmm10
	mov	DWORD PTR [rsp+40], 3
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
	addss	xmm13, xmm7
	movaps	xmm3, xmm6
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T2[rbp-169], xmm9
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3323
	xorps	xmm3, DWORD PTR __xmm@80000000800000008000000080000000
	lea	rdx, QWORD PTR $T2[rbp-169]
	movaps	xmm2, xmm7
	movss	DWORD PTR [rsp+32], xmm1
	mov	rcx, rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T2[rbp-165], xmm13
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3323
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
; Line 3324
	subss	xmm14, xmm7
	mov	DWORD PTR [rsp+40], 3
	movaps	xmm3, xmm10
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rbp-169], xmm9
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3324
	movaps	xmm2, xmm7
	movss	DWORD PTR [rsp+32], xmm6
	lea	rdx, QWORD PTR $T1[rbp-169]
	mov	rcx, rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rbp-165], xmm14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3324
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
$LN13@RenderRect:
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
	mov	r8d, DWORD PTR [rdi+128]
	mov	r9d, r15d
	mov	rdx, QWORD PTR [rdi+136]
	mov	rcx, rdi
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	movaps	xmm12, XMMWORD PTR [rsp+112]
	movaps	xmm11, XMMWORD PTR [rsp+128]
	movaps	xmm10, XMMWORD PTR [rsp+144]
	mov	rsi, QWORD PTR [rsp+264]
	mov	rbx, QWORD PTR [rsp+256]
	mov	DWORD PTR [rdi+128], 0
$LN128@RenderRect:
	movaps	xmm14, XMMWORD PTR [rsp+80]
	movaps	xmm13, XMMWORD PTR [rsp+96]
	movaps	xmm9, XMMWORD PTR [rsp+160]
	movaps	xmm8, XMMWORD PTR [rsp+176]
	movaps	xmm7, XMMWORD PTR [rsp+192]
	movaps	xmm6, XMMWORD PTR [rsp+208]
	movaps	xmm15, XMMWORD PTR [rsp+64]
$LN1@RenderRect:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3328
	mov	rdi, QWORD PTR [rsp+272]
	add	rsp, 224				; 000000e0H
	pop	r15
	pop	r14
	pop	rbp
	ret	0
?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z ENDP ; ImGui::RenderRectFilledRangeH
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RenderArrowPointingAt@ImGui@@YAXPEAUImDrawList@@UImVec2@@1HI@Z
_TEXT	SEGMENT
pos$ = 32
half_sz$ = 40
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 56
$T5 = 56
$T6 = 56
draw_list$ = 96
direction$ = 120
col$ = 128
?RenderArrowPointingAt@ImGui@@YAXPEAUImDrawList@@UImVec2@@1HI@Z PROC ; ImGui::RenderArrowPointingAt, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3250
$LN161:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rbp
	push	rdi
	push	r14
	mov	rbp, rsp
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR half_sz$[rbp-64], r8
	mov	rsi, rcx
	mov	QWORD PTR pos$[rbp-64], rdx
; Line 3251
	test	r9d, r9d
	je	$LN4@RenderArro
	sub	r9d, 1
	je	$LN5@RenderArro
	sub	r9d, 1
	je	$LN6@RenderArro
	cmp	r9d, 1
	jne	$LN14@RenderArro
; Line 3256
	movss	xmm3, DWORD PTR half_sz$[rbp-64]
	movss	xmm2, DWORD PTR pos$[rbp-64]
	movaps	xmm0, xmm3
	movss	xmm1, DWORD PTR pos$[rbp-60]
	addss	xmm0, xmm2
	subss	xmm1, DWORD PTR half_sz$[rbp-60]
; Line 1102
	mov	r14d, DWORD PTR col$[rbp-64]
; Line 3256
	subss	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T4[rbp-64], xmm0
	movss	DWORD PTR $T4[rbp-60], xmm1
	movss	DWORD PTR $T1[rbp-64], xmm2
	movss	DWORD PTR $T1[rbp-60], xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1102
	test	r14d, -16777216				; ff000000H
	je	$LN14@RenderArro
; File E:\reps\ocornut\imgui\imgui.h
; Line 2032
	lea	rdi, QWORD PTR [rcx+128]
; Line 1347
	mov	eax, DWORD PTR [rdi]
	lea	ebx, QWORD PTR [r9+7]
	mov	ecx, DWORD PTR [rdi+4]
	cmp	eax, ecx
	jne	SHORT $LN128@RenderArro
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN132@RenderArro
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN133@RenderArro
$LN132@RenderArro:
	mov	eax, ebx
$LN133@RenderArro:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rdi
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rdi]
$LN128@RenderArro:
	mov	rcx, QWORD PTR [rdi+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T1[rbp-64]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rdi]
	inc	eax
	mov	DWORD PTR [rdi], eax
	mov	r8d, DWORD PTR [rdi+4]
	cmp	eax, r8d
	jne	SHORT $LN137@RenderArro
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN141@RenderArro
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN142@RenderArro
$LN141@RenderArro:
	mov	eax, ebx
$LN142@RenderArro:
	cmp	eax, ecx
	cmovg	ecx, eax
; Line 1347
	mov	edx, ecx
	mov	rcx, rdi
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rdi]
$LN137@RenderArro:
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T4[rbp-64]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3256
	jmp	$LN157@RenderArro
$LN6@RenderArro:
; Line 3255
	movss	xmm3, DWORD PTR pos$[rbp-64]
	movss	xmm2, DWORD PTR half_sz$[rbp-64]
	movaps	xmm0, xmm3
	movss	xmm1, DWORD PTR half_sz$[rbp-60]
	subss	xmm0, xmm2
	addss	xmm1, DWORD PTR pos$[rbp-60]
	addss	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T2[rbp-64], xmm0
	movss	DWORD PTR $T2[rbp-60], xmm1
	movss	DWORD PTR $T5[rbp-64], xmm2
; Line 1340
	jmp	SHORT $LN158@RenderArro
$LN5@RenderArro:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3254
	movss	xmm2, DWORD PTR pos$[rbp-60]
	movss	xmm1, DWORD PTR half_sz$[rbp-60]
	movaps	xmm0, xmm2
	movss	xmm3, DWORD PTR pos$[rbp-64]
	subss	xmm0, xmm1
	subss	xmm3, DWORD PTR half_sz$[rbp-64]
	addss	xmm1, xmm2
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	jmp	SHORT $LN159@RenderArro
$LN4@RenderArro:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3253
	movss	xmm2, DWORD PTR half_sz$[rbp-60]
	movss	xmm1, DWORD PTR pos$[rbp-60]
	movaps	xmm0, xmm2
	movss	xmm3, DWORD PTR half_sz$[rbp-64]
	addss	xmm0, xmm1
	addss	xmm3, DWORD PTR pos$[rbp-64]
	subss	xmm1, xmm2
$LN159@RenderArro:
; Line 3259
	movss	DWORD PTR $T6[rbp-64], xmm3
	movss	DWORD PTR $T3[rbp-60], xmm0
	movss	DWORD PTR $T3[rbp-64], xmm3
$LN158@RenderArro:
	mov	r14d, DWORD PTR col$[rbp-64]
	movss	DWORD PTR $T6[rbp-60], xmm1
	test	r14d, -16777216				; ff000000H
	je	$LN14@RenderArro
	lea	rdi, QWORD PTR [rcx+128]
	mov	ebx, 8
	mov	eax, DWORD PTR [rdi]
	mov	ecx, DWORD PTR [rdi+4]
	cmp	eax, ecx
	jne	SHORT $LN20@RenderArro
	lea	r8d, DWORD PTR [rax+1]
	test	ecx, ecx
	je	SHORT $LN24@RenderArro
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN25@RenderArro
$LN24@RenderArro:
	mov	eax, ebx
$LN25@RenderArro:
	cmp	eax, r8d
	mov	rcx, rdi
	cmovg	r8d, eax
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rdi]
$LN20@RenderArro:
	mov	rcx, QWORD PTR [rdi+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T6[rbp-64]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rdi]
	inc	eax
	mov	DWORD PTR [rdi], eax
	mov	r8d, DWORD PTR [rdi+4]
	cmp	eax, r8d
	jne	SHORT $LN29@RenderArro
	lea	ecx, DWORD PTR [rax+1]
	test	r8d, r8d
	je	SHORT $LN33@RenderArro
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN34@RenderArro
$LN33@RenderArro:
	mov	eax, ebx
$LN34@RenderArro:
	cmp	eax, ecx
	cmovg	ecx, eax
	mov	edx, ecx
	mov	rcx, rdi
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rdi]
$LN29@RenderArro:
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T3[rbp-64]
$LN157@RenderArro:
	mov	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rdi]
	inc	eax
	mov	DWORD PTR [rdi], eax
	mov	r8d, DWORD PTR [rdi+4]
	cmp	eax, r8d
	jne	SHORT $LN38@RenderArro
	lea	ecx, DWORD PTR [rax+1]
	test	r8d, r8d
	je	SHORT $LN42@RenderArro
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	ebx, DWORD PTR [r8+rax]
$LN42@RenderArro:
	cmp	ebx, ecx
	cmovg	ecx, ebx
	mov	edx, ecx
	mov	rcx, rdi
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rdi]
$LN38@RenderArro:
	mov	rcx, QWORD PTR [rdi+8]
	mov	r9d, r14d
	movsxd	rdx, eax
	mov	rax, QWORD PTR pos$[rbp-64]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	rcx, rsi
	inc	DWORD PTR [rdi]
	mov	r8d, DWORD PTR [rdi]
	mov	rdx, QWORD PTR [rsi+136]
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	DWORD PTR [rdi], 0
$LN14@RenderArro:
	mov	rbx, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
?RenderArrowPointingAt@ImGui@@YAXPEAUImDrawList@@UImVec2@@1HI@Z ENDP ; ImGui::RenderArrowPointingAt
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z
_TEXT	SEGMENT
$T7 = 64
$T8 = 64
$T9 = 64
$T10 = 64
pos$ = 72
$T11 = 80
$T12 = 80
uv$ = 88
__$ArrayPad$ = 120
draw_list$ = 272
scale$ = 288
mouse_cursor$ = 296
col_fill$ = 304
col_border$ = 312
col_shadow$ = 320
?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z PROC ; ImGui::RenderMouseCursor, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3228
$LN167:
	mov	r11, rsp
	push	rbp
	push	rbx
	push	rsi
	lea	rbp, QWORD PTR [r11-71]
	sub	rsp, 240				; 000000f0H
	movaps	XMMWORD PTR [r11-88], xmm8
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-193], rax
	movsxd	rsi, r9d
	movaps	xmm8, xmm2
	mov	QWORD PTR pos$[rbp-193], rdx
	mov	rbx, rcx
; Line 3229
	cmp	esi, -1
	je	$LN3@RenderMous
; Line 3231
	mov	QWORD PTR [r11+24], rdi
	cmp	esi, 8
	jbe	SHORT $LN6@RenderMous
	mov	r8d, 3231				; 00000c9fH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1JM@LKKCKIOL@?$AAm?$AAo?$AAu?$AAs?$AAe?$AA_?$AAc?$AAu?$AAr?$AAs?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5@
	call	QWORD PTR __imp__wassert
$LN6@RenderMous:
; Line 3233
	mov	rax, QWORD PTR [rbx+56]
	mov	rcx, QWORD PTR [rax+8]
	mov	rdi, QWORD PTR [rcx+72]
; Line 1868
	cmp	esi, 8
	ja	$LN165@RenderMous
; Line 1870
	test	BYTE PTR [rdi+4], 2
	jne	$LN165@RenderMous
; Line 1873
	mov	edx, DWORD PTR [rdi+112]
	mov	QWORD PTR [rsp+232], r14
	mov	QWORD PTR [rsp+224], r15
	movaps	XMMWORD PTR [rsp+208], xmm6
	movaps	XMMWORD PTR [rsp+192], xmm7
	movaps	XMMWORD PTR [rsp+160], xmm9
	movaps	XMMWORD PTR [rsp+144], xmm10
	movaps	XMMWORD PTR [rsp+128], xmm11
	cmp	edx, -1
	jne	SHORT $LN22@RenderMous
	mov	r8d, 1873				; 00000751H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CO@OOJMDEAG@?$AAC?$AAu?$AAs?$AAt?$AAo?$AAm?$AAR?$AAe?$AAc?$AAt?$AAI?$AAd?$AAs?$AA?$FL?$AA0@
	call	QWORD PTR __imp__wassert
	mov	edx, DWORD PTR [rdi+112]
$LN22@RenderMous:
; Line 1874
	lea	rcx, QWORD PTR [rdi+80]
	call	??A?$ImVector@UImFontAtlasCustomRect@@@@QEAAAEAUImFontAtlasCustomRect@@H@Z ; ImVector<ImFontAtlasCustomRect>::operator[]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	movss	xmm6, DWORD PTR [rdi+48]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1875
	lea	rdx, QWORD PTR [rsi+rsi*2]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	movss	xmm2, DWORD PTR [rdi+52]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1875
	lea	r8, OFFSET FLAT:?FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA@@3QAY02$$CBUImVec2@@A
; Line 1876
	movss	xmm10, DWORD PTR [r8+rdx*8+8]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	movaps	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1875
	movzx	ecx, WORD PTR [rax+4]
; Line 1879
	movaps	xmm1, xmm10
	movss	xmm11, DWORD PTR [r8+rdx*8+12]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	movaps	xmm4, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1875
	movzx	eax, WORD PTR [rax+6]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movaps	xmm3, xmm11
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3238
	mov	rdi, QWORD PTR [rdi+8]
	movd	xmm7, ecx
; Line 3239
	mov	rcx, rbx
; Line 1875
	cvtdq2ps xmm7, xmm7
	movd	xmm5, eax
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm7, DWORD PTR [r8+rdx*8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1875
	cvtdq2ps xmm5, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	mulss	xmm0, xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1879
	addss	xmm1, xmm7
; Line 1880
	addss	xmm7, DWORD PTR __real@42da0000
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm5, DWORD PTR [r8+rdx*8+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1879
	movss	DWORD PTR uv$[rbp-193], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	movaps	xmm0, xmm6
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
; Line 294
	addss	xmm7, xmm10
; Line 296
	mulss	xmm4, xmm5
; Line 294
	addss	xmm3, xmm5
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1880
	movss	DWORD PTR uv$[rbp-185], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	mulss	xmm7, xmm6
; Line 301
	movss	xmm6, DWORD PTR pos$[rbp-189]
	subss	xmm6, DWORD PTR [r8+rdx*8+20]
; Line 296
	mulss	xmm3, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1883
	movss	DWORD PTR uv$[rbp-169], xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 301
	movss	xmm7, DWORD PTR pos$[rbp-193]
	subss	xmm7, DWORD PTR [r8+rdx*8+16]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3239
	mov	rdx, rdi
; Line 1879
	movss	DWORD PTR uv$[rbp-189], xmm4
; Line 1880
	movss	DWORD PTR uv$[rbp-181], xmm3
; Line 1882
	movss	DWORD PTR uv$[rbp-177], xmm0
	movss	DWORD PTR uv$[rbp-173], xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 301
	movss	DWORD PTR pos$[rbp-193], xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1883
	movss	DWORD PTR uv$[rbp-165], xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 301
	movss	DWORD PTR pos$[rbp-189], xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3239
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
; Line 1242
	mov	r14d, DWORD PTR col_shadow$[rbp-193]
	xorps	xmm0, xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movaps	xmm2, xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	mulss	xmm10, xmm8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1242
	mov	r15d, r14d
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	addss	xmm2, xmm8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	mulss	xmm11, xmm8
	movaps	xmm9, xmm8
	mulss	xmm9, xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T10[rsp], xmm2
	movaps	xmm0, xmm2
	addss	xmm0, xmm10
	movaps	xmm1, xmm9
	addss	xmm1, xmm6
	movss	DWORD PTR $T12[rbp-193], xmm0
	movss	DWORD PTR $T10[rbp-189], xmm1
	movaps	xmm0, xmm1
	addss	xmm0, xmm11
	movss	DWORD PTR $T12[rbp-189], xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1242
	and	r15d, -16777216				; ff000000H
	je	$LN86@RenderMous
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	mov	eax, DWORD PTR [rbx+112]
	test	eax, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1245
	je	SHORT $LN163@RenderMous
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	jg	SHORT $LN94@RenderMous
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+112]
$LN94@RenderMous:
	movsxd	rcx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1245
	mov	rax, QWORD PTR [rbx+120]
	cmp	rdi, QWORD PTR [rax+rcx*8-8]
	jne	SHORT $LN163@RenderMous
	xor	sil, sil
	jmp	SHORT $LN85@RenderMous
$LN163@RenderMous:
; Line 1247
	mov	rdx, rdi
	mov	rcx, rbx
	mov	sil, 1
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
$LN85@RenderMous:
; Line 1249
	mov	edx, 6
	mov	rcx, rbx
	lea	r8d, QWORD PTR [rdx-2]
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 1250
	lea	rax, QWORD PTR uv$[rbp-169]
	mov	DWORD PTR [rsp+40], r14d
	lea	r9, QWORD PTR uv$[rbp-177]
	mov	QWORD PTR [rsp+32], rax
	lea	r8, QWORD PTR $T12[rbp-193]
	mov	rcx, rbx
	lea	rdx, QWORD PTR $T10[rsp]
	call	?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z ; ImDrawList::PrimRectUV
; Line 1252
	test	sil, sil
	je	SHORT $LN86@RenderMous
; Line 1253
	mov	rcx, rbx
	call	?PopTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::PopTextureID
$LN86@RenderMous:
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	addss	xmm9, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1242
	test	r15d, r15d
	mov	r15, QWORD PTR [rsp+224]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	addss	xmm8, xmm8
	movss	DWORD PTR $T11[rbp-189], xmm9
	addss	xmm8, xmm7
	movaps	xmm0, xmm8
	movss	DWORD PTR $T11[rbp-193], xmm8
	addss	xmm0, xmm10
	movss	DWORD PTR $T9[rsp], xmm0
	movaps	xmm0, xmm9
	movaps	xmm9, XMMWORD PTR [rsp+160]
	addss	xmm0, xmm11
	movss	DWORD PTR $T9[rbp-189], xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1242
	je	$LN126@RenderMous
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	mov	eax, DWORD PTR [rbx+112]
	test	eax, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1245
	je	SHORT $LN128@RenderMous
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	jg	SHORT $LN134@RenderMous
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+112]
$LN134@RenderMous:
	movsxd	rcx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1245
	mov	rax, QWORD PTR [rbx+120]
	cmp	rdi, QWORD PTR [rax+rcx*8-8]
	jne	SHORT $LN128@RenderMous
	xor	sil, sil
	jmp	SHORT $LN125@RenderMous
$LN128@RenderMous:
; Line 1247
	mov	rdx, rdi
	mov	rcx, rbx
	mov	sil, 1
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
$LN125@RenderMous:
; Line 1249
	mov	edx, 6
	mov	rcx, rbx
	lea	r8d, QWORD PTR [rdx-2]
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 1250
	lea	rax, QWORD PTR uv$[rbp-169]
	mov	DWORD PTR [rsp+40], r14d
	lea	r9, QWORD PTR uv$[rbp-177]
	mov	QWORD PTR [rsp+32], rax
	lea	r8, QWORD PTR $T9[rsp]
	mov	rcx, rbx
	lea	rdx, QWORD PTR $T11[rbp-193]
	call	?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z ; ImDrawList::PrimRectUV
; Line 1252
	test	sil, sil
	je	SHORT $LN126@RenderMous
; Line 1253
	mov	rcx, rbx
	call	?PopTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::PopTextureID
$LN126@RenderMous:
; Line 3242
	mov	eax, DWORD PTR col_border$[rbp-193]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	addss	xmm7, xmm10
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3242
	mov	DWORD PTR [rsp+48], eax
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	addss	xmm6, xmm11
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3242
	lea	rax, QWORD PTR uv$[rbp-169]
	mov	rdx, rdi
	mov	QWORD PTR [rsp+40], rax
	lea	r9, QWORD PTR $T8[rsp]
	lea	rax, QWORD PTR uv$[rbp-177]
	mov	rcx, rbx
	lea	r8, QWORD PTR pos$[rbp-193]
	mov	QWORD PTR [rsp+32], rax
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T8[rsp], xmm7
	movss	DWORD PTR $T8[rbp-189], xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3242
	call	?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z ; ImDrawList::AddImage
; Line 3243
	mov	eax, DWORD PTR col_fill$[rbp-193]
	lea	r9, QWORD PTR $T7[rsp]
	mov	DWORD PTR [rsp+48], eax
	lea	r8, QWORD PTR pos$[rbp-193]
	lea	rax, QWORD PTR uv$[rbp-185]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T7[rsp], xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3243
	mov	QWORD PTR [rsp+40], rax
	mov	rdx, rdi
	lea	rax, QWORD PTR uv$[rbp-193]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T7[rbp-189], xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3243
	mov	rcx, rbx
	mov	QWORD PTR [rsp+32], rax
	call	?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z ; ImDrawList::AddImage
; Line 3244
	mov	rcx, rbx
	call	?PopTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::PopTextureID
	movaps	xmm11, XMMWORD PTR [rsp+128]
	movaps	xmm10, XMMWORD PTR [rsp+144]
	movaps	xmm7, XMMWORD PTR [rsp+192]
	movaps	xmm6, XMMWORD PTR [rsp+208]
	mov	r14, QWORD PTR [rsp+232]
$LN165@RenderMous:
	mov	rdi, QWORD PTR [rsp+288]
$LN3@RenderMous:
; Line 3246
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-193]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm8, XMMWORD PTR [rsp+176]
	add	rsp, 240				; 000000f0H
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z ENDP ; ImGui::RenderMouseCursor
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RenderCheckMark@ImGui@@YAXPEAUImDrawList@@UImVec2@@IM@Z
_TEXT	SEGMENT
$T1 = 144
$T2 = 144
$T3 = 144
draw_list$ = 144
pos$ = 144
col$ = 160
sz$ = 168
?RenderCheckMark@ImGui@@YAXPEAUImDrawList@@UImVec2@@IM@Z PROC ; ImGui::RenderCheckMark, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3213
$LN47:
	mov	rax, rsp
	mov	QWORD PTR [rax+24], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 112				; 00000070H
	movaps	XMMWORD PTR [rax-40], xmm6
; File E:\reps\ocornut\imgui\imgui.h
; Line 2032
	lea	rbx, QWORD PTR [rcx+128]
	movaps	XMMWORD PTR [rax-56], xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3213
	mov	ebp, r8d
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	r8d, DWORD PTR [rbx+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3213
	mov	rsi, rcx
	movaps	XMMWORD PTR [rax-72], xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	edi, 8
	movaps	XMMWORD PTR [rax-88], xmm9
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3214
	movaps	xmm9, xmm3
	divss	xmm9, DWORD PTR __real@40a00000
	mov	QWORD PTR pos$[rsp], rdx
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	maxss	xmm9, DWORD PTR __real@3f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3215
	movaps	xmm0, xmm9
; Line 3216
	movaps	xmm6, xmm9
	mulss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm6, DWORD PTR __real@3e800000
	subss	xmm3, xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movaps	xmm8, xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 300
	addss	xmm6, DWORD PTR pos$[rsp+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	addss	xmm8, DWORD PTR pos$[rsp]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3218
	movaps	xmm7, xmm3
	divss	xmm7, DWORD PTR __real@40400000
; Line 3219
	addss	xmm6, xmm3
; Line 3220
	movaps	xmm0, xmm7
	addss	xmm8, xmm7
	mulss	xmm0, DWORD PTR __real@3f000000
	subss	xmm6, xmm0
; Line 3221
	movaps	xmm0, xmm8
	subss	xmm0, xmm7
	movaps	xmm1, xmm6
	subss	xmm1, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rax+8], xmm0
	movss	DWORD PTR [rax+12], xmm1
; Line 1347
	mov	eax, DWORD PTR [rbx]
	cmp	eax, r8d
	jne	SHORT $LN16@RenderChec
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN20@RenderChec
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN21@RenderChec
$LN20@RenderChec:
	mov	eax, edi
$LN21@RenderChec:
	cmp	eax, ecx
	cmovg	ecx, eax
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN16@RenderChec:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T3[rsp]
; Line 212
	movss	DWORD PTR $T2[rsp], xmm8
	movss	DWORD PTR $T2[rsp+4], xmm6
; Line 1347
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rbx]
	inc	eax
	mov	DWORD PTR [rbx], eax
	mov	r8d, DWORD PTR [rbx+4]
	cmp	eax, r8d
	jne	SHORT $LN27@RenderChec
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN31@RenderChec
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN32@RenderChec
$LN31@RenderChec:
	mov	eax, edi
$LN32@RenderChec:
	cmp	eax, ecx
	cmovg	ecx, eax
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN27@RenderChec:
	mov	rcx, QWORD PTR [rbx+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3223
	addss	xmm7, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rcx+rdx*8], rax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3223
	subss	xmm6, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	eax, DWORD PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3223
	movaps	xmm0, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	inc	eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3223
	addss	xmm0, xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	DWORD PTR [rbx], eax
	mov	r8d, DWORD PTR [rbx+4]
; Line 212
	movss	DWORD PTR $T1[rsp+4], xmm6
	movss	DWORD PTR $T1[rsp], xmm0
; Line 1347
	cmp	eax, r8d
	jne	SHORT $LN38@RenderChec
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN42@RenderChec
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	edi, DWORD PTR [r8+rax]
$LN42@RenderChec:
	cmp	edi, ecx
	cmovg	ecx, edi
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN38@RenderChec:
	mov	rcx, QWORD PTR [rbx+8]
; Line 2035
	mov	r9d, ebp
; Line 1347
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T1[rsp]
; Line 2035
	movss	DWORD PTR [rsp+40], xmm9
	mov	BYTE PTR [rsp+32], 0
; Line 1347
	mov	QWORD PTR [rcx+rdx*8], rax
; Line 2035
	mov	rcx, rsi
; Line 1347
	inc	DWORD PTR [rbx]
; Line 2035
	mov	r8d, DWORD PTR [rbx]
	mov	rdx, QWORD PTR [rsi+136]
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3225
	movaps	xmm6, XMMWORD PTR [rsp+96]
	movaps	xmm7, XMMWORD PTR [rsp+80]
	movaps	xmm8, XMMWORD PTR [rsp+64]
	movaps	xmm9, XMMWORD PTR [rsp+48]
; File E:\reps\ocornut\imgui\imgui.h
; Line 2035
	mov	DWORD PTR [rbx], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3225
	mov	rbx, QWORD PTR [rsp+160]
	add	rsp, 112				; 00000070H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?RenderCheckMark@ImGui@@YAXPEAUImDrawList@@UImVec2@@IM@Z ENDP ; ImGui::RenderCheckMark
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z
_TEXT	SEGMENT
pos$ = 48
draw_list$ = 80
col$ = 96
?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z PROC ; ImGui::RenderBullet, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3208
$LN25:
; Line 1143
	test	r8d, -16777216				; ff000000H
	je	SHORT $LN23@RenderBull
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 3209
	mov	rax, QWORD PTR [rcx+56]
	xorps	xmm3, xmm3
	mov	edi, r8d
	mov	QWORD PTR pos$[rsp], rdx
	mov	rbx, rcx
	movss	xmm2, DWORD PTR [rax+16]
	mulss	xmm2, DWORD PTR __real@3e4ccccd
; Line 1143
	comiss	xmm3, xmm2
	jae	SHORT $LN5@RenderBull
; Line 1167
	movss	xmm0, DWORD PTR __real@40afede0
	lea	rdx, QWORD PTR pos$[rsp]
	mov	DWORD PTR [rsp+40], 7
	movss	DWORD PTR [rsp+32], xmm0
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
	mov	r8d, DWORD PTR [rbx+128]
	mov	r9d, edi
	mov	rdx, QWORD PTR [rbx+136]
	mov	rcx, rbx
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	DWORD PTR [rbx+128], 0
$LN5@RenderBull:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3210
	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 64					; 00000040H
	pop	rdi
$LN23@RenderBull:
	ret	0
?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z ENDP ; ImGui::RenderBullet
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 208
draw_list$ = 208
pos$ = 208
col$ = 224
dir$ = 232
scale$ = 240
?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z PROC ; ImGui::RenderArrow, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3177
$LN105:
	mov	rax, rsp
	push	rbp
	push	rsi
	sub	rsp, 184				; 000000b8H
	movaps	XMMWORD PTR [rax-40], xmm6
	mov	ebp, r8d
	movaps	XMMWORD PTR [rax-56], xmm7
	mov	rsi, rcx
	movaps	XMMWORD PTR [rax-72], xmm8
	xorps	xmm6, xmm6
	movaps	XMMWORD PTR [rax-88], xmm9
	xorps	xmm7, xmm7
	movaps	XMMWORD PTR [rax-104], xmm10
	xorps	xmm8, xmm8
	movaps	XMMWORD PTR [rax-120], xmm11
	xorps	xmm10, xmm10
; Line 3178
	mov	rax, QWORD PTR [rcx+56]
	movaps	XMMWORD PTR [rsp+64], xmm12
	xorps	xmm12, xmm12
	mov	QWORD PTR pos$[rsp], rdx
	movaps	XMMWORD PTR [rsp+48], xmm13
	xorps	xmm13, xmm13
	movss	xmm9, DWORD PTR [rax+16]
; Line 3183
	lea	eax, DWORD PTR [r9+1]
	movaps	xmm1, xmm9
	mulss	xmm9, DWORD PTR __real@3f000000
	mulss	xmm1, DWORD PTR __real@3ecccccd
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movaps	xmm11, xmm9
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3180
	mulss	xmm9, DWORD PTR scale$[rsp]
	mulss	xmm1, DWORD PTR scale$[rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	addss	xmm9, DWORD PTR pos$[rsp+4]
	addss	xmm11, DWORD PTR pos$[rsp]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3183
	cmp	eax, 5
	ja	$LN10@RenderArro
	lea	rdx, OFFSET FLAT:__ImageBase
	cdqe
	mov	ecx, DWORD PTR $LN103@RenderArro[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN4@RenderArro:
; Line 3187
	cmp	r9d, 2
	jne	SHORT $LN5@RenderArro
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
$LN5@RenderArro:
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movaps	xmm7, xmm1
	movaps	xmm10, xmm1
	mulss	xmm7, DWORD PTR __real@bf400000
	movaps	xmm8, xmm1
	mulss	xmm8, DWORD PTR __real@bf5db22d
	movaps	xmm13, xmm1
	mulss	xmm13, DWORD PTR __real@3f5db22d
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3190
	movaps	xmm12, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm10, xmm6
	movaps	xmm6, xmm1
	mulss	xmm6, DWORD PTR __real@3f400000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3191
	jmp	SHORT $LN10@RenderArro
$LN6@RenderArro:
; Line 3194
	test	r9d, r9d
	jne	SHORT $LN7@RenderArro
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
$LN7@RenderArro:
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movaps	xmm0, xmm1
	movaps	xmm8, xmm1
	mulss	xmm8, DWORD PTR __real@bf400000
	movaps	xmm10, xmm1
	mulss	xmm10, DWORD PTR __real@3f400000
	movaps	xmm7, xmm1
	mulss	xmm7, DWORD PTR __real@3f5db22d
	movaps	xmm12, xmm1
	mulss	xmm12, DWORD PTR __real@bf5db22d
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3197
	movaps	xmm13, xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mulss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3197
	movaps	xmm6, xmm0
; Line 3198
	jmp	SHORT $LN10@RenderArro
$LN8@RenderArro:
; Line 3201
	mov	r8d, 3201				; 00000c81H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
$LN10@RenderArro:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movaps	xmm0, xmm11
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movaps	xmm1, xmm9
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm0, xmm13
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movaps	xmm13, XMMWORD PTR [rsp+48]
	addss	xmm1, xmm12
	movaps	xmm12, XMMWORD PTR [rsp+64]
	movss	DWORD PTR $T2[rsp], xmm0
	movaps	xmm0, xmm11
	movss	DWORD PTR $T2[rsp+4], xmm1
	movaps	xmm1, xmm9
	addss	xmm11, xmm10
	movaps	xmm10, XMMWORD PTR [rsp+96]
	addss	xmm9, xmm6
	movaps	xmm6, XMMWORD PTR [rsp+160]
	addss	xmm0, xmm8
	movaps	xmm8, XMMWORD PTR [rsp+128]
	addss	xmm1, xmm7
	movaps	xmm7, XMMWORD PTR [rsp+144]
	movss	DWORD PTR $T3[rsp], xmm11
	movaps	xmm11, XMMWORD PTR [rsp+80]
	movss	DWORD PTR $T3[rsp+4], xmm9
	movaps	xmm9, XMMWORD PTR [rsp+112]
	movss	DWORD PTR $T1[rsp], xmm0
	movss	DWORD PTR $T1[rsp+4], xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1102
	test	ebp, -16777216				; ff000000H
	je	$LN71@RenderArro
; File E:\reps\ocornut\imgui\imgui.h
; Line 2032
	mov	QWORD PTR [rsp+224], rbx
	lea	rbx, QWORD PTR [rsi+128]
; Line 1347
	mov	eax, DWORD PTR [rbx]
	mov	ecx, DWORD PTR [rbx+4]
; Line 2032
	mov	QWORD PTR [rsp+176], rdi
; Line 1347
	mov	edi, 8
	cmp	eax, ecx
	jne	SHORT $LN77@RenderArro
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN81@RenderArro
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN82@RenderArro
$LN81@RenderArro:
	mov	eax, edi
$LN82@RenderArro:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN77@RenderArro:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rbx]
	inc	eax
	mov	DWORD PTR [rbx], eax
	mov	r8d, DWORD PTR [rbx+4]
	cmp	eax, r8d
	jne	SHORT $LN86@RenderArro
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN90@RenderArro
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN91@RenderArro
$LN90@RenderArro:
	mov	eax, edi
$LN91@RenderArro:
	cmp	eax, ecx
	cmovg	ecx, eax
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN86@RenderArro:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rbx]
	inc	eax
	mov	DWORD PTR [rbx], eax
	mov	r8d, DWORD PTR [rbx+4]
	cmp	eax, r8d
	jne	SHORT $LN95@RenderArro
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN99@RenderArro
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	edi, DWORD PTR [r8+rax]
$LN99@RenderArro:
	cmp	edi, ecx
	cmovg	ecx, edi
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN95@RenderArro:
	mov	rcx, QWORD PTR [rbx+8]
; Line 2034
	mov	r9d, ebp
; Line 1347
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rcx+rdx*8], rax
; Line 2034
	mov	rcx, rsi
; Line 1347
	inc	DWORD PTR [rbx]
; Line 2034
	mov	r8d, DWORD PTR [rbx]
	mov	rdx, QWORD PTR [rsi+136]
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	rdi, QWORD PTR [rsp+176]
	mov	DWORD PTR [rbx], 0
	mov	rbx, QWORD PTR [rsp+224]
$LN71@RenderArro:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3205
	add	rsp, 184				; 000000b8H
	pop	rsi
	pop	rbp
	ret	0
	npad	1
$LN103@RenderArro:
	DD	$LN8@RenderArro
	DD	$LN6@RenderArro
	DD	$LN6@RenderArro
	DD	$LN4@RenderArro
	DD	$LN4@RenderArro
	DD	$LN8@RenderArro
?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z ENDP ; ImGui::RenderArrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z
_TEXT	SEGMENT
p_max$ = 48
p_min$ = 56
$T1 = 64
$T2 = 72
draw_list$ = 288
y$1$ = 312
col$ = 312
grid_step$ = 320
grid_off$ = 328
rounding$ = 336
rounding_corners_flags$ = 344
?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z PROC ; ImGui::RenderColorRectWithAlphaCheckerboard, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3335
$LN59:
	mov	r11, rsp
	push	rsi
	push	rdi
	sub	rsp, 264				; 00000108H
; Line 3336
	mov	eax, r9d
	mov	QWORD PTR p_max$[rsp], r8
	and	eax, -16777216				; ff000000H
	mov	QWORD PTR p_min$[rsp], rdx
	mov	edi, r9d
	mov	rsi, rcx
	cmp	eax, -16777216				; ff000000H
	jae	$LN8@RenderColo
; Line 3338
	mov	QWORD PTR [r11-24], rbx
	mov	edx, r9d
	mov	QWORD PTR [r11-32], rbp
	mov	ecx, -3355444				; ffccccccH
	movaps	XMMWORD PTR [r11-136], xmm11
	movaps	XMMWORD PTR [rsp+96], xmm14
	movaps	XMMWORD PTR [rsp+80], xmm15
	call	?ImAlphaBlendColors@@YAIII@Z		; ImAlphaBlendColors
	mov	ecx, eax
	call	?GetColorU32@ImGui@@YAII@Z		; ImGui::GetColorU32
; Line 3339
	mov	edx, edi
	mov	ecx, -8355712				; ff808080H
	mov	ebx, eax
	call	?ImAlphaBlendColors@@YAIII@Z		; ImAlphaBlendColors
	mov	ecx, eax
	call	?GetColorU32@ImGui@@YAII@Z		; ImGui::GetColorU32
; Line 3340
	movss	xmm0, DWORD PTR rounding$[rsp]
	lea	r8, QWORD PTR p_max$[rsp]
	mov	edi, DWORD PTR rounding_corners_flags$[rsp]
	lea	rdx, QWORD PTR p_min$[rsp]
	mov	DWORD PTR [rsp+40], edi
	mov	r9d, ebx
	mov	rcx, rsi
	movss	DWORD PTR [rsp+32], xmm0
	mov	ebp, eax
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; Line 3343
	movss	xmm11, DWORD PTR grid_off$[rsp+4]
	xor	ebx, ebx
	movss	xmm15, DWORD PTR p_min$[rsp+4]
	movss	xmm14, DWORD PTR p_max$[rsp+4]
	addss	xmm11, xmm15
	comiss	xmm14, xmm11
	jbe	$LN57@RenderColo
	mov	QWORD PTR [rsp+240], r14
	lea	r14d, QWORD PTR [rbx+1]
	movaps	XMMWORD PTR [rsp+224], xmm6
	movaps	XMMWORD PTR [rsp+208], xmm7
	movss	xmm7, DWORD PTR p_max$[rsp]
	movaps	XMMWORD PTR [rsp+192], xmm8
	movss	xmm8, DWORD PTR p_min$[rsp]
	movaps	XMMWORD PTR [rsp+176], xmm9
	movaps	XMMWORD PTR [rsp+160], xmm10
	movaps	XMMWORD PTR [rsp+128], xmm12
	movaps	XMMWORD PTR [rsp+112], xmm13
	movss	xmm13, DWORD PTR grid_step$[rsp]
	npad	5
$LL4@RenderColo:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm15, xmm11
	jbe	SHORT $LN25@RenderColo
	movaps	xmm9, xmm15
	jmp	SHORT $LN26@RenderColo
$LN25@RenderColo:
	movaps	xmm9, xmm14
	minss	xmm9, xmm11
$LN26@RenderColo:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3345
	addss	xmm11, xmm13
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	movaps	xmm10, xmm11
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3345
	movss	DWORD PTR y$1$[rsp], xmm11
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	minss	xmm10, xmm14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3346
	comiss	xmm9, xmm10
	jae	$LN2@RenderColo
; Line 3348
	movss	xmm0, DWORD PTR grid_off$[rsp]
	mov	eax, ebx
	and	eax, r14d
	addss	xmm0, xmm8
	movd	xmm6, eax
	cvtdq2ps xmm6, xmm6
	mulss	xmm6, xmm13
	addss	xmm6, xmm0
	comiss	xmm7, xmm6
	jbe	$LN2@RenderColo
	movss	xmm11, DWORD PTR rounding$[rsp]
	movaps	xmm12, xmm13
	addss	xmm12, xmm13
$LL7@RenderColo:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	comiss	xmm8, xmm6
	jbe	SHORT $LN35@RenderColo
	movaps	xmm0, xmm8
	jmp	SHORT $LN36@RenderColo
$LN35@RenderColo:
	movaps	xmm0, xmm7
	minss	xmm0, xmm6
$LN36@RenderColo:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3350
	movaps	xmm1, xmm6
	addss	xmm1, xmm13
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	minss	xmm1, xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3351
	comiss	xmm0, xmm1
	jae	SHORT $LN5@RenderColo
; Line 3353
	xor	eax, eax
; Line 3354
	comiss	xmm15, xmm9
	jb	SHORT $LN14@RenderColo
	comiss	xmm8, xmm0
	cmovae	eax, r14d
	comiss	xmm1, xmm7
	jb	SHORT $LN14@RenderColo
	or	eax, 2
$LN14@RenderColo:
; Line 3355
	comiss	xmm10, xmm14
	jb	SHORT $LN17@RenderColo
	comiss	xmm8, xmm0
	jb	SHORT $LN16@RenderColo
	or	eax, 4
$LN16@RenderColo:
	comiss	xmm1, xmm7
	jb	SHORT $LN17@RenderColo
	or	eax, 8
$LN17@RenderColo:
; Line 3356
	and	eax, edi
; Line 3357
	je	SHORT $LN19@RenderColo
	movaps	xmm2, xmm11
	jmp	SHORT $LN20@RenderColo
$LN19@RenderColo:
	xorps	xmm2, xmm2
$LN20@RenderColo:
	mov	DWORD PTR [rsp+40], eax
	lea	r8, QWORD PTR $T1[rsp]
	mov	r9d, ebp
	movss	DWORD PTR [rsp+32], xmm2
	lea	rdx, QWORD PTR $T2[rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rsp], xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3357
	mov	rcx, rsi
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rsp+4], xmm10
	movss	DWORD PTR $T2[rsp], xmm0
	movss	DWORD PTR $T2[rsp+4], xmm9
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3357
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
$LN5@RenderColo:
; Line 3348
	addss	xmm6, xmm12
	comiss	xmm7, xmm6
	ja	$LL7@RenderColo
	movss	xmm11, DWORD PTR y$1$[rsp]
$LN2@RenderColo:
; Line 3343
	inc	ebx
	comiss	xmm14, xmm11
	ja	$LL4@RenderColo
; Line 3360
	movaps	xmm13, XMMWORD PTR [rsp+112]
	movaps	xmm12, XMMWORD PTR [rsp+128]
	movaps	xmm10, XMMWORD PTR [rsp+160]
	movaps	xmm9, XMMWORD PTR [rsp+176]
	movaps	xmm8, XMMWORD PTR [rsp+192]
	movaps	xmm7, XMMWORD PTR [rsp+208]
	movaps	xmm6, XMMWORD PTR [rsp+224]
	mov	r14, QWORD PTR [rsp+240]
$LN57@RenderColo:
	movaps	xmm14, XMMWORD PTR [rsp+96]
	movaps	xmm11, XMMWORD PTR [rsp+144]
	mov	rbp, QWORD PTR [rsp+248]
	mov	rbx, QWORD PTR [rsp+256]
	movaps	xmm15, XMMWORD PTR [rsp+80]
; Line 3365
	add	rsp, 264				; 00000108H
	pop	rdi
	pop	rsi
	ret	0
$LN8@RenderColo:
; Line 3363
	mov	eax, DWORD PTR rounding_corners_flags$[rsp]
	lea	r8, QWORD PTR p_max$[rsp]
	movss	xmm0, DWORD PTR rounding$[rsp]
	lea	rdx, QWORD PTR p_min$[rsp]
	mov	DWORD PTR [rsp+40], eax
	movss	DWORD PTR [rsp+32], xmm0
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; Line 3365
	add	rsp, 264				; 00000108H
	pop	rdi
	pop	rsi
	ret	0
?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z ENDP ; ImGui::RenderColorRectWithAlphaCheckerboard
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$ImVector@H@@QEAAXAEBH@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
?push_back@?$ImVector@H@@QEAAXAEBH@Z PROC		; ImVector<int>::push_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
$LN9:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	mov	ecx, DWORD PTR [rcx+4]
	mov	rdi, rdx
	cmp	eax, ecx
	jne	SHORT $LN2@push_back
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN6@push_back
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@push_back
$LN6@push_back:
	mov	eax, 8
$LN7@push_back:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@H@@QEAAXH@Z		; ImVector<int>::reserve
	mov	eax, DWORD PTR [rbx]
$LN2@push_back:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	eax, DWORD PTR [rdi]
	mov	DWORD PTR [rcx+rdx*4], eax
	inc	DWORD PTR [rbx]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$ImVector@H@@QEAAXAEBH@Z ENDP		; ImVector<int>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@H@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@H@@QEAAXH@Z PROC			; ImVector<int>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@H@@QEAAXH@Z ENDP			; ImVector<int>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@H@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@H@@QEBAHH@Z PROC		; ImVector<int>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@H@@QEBAHH@Z ENDP		; ImVector<int>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@H@@QEAAAEAHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@H@@QEAAAEAHH@Z PROC			; ImVector<int>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rax, QWORD PTR [rax+rbx*4]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@H@@QEAAAEAHH@Z ENDP			; ImVector<int>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@H@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@H@@QEAA@XZ PROC				; ImVector<int>::~ImVector<int>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@H@@QEAA@XZ ENDP				; ImVector<int>::~ImVector<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ImMin@H@@YAHHH@Z
_TEXT	SEGMENT
lhs$ = 8
rhs$ = 16
??$ImMin@H@@YAHHH@Z PROC				; ImMin<int>, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	cmp	ecx, edx
	cmovl	edx, ecx
	mov	eax, edx
	ret	0
??$ImMin@H@@YAHHH@Z ENDP				; ImMin<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z
_TEXT	SEGMENT
this$ = 80
max_error$ = 88
?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z PROC ; ImDrawListSharedData::SetCircleSegmentMaxError, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 367
$LN19:
	push	rsi
	sub	rsp, 64					; 00000040H
; Line 368
	movss	xmm0, DWORD PTR [rcx+24]
	mov	rsi, rcx
	ucomiss	xmm0, xmm1
	jp	SHORT $LN17@SetCircleS
	je	$LN3@SetCircleS
$LN17@SetCircleS:
	mov	QWORD PTR [rsp+80], rbx
; Line 370
	xor	ebx, ebx
	mov	QWORD PTR [rsp+88], rbp
	mov	ebp, 512				; 00000200H
	mov	QWORD PTR [rsp+96], rdi
	lea	rdi, QWORD PTR [rcx+144]
	movaps	XMMWORD PTR [rsp+48], xmm6
	movss	xmm6, DWORD PTR __real@3f800000
	movaps	XMMWORD PTR [rsp+32], xmm7
	movss	xmm7, DWORD PTR __real@40c90fdb
	movss	DWORD PTR [rcx+24], xmm1
	npad	11
$LL4@SetCircleS:
; Line 373
	movd	xmm1, ebx
	cvtdq2ps xmm1, xmm1
	addss	xmm1, xmm6
; Line 374
	movaps	xmm0, xmm1
	subss	xmm0, DWORD PTR [rsi+24]
	divss	xmm0, xmm1
	call	acosf
	movaps	xmm1, xmm7
	divss	xmm1, xmm0
	cvttss2si edx, xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	cmp	edx, 12
	jge	SHORT $LN9@SetCircleS
	mov	edx, 12
	jmp	SHORT $LN10@SetCircleS
$LN9@SetCircleS:
	cmp	edx, ebp
	cmovg	edx, ebp
$LN10@SetCircleS:
; Line 349
	mov	ecx, 255				; 000000ffH
	movzx	eax, dl
	cmp	edx, ecx
	cmovl	ecx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 371
	inc	ebx
; Line 375
	mov	BYTE PTR [rdi], cl
	inc	rdi
	cmp	ebx, 64					; 00000040H
	jl	SHORT $LL4@SetCircleS
; Line 371
	movaps	xmm7, XMMWORD PTR [rsp+32]
	movaps	xmm6, XMMWORD PTR [rsp+48]
	mov	rdi, QWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rbx, QWORD PTR [rsp+80]
$LN3@SetCircleS:
; Line 377
	add	rsp, 64					; 00000040H
	pop	rsi
	ret	0
?SetCircleSegmentMaxError@ImDrawListSharedData@@QEAAXM@Z ENDP ; ImDrawListSharedData::SetCircleSegmentMaxError
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImDrawListSharedData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 112
??0ImDrawListSharedData@@QEAA@XZ PROC			; ImDrawListSharedData::ImDrawListSharedData, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 349
$LN41:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 96					; 00000060H
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@4600000046000000c6000000c6000000
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 540
	lea	rdi, QWORD PTR [rcx+48]
; File E:\reps\ocornut\imgui\imgui.h
; Line 211
	xor	ebx, ebx
	movaps	XMMWORD PTR [rsp+80], xmm6
	mov	QWORD PTR [rcx], rbx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 349
	mov	rsi, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 211
	mov	DWORD PTR [rdi], ebx
	mov	QWORD PTR [rdi+8], rbx
	mov	QWORD PTR [rdi+16], rbx
	mov	QWORD PTR [rdi+24], rbx
	mov	QWORD PTR [rdi+32], rbx
	mov	QWORD PTR [rdi+40], rbx
	mov	QWORD PTR [rdi+48], rbx
	mov	QWORD PTR [rdi+56], rbx
	mov	QWORD PTR [rdi+64], rbx
	mov	QWORD PTR [rdi+72], rbx
	mov	QWORD PTR [rdi+80], rbx
	mov	QWORD PTR [rdi+88], rbx
	movaps	XMMWORD PTR [rsp+64], xmm7
	movaps	XMMWORD PTR [rsp+48], xmm8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 350
	movss	xmm8, DWORD PTR __real@40490fdb
	movaps	XMMWORD PTR [rsp+32], xmm9
	movss	xmm9, DWORD PTR __real@41400000
	mov	QWORD PTR [rcx+8], rbx
; Line 351
	mov	QWORD PTR [rcx+16], rbx
; Line 353
	mov	DWORD PTR [rcx+24], ebx
; Line 354
	movups	XMMWORD PTR [rcx+28], xmm0
; Line 355
	mov	DWORD PTR [rcx+44], ebx
	npad	6
$LL4@ImDrawList:
; Line 360
	movd	xmm7, ebx
	cvtdq2ps xmm7, xmm7
	addss	xmm7, xmm7
	mulss	xmm7, xmm8
	divss	xmm7, xmm9
; Line 361
	movaps	xmm0, xmm7
	call	cosf
	movaps	xmm6, xmm0
	movaps	xmm0, xmm7
	call	sinf
	movss	DWORD PTR [rdi+4], xmm0
	inc	ebx
	movss	DWORD PTR [rdi], xmm6
	add	rdi, 8
	cmp	ebx, 12
	jl	SHORT $LL4@ImDrawList
; Line 364
	mov	rbx, QWORD PTR [rsp+112]
	xorps	xmm0, xmm0
	movaps	xmm6, XMMWORD PTR [rsp+80]
	mov	rax, rsi
	movaps	xmm7, XMMWORD PTR [rsp+64]
	movaps	xmm8, XMMWORD PTR [rsp+48]
	movaps	xmm9, XMMWORD PTR [rsp+32]
	movups	XMMWORD PTR [rsi+144], xmm0
	movups	XMMWORD PTR [rsi+160], xmm0
	movups	XMMWORD PTR [rsi+176], xmm0
	movups	XMMWORD PTR [rsi+192], xmm0
	mov	rsi, QWORD PTR [rsp+120]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??0ImDrawListSharedData@@QEAA@XZ ENDP			; ImDrawListSharedData::ImDrawListSharedData
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1ImBitVector@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ImBitVector@@QEAA@XZ PROC				; ImBitVector::~ImBitVector, COMDAT
$LN10:
	sub	rsp, 40					; 00000028H
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN7@ImBitVecto
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN7@ImBitVecto:
	add	rsp, 40					; 00000028H
	ret	0
??1ImBitVector@@QEAA@XZ ENDP				; ImBitVector::~ImBitVector
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?SetBit@ImBitVector@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
n$ = 56
?SetBit@ImBitVector@@QEAAXH@Z PROC			; ImBitVector::SetBit, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 464
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rdi, rcx
	shl	eax, 5
	movsxd	rbx, edx
	cmp	ebx, eax
	jl	SHORT $LN3@SetBit
	mov	r8d, 464				; 000001d0H
	lea	rdx, OFFSET FLAT:??_C@_1EO@FHOHIDNF@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi@
	call	QWORD PTR __imp__wassert
$LN3@SetBit:
	mov	rcx, QWORD PTR [rdi+8]
; Line 443
	mov	rax, rbx
	sar	rax, 5
	and	ebx, 31
	lea	rdx, QWORD PTR [rcx+rax*4]
	mov	eax, DWORD PTR [rcx+rax*4]
	bts	eax, ebx
; Line 464
	mov	rbx, QWORD PTR [rsp+48]
; Line 443
	mov	DWORD PTR [rdx], eax
; Line 464
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetBit@ImBitVector@@QEAAXH@Z ENDP			; ImBitVector::SetBit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?TestBit@ImBitVector@@QEBA_NH@Z
_TEXT	SEGMENT
this$ = 48
n$ = 56
?TestBit@ImBitVector@@QEBA_NH@Z PROC			; ImBitVector::TestBit, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 463
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rdi, rcx
	shl	eax, 5
	movsxd	rbx, edx
	cmp	ebx, eax
	jl	SHORT $LN3@TestBit
	mov	r8d, 463				; 000001cfH
	lea	rdx, OFFSET FLAT:??_C@_1EO@FHOHIDNF@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi@
	call	QWORD PTR __imp__wassert
$LN3@TestBit:
; Line 441
	mov	rax, QWORD PTR [rdi+8]
	mov	r8, rbx
	sar	r8, 5
	and	ebx, 31
	mov	eax, DWORD PTR [rax+r8*4]
	bt	eax, ebx
; Line 463
	mov	rbx, QWORD PTR [rsp+48]
; Line 441
	setb	al
; Line 463
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?TestBit@ImBitVector@@QEBA_NH@Z ENDP			; ImBitVector::TestBit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Clear@ImBitVector@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Clear@ImBitVector@@QEAAXXZ PROC			; ImBitVector::Clear, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 462
$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN4@Clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN4@Clear:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 462
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?Clear@ImBitVector@@QEAAXXZ ENDP			; ImBitVector::Clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Create@ImBitVector@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
sz$ = 56
?Create@ImBitVector@@QEAAXH@Z PROC			; ImBitVector::Create, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 461
$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	add	edx, 31
	mov	rbx, rcx
	sar	edx, 5
	call	?resize@?$ImVector@I@@QEAAXH@Z		; ImVector<unsigned int>::resize
	movsxd	r8, DWORD PTR [rbx]
	xor	edx, edx
	mov	rcx, QWORD PTR [rbx+8]
	shl	r8, 2
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	memset
?Create@ImBitVector@@QEAAXH@Z ENDP			; ImBitVector::Create
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImBitArraySetBit@@YAXPEAIH@Z
_TEXT	SEGMENT
arr$ = 8
n$ = 16
?ImBitArraySetBit@@YAXPEAIH@Z PROC			; ImBitArraySetBit, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 443
	movsxd	rax, edx
	and	edx, 31
	sar	rax, 5
	lea	r8, QWORD PTR [rcx+rax*4]
	mov	eax, DWORD PTR [rcx+rax*4]
	bts	eax, edx
	mov	DWORD PTR [r8], eax
	ret	0
?ImBitArraySetBit@@YAXPEAIH@Z ENDP			; ImBitArraySetBit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImBitArrayTestBit@@YA_NPEBIH@Z
_TEXT	SEGMENT
arr$ = 8
n$ = 16
?ImBitArrayTestBit@@YA_NPEBIH@Z PROC			; ImBitArrayTestBit, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 441
	movsxd	rax, edx
	mov	r8d, edx
	sar	rax, 5
	and	r8d, 31
	mov	eax, DWORD PTR [rcx+rax*4]
	bt	eax, r8d
	setb	al
	ret	0
?ImBitArrayTestBit@@YA_NPEBIH@Z ENDP			; ImBitArrayTestBit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImBezierCalc@@YA?AUImVec2@@AEBU1@000M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 32
p1$ = 40
p2$ = 48
p3$ = 56
p4$ = 64
t$ = 72
?ImBezierCalc@@YA?AUImVec2@@AEBU1@000M@Z PROC		; ImBezierCalc, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 936
$LN6:
	sub	rsp, 24
; Line 937
	movss	xmm1, DWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
; Line 941
	movaps	xmm3, xmm1
; Line 942
	mov	rax, QWORD PTR p4$[rsp]
	subss	xmm0, xmm1
	movaps	XMMWORD PTR [rsp], xmm6
	mulss	xmm3, xmm1
	movaps	xmm4, xmm0
	movaps	xmm5, xmm0
	mulss	xmm4, DWORD PTR __real@40400000
	mulss	xmm5, xmm0
	movaps	xmm6, xmm4
	mulss	xmm3, xmm1
	mulss	xmm6, xmm0
	mulss	xmm5, xmm0
	mulss	xmm6, xmm1
	mulss	xmm4, xmm1
	movaps	xmm2, xmm5
	mulss	xmm2, DWORD PTR [rdx]
	movaps	xmm0, xmm6
	mulss	xmm6, DWORD PTR [r8+4]
	mulss	xmm0, DWORD PTR [r8]
	mulss	xmm5, DWORD PTR [rdx+4]
	addss	xmm2, xmm0
	mulss	xmm4, xmm1
	addss	xmm6, xmm5
	movaps	xmm0, xmm3
	mulss	xmm3, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR [rax]
	movaps	xmm1, xmm4
	mov	rax, rcx
	mulss	xmm4, DWORD PTR [r9+4]
	mulss	xmm1, DWORD PTR [r9]
	addss	xmm6, xmm4
	addss	xmm2, xmm1
	addss	xmm6, xmm3
	addss	xmm2, xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx+4], xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 943
	movaps	xmm6, XMMWORD PTR [rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 943
	add	rsp, 24
	ret	0
?ImBezierCalc@@YA?AUImVec2@@AEBU1@000M@Z ENDP		; ImBezierCalc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImMul@@YA?AUImVec2@@AEBU1@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
?ImMul@@YA?AUImVec2@@AEBU1@0@Z PROC			; ImMul, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 373
	movss	xmm0, DWORD PTR [rdx]
	mov	rax, rcx
	movss	xmm1, DWORD PTR [rdx+4]
	mulss	xmm0, DWORD PTR [r8]
	mulss	xmm1, DWORD PTR [r8+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 373
	ret	0
?ImMul@@YA?AUImVec2@@AEBU1@0@Z ENDP			; ImMul
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ImMax@M@@YAMMM@Z
_TEXT	SEGMENT
lhs$ = 8
rhs$ = 16
??$ImMax@M@@YAMMM@Z PROC				; ImMax<float>, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	maxss	xmm0, xmm1
	ret	0
??$ImMax@M@@YAMMM@Z ENDP				; ImMax<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$ImMin@M@@YAMMM@Z
_TEXT	SEGMENT
lhs$ = 8
rhs$ = 16
??$ImMin@M@@YAMMM@Z PROC				; ImMin<float>, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	minss	xmm0, xmm1
	ret	0
??$ImMin@M@@YAMMM@Z ENDP				; ImMin<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImDot@@YAMAEBUImVec2@@0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?ImDot@@YAMAEBUImVec2@@0@Z PROC				; ImDot, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 370
	movss	xmm0, DWORD PTR [rcx+4]
	movss	xmm1, DWORD PTR [rcx]
	mulss	xmm0, DWORD PTR [rdx+4]
	mulss	xmm1, DWORD PTR [rdx]
	addss	xmm0, xmm1
	ret	0
?ImDot@@YAMAEBUImVec2@@0@Z ENDP				; ImDot
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImFloor@@YAMM@Z
_TEXT	SEGMENT
f$ = 8
?ImFloor@@YAMM@Z PROC					; ImFloor, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 367
	cvttss2si eax, xmm0
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	ret	0
?ImFloor@@YAMM@Z ENDP					; ImFloor
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImLengthSqr@@YAMAEBUImVec2@@@Z
_TEXT	SEGMENT
lhs$ = 8
?ImLengthSqr@@YAMAEBUImVec2@@@Z PROC			; ImLengthSqr, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 364
	movss	xmm1, DWORD PTR [rcx+4]
	movss	xmm0, DWORD PTR [rcx]
	mulss	xmm0, xmm0
	mulss	xmm1, xmm1
	addss	xmm0, xmm1
	ret	0
?ImLengthSqr@@YAMAEBUImVec2@@@Z ENDP			; ImLengthSqr
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
a$ = 16
b$ = 24
t$ = 32
?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z PROC			; ImLerp, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movups	xmm1, XMMWORD PTR [rdx]
	mov	rax, rcx
	movups	xmm2, XMMWORD PTR [r8]
	movaps	xmm0, xmm3
	subps	xmm2, xmm1
	shufps	xmm0, xmm0, 0
	mulps	xmm2, xmm0
	addps	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movups	XMMWORD PTR [rcx], xmm2
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	ret	0
?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z ENDP			; ImLerp
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z
_TEXT	SEGMENT
mx$ = 0
__$ReturnUdt$ = 32
v$ = 40
mn$ = 48
?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z PROC		; ImClamp, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 359
	sub	rsp, 24
	movss	xmm0, DWORD PTR [rdx+4]
	movss	xmm1, DWORD PTR [r8+4]
	comiss	xmm1, xmm0
	mov	QWORD PTR mx$[rsp], r9
	ja	SHORT $LN6@ImClamp
	movss	xmm1, DWORD PTR mx$[rsp+4]
	minss	xmm1, xmm0
$LN6@ImClamp:
	movss	xmm2, DWORD PTR [rdx]
	movss	xmm0, DWORD PTR [r8]
	comiss	xmm0, xmm2
	ja	SHORT $LN10@ImClamp
	movss	xmm0, DWORD PTR mx$[rsp]
	minss	xmm0, xmm2
$LN10@ImClamp:
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 359
	mov	rax, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx+4], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 359
	add	rsp, 24
	ret	0
?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z ENDP		; ImClamp
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImMax@@YA?AUImVec2@@AEBU1@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
?ImMax@@YA?AUImVec2@@AEBU1@0@Z PROC			; ImMax, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 358
	movss	xmm0, DWORD PTR [rdx]
	mov	rax, rcx
	movss	xmm1, DWORD PTR [rdx+4]
	maxss	xmm0, DWORD PTR [r8]
	maxss	xmm1, DWORD PTR [r8+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 358
	ret	0
?ImMax@@YA?AUImVec2@@AEBU1@0@Z ENDP			; ImMax
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImMin@@YA?AUImVec2@@AEBU1@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
?ImMin@@YA?AUImVec2@@AEBU1@0@Z PROC			; ImMin, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 357
	movss	xmm0, DWORD PTR [rdx]
	mov	rax, rcx
	movss	xmm1, DWORD PTR [rdx+4]
	minss	xmm0, DWORD PTR [r8]
	minss	xmm1, DWORD PTR [r8+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 357
	ret	0
?ImMin@@YA?AUImVec2@@AEBU1@0@Z ENDP			; ImMin
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z
_TEXT	SEGMENT
lhs$ = 8
rhs$ = 16
??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z PROC			; operator-=, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 301
	movss	xmm0, DWORD PTR [rcx]
	mov	rax, rcx
	subss	xmm0, DWORD PTR [rdx]
	movss	xmm1, DWORD PTR [rcx+4]
	movss	DWORD PTR [rcx], xmm0
	subss	xmm1, DWORD PTR [rdx+4]
	movss	DWORD PTR [rcx+4], xmm1
	ret	0
??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z ENDP			; operator-=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z
_TEXT	SEGMENT
lhs$ = 8
rhs$ = 16
??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z PROC			; operator+=, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 300
	movss	xmm0, DWORD PTR [rcx]
	mov	rax, rcx
	addss	xmm0, DWORD PTR [rdx]
	movss	DWORD PTR [rcx], xmm0
	movss	xmm1, DWORD PTR [rdx+4]
	addss	xmm1, DWORD PTR [rcx+4]
	movss	DWORD PTR [rcx+4], xmm1
	ret	0
??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z ENDP			; operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??D@YA?AUImVec2@@AEBU0@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
??D@YA?AUImVec2@@AEBU0@0@Z PROC				; operator*, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	movss	xmm0, DWORD PTR [rdx]
	mov	rax, rcx
	movss	xmm1, DWORD PTR [rdx+4]
	mulss	xmm0, DWORD PTR [r8]
	mulss	xmm1, DWORD PTR [r8+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	ret	0
??D@YA?AUImVec2@@AEBU0@0@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??G@YA?AUImVec2@@AEBU0@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
??G@YA?AUImVec2@@AEBU0@0@Z PROC				; operator-, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm0, DWORD PTR [rdx]
	mov	rax, rcx
	movss	xmm1, DWORD PTR [rdx+4]
	subss	xmm0, DWORD PTR [r8]
	subss	xmm1, DWORD PTR [r8+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	ret	0
??G@YA?AUImVec2@@AEBU0@0@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??H@YA?AUImVec2@@AEBU0@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
??H@YA?AUImVec2@@AEBU0@0@Z PROC				; operator+, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movss	xmm0, DWORD PTR [rdx]
	mov	rax, rcx
	movss	xmm1, DWORD PTR [rdx+4]
	addss	xmm0, DWORD PTR [r8]
	addss	xmm1, DWORD PTR [r8+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	ret	0
??H@YA?AUImVec2@@AEBU0@0@Z ENDP				; operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??D@YA?AUImVec2@@AEBU0@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
??D@YA?AUImVec2@@AEBU0@M@Z PROC				; operator*, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm0, xmm2
	mov	rax, rcx
	mulss	xmm0, DWORD PTR [rdx]
	mulss	xmm2, DWORD PTR [rdx+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm2
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	ret	0
??D@YA?AUImVec2@@AEBU0@M@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImCharIsBlankW@@YA_NI@Z
_TEXT	SEGMENT
c$ = 8
?ImCharIsBlankW@@YA_NI@Z PROC				; ImCharIsBlankW, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 278
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN3@ImCharIsBl
	cmp	ecx, 9
	je	SHORT $LN3@ImCharIsBl
	cmp	ecx, 12288				; 00003000H
	je	SHORT $LN3@ImCharIsBl
	xor	al, al
	ret	0
$LN3@ImCharIsBl:
	mov	al, 1
	ret	0
?ImCharIsBlankW@@YA_NI@Z ENDP				; ImCharIsBlankW
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImCharIsBlankA@@YA_ND@Z
_TEXT	SEGMENT
c$ = 8
?ImCharIsBlankA@@YA_ND@Z PROC				; ImCharIsBlankA, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 277
	cmp	cl, 32					; 00000020H
	je	SHORT $LN3@ImCharIsBl
	cmp	cl, 9
	je	SHORT $LN3@ImCharIsBl
	xor	al, al
	ret	0
$LN3@ImCharIsBl:
	mov	al, 1
	ret	0
?ImCharIsBlankA@@YA_ND@Z ENDP				; ImCharIsBlankA
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImUpperPowerOfTwo@@YAHH@Z
_TEXT	SEGMENT
v$ = 8
?ImUpperPowerOfTwo@@YAHH@Z PROC				; ImUpperPowerOfTwo, COMDAT
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 256
	dec	ecx
	mov	eax, ecx
	sar	eax, 1
	or	ecx, eax
	mov	eax, ecx
	sar	eax, 2
	or	ecx, eax
	mov	eax, ecx
	sar	eax, 4
	or	ecx, eax
	mov	eax, ecx
	sar	eax, 8
	or	ecx, eax
	mov	eax, ecx
	sar	eax, 16
	or	eax, ecx
	inc	eax
	ret	0
?ImUpperPowerOfTwo@@YAHH@Z ENDP				; ImUpperPowerOfTwo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT fabsf
_TEXT	SEGMENT
_X$ = 8
fabsf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
; Line 672
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; Line 673
	ret	0
fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GImFont@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GImFont@@QEAAPEAXI@Z PROC				; ImFont::`scalar deleting destructor', COMDAT
$LN22:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	edi, edx
	mov	rbx, rcx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2607
	call	?ClearOutputData@ImFont@@QEAAXXZ	; ImFont::ClearOutputData
	npad	1
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	mov	rcx, QWORD PTR [rbx+48]
	test	rcx, rcx
	je	SHORT $LN8@scalar
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN8@scalar:
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN12@scalar
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN12@scalar:
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN16@scalar
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN16@scalar:
	test	dil, 1
	je	SHORT $LN19@scalar
	mov	edx, 120				; 00000078H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN19@scalar:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GImFont@@QEAAPEAXI@Z ENDP				; ImFont::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?IsGlyphRangeUnused@ImFont@@QEAA_NII@Z
_TEXT	SEGMENT
this$ = 8
c_begin$ = 16
c_last$ = 24
?IsGlyphRangeUnused@ImFont@@QEAA_NII@Z PROC		; ImFont::IsGlyphRangeUnused, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2677
	mov	r9d, r8d
	mov	r10, rcx
; Line 2679
	shr	r9d, 12
	shr	edx, 12
$LN15@IsGlyphRan:
; Line 2681
	cmp	edx, r9d
	ja	SHORT $LN13@IsGlyphRan
	mov	eax, edx
	and	eax, -8					; fffffff8H
	cmp	eax, 16
	jae	SHORT $LN2@IsGlyphRan
; Line 2682
	mov	eax, edx
	mov	ecx, edx
	and	ecx, 7
	shr	rax, 3
	mov	r8d, 1
	shl	r8d, cl
	test	r8b, BYTE PTR [rax+r10+112]
	jne	SHORT $LN9@IsGlyphRan
$LN2@IsGlyphRan:
; Line 2680
	inc	edx
	jmp	SHORT $LN15@IsGlyphRan
$LN9@IsGlyphRan:
; Line 2683
	xor	al, al
; Line 2685
	ret	0
$LN13@IsGlyphRan:
; Line 2684
	mov	al, 1
; Line 2685
	ret	0
?IsGlyphRangeUnused@ImFont@@QEAA_NII@Z ENDP		; ImFont::IsGlyphRangeUnused
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?SetFallbackChar@ImFont@@QEAAXG@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
?SetFallbackChar@ImFont@@QEAAXG@Z PROC			; ImFont::SetFallbackChar, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2695
	mov	WORD PTR [rcx+90], dx
; Line 2696
	jmp	?BuildLookupTable@ImFont@@QEAAXXZ	; ImFont::BuildLookupTable
?SetFallbackChar@ImFont@@QEAAXG@Z ENDP			; ImFont::SetFallbackChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?SetGlyphVisible@ImFont@@QEAAXG_N@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
visible$ = 24
?SetGlyphVisible@ImFont@@QEAAXG_N@Z PROC		; ImFont::SetGlyphVisible, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2688
	mov	r9, rcx
; Line 2751
	movzx	ecx, dx
	movsxd	rax, DWORD PTR [r9+24]
	cmp	rcx, rax
	jb	SHORT $LN5@SetGlyphVi
; Line 2752
	mov	rcx, QWORD PTR [r9+56]
	jmp	SHORT $LN4@SetGlyphVi
$LN5@SetGlyphVi:
; Line 2753
	mov	rax, QWORD PTR [r9+32]
	movzx	ecx, WORD PTR [rax+rcx*2]
; Line 2754
	mov	eax, 65535				; 0000ffffH
	cmp	cx, ax
	jne	SHORT $LN6@SetGlyphVi
; Line 2755
	mov	rcx, QWORD PTR [r9+56]
	jmp	SHORT $LN4@SetGlyphVi
$LN6@SetGlyphVi:
; Line 2756
	mov	rax, QWORD PTR [r9+48]
	lea	rcx, QWORD PTR [rcx+rcx*4]
	lea	rcx, QWORD PTR [rax+rcx*8]
$LN4@SetGlyphVi:
; Line 2689
	test	rcx, rcx
	je	SHORT $LN2@SetGlyphVi
; Line 2690
	and	DWORD PTR [rcx], 2147483647		; 7fffffffH
	movzx	eax, r8b
	shl	eax, 31
	or	DWORD PTR [rcx], eax
$LN2@SetGlyphVi:
; Line 2691
	ret	0
?SetGlyphVisible@ImFont@@QEAAXG_N@Z ENDP		; ImFont::SetGlyphVisible
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddRemapChar@ImFont@@QEAAXGG_N@Z
_TEXT	SEGMENT
this$ = 80
dst$ = 88
src$ = 96
overwrite_dst$ = 104
?AddRemapChar@ImFont@@QEAAXGG_N@Z PROC			; ImFont::AddRemapChar, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2735
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
; Line 2736
	mov	edi, DWORD PTR [rcx+24]
	movzx	r12d, r9b
	movzx	r15d, r8w
	mov	rbx, rcx
	movzx	ebp, dx
	test	edi, edi
	jg	SHORT $LN5@AddRemapCh
	mov	r8d, 2736				; 00000ab0H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CK@OHOOGJPG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu?$AAp?$AA?4?$AAS?$AAi?$AAz@
	call	QWORD PTR __imp__wassert
	mov	edi, DWORD PTR [rbx+24]
$LN5@AddRemapCh:
; Line 2739
	mov	r14d, 65535				; 0000ffffH
	cmp	ebp, edi
	jae	SHORT $LN2@AddRemapCh
	mov	rax, QWORD PTR [rbx+32]
	cmp	WORD PTR [rax+rbp*2], r14w
	jne	SHORT $LN2@AddRemapCh
	test	r12b, r12b
	je	$LN1@AddRemapCh
$LN2@AddRemapCh:
; Line 2741
	cmp	r15d, edi
	jb	SHORT $LN3@AddRemapCh
	cmp	ebp, edi
	jae	$LN1@AddRemapCh
$LN3@AddRemapCh:
; Line 2744
	lea	edx, DWORD PTR [rbp+1]
	movaps	XMMWORD PTR [rsp+32], xmm6
	mov	rcx, rbx
	call	?GrowIndex@ImFont@@QEAAXH@Z		; ImFont::GrowIndex
; Line 2745
	cmp	r15d, edi
	jae	SHORT $LN6@AddRemapCh
	mov	rax, QWORD PTR [rbx+32]
	movzx	r14d, WORD PTR [rax+r15*2]
$LN6@AddRemapCh:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebp, DWORD PTR [rbx+24]
	jl	SHORT $LN12@AddRemapCh
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN12@AddRemapCh:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2745
	mov	rax, QWORD PTR [rbx+32]
	mov	WORD PTR [rax+rbp*2], r14w
; Line 2746
	cmp	r15d, edi
	jae	SHORT $LN8@AddRemapCh
	mov	rax, QWORD PTR [rbx+8]
	movss	xmm6, DWORD PTR [rax+r15*4]
	jmp	SHORT $LN9@AddRemapCh
$LN8@AddRemapCh:
	movss	xmm6, DWORD PTR __real@3f800000
$LN9@AddRemapCh:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebp, DWORD PTR [rbx]
	jl	SHORT $LN15@AddRemapCh
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN15@AddRemapCh:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2746
	mov	rax, QWORD PTR [rbx+8]
	movss	DWORD PTR [rax+rbp*4], xmm6
	movaps	xmm6, XMMWORD PTR [rsp+32]
$LN1@AddRemapCh:
; Line 2747
	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+104]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r12
	ret	0
?AddRemapChar@ImFont@@QEAAXGG_N@Z ENDP			; ImFont::AddRemapChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddGlyph@ImFont@@QEAAXGMMMMMMMMM@Z
_TEXT	SEGMENT
this$ = 80
codepoint$ = 88
x0$ = 96
y0$ = 104
x1$ = 112
y1$ = 120
u0$ = 128
v0$ = 136
u1$ = 144
v1$ = 152
advance_x$ = 160
?AddGlyph@ImFont@@QEAAXGMMMMMMMMM@Z PROC		; ImFont::AddGlyph, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2711
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	movzx	esi, dx
	mov	rdi, rcx
; Line 2712
	mov	edx, DWORD PTR [rcx+40]
	add	rcx, 40					; 00000028H
	movaps	XMMWORD PTR [rsp+48], xmm6
	inc	edx
	movaps	XMMWORD PTR [rsp+32], xmm7
	movaps	xmm6, xmm3
	movaps	xmm7, xmm2
	call	?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z ; ImVector<ImFontGlyph>::resize
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [rdi+40]
	test	eax, eax
	jg	SHORT $LN8@AddGlyph
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rdi+40]
$LN8@AddGlyph:
	mov	r8, QWORD PTR [rdi+48]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2714
	mov	r9d, -2147483648			; 80000000H
; Line 2715
	movss	xmm1, DWORD PTR x1$[rsp]
	movss	xmm0, DWORD PTR y1$[rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	cdqe
	lea	rdx, QWORD PTR [rax+rax*4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2714
	mov	ecx, DWORD PTR [r8+rdx*8-40]
	and	ecx, r9d
	or	ecx, esi
; Line 2715
	ucomiss	xmm7, xmm1
	jp	SHORT $LN10@AddGlyph
	je	SHORT $LN4@AddGlyph
$LN10@AddGlyph:
	ucomiss	xmm6, xmm0
	jp	SHORT $LN9@AddGlyph
	jne	SHORT $LN9@AddGlyph
$LN4@AddGlyph:
	xor	r9d, r9d
$LN9@AddGlyph:
; Line 2719
	movss	DWORD PTR [r8+rdx*8-20], xmm0
	btr	ecx, 31
; Line 2720
	movss	xmm0, DWORD PTR u0$[rsp]
	or	ecx, r9d
	movss	DWORD PTR [r8+rdx*8-24], xmm1
; Line 2721
	movss	xmm1, DWORD PTR v0$[rsp]
	movss	DWORD PTR [r8+rdx*8-16], xmm0
; Line 2722
	movss	xmm0, DWORD PTR u1$[rsp]
	movss	DWORD PTR [r8+rdx*8-12], xmm1
; Line 2723
	movss	xmm1, DWORD PTR v1$[rsp]
	movss	DWORD PTR [r8+rdx*8-8], xmm0
; Line 2724
	movss	xmm0, DWORD PTR advance_x$[rsp]
	movss	DWORD PTR [r8+rdx*8-4], xmm1
	movss	DWORD PTR [r8+rdx*8-32], xmm7
	movss	DWORD PTR [r8+rdx*8-28], xmm6
	mov	DWORD PTR [r8+rdx*8-40], ecx
	mov	rax, QWORD PTR [rdi+80]
	addss	xmm0, DWORD PTR [rax+36]
	movss	DWORD PTR [r8+rdx*8-36], xmm0
; Line 2726
	mov	rax, QWORD PTR [rdi+80]
	cmp	BYTE PTR [rax+32], 0
	je	SHORT $LN2@AddGlyph
; Line 2727
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [r8+rdx*8-36], xmm0
$LN2@AddGlyph:
; Line 2731
	mov	rax, QWORD PTR [rdi+72]
; Line 2732
	mov	rbx, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	movaps	xmm6, XMMWORD PTR [rsp+48]
	movaps	xmm7, XMMWORD PTR [rsp+32]
	mov	BYTE PTR [rdi+94], 1
	movd	xmm1, DWORD PTR [rax+40]
	movss	xmm0, DWORD PTR [r8+rdx*8-8]
	subss	xmm0, DWORD PTR [r8+rdx*8-16]
	movss	xmm2, DWORD PTR [r8+rdx*8-4]
	subss	xmm2, DWORD PTR [r8+rdx*8-12]
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, xmm0
	movd	xmm0, DWORD PTR [rax+44]
	cvtdq2ps xmm0, xmm0
	addss	xmm1, DWORD PTR __real@3ffeb852
	mulss	xmm2, xmm0
	addss	xmm2, DWORD PTR __real@3ffeb852
	cvttss2si ecx, xmm1
	cvttss2si eax, xmm2
	imul	ecx, eax
	add	DWORD PTR [rdi+108], ecx
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?AddGlyph@ImFont@@QEAAXGMMMMMMMMM@Z ENDP		; ImFont::AddGlyph
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GrowIndex@ImFont@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 64
$T1 = 72
new_size$ = 72
?GrowIndex@ImFont@@QEAAXH@Z PROC			; ImFont::GrowIndex, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2700
$LN44:
	push	rbx
	push	rdi
	sub	rsp, 40					; 00000028H
; Line 2701
	mov	eax, DWORD PTR [rcx+24]
	mov	rbx, rcx
	movsxd	rdi, edx
	cmp	DWORD PTR [rcx], eax
	je	SHORT $LN4@GrowIndex
	mov	r8d, 2701				; 00000a8dH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1EO@HLFAHELG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAX?$AA?4?$AAS@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+24]
$LN4@GrowIndex:
; Line 2702
	cmp	edi, eax
	jle	$LN1@GrowIndex
; Line 2704
	movss	xmm0, DWORD PTR __real@bf800000
; File E:\reps\ocornut\imgui\imgui.h
; Line 1342
	mov	ecx, DWORD PTR [rbx+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2704
	mov	QWORD PTR [rsp+64], rbp
	mov	QWORD PTR [rsp+80], rsi
	mov	QWORD PTR [rsp+32], r14
; File E:\reps\ocornut\imgui\imgui.h
; Line 1342
	mov	r14d, 8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2704
	movss	DWORD PTR $T1[rsp], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 1342
	cmp	edi, ecx
	jle	SHORT $LN16@GrowIndex
; Line 1340
	test	ecx, ecx
	je	SHORT $LN14@GrowIndex
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN15@GrowIndex
$LN14@GrowIndex:
	mov	eax, r14d
$LN15@GrowIndex:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN16@GrowIndex
	movsxd	rcx, esi
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN18@GrowIndex
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN18@GrowIndex:
	mov	QWORD PTR [rbx+8], rbp
	mov	DWORD PTR [rbx+4], esi
$LN16@GrowIndex:
; Line 1342
	movsxd	rax, DWORD PTR [rbx]
	cmp	edi, eax
	jle	SHORT $LN7@GrowIndex
	mov	rdx, rax
	cmp	rax, rdi
	jge	SHORT $LN7@GrowIndex
	mov	eax, DWORD PTR $T1[rsp]
	npad	6
$LL8@GrowIndex:
	mov	rcx, QWORD PTR [rbx+8]
	mov	DWORD PTR [rcx+rdx*4], eax
	inc	rdx
	cmp	rdx, rdi
	jl	SHORT $LL8@GrowIndex
$LN7@GrowIndex:
	mov	DWORD PTR [rbx], edi
	mov	ecx, DWORD PTR [rbx+28]
	cmp	edi, ecx
	jle	SHORT $LN31@GrowIndex
; Line 1340
	test	ecx, ecx
	je	SHORT $LN29@GrowIndex
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	r14d, DWORD PTR [rcx+rax]
$LN29@GrowIndex:
	cmp	r14d, edi
	mov	ebp, edi
	cmovg	ebp, r14d
; Line 1344
	cmp	ebp, ecx
	jle	SHORT $LN31@GrowIndex
	movsxd	rcx, ebp
	add	rcx, rcx
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+32]
	mov	r14, rax
	test	rdx, rdx
	je	SHORT $LN33@GrowIndex
	movsxd	r8, DWORD PTR [rbx+24]
	mov	rcx, rax
	add	r8, r8
	call	memcpy
	mov	rcx, QWORD PTR [rbx+32]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN33@GrowIndex:
	mov	QWORD PTR [rbx+32], r14
	mov	DWORD PTR [rbx+28], ebp
$LN31@GrowIndex:
; Line 1342
	movsxd	rax, DWORD PTR [rbx+24]
	mov	r14, QWORD PTR [rsp+32]
	mov	rbp, QWORD PTR [rsp+64]
	cmp	edi, eax
	jle	SHORT $LN22@GrowIndex
	mov	rcx, rax
	cmp	rax, rdi
	jge	SHORT $LN22@GrowIndex
	mov	edx, 65535				; 0000ffffH
	npad	7
$LL23@GrowIndex:
	mov	rax, QWORD PTR [rbx+32]
	mov	WORD PTR [rax+rcx*2], dx
	inc	rcx
	cmp	rcx, rdi
	jl	SHORT $LL23@GrowIndex
$LN22@GrowIndex:
	mov	rsi, QWORD PTR [rsp+80]
	mov	DWORD PTR [rbx+24], edi
$LN1@GrowIndex:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2706
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbx
	ret	0
?GrowIndex@ImFont@@QEAAXH@Z ENDP			; ImFont::GrowIndex
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ClearOutputData@ImFont@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearOutputData@ImFont@@QEAAXXZ PROC			; ImFont::ClearOutputData, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2611
$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 2612
	xor	edi, edi
	mov	rbx, rcx
; Line 2613
	mov	QWORD PTR [rcx+16], rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rcx+48]
	test	rcx, rcx
	je	SHORT $LN4@ClearOutpu
	mov	QWORD PTR [rbx+40], rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+48], rdi
$LN4@ClearOutpu:
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN7@ClearOutpu
	mov	QWORD PTR [rbx], rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], rdi
$LN7@ClearOutpu:
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN10@ClearOutpu
	mov	QWORD PTR [rbx+24], rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+32], rdi
$LN10@ClearOutpu:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2617
	mov	QWORD PTR [rbx+56], rdi
; Line 2618
	mov	QWORD PTR [rbx+72], rdi
; Line 2619
	mov	BYTE PTR [rbx+94], 1
; Line 2620
	mov	QWORD PTR [rbx+100], rdi
; Line 2621
	mov	DWORD PTR [rbx+108], edi
; Line 2622
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?ClearOutputData@ImFont@@QEAAXXZ ENDP			; ImFont::ClearOutputData
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?BuildLookupTable@ImFont@@QEAAXXZ
_TEXT	SEGMENT
tv1544 = 96
this$ = 96
?BuildLookupTable@ImFont@@QEAAXXZ PROC			; ImFont::BuildLookupTable, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2625
$LN103:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
; Line 2627
	mov	edx, DWORD PTR [rcx+40]
	xor	esi, esi
	movaps	XMMWORD PTR [rsp+32], xmm6
	mov	rbx, rcx
	mov	QWORD PTR [rsp+104], r12
	mov	ebp, esi
	mov	QWORD PTR [rsp+112], r13
	mov	edi, esi
	mov	QWORD PTR [rsp+120], r14
	mov	QWORD PTR [rsp+48], r15
	test	edx, edx
	je	SHORT $LN99@BuildLooku
	mov	eax, edx
	mov	r15d, esi
$LL4@BuildLooku:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	mov	edx, eax
	cmp	edi, eax
	jl	SHORT $LN98@BuildLooku
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	edx, DWORD PTR [rbx+40]
$LN98@BuildLooku:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2628
	mov	rax, QWORD PTR [rbx+48]
	mov	ecx, DWORD PTR [r15+rax]
	mov	eax, edx
	btr	ecx, 31
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	cmp	ebp, ecx
	cmovge	ecx, ebp
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2627
	inc	edi
	add	r15, 40					; 00000028H
; Line 2628
	mov	ebp, ecx
	cmp	edi, edx
	jne	SHORT $LL4@BuildLooku
$LN99@BuildLooku:
; Line 2631
	mov	r13d, 65535				; 0000ffffH
	cmp	edx, r13d
	jl	SHORT $LN15@BuildLooku
	mov	r8d, 2631				; 00000a47H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CK@FHBHHKB@?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
$LN15@BuildLooku:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN24@BuildLooku
	mov	QWORD PTR [rbx], rsi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], rsi
$LN24@BuildLooku:
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN27@BuildLooku
	mov	QWORD PTR [rbx+24], rsi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+32], rsi
$LN27@BuildLooku:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2635
	xor	eax, eax
	mov	BYTE PTR [rbx+94], sil
; Line 2636
	lea	r12d, DWORD PTR [rbp+1]
	mov	WORD PTR [rbx+112], ax
	mov	edx, r12d
	mov	rcx, rbx
	call	?GrowIndex@ImFont@@QEAAXH@Z		; ImFont::GrowIndex
; Line 2637
	mov	r8d, DWORD PTR [rbx+40]
	mov	ebp, esi
	test	r8d, r8d
	jle	$LN6@BuildLooku
; Line 2640
	mov	eax, r8d
$LL7@BuildLooku:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebp, eax
	jl	SHORT $LN31@BuildLooku
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	r8d, DWORD PTR [rbx+40]
$LN31@BuildLooku:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2639
	mov	r15, QWORD PTR [rbx+48]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	movsxd	rax, ebp
	lea	r13, QWORD PTR [rax+rax*4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2639
	mov	edi, DWORD PTR [r15+r13*8]
	btr	edi, 31
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebp, r8d
	jl	SHORT $LN100@BuildLooku
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	r15, QWORD PTR [rbx+48]
$LN100@BuildLooku:
	cmp	edi, DWORD PTR [rbx]
	jl	SHORT $LN37@BuildLooku
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN37@BuildLooku:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2640
	mov	rcx, QWORD PTR [rbx+8]
	mov	eax, DWORD PTR [r15+r13*8+4]
	mov	DWORD PTR [rcx+rdi*4], eax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, DWORD PTR [rbx+24]
	jl	SHORT $LN40@BuildLooku
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN40@BuildLooku:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2641
	mov	rax, QWORD PTR [rbx+32]
	mov	WORD PTR [rax+rdi*2], bp
	inc	ebp
; Line 2644
	shr	edi, 12
; Line 2645
	mov	edx, edi
	shr	rdx, 3
	mov	ecx, edi
	and	ecx, 7
	movzx	eax, BYTE PTR [rdx+rbx+112]
	bts	eax, ecx
	mov	BYTE PTR [rdx+rbx+112], al
	mov	r8d, DWORD PTR [rbx+40]
	mov	eax, r8d
	cmp	ebp, r8d
	jl	$LL7@BuildLooku
	mov	r13d, 65535				; 0000ffffH
$LN6@BuildLooku:
; Line 2751
	cmp	DWORD PTR [rbx+24], 32			; 00000020H
	ja	SHORT $LN42@BuildLooku
; Line 2752
	mov	rax, QWORD PTR [rbx+56]
	jmp	SHORT $LN41@BuildLooku
$LN42@BuildLooku:
; Line 2753
	mov	rax, QWORD PTR [rbx+32]
	movzx	ecx, WORD PTR [rax+64]
; Line 2754
	cmp	cx, r13w
	jne	SHORT $LN43@BuildLooku
; Line 2755
	mov	rax, QWORD PTR [rbx+56]
	jmp	SHORT $LN41@BuildLooku
$LN43@BuildLooku:
; Line 2756
	mov	rax, QWORD PTR [rbx+48]
	lea	rcx, QWORD PTR [rcx+rcx*4]
	lea	rax, QWORD PTR [rax+rcx*8]
$LN41@BuildLooku:
; Line 2650
	test	rax, rax
	je	$LN11@BuildLooku
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	test	r8d, r8d
	jg	SHORT $LN47@BuildLooku
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	r8d, DWORD PTR [rbx+40]
$LN47@BuildLooku:
	movsxd	rax, r8d
	lea	rcx, QWORD PTR [rax+rax*4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2652
	mov	rax, QWORD PTR [rbx+48]
	mov	edx, DWORD PTR [rax+rcx*8-40]
	btr	edx, 31
	cmp	edx, 9
	je	SHORT $LN12@BuildLooku
; Line 2653
	lea	edx, DWORD PTR [r8+1]
	lea	rcx, QWORD PTR [rbx+40]
	call	?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z ; ImVector<ImFontGlyph>::resize
$LN12@BuildLooku:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [rbx+40]
	test	eax, eax
	jg	SHORT $LN50@BuildLooku
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+40]
$LN50@BuildLooku:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2751
	cmp	DWORD PTR [rbx+24], 32			; 00000020H
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	rbp, QWORD PTR [rbx+48]
	cdqe
	lea	rdi, QWORD PTR [rax+rax*4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2751
	ja	SHORT $LN52@BuildLooku
; Line 2752
	mov	rax, QWORD PTR [rbx+56]
	jmp	SHORT $LN51@BuildLooku
$LN52@BuildLooku:
; Line 2753
	mov	rax, QWORD PTR [rbx+32]
	movzx	ecx, WORD PTR [rax+64]
; Line 2754
	cmp	cx, r13w
	jne	SHORT $LN53@BuildLooku
; Line 2755
	mov	rax, QWORD PTR [rbx+56]
	jmp	SHORT $LN51@BuildLooku
$LN53@BuildLooku:
; Line 2756
	lea	rcx, QWORD PTR [rcx+rcx*4]
	lea	rax, QWORD PTR [rcx*8]
	add	rax, rbp
$LN51@BuildLooku:
; Line 2655
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rbp+rdi*8-40], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rbp+rdi*8-24], xmm1
	movsd	xmm0, QWORD PTR [rax+32]
	movsd	QWORD PTR [rbp+rdi*8-8], xmm0
; Line 2656
	mov	r15d, DWORD PTR [rbp+rdi*8-40]
; Line 2657
	movss	xmm0, DWORD PTR [rbp+rdi*8-36]
	and	r15d, -2147483639			; 80000009H
	mulss	xmm0, DWORD PTR __real@40800000
	or	r15d, 9
	mov	DWORD PTR [rbp+rdi*8-40], r15d
; Line 2658
	btr	r15d, 31
	movss	DWORD PTR [rbp+rdi*8-36], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r15d, DWORD PTR [rbx]
	jl	SHORT $LN57@BuildLooku
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	movss	xmm0, DWORD PTR [rbp+rdi*8-36]
$LN57@BuildLooku:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2658
	mov	rax, QWORD PTR [rbx+8]
	movss	DWORD PTR [rax+r15*4], xmm0
; Line 2659
	mov	edi, DWORD PTR [rbp+rdi*8-40]
	btr	edi, 31
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, DWORD PTR [rbx+24]
	jl	SHORT $LN60@BuildLooku
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN60@BuildLooku:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2659
	movzx	edx, WORD PTR [rbx+40]
	mov	rax, QWORD PTR [rbx+32]
	dec	dx
	mov	WORD PTR [rax+rdi*2], dx
$LN11@BuildLooku:
; Line 2751
	mov	edx, DWORD PTR [rbx+24]
	mov	r15, QWORD PTR [rsp+48]
	mov	r14, QWORD PTR [rsp+120]
	cmp	edx, 32					; 00000020H
	ja	SHORT $LN65@BuildLooku
; Line 2752
	mov	rax, QWORD PTR [rbx+56]
	jmp	SHORT $LN64@BuildLooku
$LN65@BuildLooku:
; Line 2753
	mov	rax, QWORD PTR [rbx+32]
	movzx	ecx, WORD PTR [rax+64]
; Line 2754
	cmp	cx, r13w
	jne	SHORT $LN66@BuildLooku
; Line 2755
	mov	rax, QWORD PTR [rbx+56]
	jmp	SHORT $LN64@BuildLooku
$LN66@BuildLooku:
; Line 2756
	mov	rax, QWORD PTR [rbx+48]
	lea	rcx, QWORD PTR [rcx+rcx*4]
	lea	rax, QWORD PTR [rax+rcx*8]
$LN64@BuildLooku:
; Line 2689
	test	rax, rax
	je	SHORT $LN62@BuildLooku
; Line 2690
	and	DWORD PTR [rax], 2147483647		; 7fffffffH
	mov	edx, DWORD PTR [rbx+24]
$LN62@BuildLooku:
; Line 2751
	cmp	edx, 9
	ja	SHORT $LN72@BuildLooku
; Line 2752
	mov	rax, QWORD PTR [rbx+56]
	jmp	SHORT $LN71@BuildLooku
$LN72@BuildLooku:
; Line 2753
	mov	rax, QWORD PTR [rbx+32]
	movzx	ecx, WORD PTR [rax+18]
; Line 2754
	cmp	cx, r13w
	jne	SHORT $LN73@BuildLooku
; Line 2755
	mov	rax, QWORD PTR [rbx+56]
	jmp	SHORT $LN71@BuildLooku
$LN73@BuildLooku:
; Line 2756
	mov	rax, QWORD PTR [rbx+48]
	lea	rcx, QWORD PTR [rcx+rcx*4]
	lea	rax, QWORD PTR [rax+rcx*8]
$LN71@BuildLooku:
; Line 2689
	test	rax, rax
	je	SHORT $LN69@BuildLooku
; Line 2690
	and	DWORD PTR [rax], 2147483647		; 7fffffffH
	mov	edx, DWORD PTR [rbx+24]
$LN69@BuildLooku:
; Line 2761
	movzx	ecx, WORD PTR [rbx+90]
	movsxd	rax, edx
	cmp	rcx, rax
	jb	SHORT $LN76@BuildLooku
; Line 2762
	mov	rax, rsi
	jmp	SHORT $LN75@BuildLooku
$LN76@BuildLooku:
; Line 2763
	mov	rax, QWORD PTR [rbx+32]
	movzx	edx, WORD PTR [rax+rcx*2]
; Line 2764
	cmp	dx, r13w
	jne	SHORT $LN77@BuildLooku
; Line 2765
	mov	rax, rsi
	jmp	SHORT $LN75@BuildLooku
$LN77@BuildLooku:
; Line 2766
	mov	rax, QWORD PTR [rbx+48]
	lea	rcx, QWORD PTR [rdx+rdx*4]
	lea	rax, QWORD PTR [rax+rcx*8]
$LN75@BuildLooku:
; Line 2668
	mov	r13, QWORD PTR [rsp+112]
	xorps	xmm6, xmm6
	mov	QWORD PTR [rbx+56], rax
	test	rax, rax
	je	SHORT $LN16@BuildLooku
	movss	xmm0, DWORD PTR [rax+4]
	jmp	SHORT $LN17@BuildLooku
$LN16@BuildLooku:
	xorps	xmm0, xmm0
$LN17@BuildLooku:
; Line 2669
	movsxd	rbp, r12d
	mov	r12, QWORD PTR [rsp+104]
	movss	DWORD PTR [rbx+16], xmm0
	test	rbp, rbp
	jle	SHORT $LN9@BuildLooku
; Line 2671
	mov	rdi, rsi
$LL10@BuildLooku:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	esi, DWORD PTR [rbx]
	jl	SHORT $LN81@BuildLooku
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN81@BuildLooku:
	mov	rcx, QWORD PTR [rbx+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2670
	comiss	xmm6, DWORD PTR [rcx+rdi*4]
	jbe	SHORT $LN8@BuildLooku
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	esi, DWORD PTR [rbx]
	jl	SHORT $LN101@BuildLooku
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	rcx, QWORD PTR [rbx+8]
$LN101@BuildLooku:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2671
	mov	eax, DWORD PTR [rbx+16]
	mov	DWORD PTR [rcx+rdi*4], eax
$LN8@BuildLooku:
; Line 2669
	inc	esi
	inc	rdi
	cmp	rdi, rbp
	jl	SHORT $LL10@BuildLooku
$LN9@BuildLooku:
; Line 2672
	movaps	xmm6, XMMWORD PTR [rsp+32]
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?BuildLookupTable@ImFont@@QEAAXXZ ENDP			; ImFont::BuildLookupTable
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z
_TEXT	SEGMENT
pos$1$ = 48
idx_expected_size$1$ = 52
line_height$1$ = 304
pos$ = 304
this$ = 304
draw_list$ = 312
size$ = 320
col$ = 336
vtx_current_idx$1$ = 344
c$1 = 344
clip_rect$ = 344
text_begin$ = 352
word_wrap_enabled$1$ = 360
text_end$ = 360
wrap_width$ = 368
cpu_fine_clip$ = 376
?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z PROC ; ImFont::RenderText, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2975
$LN90:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rdx
	push	rbx
	push	rbp
	push	rdi
	push	r12
	push	r13
	sub	rsp, 256				; 00000100H
; Line 2976
	mov	rdi, QWORD PTR text_end$[rsp]
	mov	r13, rdx
	mov	rbx, QWORD PTR text_begin$[rsp]
	mov	rbp, rcx
	movaps	XMMWORD PTR [rax-104], xmm7
	movaps	XMMWORD PTR [rax-136], xmm9
	movaps	xmm9, xmm2
	movaps	XMMWORD PTR [rax-152], xmm10
	mov	QWORD PTR pos$[rsp], r9
	test	rdi, rdi
	jne	SHORT $LN10@RenderText
; Line 2977
	mov	rdi, -1
$LL80@RenderText:
	inc	rdi
	cmp	BYTE PTR [rbx+rdi], 0
	jne	SHORT $LL80@RenderText
	add	rdi, rbx
$LN10@RenderText:
; Line 2980
	movss	xmm0, DWORD PTR pos$[rsp]
	addss	xmm0, DWORD PTR [rcx+64]
; Line 2984
	mov	r12, QWORD PTR clip_rect$[rsp]
	movss	xmm7, DWORD PTR [r12+12]
	cvttss2si eax, xmm0
	movss	xmm0, DWORD PTR pos$[rsp+4]
	addss	xmm0, DWORD PTR [rcx+68]
	movd	xmm10, eax
	cvtdq2ps xmm10, xmm10
	cvttss2si eax, xmm0
	movss	DWORD PTR pos$1$[rsp], xmm10
	movd	xmm1, eax
	cvtdq2ps xmm1, xmm1
	comiss	xmm1, xmm7
	ja	$LN1@RenderText
; Line 2987
	mov	QWORD PTR [rsp+240], r14
	xorps	xmm0, xmm0
	movaps	XMMWORD PTR [rsp+208], xmm6
; Line 2994
	movss	xmm6, DWORD PTR [r12+4]
	movaps	XMMWORD PTR [rsp+176], xmm8
	movss	xmm8, DWORD PTR [rcx+20]
	divss	xmm9, xmm8
	movaps	XMMWORD PTR [rsp+128], xmm11
	movss	xmm11, DWORD PTR wrap_width$[rsp]
	comiss	xmm11, xmm0
	mulss	xmm8, xmm9
	movaps	xmm0, xmm1
	seta	cl
	movaps	XMMWORD PTR [rsp+96], xmm13
	movss	DWORD PTR size$[rsp], xmm9
	movaps	xmm13, xmm1
	addss	xmm0, xmm8
	movss	DWORD PTR line_height$1$[rsp], xmm8
	xor	r14d, r14d
	mov	BYTE PTR word_wrap_enabled$1$[rsp], cl
	comiss	xmm6, xmm0
	jbe	SHORT $LN3@RenderText
	test	cl, cl
	jne	SHORT $LN3@RenderText
	npad	4
$LL2@RenderText:
; Line 2995
	cmp	rbx, rdi
	jae	SHORT $LN81@RenderText
; Line 2997
	mov	r8, rdi
	mov	edx, 10
	sub	r8, rbx
	mov	rcx, rbx
	call	memchr
	mov	rbx, rax
; Line 2998
	test	rax, rax
	je	SHORT $LN40@RenderText
	inc	rbx
	jmp	SHORT $LN41@RenderText
$LN40@RenderText:
	mov	rbx, rdi
$LN41@RenderText:
; Line 2999
	addss	xmm13, xmm8
	movaps	xmm0, xmm8
	addss	xmm0, xmm13
	comiss	xmm6, xmm0
	ja	SHORT $LL2@RenderText
$LN81@RenderText:
	movzx	ecx, BYTE PTR word_wrap_enabled$1$[rsp]
$LN3@RenderText:
; Line 3004
	mov	rax, rdi
	sub	rax, rbx
	cmp	rax, 10000				; 00002710H
	jle	SHORT $LN13@RenderText
	test	cl, cl
	jne	SHORT $LN13@RenderText
; Line 3008
	comiss	xmm7, xmm13
	mov	rax, rbx
	movaps	xmm6, xmm13
	jbe	SHORT $LN82@RenderText
$LL4@RenderText:
	cmp	rax, rdi
	jae	SHORT $LN82@RenderText
; Line 3010
	mov	r8, rdi
	mov	edx, 10
	sub	r8, rax
	mov	rcx, rax
	call	memchr
; Line 3011
	test	rax, rax
	je	SHORT $LN42@RenderText
	inc	rax
	jmp	SHORT $LN43@RenderText
$LN42@RenderText:
	mov	rax, rdi
$LN43@RenderText:
; Line 3012
	addss	xmm6, xmm8
	comiss	xmm7, xmm6
	ja	SHORT $LL4@RenderText
$LN82@RenderText:
; Line 3014
	mov	rdi, rax
$LN13@RenderText:
; Line 3016
	cmp	rbx, rdi
	je	$LN88@RenderText
; Line 3022
	mov	eax, DWORD PTR [r13+16]
	mov	r8d, edi
	sub	r8d, ebx
	mov	QWORD PTR [rsp+248], rsi
; Line 3023
	mov	rcx, r13
	mov	QWORD PTR [rsp+232], r15
	lea	edx, DWORD PTR [r8+r8*2]
	add	edx, edx
	lea	r8d, DWORD PTR [r8*4]
	add	eax, edx
	mov	DWORD PTR idx_expected_size$1$[rsp], eax
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 3027
	mov	eax, DWORD PTR [r13+76]
	mov	rsi, QWORD PTR [r13+80]
	mov	r15, QWORD PTR [r13+88]
	mov	DWORD PTR vtx_current_idx$1$[rsp], eax
; Line 3029
	cmp	rbx, rdi
	jae	$LN79@RenderText
	movaps	XMMWORD PTR [rsp+64], xmm15
	mov	r13d, eax
	movaps	XMMWORD PTR [rsp+112], xmm12
	movaps	xmm15, xmm10
	movaps	XMMWORD PTR [rsp+80], xmm14
	npad	8
$LL6@RenderText:
; Line 3031
	cmp	BYTE PTR word_wrap_enabled$1$[rsp], 0
	je	SHORT $LN18@RenderText
; Line 3034
	test	r14, r14
	jne	SHORT $LN17@RenderText
; Line 3036
	movaps	xmm1, xmm15
	movaps	xmm0, xmm11
	subss	xmm1, xmm10
	mov	r9, rdi
	mov	r8, rbx
	mov	rcx, rbp
	subss	xmm0, xmm1
	movaps	xmm1, xmm9
	movss	DWORD PTR [rsp+32], xmm0
	call	?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z ; ImFont::CalcWordWrapPositionA
	mov	r14, rax
; Line 3037
	cmp	rax, rbx
	jne	SHORT $LN17@RenderText
; Line 3038
	inc	r14
$LN17@RenderText:
; Line 3041
	cmp	rbx, r14
	jb	SHORT $LN18@RenderText
; Line 3045
	xor	r14d, r14d
	addss	xmm13, xmm8
	movaps	xmm15, xmm10
; Line 3048
	cmp	rbx, rdi
	jae	$LN83@RenderText
	npad	3
$LL8@RenderText:
; Line 3050
	movzx	eax, BYTE PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 277
	cmp	al, 32					; 00000020H
	je	SHORT $LN46@RenderText
	cmp	al, 9
	jne	SHORT $LN78@RenderText
$LN46@RenderText:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3051
	inc	rbx
	cmp	rbx, rdi
	jb	SHORT $LL8@RenderText
; Line 3048
	jmp	$LN83@RenderText
$LN78@RenderText:
; Line 3051
	cmp	al, 10
	jne	$LN68@RenderText
	inc	rbx
; Line 3053
	jmp	$LN68@RenderText
$LN18@RenderText:
; Line 3058
	movsx	eax, BYTE PTR [rbx]
	mov	DWORD PTR c$1[rsp], eax
; Line 3059
	cmp	eax, 128				; 00000080H
	jae	SHORT $LN23@RenderText
; Line 3061
	inc	rbx
; Line 3062
	jmp	SHORT $LN25@RenderText
$LN23@RenderText:
; Line 3065
	mov	r8, rdi
	lea	rcx, QWORD PTR c$1[rsp]
	mov	rdx, rbx
	call	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z	; ImTextCharFromUtf8
	movsxd	rcx, eax
; Line 3066
	mov	eax, DWORD PTR c$1[rsp]
	add	rbx, rcx
	test	eax, eax
	je	$LN83@RenderText
$LN25@RenderText:
; Line 3070
	cmp	eax, 32					; 00000020H
	jae	SHORT $LN29@RenderText
; Line 3072
	cmp	eax, 10
	jne	SHORT $LN27@RenderText
; Line 3075
	addss	xmm13, xmm8
	movaps	xmm15, xmm10
; Line 3076
	comiss	xmm13, DWORD PTR [r12+12]
	ja	$LN83@RenderText
; Line 3078
	jmp	$LN68@RenderText
$LN27@RenderText:
; Line 3080
	cmp	eax, 13
	je	$LN68@RenderText
$LN29@RenderText:
; Line 2751
	movzx	ecx, ax
	movsxd	rax, DWORD PTR [rbp+24]
	cmp	rcx, rax
	jb	SHORT $LN49@RenderText
; Line 2752
	mov	rax, QWORD PTR [rbp+56]
	jmp	SHORT $LN48@RenderText
$LN49@RenderText:
; Line 2753
	mov	rax, QWORD PTR [rbp+32]
	movzx	edx, WORD PTR [rax+rcx*2]
; Line 2754
	mov	eax, 65535				; 0000ffffH
	cmp	dx, ax
	jne	SHORT $LN50@RenderText
; Line 2755
	mov	rax, QWORD PTR [rbp+56]
	jmp	SHORT $LN48@RenderText
$LN50@RenderText:
; Line 2756
	mov	rax, QWORD PTR [rbp+48]
	lea	rcx, QWORD PTR [rdx+rdx*4]
	lea	rax, QWORD PTR [rax+rcx*8]
$LN48@RenderText:
; Line 3085
	test	rax, rax
	je	$LN68@RenderText
; Line 3089
	cmp	DWORD PTR [rax], 0
	movaps	xmm8, xmm9
	mulss	xmm8, DWORD PTR [rax+4]
	jge	$LN32@RenderText
; Line 3096
	movss	xmm14, DWORD PTR [r12+8]
	movaps	xmm7, xmm9
	mulss	xmm7, DWORD PTR [rax+8]
	movaps	xmm3, xmm9
	mulss	xmm3, DWORD PTR [rax+16]
	movaps	xmm5, xmm9
	mulss	xmm5, DWORD PTR [rax+12]
	addss	xmm7, xmm15
	movaps	xmm4, xmm9
	addss	xmm3, xmm15
	mulss	xmm4, DWORD PTR [rax+20]
	comiss	xmm14, xmm7
	addss	xmm5, xmm13
	addss	xmm4, xmm13
	jb	$LN32@RenderText
	movss	xmm6, DWORD PTR [r12]
	comiss	xmm3, xmm6
	jb	$LN32@RenderText
; Line 3105
	cmp	BYTE PTR cpu_fine_clip$[rsp], 0
	movss	xmm11, DWORD PTR [rax+24]
	movss	xmm12, DWORD PTR [rax+28]
	movss	xmm9, DWORD PTR [rax+32]
	movss	xmm10, DWORD PTR [rax+36]
	je	$LN38@RenderText
; Line 3107
	comiss	xmm6, xmm7
	jbe	SHORT $LN34@RenderText
; Line 3109
	movss	xmm1, DWORD PTR __real@3f800000
	movaps	xmm0, xmm3
	subss	xmm0, xmm7
	movaps	xmm2, xmm3
	subss	xmm2, xmm6
; Line 3110
	movaps	xmm7, xmm6
	divss	xmm2, xmm0
	movaps	xmm0, xmm9
	subss	xmm0, xmm11
	subss	xmm1, xmm2
	mulss	xmm1, xmm0
	addss	xmm11, xmm1
$LN34@RenderText:
; Line 3112
	movss	xmm6, DWORD PTR [r12+4]
	comiss	xmm6, xmm5
	jbe	SHORT $LN35@RenderText
; Line 3114
	movss	xmm1, DWORD PTR __real@3f800000
	movaps	xmm0, xmm4
	subss	xmm0, xmm5
	movaps	xmm2, xmm4
	subss	xmm2, xmm6
; Line 3115
	movaps	xmm5, xmm6
	divss	xmm2, xmm0
	movaps	xmm0, xmm10
	subss	xmm0, xmm12
	subss	xmm1, xmm2
	mulss	xmm1, xmm0
	addss	xmm12, xmm1
$LN35@RenderText:
; Line 3117
	comiss	xmm3, xmm14
	jbe	SHORT $LN36@RenderText
; Line 3119
	movaps	xmm0, xmm9
	subss	xmm3, xmm7
	movaps	xmm1, xmm14
	subss	xmm0, xmm11
	subss	xmm1, xmm7
	divss	xmm1, xmm3
; Line 3120
	movaps	xmm3, xmm14
	movaps	xmm9, xmm1
	mulss	xmm9, xmm0
	addss	xmm9, xmm11
$LN36@RenderText:
; Line 3122
	movss	xmm2, DWORD PTR [r12+12]
	comiss	xmm4, xmm2
	jbe	SHORT $LN37@RenderText
; Line 3124
	movaps	xmm0, xmm10
	subss	xmm4, xmm5
	movaps	xmm1, xmm2
	subss	xmm0, xmm12
	subss	xmm1, xmm5
	divss	xmm1, xmm4
; Line 3125
	movaps	xmm4, xmm2
	movaps	xmm10, xmm1
	mulss	xmm10, xmm0
	addss	xmm10, xmm12
$LN37@RenderText:
; Line 3127
	comiss	xmm5, xmm4
	jae	$LN32@RenderText
$LN38@RenderText:
; Line 3136
	mov	WORD PTR [r15], r13w
	lea	eax, DWORD PTR [r13+1]
	mov	WORD PTR [r15+2], ax
	lea	eax, DWORD PTR [r13+2]
	mov	WORD PTR [r15+4], ax
; Line 3137
	mov	WORD PTR [r15+8], ax
	lea	eax, DWORD PTR [r13+3]
	mov	WORD PTR [r15+10], ax
; Line 3138
	mov	eax, DWORD PTR col$[rsp]
	mov	WORD PTR [r15+6], r13w
; Line 3143
	add	r13d, 4
	mov	DWORD PTR [rsi+16], eax
	mov	DWORD PTR [rsi+36], eax
	mov	DWORD PTR [rsi+56], eax
	mov	DWORD PTR [rsi+76], eax
	movss	DWORD PTR [rsi], xmm7
	movss	DWORD PTR [rsi+4], xmm5
	movss	DWORD PTR [rsi+8], xmm11
	movss	DWORD PTR [rsi+12], xmm12
	movss	DWORD PTR [rsi+20], xmm3
	movss	DWORD PTR [rsi+24], xmm5
	movss	DWORD PTR [rsi+28], xmm9
	movss	DWORD PTR [rsi+32], xmm12
	movss	DWORD PTR [rsi+40], xmm3
	movss	DWORD PTR [rsi+44], xmm4
	movss	DWORD PTR [rsi+48], xmm9
	movss	DWORD PTR [rsi+52], xmm10
	movss	DWORD PTR [rsi+60], xmm7
	movss	DWORD PTR [rsi+64], xmm4
	movss	DWORD PTR [rsi+68], xmm11
	movss	DWORD PTR [rsi+72], xmm10
	add	rsi, 80					; 00000050H
; Line 3144
	add	r15, 12
$LN32@RenderText:
; Line 3029
	addss	xmm15, xmm8
	movss	xmm8, DWORD PTR line_height$1$[rsp]
$LN68@RenderText:
	movss	xmm9, DWORD PTR size$[rsp]
	movss	xmm10, DWORD PTR pos$1$[rsp]
	movss	xmm11, DWORD PTR wrap_width$[rsp]
	cmp	rbx, rdi
	jb	$LL6@RenderText
$LN83@RenderText:
	movaps	xmm15, XMMWORD PTR [rsp+64]
	movaps	xmm14, XMMWORD PTR [rsp+80]
	movaps	xmm12, XMMWORD PTR [rsp+112]
	mov	DWORD PTR vtx_current_idx$1$[rsp], r13d
	mov	r13, QWORD PTR draw_list$[rsp]
$LN79@RenderText:
; Line 3154
	movsxd	rbx, DWORD PTR [r13]
	mov	rcx, rsi
	sub	rcx, QWORD PTR [r13+40]
	mov	rax, 7378697629483820647		; 6666666666666667H
	imul	rcx
	sar	rdx, 3
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	lea	eax, DWORD PTR [rbx-1]
	mov	DWORD PTR [r13+32], edx
	mov	rdx, r15
	sub	rdx, QWORD PTR [r13+24]
	sar	rdx, 1
	mov	DWORD PTR [r13+16], edx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	eax, ebx
	jl	SHORT $LN54@RenderText
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	edx, DWORD PTR [r13+16]
$LN54@RenderText:
	mov	rax, QWORD PTR [r13+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3154
	sub	edx, DWORD PTR idx_expected_size$1$[rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	imul	rcx, rbx, 56				; 00000038H
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 3154
	add	DWORD PTR [rcx+rax-56], edx
; Line 3157
	mov	eax, DWORD PTR vtx_current_idx$1$[rsp]
	mov	QWORD PTR [r13+80], rsi
	mov	rsi, QWORD PTR [rsp+248]
	mov	QWORD PTR [r13+88], r15
	mov	r15, QWORD PTR [rsp+232]
	mov	DWORD PTR [r13+76], eax
$LN88@RenderText:
	movaps	xmm11, XMMWORD PTR [rsp+128]
	movaps	xmm8, XMMWORD PTR [rsp+176]
	movaps	xmm6, XMMWORD PTR [rsp+208]
	mov	r14, QWORD PTR [rsp+240]
	movaps	xmm13, XMMWORD PTR [rsp+96]
$LN1@RenderText:
; Line 3158
	lea	r11, QWORD PTR [rsp+256]
	movaps	xmm7, XMMWORD PTR [r11-64]
	movaps	xmm9, XMMWORD PTR [r11-96]
	movaps	xmm10, XMMWORD PTR [r11-112]
	mov	rsp, r11
	pop	r13
	pop	r12
	pop	rdi
	pop	rbp
	pop	rbx
	ret	0
?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z ENDP ; ImFont::RenderText
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z
_TEXT	SEGMENT
pos$ = 32
this$ = 128
draw_list$ = 136
size$ = 144
col$ = 160
c$ = 168
?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z PROC ; ImFont::RenderChar, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2963
$LN30:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	r8, rcx
	movaps	XMMWORD PTR [rsp+48], xmm9
; Line 2751
	movzx	ecx, WORD PTR c$[rsp]
; Line 2963
	movaps	xmm9, xmm2
	mov	rdi, rdx
	mov	QWORD PTR pos$[rsp], r9
; Line 2751
	movsxd	rax, DWORD PTR [r8+24]
	cmp	rcx, rax
	jb	SHORT $LN8@RenderChar
; Line 2752
	mov	rbx, QWORD PTR [r8+56]
	jmp	SHORT $LN7@RenderChar
$LN8@RenderChar:
; Line 2753
	mov	rax, QWORD PTR [r8+32]
	movzx	ecx, WORD PTR [rax+rcx*2]
; Line 2754
	mov	eax, 65535				; 0000ffffH
	cmp	cx, ax
	jne	SHORT $LN9@RenderChar
; Line 2755
	mov	rbx, QWORD PTR [r8+56]
	jmp	SHORT $LN7@RenderChar
$LN9@RenderChar:
; Line 2756
	mov	rax, QWORD PTR [r8+48]
	lea	rcx, QWORD PTR [rcx+rcx*4]
	lea	rbx, QWORD PTR [rax+rcx*8]
$LN7@RenderChar:
; Line 2965
	test	rbx, rbx
	je	$LN3@RenderChar
	cmp	DWORD PTR [rbx], 0
	jge	$LN3@RenderChar
; Line 2967
	movaps	XMMWORD PTR [rsp+96], xmm6
	xorps	xmm0, xmm0
	comiss	xmm9, xmm0
	movaps	XMMWORD PTR [rsp+80], xmm7
	movaps	XMMWORD PTR [rsp+64], xmm8
	jb	SHORT $LN5@RenderChar
	divss	xmm9, DWORD PTR [r8+20]
	jmp	SHORT $LN6@RenderChar
$LN5@RenderChar:
	movss	xmm9, DWORD PTR __real@3f800000
$LN6@RenderChar:
; Line 2968
	movss	xmm0, DWORD PTR pos$[rsp]
; Line 2970
	mov	edx, 6
	addss	xmm0, DWORD PTR [r8+64]
	movss	xmm1, DWORD PTR pos$[rsp+4]
	mov	rcx, rdi
	addss	xmm1, DWORD PTR [r8+68]
	lea	r8d, QWORD PTR [rdx-2]
	cvttss2si eax, xmm0
	movd	xmm6, eax
	cvttss2si eax, xmm1
	cvtdq2ps xmm6, xmm6
	movd	xmm7, eax
	cvtdq2ps xmm7, xmm7
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 592
	movzx	edx, WORD PTR [rdi+76]
; Line 593
	mov	rax, QWORD PTR [rdi+88]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm4, DWORD PTR [rbx+32]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2971
	movaps	xmm1, xmm9
	mulss	xmm1, DWORD PTR [rbx+16]
; Line 593
	lea	ecx, DWORD PTR [rdx+1]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm8, DWORD PTR [rbx+36]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2971
	movaps	xmm3, xmm9
	mulss	xmm3, DWORD PTR [rbx+20]
	movaps	xmm2, xmm9
	mulss	xmm2, DWORD PTR [rbx+8]
	addss	xmm1, xmm6
	mulss	xmm9, DWORD PTR [rbx+12]
	addss	xmm3, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm5, DWORD PTR [rbx+24]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2971
	addss	xmm2, xmm6
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm0, DWORD PTR [rbx+28]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 593
	mov	WORD PTR [rax], dx
; Line 2971
	addss	xmm9, xmm7
; Line 593
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+2], cx
	lea	ecx, DWORD PTR [rdx+2]
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+4], cx
; Line 594
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+6], dx
	add	dx, 3
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+8], cx
	mov	rax, QWORD PTR [rdi+88]
; Line 595
	mov	ecx, DWORD PTR col$[rsp]
	mov	WORD PTR [rax+10], dx
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax], xmm2
	movss	DWORD PTR [rax+4], xmm9
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+8], xmm5
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+16], ecx
; Line 596
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+20], xmm1
	movss	DWORD PTR [rax+24], xmm9
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+28], xmm4
	movss	DWORD PTR [rax+32], xmm0
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+36], ecx
; Line 597
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+40], xmm1
	movss	DWORD PTR [rax+44], xmm3
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+48], xmm4
	movss	DWORD PTR [rax+52], xmm8
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+56], ecx
; Line 598
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+60], xmm2
	movss	DWORD PTR [rax+64], xmm3
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+68], xmm5
	movss	DWORD PTR [rax+72], xmm8
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+76], ecx
; Line 599
	add	QWORD PTR [rdi+80], 80			; 00000050H
; Line 600
	add	DWORD PTR [rdi+76], 4
; Line 601
	add	QWORD PTR [rdi+88], 12
	movaps	xmm8, XMMWORD PTR [rsp+64]
	movaps	xmm7, XMMWORD PTR [rsp+80]
	movaps	xmm6, XMMWORD PTR [rsp+96]
$LN3@RenderChar:
; Line 2972
	mov	rbx, QWORD PTR [rsp+128]
	movaps	xmm9, XMMWORD PTR [rsp+48]
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z ENDP ; ImFont::RenderChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z
_TEXT	SEGMENT
this$ = 128
scale$ = 136
text$ = 144
text_end$ = 152
c$1 = 160
wrap_width$ = 160
?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z PROC	; ImFont::CalcWordWrapPositionA, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2770
$LN44:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rbp
	mov	QWORD PTR [rax+32], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 96					; 00000060H
	movaps	XMMWORD PTR [rax-40], xmm6
; Line 2792
	xor	ebp, ebp
	movaps	XMMWORD PTR [rax-56], xmm7
	mov	r15, r9
	movaps	XMMWORD PTR [rax-72], xmm8
	mov	rsi, r8
	movaps	XMMWORD PTR [rax-88], xmm9
	mov	r14, rcx
	movss	xmm9, DWORD PTR wrap_width$[rsp]
	xorps	xmm8, xmm8
	xorps	xmm7, xmm7
	xorps	xmm6, xmm6
; Line 2793
	mov	bl, 1
; Line 2795
	mov	rdi, r8
	divss	xmm9, xmm1
; Line 2796
	cmp	r8, r9
	jae	$LN38@CalcWordWr
	mov	QWORD PTR [rax+8], r12
	mov	r12, -8646823297851326464		; 8800500600000000H
	npad	6
$LL2@CalcWordWr:
; Line 2798
	movsx	edx, BYTE PTR [rdi]
	mov	DWORD PTR c$1[rsp], edx
	cmp	edx, 128				; 00000080H
; Line 2800
	jae	SHORT $LN4@CalcWordWr
; Line 2801
	mov	eax, 1
	jmp	SHORT $LN5@CalcWordWr
$LN4@CalcWordWr:
; Line 2803
	mov	r8, r15
	lea	rcx, QWORD PTR c$1[rsp]
	mov	rdx, rdi
	call	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z	; ImTextCharFromUtf8
	mov	edx, DWORD PTR c$1[rsp]
	cdqe
$LN5@CalcWordWr:
; Line 2804
	lea	r8, QWORD PTR [rax+rdi]
	test	edx, edx
	je	$LN39@CalcWordWr
; Line 2807
	cmp	edx, 32					; 00000020H
	jae	SHORT $LN9@CalcWordWr
; Line 2809
	cmp	edx, 10
	jne	SHORT $LN8@CalcWordWr
; Line 2812
	xorps	xmm6, xmm6
	xorps	xmm7, xmm7
	xorps	xmm8, xmm8
	mov	bl, 1
; Line 2814
	jmp	$LN31@CalcWordWr
$LN8@CalcWordWr:
; Line 2816
	cmp	edx, 13
	je	$LN31@CalcWordWr
$LN9@CalcWordWr:
; Line 2823
	cmp	edx, DWORD PTR [r14]
	jge	SHORT $LN18@CalcWordWr
	mov	rax, QWORD PTR [r14+8]
	mov	ecx, edx
	movss	xmm0, DWORD PTR [rax+rcx*4]
	jmp	SHORT $LN19@CalcWordWr
$LN18@CalcWordWr:
	movss	xmm0, DWORD PTR [r14+16]
$LN19@CalcWordWr:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 278
	cmp	edx, 32					; 00000020H
	je	SHORT $LN24@CalcWordWr
	cmp	edx, 9
	je	SHORT $LN24@CalcWordWr
	cmp	edx, 12288				; 00003000H
	je	SHORT $LN24@CalcWordWr
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2838
	addss	xmm7, xmm0
	test	bl, bl
	jne	SHORT $LN41@CalcWordWr
; Line 2845
	addss	xmm6, xmm7
	xorps	xmm7, xmm7
	addss	xmm8, xmm6
	xorps	xmm6, xmm6
$LN41@CalcWordWr:
; Line 2850
	cmove	rbp, rsi
	mov	rax, r8
	test	bl, bl
	cmove	rax, rsi
	mov	rsi, rax
	cmp	edx, 63					; 0000003fH
	ja	SHORT $LN35@CalcWordWr
	bt	r12, rdx
	jb	SHORT $LN42@CalcWordWr
$LN35@CalcWordWr:
	mov	bl, 1
	jmp	SHORT $LN21@CalcWordWr
$LN24@CalcWordWr:
; Line 2826
	test	bl, bl
	je	SHORT $LN12@CalcWordWr
; Line 2828
	addss	xmm8, xmm6
	xorps	xmm6, xmm6
$LN12@CalcWordWr:
; Line 2832
	test	bl, bl
	addss	xmm6, xmm0
	mov	rax, rdi
	cmove	rax, rsi
	mov	rsi, rax
$LN42@CalcWordWr:
; Line 2854
	xor	bl, bl
$LN21@CalcWordWr:
	movaps	xmm0, xmm7
	addss	xmm0, xmm8
	comiss	xmm0, xmm9
	ja	SHORT $LN30@CalcWordWr
$LN31@CalcWordWr:
; Line 2796
	mov	rdi, r8
	cmp	r8, r15
	jb	$LL2@CalcWordWr
; Line 2865
	mov	rax, r8
$LN40@CalcWordWr:
	mov	r12, QWORD PTR [rsp+128]
$LN16@CalcWordWr:
; Line 2866
	movaps	xmm6, XMMWORD PTR [rsp+80]
	lea	r11, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [r11+40]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm7, XMMWORD PTR [rsp+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
$LN30@CalcWordWr:
; Line 2857
	comiss	xmm9, xmm7
	jbe	SHORT $LN39@CalcWordWr
; Line 2858
	test	rbp, rbp
	cmovne	rsi, rbp
; Line 2865
	mov	rax, rsi
	jmp	SHORT $LN40@CalcWordWr
$LN39@CalcWordWr:
	mov	rax, rdi
	jmp	SHORT $LN40@CalcWordWr
$LN38@CalcWordWr:
	mov	rax, r8
	jmp	SHORT $LN16@CalcWordWr
?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z ENDP	; ImFont::CalcWordWrapPositionA
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z
_TEXT	SEGMENT
this$ = 176
__$ReturnUdt$ = 184
size$ = 192
max_width$ = 200
c$1 = 208
wrap_width$ = 208
text_begin$ = 216
text_end$ = 224
remaining$ = 232
?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z PROC ; ImFont::CalcTextSizeA, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2869
$LN62:
	mov	rax, rsp
	push	rbx
	push	rsi
	sub	rsp, 152				; 00000098H
; Line 2870
	mov	rbx, QWORD PTR text_begin$[rsp]
	mov	rsi, rdx
	mov	QWORD PTR [rax+8], rbp
	mov	QWORD PTR [rax+16], rdi
	mov	rdi, QWORD PTR text_end$[rsp]
	mov	QWORD PTR [rax+24], r12
	mov	QWORD PTR [rax-24], r15
	mov	r15, rcx
	movaps	XMMWORD PTR [rax-40], xmm6
	movaps	XMMWORD PTR [rax-56], xmm7
	movaps	xmm7, xmm2
	movaps	XMMWORD PTR [rax-72], xmm8
	movaps	XMMWORD PTR [rax-88], xmm9
	movaps	XMMWORD PTR [rax-104], xmm10
	movaps	XMMWORD PTR [rax-120], xmm11
	movaps	xmm11, xmm3
	test	rdi, rdi
	jne	SHORT $LN6@CalcTextSi
; Line 2871
	mov	rdi, -1
$LL58@CalcTextSi:
	inc	rdi
	cmp	BYTE PTR [rbx+rdi], 0
	jne	SHORT $LL58@CalcTextSi
	add	rdi, rbx
$LN6@CalcTextSi:
; Line 2879
	movss	xmm10, DWORD PTR wrap_width$[rsp]
	xorps	xmm8, xmm8
	comiss	xmm10, xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	mov	QWORD PTR [rdx], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2874
	movaps	xmm9, xmm7
	xorps	xmm6, xmm6
	divss	xmm9, DWORD PTR [rcx+20]
; Line 2879
	seta	r12b
; Line 2880
	xor	ebp, ebp
; Line 2883
	cmp	rbx, rdi
	jae	$LN3@CalcTextSi
	mov	QWORD PTR [rsp+200], r14
	npad	6
$LL2@CalcTextSi:
; Line 2885
	test	r12b, r12b
	je	SHORT $LN10@CalcTextSi
; Line 2888
	test	rbp, rbp
	jne	SHORT $LN9@CalcTextSi
; Line 2890
	movaps	xmm0, xmm10
	mov	r9, rdi
	subss	xmm0, xmm6
	mov	r8, rbx
	movaps	xmm1, xmm9
	mov	rcx, r15
	movss	DWORD PTR [rsp+32], xmm0
	call	?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z ; ImFont::CalcWordWrapPositionA
	mov	rbp, rax
; Line 2891
	cmp	rax, rbx
	jne	SHORT $LN9@CalcTextSi
; Line 2892
	inc	rbp
$LN9@CalcTextSi:
; Line 2895
	cmp	rbx, rbp
	jb	SHORT $LN10@CalcTextSi
; Line 2897
	comiss	xmm6, DWORD PTR [rsi]
	jbe	SHORT $LN11@CalcTextSi
; Line 2898
	movss	DWORD PTR [rsi], xmm6
$LN11@CalcTextSi:
; Line 2899
	movaps	xmm0, xmm7
; Line 2900
	movaps	xmm6, xmm8
	addss	xmm0, DWORD PTR [rsi+4]
; Line 2901
	xor	ebp, ebp
	movss	DWORD PTR [rsi+4], xmm0
$LL4@CalcTextSi:
; Line 2906
	movzx	eax, BYTE PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 277
	cmp	al, 32					; 00000020H
	je	SHORT $LN34@CalcTextSi
	cmp	al, 9
	jne	SHORT $LN56@CalcTextSi
$LN34@CalcTextSi:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2907
	inc	rbx
	cmp	rbx, rdi
	jb	SHORT $LL4@CalcTextSi
; Line 2904
	jmp	$LN60@CalcTextSi
$LN56@CalcTextSi:
; Line 2907
	cmp	al, 10
	jne	$LN47@CalcTextSi
	inc	rbx
; Line 2909
	jmp	$LN47@CalcTextSi
$LN10@CalcTextSi:
; Line 2915
	movsx	eax, BYTE PTR [rbx]
	mov	r14, rbx
	mov	DWORD PTR c$1[rsp], eax
	cmp	eax, 128				; 00000080H
; Line 2916
	jae	SHORT $LN16@CalcTextSi
; Line 2918
	inc	rbx
; Line 2919
	jmp	SHORT $LN18@CalcTextSi
$LN16@CalcTextSi:
; Line 2922
	mov	r8, rdi
	lea	rcx, QWORD PTR c$1[rsp]
	mov	rdx, rbx
	call	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z	; ImTextCharFromUtf8
	movsxd	rcx, eax
; Line 2923
	mov	eax, DWORD PTR c$1[rsp]
	add	rbx, rcx
	test	eax, eax
	je	SHORT $LN60@CalcTextSi
$LN18@CalcTextSi:
; Line 2927
	cmp	eax, 32					; 00000020H
	jae	SHORT $LN21@CalcTextSi
; Line 2929
	cmp	eax, 10
	jne	SHORT $LN20@CalcTextSi
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	movss	xmm0, DWORD PTR [rsi]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2932
	movaps	xmm1, xmm7
	addss	xmm1, DWORD PTR [rsi+4]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	maxss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2933
	movaps	xmm6, xmm8
	movss	DWORD PTR [rsi+4], xmm1
	movss	DWORD PTR [rsi], xmm0
; Line 2934
	jmp	SHORT $LN47@CalcTextSi
$LN20@CalcTextSi:
; Line 2936
	cmp	eax, 13
	je	SHORT $LN47@CalcTextSi
$LN21@CalcTextSi:
; Line 2940
	cmp	eax, DWORD PTR [r15]
	jge	SHORT $LN28@CalcTextSi
	mov	ecx, eax
	mov	rax, QWORD PTR [r15+8]
	movss	xmm0, DWORD PTR [rax+rcx*4]
	jmp	SHORT $LN29@CalcTextSi
$LN28@CalcTextSi:
	movss	xmm0, DWORD PTR [r15+16]
$LN29@CalcTextSi:
	mulss	xmm0, xmm9
; Line 2941
	addss	xmm0, xmm6
	comiss	xmm0, xmm11
	jae	SHORT $LN46@CalcTextSi
; Line 2947
	movaps	xmm6, xmm0
$LN47@CalcTextSi:
; Line 2883
	cmp	rbx, rdi
	jb	$LL2@CalcTextSi
; Line 2941
	jmp	SHORT $LN60@CalcTextSi
$LN46@CalcTextSi:
; Line 2943
	mov	rbx, r14
$LN60@CalcTextSi:
	mov	r14, QWORD PTR [rsp+200]
$LN3@CalcTextSi:
; Line 2950
	comiss	xmm6, DWORD PTR [rsi]
	mov	r15, QWORD PTR [rsp+144]
	mov	r12, QWORD PTR [rsp+192]
	mov	rdi, QWORD PTR [rsp+184]
	mov	rbp, QWORD PTR [rsp+176]
	movaps	xmm11, XMMWORD PTR [rsp+48]
	movaps	xmm10, XMMWORD PTR [rsp+64]
	movaps	xmm9, XMMWORD PTR [rsp+80]
	jbe	SHORT $LN23@CalcTextSi
; Line 2951
	movss	DWORD PTR [rsi], xmm6
$LN23@CalcTextSi:
; Line 2953
	comiss	xmm6, xmm8
	movaps	xmm6, XMMWORD PTR [rsp+128]
	ja	SHORT $LN57@CalcTextSi
	movss	xmm0, DWORD PTR [rsi+4]
	ucomiss	xmm0, xmm8
	jp	SHORT $LN24@CalcTextSi
	jne	SHORT $LN24@CalcTextSi
$LN57@CalcTextSi:
; Line 2954
	addss	xmm7, DWORD PTR [rsi+4]
	movss	DWORD PTR [rsi+4], xmm7
$LN24@CalcTextSi:
; Line 2956
	mov	rax, QWORD PTR remaining$[rsp]
	movaps	xmm8, XMMWORD PTR [rsp+96]
	movaps	xmm7, XMMWORD PTR [rsp+112]
	test	rax, rax
	je	SHORT $LN59@CalcTextSi
; Line 2957
	mov	QWORD PTR [rax], rbx
$LN59@CalcTextSi:
; Line 2960
	mov	rax, rsi
	add	rsp, 152				; 00000098H
	pop	rsi
	pop	rbx
	ret	0
?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z ENDP ; ImFont::CalcTextSizeA
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?IsLoaded@ImFont@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?IsLoaded@ImFont@@QEBA_NXZ PROC				; ImFont::IsLoaded, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2311
	cmp	QWORD PTR [rcx+72], 0
	setne	al
	ret	0
?IsLoaded@ImFont@@QEBA_NXZ ENDP				; ImFont::IsLoaded
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?FindGlyphNoFallback@ImFont@@QEBAPEBUImFontGlyph@@G@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
?FindGlyphNoFallback@ImFont@@QEBAPEBUImFontGlyph@@G@Z PROC ; ImFont::FindGlyphNoFallback, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2761
	movsxd	rax, DWORD PTR [rcx+24]
	movzx	r8d, dx
	cmp	r8, rax
	jae	SHORT $LN5@FindGlyphN
; Line 2763
	mov	rax, QWORD PTR [rcx+32]
	movzx	edx, WORD PTR [rax+r8*2]
; Line 2764
	mov	eax, 65535				; 0000ffffH
	cmp	dx, ax
	je	SHORT $LN5@FindGlyphN
; Line 2766
	mov	rax, QWORD PTR [rcx+48]
	lea	rdx, QWORD PTR [rdx+rdx*4]
	lea	rax, QWORD PTR [rax+rdx*8]
; Line 2767
	ret	0
$LN5@FindGlyphN:
; Line 2765
	xor	eax, eax
; Line 2767
	ret	0
?FindGlyphNoFallback@ImFont@@QEBAPEBUImFontGlyph@@G@Z ENDP ; ImFont::FindGlyphNoFallback
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?FindGlyph@ImFont@@QEBAPEBUImFontGlyph@@G@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
?FindGlyph@ImFont@@QEBAPEBUImFontGlyph@@G@Z PROC	; ImFont::FindGlyph, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2751
	movsxd	rax, DWORD PTR [rcx+24]
	movzx	r8d, dx
	cmp	r8, rax
	jae	SHORT $LN5@FindGlyph
; Line 2753
	mov	rax, QWORD PTR [rcx+32]
	movzx	edx, WORD PTR [rax+r8*2]
; Line 2754
	mov	eax, 65535				; 0000ffffH
	cmp	dx, ax
	je	SHORT $LN5@FindGlyph
; Line 2756
	mov	rax, QWORD PTR [rcx+48]
	lea	rdx, QWORD PTR [rdx+rdx*4]
	lea	rax, QWORD PTR [rax+rdx*8]
; Line 2757
	ret	0
$LN5@FindGlyph:
; Line 2755
	mov	rax, QWORD PTR [rcx+56]
; Line 2757
	ret	0
?FindGlyph@ImFont@@QEBAPEBUImFontGlyph@@G@Z ENDP	; ImFont::FindGlyph
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1ImFont@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ImFont@@QEAA@XZ PROC					; ImFont::~ImFont, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2606
$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 2607
	call	?ClearOutputData@ImFont@@QEAAXXZ	; ImFont::ClearOutputData
	npad	1
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	mov	rcx, QWORD PTR [rbx+48]
	test	rcx, rcx
	je	SHORT $LN4@ImFont
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN4@ImFont:
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN8@ImFont
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN8@ImFont:
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN15@ImFont
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN15@ImFont:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2608
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1ImFont@@QEAA@XZ ENDP					; ImFont::~ImFont
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImFont@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImFont@@QEAA@XZ PROC					; ImFont::ImFont, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	edx, edx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2602
	xor	eax, eax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+24], rdx
	mov	QWORD PTR [rcx+32], rdx
	mov	QWORD PTR [rcx+40], rdx
	mov	QWORD PTR [rcx+48], rdx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2590
	mov	QWORD PTR [rcx+16], rdx
; Line 2591
	mov	DWORD PTR [rcx+90], -65473		; ffff003fH
; Line 2593
	mov	QWORD PTR [rcx+64], rdx
; Line 2594
	mov	QWORD PTR [rcx+56], rdx
; Line 2595
	mov	QWORD PTR [rcx+72], rdx
; Line 2596
	mov	QWORD PTR [rcx+80], rdx
; Line 2597
	mov	WORD PTR [rcx+88], dx
; Line 2598
	mov	BYTE PTR [rcx+94], dl
; Line 2599
	mov	QWORD PTR [rcx+96], 1065353216		; 3f800000H
; Line 2600
	mov	QWORD PTR [rcx+104], rdx
; Line 2602
	mov	WORD PTR [rcx+112], ax
; Line 2603
	mov	rax, rcx
	ret	0
??0ImFont@@QEAA@XZ ENDP					; ImFont::ImFont
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z PROC	; ImVector<ImFontGlyph>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	lea	rcx, QWORD PTR [rdi+rdi*4]
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	rcx, DWORD PTR [rbx]
	lea	r8, QWORD PTR [rcx+rcx*4]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImFontGlyph@@@@QEAAXH@Z ENDP	; ImVector<ImFontGlyph>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z PROC	; ImVector<ImFontGlyph>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rax, esi
	mov	QWORD PTR [rsp+48], rbp
	lea	rcx, QWORD PTR [rax+rax*4]
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	rcx, DWORD PTR [rbx]
	lea	r8, QWORD PTR [rcx+rcx*4]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@UImFontGlyph@@@@QEAAXH@Z ENDP	; ImVector<ImFontGlyph>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImFontGlyph@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImFontGlyph@@@@QEBAHH@Z PROC ; ImVector<ImFontGlyph>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImFontGlyph@@@@QEBAHH@Z ENDP ; ImVector<ImFontGlyph>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?back@?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@XZ
_TEXT	SEGMENT
this$ = 48
?back@?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@XZ PROC ; ImVector<ImFontGlyph>::back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN3@back
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx]
$LN3@back:
	dec	eax
	movsxd	rcx, eax
	mov	rax, QWORD PTR [rbx+8]
	lea	rdx, QWORD PTR [rcx+rcx*4]
	lea	rax, QWORD PTR [rax+rdx*8]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?back@?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@XZ ENDP ; ImVector<ImFontGlyph>::back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@UImFontGlyph@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@UImFontGlyph@@@@QEAAXXZ PROC		; ImVector<ImFontGlyph>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@UImFontGlyph@@@@QEAAXXZ ENDP		; ImVector<ImFontGlyph>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@H@Z PROC ; ImVector<ImFontGlyph>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rdx, QWORD PTR [rbx+rbx*4]
	mov	rbx, QWORD PTR [rsp+48]
	lea	rax, QWORD PTR [rax+rdx*8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UImFontGlyph@@@@QEAAAEAUImFontGlyph@@H@Z ENDP ; ImVector<ImFontGlyph>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImFontGlyph@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImFontGlyph@@@@QEAA@XZ PROC		; ImVector<ImFontGlyph>::~ImVector<ImFontGlyph>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImFontGlyph@@@@QEAA@XZ ENDP		; ImVector<ImFontGlyph>::~ImVector<ImFontGlyph>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImFontGlyph@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImFontGlyph@@@@QEAA@XZ PROC		; ImVector<ImFontGlyph>::ImVector<ImFontGlyph>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImFontGlyph@@@@QEAA@XZ ENDP		; ImVector<ImFontGlyph>::ImVector<ImFontGlyph>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@M@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@M@@QEAAXH@Z PROC			; ImVector<float>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@M@@QEAAXH@Z ENDP			; ImVector<float>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@M@@QEAAXHAEBM@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
v$ = 64
?resize@?$ImVector@M@@QEAAXHAEBM@Z PROC			; ImVector<float>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1342
$LN24:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	mov	ecx, DWORD PTR [rcx+4]
	mov	r14, r8
	cmp	edi, ecx
	jle	SHORT $LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN10@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN11@resize
$LN10@resize:
	mov	eax, 8
$LN11@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN22@resize
	movsxd	rcx, esi
	shl	rcx, 2
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN14@resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN14@resize:
	mov	QWORD PTR [rbx+8], rbp
	mov	rbp, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], esi
$LN22@resize:
	mov	rsi, QWORD PTR [rsp+56]
$LN12@resize:
; Line 1342
	movsxd	rax, DWORD PTR [rbx]
	cmp	edi, eax
	jle	SHORT $LN20@resize
	mov	rdx, rax
	cmp	rax, rdi
	jge	SHORT $LN20@resize
	npad	7
$LL4@resize:
	mov	rcx, QWORD PTR [rbx+8]
	mov	eax, DWORD PTR [r14]
	mov	DWORD PTR [rcx+rdx*4], eax
	inc	rdx
	cmp	rdx, rdi
	jl	SHORT $LL4@resize
$LN20@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?resize@?$ImVector@M@@QEAAXHAEBM@Z ENDP			; ImVector<float>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@M@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@M@@QEBAHH@Z PROC		; ImVector<float>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@M@@QEBAHH@Z ENDP		; ImVector<float>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@M@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@M@@QEAAXXZ PROC			; ImVector<float>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@M@@QEAAXXZ ENDP			; ImVector<float>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@M@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@M@@QEAAAEAMH@Z PROC			; ImVector<float>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rax, QWORD PTR [rax+rbx*4]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@M@@QEAAAEAMH@Z ENDP			; ImVector<float>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@M@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@M@@QEAA@XZ PROC				; ImVector<float>::~ImVector<float>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@M@@QEAA@XZ ENDP				; ImVector<float>::~ImVector<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@M@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@M@@QEAA@XZ PROC				; ImVector<float>::ImVector<float>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@M@@QEAA@XZ ENDP				; ImVector<float>::ImVector<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z PROC ; ImVector<ImFontConfig>::push_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
$LN14:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, rdx
	mov	ecx, DWORD PTR [rcx]
	mov	r8d, DWORD PTR [rbx+4]
	cmp	ecx, r8d
	jne	SHORT $LN8@push_back
	mov	QWORD PTR [rsp+56], rdi
	lea	edi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN6@push_back
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN7@push_back
$LN6@push_back:
	mov	eax, 8
$LN7@push_back:
	cmp	eax, edi
	cmovg	edi, eax
; Line 1344
	cmp	edi, r8d
	jle	SHORT $LN12@push_back
	movsxd	rax, edi
	imul	rcx, rax, 136				; 00000088H
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@push_back
	movsxd	rcx, DWORD PTR [rbx]
	imul	r8, rcx, 136				; 00000088H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@push_back:
	mov	ecx, DWORD PTR [rbx]
	mov	QWORD PTR [rbx+8], rbp
	mov	rbp, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN12@push_back:
	mov	rdi, QWORD PTR [rsp+56]
$LN8@push_back:
; Line 1347
	movups	xmm0, XMMWORD PTR [rsi]
	movsxd	rax, ecx
	imul	rcx, rax, 136				; 00000088H
	mov	rax, QWORD PTR [rbx+8]
	movups	XMMWORD PTR [rcx+rax], xmm0
	movups	xmm1, XMMWORD PTR [rsi+16]
	movups	XMMWORD PTR [rcx+rax+16], xmm1
	movups	xmm0, XMMWORD PTR [rsi+32]
	movups	XMMWORD PTR [rcx+rax+32], xmm0
	movups	xmm1, XMMWORD PTR [rsi+48]
	movups	XMMWORD PTR [rcx+rax+48], xmm1
	movups	xmm0, XMMWORD PTR [rsi+64]
	movups	XMMWORD PTR [rcx+rax+64], xmm0
	movups	xmm1, XMMWORD PTR [rsi+80]
	movups	XMMWORD PTR [rcx+rax+80], xmm1
	movups	xmm0, XMMWORD PTR [rsi+96]
	movups	XMMWORD PTR [rcx+rax+96], xmm0
	movups	xmm1, XMMWORD PTR [rsi+112]
	movups	XMMWORD PTR [rcx+rax+112], xmm1
	movsd	xmm0, QWORD PTR [rsi+128]
	movsd	QWORD PTR [rcx+rax+128], xmm0
	inc	DWORD PTR [rbx]
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?push_back@?$ImVector@UImFontConfig@@@@QEAAXAEBUImFontConfig@@@Z ENDP ; ImVector<ImFontConfig>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z PROC	; ImVector<ImFontConfig>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	imul	rcx, rdi, 136				; 00000088H
	mov	QWORD PTR [rsp+48], rsi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	rcx, DWORD PTR [rbx]
	imul	r8, rcx, 136				; 00000088H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImFontConfig@@@@QEAAXH@Z ENDP	; ImVector<ImFontConfig>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImFontConfig@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImFontConfig@@@@QEBAHH@Z PROC ; ImVector<ImFontConfig>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImFontConfig@@@@QEBAHH@Z ENDP ; ImVector<ImFontConfig>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?back@?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@XZ
_TEXT	SEGMENT
this$ = 48
?back@?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@XZ PROC ; ImVector<ImFontConfig>::back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN3@back
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx]
$LN3@back:
	dec	eax
	movsxd	rcx, eax
	imul	rax, rcx, 136				; 00000088H
	add	rax, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?back@?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@XZ ENDP ; ImVector<ImFontConfig>::back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@UImFontConfig@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@UImFontConfig@@@@QEAAXXZ PROC		; ImVector<ImFontConfig>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@UImFontConfig@@@@QEAAXXZ ENDP		; ImVector<ImFontConfig>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@H@Z PROC ; ImVector<ImFontConfig>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	imul	rax, rbx, 136				; 00000088H
	mov	rbx, QWORD PTR [rsp+48]
	add	rax, QWORD PTR [rdi+8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UImFontConfig@@@@QEAAAEAUImFontConfig@@H@Z ENDP ; ImVector<ImFontConfig>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?empty@?$ImVector@UImFontConfig@@@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$ImVector@UImFontConfig@@@@QEBA_NXZ PROC	; ImVector<ImFontConfig>::empty, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	cmp	DWORD PTR [rcx], 0
	sete	al
	ret	0
?empty@?$ImVector@UImFontConfig@@@@QEBA_NXZ ENDP	; ImVector<ImFontConfig>::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImFontConfig@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImFontConfig@@@@QEAA@XZ PROC		; ImVector<ImFontConfig>::~ImVector<ImFontConfig>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImFontConfig@@@@QEAA@XZ ENDP		; ImVector<ImFontConfig>::~ImVector<ImFontConfig>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImFontConfig@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImFontConfig@@@@QEAA@XZ PROC		; ImVector<ImFontConfig>::ImVector<ImFontConfig>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImFontConfig@@@@QEAA@XZ ENDP		; ImVector<ImFontConfig>::ImVector<ImFontConfig>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z PROC ; ImVector<ImFontAtlasCustomRect>::push_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
$LN14:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rbp, rdx
	mov	ecx, DWORD PTR [rcx]
	mov	r8d, DWORD PTR [rbx+4]
	cmp	ecx, r8d
	jne	SHORT $LN8@push_back
	mov	QWORD PTR [rsp+56], rdi
	lea	edi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN6@push_back
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN7@push_back
$LN6@push_back:
	mov	eax, 8
$LN7@push_back:
	cmp	eax, edi
	cmovg	edi, eax
; Line 1344
	cmp	edi, r8d
	jle	SHORT $LN12@push_back
	movsxd	rcx, edi
	shl	rcx, 5
	mov	QWORD PTR [rsp+48], rsi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN10@push_back
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 5
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@push_back:
	mov	ecx, DWORD PTR [rbx]
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN12@push_back:
	mov	rdi, QWORD PTR [rsp+56]
$LN8@push_back:
; Line 1347
	mov	rax, QWORD PTR [rbx+8]
	movups	xmm0, XMMWORD PTR [rbp]
	movsxd	rcx, ecx
	shl	rcx, 5
	movups	XMMWORD PTR [rcx+rax], xmm0
	movups	xmm1, XMMWORD PTR [rbp+16]
	movups	XMMWORD PTR [rcx+rax+16], xmm1
	inc	DWORD PTR [rbx]
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z ENDP ; ImVector<ImFontAtlasCustomRect>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z PROC ; ImVector<ImFontAtlasCustomRect>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 5
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 5
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXH@Z ENDP ; ImVector<ImFontAtlasCustomRect>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImFontAtlasCustomRect@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImFontAtlasCustomRect@@@@QEBAHH@Z PROC ; ImVector<ImFontAtlasCustomRect>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImFontAtlasCustomRect@@@@QEBAHH@Z ENDP ; ImVector<ImFontAtlasCustomRect>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXXZ PROC ; ImVector<ImFontAtlasCustomRect>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXXZ ENDP ; ImVector<ImFontAtlasCustomRect>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UImFontAtlasCustomRect@@@@QEAAAEAUImFontAtlasCustomRect@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UImFontAtlasCustomRect@@@@QEAAAEAUImFontAtlasCustomRect@@H@Z PROC ; ImVector<ImFontAtlasCustomRect>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	shl	rax, 5
	add	rax, QWORD PTR [rdi+8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UImFontAtlasCustomRect@@@@QEAAAEAUImFontAtlasCustomRect@@H@Z ENDP ; ImVector<ImFontAtlasCustomRect>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ PROC	; ImVector<ImFontAtlasCustomRect>::~ImVector<ImFontAtlasCustomRect>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ ENDP	; ImVector<ImFontAtlasCustomRect>::~ImVector<ImFontAtlasCustomRect>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ PROC	; ImVector<ImFontAtlasCustomRect>::ImVector<ImFontAtlasCustomRect>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImFontAtlasCustomRect@@@@QEAA@XZ ENDP	; ImVector<ImFontAtlasCustomRect>::ImVector<ImFontAtlasCustomRect>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z PROC ; ImVector<ImFont *>::push_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
$LN14:
	mov	QWORD PTR [rsp+24], rbx
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	r14, rdx
	mov	ecx, DWORD PTR [rcx]
	mov	r8d, DWORD PTR [rbx+4]
	cmp	ecx, r8d
	jne	SHORT $LN8@push_back
	mov	QWORD PTR [rsp+56], rdi
	lea	edi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN6@push_back
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN7@push_back
$LN6@push_back:
	mov	eax, 8
$LN7@push_back:
	cmp	eax, edi
	cmovg	edi, eax
; Line 1344
	cmp	edi, r8d
	jle	SHORT $LN12@push_back
	movsxd	rcx, edi
	shl	rcx, 3
	mov	QWORD PTR [rsp+48], rsi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN10@push_back
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@push_back:
	mov	ecx, DWORD PTR [rbx]
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN12@push_back:
	mov	rdi, QWORD PTR [rsp+56]
$LN8@push_back:
; Line 1347
	mov	rax, QWORD PTR [r14]
	movsxd	rdx, ecx
	mov	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z ENDP ; ImVector<ImFont *>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z PROC		; ImVector<ImFont *>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z ENDP		; ImVector<ImFont *>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z PROC	; ImVector<ImFont *>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z ENDP	; ImVector<ImFont *>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ
_TEXT	SEGMENT
this$ = 48
?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ PROC ; ImVector<ImFont *>::back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN3@back
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx]
$LN3@back:
	dec	eax
	movsxd	rcx, eax
	mov	rax, QWORD PTR [rbx+8]
	lea	rax, QWORD PTR [rax+rcx*8]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ ENDP ; ImVector<ImFont *>::back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ PROC		; ImVector<ImFont *>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ ENDP		; ImVector<ImFont *>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z PROC	; ImVector<ImFont *>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rax, QWORD PTR [rax+rbx*8]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z ENDP	; ImVector<ImFont *>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$ImVector@PEAUImFont@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?size@?$ImVector@PEAUImFont@@@@QEBAHXZ PROC		; ImVector<ImFont *>::size, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1323
	mov	eax, DWORD PTR [rcx]
	ret	0
?size@?$ImVector@PEAUImFont@@@@QEBAHXZ ENDP		; ImVector<ImFont *>::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ PROC		; ImVector<ImFont *>::empty, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	cmp	DWORD PTR [rcx], 0
	sete	al
	ret	0
?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ ENDP		; ImVector<ImFont *>::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@PEAUImFont@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@PEAUImFont@@@@QEAA@XZ PROC		; ImVector<ImFont *>::~ImVector<ImFont *>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@PEAUImFont@@@@QEAA@XZ ENDP		; ImVector<ImFont *>::~ImVector<ImFont *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@PEAUImFont@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@PEAUImFont@@@@QEAA@XZ PROC		; ImVector<ImFont *>::ImVector<ImFont *>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@PEAUImFont@@@@QEAA@XZ ENDP		; ImVector<ImFont *>::ImVector<ImFont *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetMouseCursorTexData@ImFontAtlas@@QEAA_NHPEAUImVec2@@0QEAU2@1@Z
_TEXT	SEGMENT
this$ = 48
cursor_type$ = 56
out_offset$ = 64
out_size$ = 72
out_uv_border$ = 80
out_uv_fill$ = 88
?GetMouseCursorTexData@ImFontAtlas@@QEAA_NHPEAUImVec2@@0QEAU2@1@Z PROC ; ImFontAtlas::GetMouseCursorTexData, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1867
$LN38:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rsi, r9
	mov	rbp, r8
	mov	rbx, rcx
; Line 1868
	cmp	edi, 8
	ja	$LN3@GetMouseCu
; Line 1870
	test	BYTE PTR [rcx+4], 2
	jne	$LN3@GetMouseCu
; Line 1873
	mov	edx, DWORD PTR [rcx+112]
	cmp	edx, -1
	jne	SHORT $LN6@GetMouseCu
	mov	r8d, 1873				; 00000751H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CO@OOJMDEAG@?$AAC?$AAu?$AAs?$AAt?$AAo?$AAm?$AAR?$AAe?$AAc?$AAt?$AAI?$AAd?$AAs?$AA?$FL?$AA0@
	call	QWORD PTR __imp__wassert
	mov	edx, DWORD PTR [rbx+112]
$LN6@GetMouseCu:
; Line 1874
	lea	rcx, QWORD PTR [rbx+80]
	call	??A?$ImVector@UImFontAtlasCustomRect@@@@QEAAAEAUImFontAtlasCustomRect@@H@Z ; ImVector<ImFontAtlasCustomRect>::operator[]
; Line 1875
	lea	rdx, QWORD PTR [rdi+rdi*2]
	lea	r8, OFFSET FLAT:?FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA@@3QAY02$$CBUImVec2@@A
; Line 1876
	movss	xmm2, DWORD PTR [r8+rdx*8+8]
	movzx	ecx, WORD PTR [rax+4]
; Line 1877
	movaps	xmm0, xmm2
	movzx	eax, WORD PTR [rax+6]
	movss	xmm4, DWORD PTR [r8+rdx*8+12]
	unpcklps xmm0, xmm4
	movd	xmm5, ecx
	cvtdq2ps xmm5, xmm5
	movd	xmm3, eax
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm5, DWORD PTR [r8+rdx*8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1879
	mov	rax, QWORD PTR out_uv_border$[rsp]
	cvtdq2ps xmm3, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	movaps	xmm1, xmm5
; Line 294
	addss	xmm3, DWORD PTR [r8+rdx*8+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1877
	movsd	QWORD PTR [rsi], xmm0
; Line 1878
	movsd	xmm0, QWORD PTR [r8+rdx*8+16]
	movsd	QWORD PTR [rbp], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	mulss	xmm1, DWORD PTR [rbx+48]
	movaps	xmm0, xmm3
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1879
	addss	xmm4, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	mulss	xmm0, DWORD PTR [rbx+52]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1879
	movss	DWORD PTR [rax], xmm1
; Line 1880
	movaps	xmm1, xmm2
	addss	xmm1, xmm5
	addss	xmm5, DWORD PTR __real@42da0000
	movss	DWORD PTR [rax+4], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR [rbx+52]
	mulss	xmm1, DWORD PTR [rbx+48]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1880
	movss	DWORD PTR [rax+12], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	movaps	xmm0, xmm5
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1882
	addss	xmm5, xmm2
	movss	DWORD PTR [rax+8], xmm1
	mov	rax, QWORD PTR out_uv_fill$[rsp]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	mulss	xmm0, DWORD PTR [rbx+48]
	mulss	xmm3, DWORD PTR [rbx+52]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1882
	movss	DWORD PTR [rax], xmm0
	movss	DWORD PTR [rax+4], xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 296
	mulss	xmm5, DWORD PTR [rbx+48]
	mulss	xmm4, DWORD PTR [rbx+52]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1883
	movss	DWORD PTR [rax+8], xmm5
	movss	DWORD PTR [rax+12], xmm4
; Line 1884
	mov	al, 1
	jmp	SHORT $LN1@GetMouseCu
$LN3@GetMouseCu:
; Line 1869
	xor	al, al
$LN1@GetMouseCu:
; Line 1885
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetMouseCursorTexData@ImFontAtlas@@QEAA_NHPEAUImVec2@@0QEAU2@1@Z ENDP ; ImFontAtlas::GetMouseCursorTexData
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?CalcCustomRectUV@ImFontAtlas@@QEBAXPEBUImFontAtlasCustomRect@@PEAUImVec2@@1@Z
_TEXT	SEGMENT
this$ = 48
rect$ = 56
out_uv_min$ = 64
out_uv_max$ = 72
?CalcCustomRectUV@ImFontAtlas@@QEBAXPEBUImFontAtlasCustomRect@@PEAUImVec2@@1@Z PROC ; ImFontAtlas::CalcCustomRectUV, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1859
$LN13:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 1860
	cmp	DWORD PTR [rcx+40], 0
	mov	rsi, r9
	mov	rbp, r8
	mov	rbx, rdx
	mov	rdi, rcx
	jle	SHORT $LN3@CalcCustom
	cmp	DWORD PTR [rcx+44], 0
	jg	SHORT $LN4@CalcCustom
$LN3@CalcCustom:
	mov	r8d, 1860				; 00000744H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DM@CMBJAGBP@?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG@
	call	QWORD PTR __imp__wassert
$LN4@CalcCustom:
; File E:\reps\ocornut\imgui\imgui.h
; Line 2162
	movzx	eax, WORD PTR [rbx+4]
	mov	ecx, 65535				; 0000ffffH
	cmp	ax, cx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1861
	jne	SHORT $LN5@CalcCustom
	mov	r8d, 1861				; 00000745H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CC@DEJIAPCP@?$AAr?$AAe?$AAc?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI@
	call	QWORD PTR __imp__wassert
	movzx	eax, WORD PTR [rbx+4]
$LN5@CalcCustom:
; Line 1862
	movzx	eax, ax
	movd	xmm0, eax
	movzx	eax, WORD PTR [rbx+6]
	cvtdq2ps xmm0, xmm0
	movd	xmm1, eax
	mulss	xmm0, DWORD PTR [rdi+48]
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, DWORD PTR [rdi+52]
	unpcklps xmm0, xmm1
	movsd	QWORD PTR [rbp], xmm0
; Line 1863
	movzx	eax, WORD PTR [rbx+4]
	movzx	ecx, WORD PTR [rbx]
; Line 1864
	mov	rbp, QWORD PTR [rsp+56]
	add	ecx, eax
	movzx	eax, WORD PTR [rbx+6]
	movd	xmm0, ecx
	movzx	ecx, WORD PTR [rbx+2]
	mov	rbx, QWORD PTR [rsp+48]
	add	ecx, eax
	cvtdq2ps xmm0, xmm0
	movd	xmm1, ecx
	mulss	xmm0, DWORD PTR [rdi+48]
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, DWORD PTR [rdi+52]
	unpcklps xmm0, xmm1
	movsd	QWORD PTR [rsi], xmm0
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?CalcCustomRectUV@ImFontAtlas@@QEBAXPEBUImFontAtlasCustomRect@@PEAUImVec2@@1@Z ENDP ; ImFontAtlas::CalcCustomRectUV
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddCustomRectFontGlyph@ImFontAtlas@@QEAAHPEAUImFont@@GHHMAEBUImVec2@@@Z
_TEXT	SEGMENT
r$ = 32
this$ = 80
font$ = 88
id$ = 96
width$ = 104
height$ = 112
advance_x$ = 120
offset$ = 128
?AddCustomRectFontGlyph@ImFontAtlas@@QEAAHPEAUImFont@@GHHMAEBUImVec2@@@Z PROC ; ImFontAtlas::AddCustomRectFontGlyph, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1840
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 64					; 00000040H
	movzx	ebp, r8w
	mov	edi, r9d
	mov	rsi, rdx
	mov	r14, rcx
; Line 1844
	test	rdx, rdx
	jne	SHORT $LN3@AddCustomR
	mov	r8d, 1844				; 00000734H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BE@PBFICKNN@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
$LN3@AddCustomR:
; Line 1845
	lea	eax, DWORD PTR [rdi-1]
	cmp	eax, 65534				; 0000fffeH
	jbe	SHORT $LN5@AddCustomR
	mov	r8d, 1845				; 00000735H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DK@GHLOFHKF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAi@
	call	QWORD PTR __imp__wassert
$LN5@AddCustomR:
; Line 1846
	mov	ebx, DWORD PTR height$[rsp]
	lea	eax, DWORD PTR [rbx-1]
	cmp	eax, 65534				; 0000fffeH
	jbe	SHORT $LN7@AddCustomR
	mov	r8d, 1846				; 00000736H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DO@CAIIJEKF@?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAh@
	call	QWORD PTR __imp__wassert
$LN7@AddCustomR:
; Line 1852
	mov	rax, QWORD PTR offset$[rsp]
; Line 1854
	lea	rdx, QWORD PTR r$[rsp]
	movss	xmm0, DWORD PTR advance_x$[rsp]
	lea	rcx, QWORD PTR [r14+80]
	movss	DWORD PTR r$[rsp+12], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 2161
	mov	DWORD PTR r$[rsp+4], -1			; ffffffffH
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1852
	movsd	xmm1, QWORD PTR [rax]
	movsd	QWORD PTR r$[rsp+16], xmm1
	mov	WORD PTR r$[rsp], di
	mov	WORD PTR r$[rsp+2], bx
	mov	DWORD PTR r$[rsp+8], ebp
; Line 1853
	mov	QWORD PTR r$[rsp+24], rsi
; Line 1854
	call	?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z ; ImVector<ImFontAtlasCustomRect>::push_back
; Line 1855
	mov	eax, DWORD PTR [r14+80]
; Line 1856
	mov	rbx, QWORD PTR [rsp+80]
	dec	eax
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	r14
	ret	0
?AddCustomRectFontGlyph@ImFontAtlas@@QEAAHPEAUImFont@@GHHMAEBUImVec2@@@Z ENDP ; ImFontAtlas::AddCustomRectFontGlyph
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z
_TEXT	SEGMENT
r$ = 32
this$ = 80
width$ = 88
height$ = 96
?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z PROC	; ImFontAtlas::AddCustomRectRegular, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1829
$LN16:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 1830
	lea	eax, DWORD PTR [rdx-1]
	mov	ebx, r8d
	mov	edi, edx
	mov	rsi, rcx
	cmp	eax, 65534				; 0000fffeH
	jbe	SHORT $LN4@AddCustomR
	mov	r8d, 1830				; 00000726H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DK@GHLOFHKF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAi@
	call	QWORD PTR __imp__wassert
$LN4@AddCustomR:
; Line 1831
	lea	eax, DWORD PTR [rbx-1]
	cmp	eax, 65534				; 0000fffeH
	jbe	SHORT $LN6@AddCustomR
	mov	r8d, 1831				; 00000727H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DO@CAIIJEKF@?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAh@
	call	QWORD PTR __imp__wassert
$LN6@AddCustomR:
; File E:\reps\ocornut\imgui\imgui.h
; Line 2161
	xor	eax, eax
	mov	DWORD PTR r$[rsp+4], -1			; ffffffffH
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1835
	lea	rdx, QWORD PTR r$[rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 2161
	mov	QWORD PTR r$[rsp+8], rax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1835
	lea	rcx, QWORD PTR [rsi+80]
; File E:\reps\ocornut\imgui\imgui.h
; Line 2161
	mov	QWORD PTR r$[rsp+16], rax
	mov	QWORD PTR r$[rsp+24], rax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1833
	mov	WORD PTR r$[rsp], di
; Line 1834
	mov	WORD PTR r$[rsp+2], bx
; Line 1835
	call	?push_back@?$ImVector@UImFontAtlasCustomRect@@@@QEAAXAEBUImFontAtlasCustomRect@@@Z ; ImVector<ImFontAtlasCustomRect>::push_back
; Line 1836
	mov	eax, DWORD PTR [rsi+80]
; Line 1837
	mov	rbx, QWORD PTR [rsp+80]
	dec	eax
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z ENDP	; ImFontAtlas::AddCustomRectRegular
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ
_TEXT	SEGMENT
this$ = 8
?GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ PROC	; ImFontAtlas::GetGlyphRangesVietnamese, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2542
	lea	rax, OFFSET FLAT:?ranges@?1??GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ@4QBGB
; Line 2543
	ret	0
?GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ ENDP	; ImFontAtlas::GetGlyphRangesVietnamese
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ
_TEXT	SEGMENT
this$ = 8
?GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ PROC	; ImFontAtlas::GetGlyphRangesThai, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2525
	lea	rax, OFFSET FLAT:?ranges@?1??GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ@4QBGB
; Line 2526
	ret	0
?GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ ENDP	; ImFontAtlas::GetGlyphRangesThai
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ
_TEXT	SEGMENT
this$ = 8
?GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ PROC	; ImFontAtlas::GetGlyphRangesCyrillic, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2513
	lea	rax, OFFSET FLAT:?ranges@?1??GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ@4QBGB
; Line 2514
	ret	0
?GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ ENDP	; ImFontAtlas::GetGlyphRangesCyrillic
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ
_TEXT	SEGMENT
this$ = 8
?GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ PROC ; ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2437
	cmp	WORD PTR ?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA, 0
	jne	SHORT $LN13@GetGlyphRa
; Line 2439
	movups	xmm0, XMMWORD PTR ?base_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA
	mov	eax, DWORD PTR ?base_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA+16
; Line 2440
	lea	rcx, OFFSET FLAT:?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA+20
	mov	DWORD PTR ?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA+16, eax
	lea	r8, OFFSET FLAT:?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4QBFB
	movaps	XMMWORD PTR ?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA, xmm0
	mov	edx, 19968				; 00004e00H
	mov	r9d, 2500				; 000009c4H
	npad	3
$LL7@GetGlyphRa:
; Line 2368
	movsx	eax, WORD PTR [r8]
	lea	rcx, QWORD PTR [rcx+4]
	add	edx, eax
	lea	r8, QWORD PTR [r8+2]
	mov	WORD PTR [rcx-2], dx
	mov	WORD PTR [rcx-4], dx
	sub	r9, 1
	jne	SHORT $LL7@GetGlyphRa
; Line 2371
	xor	eax, eax
	mov	WORD PTR [rcx], ax
$LN13@GetGlyphRa:
; Line 2443
	lea	rax, OFFSET FLAT:?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA
	ret	0
?GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ ENDP ; ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ
_TEXT	SEGMENT
this$ = 8
?GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ PROC	; ImFontAtlas::GetGlyphRangesChineseFull, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2361
	lea	rax, OFFSET FLAT:?ranges@?1??GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ@4QBGB
; Line 2362
	ret	0
?GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ ENDP	; ImFontAtlas::GetGlyphRangesChineseFull
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ
_TEXT	SEGMENT
this$ = 8
?GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ PROC	; ImFontAtlas::GetGlyphRangesJapanese, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2495
	cmp	WORD PTR ?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA, 0
	jne	SHORT $LN13@GetGlyphRa
; Line 2497
	movups	xmm0, XMMWORD PTR ?base_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA
; Line 2498
	lea	rcx, OFFSET FLAT:?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA+16
	mov	edx, 19968				; 00004e00H
	lea	r8, OFFSET FLAT:?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4QBFB
	mov	r9d, 1946				; 0000079aH
	movaps	XMMWORD PTR ?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA, xmm0
$LL7@GetGlyphRa:
; Line 2368
	movsx	eax, WORD PTR [r8]
	lea	rcx, QWORD PTR [rcx+4]
	add	edx, eax
	lea	r8, QWORD PTR [r8+2]
	mov	WORD PTR [rcx-2], dx
	mov	WORD PTR [rcx-4], dx
	sub	r9, 1
	jne	SHORT $LL7@GetGlyphRa
; Line 2371
	xor	eax, eax
	mov	WORD PTR [rcx], ax
$LN13@GetGlyphRa:
; Line 2501
	lea	rax, OFFSET FLAT:?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA
	ret	0
?GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ ENDP	; ImFontAtlas::GetGlyphRangesJapanese
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ
_TEXT	SEGMENT
this$ = 8
?GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ PROC	; ImFontAtlas::GetGlyphRangesKorean, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2346
	lea	rax, OFFSET FLAT:?ranges@?1??GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ@4QBGB
; Line 2347
	ret	0
?GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ ENDP	; ImFontAtlas::GetGlyphRangesKorean
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ
_TEXT	SEGMENT
this$ = 8
?GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ PROC	; ImFontAtlas::GetGlyphRangesDefault, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2334
	lea	rax, OFFSET FLAT:?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB
; Line 2335
	ret	0
?GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ ENDP	; ImFontAtlas::GetGlyphRangesDefault
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
_TEXT	SEGMENT
font_cfg$3 = 48
$T4 = 192
__$ArrayPad$ = 336
this$ = 416
out_pixels$ = 424
out_width$ = 432
out_height$ = 440
out_bytes_per_pixel$ = 448
?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z PROC ; ImFontAtlas::GetTexDataAsRGBA32, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1679
$LN53:
	mov	r11, rsp
	push	rbp
	push	rsi
	lea	rbp, QWORD PTR [r11-152]
	sub	rsp, 392				; 00000188H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
; Line 1682
	cmp	QWORD PTR [rcx+32], 0
	mov	rsi, QWORD PTR out_bytes_per_pixel$[rbp-256]
	mov	QWORD PTR [r11-24], rbx
	mov	rbx, rcx
	mov	QWORD PTR [r11-40], r12
	mov	r12, rdx
	mov	QWORD PTR [r11-48], r14
	mov	r14, r9
	mov	QWORD PTR [r11-56], r15
	mov	r15, r8
	jne	$LN3@GetTexData
; Line 1665
	cmp	QWORD PTR [rcx+24], 0
	mov	QWORD PTR [r11-32], rdi
	jne	$LN12@GetTexData
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	cmp	DWORD PTR [rcx+96], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1667
	jne	$LN13@GetTexData
; Line 1529
	movss	xmm2, DWORD PTR __real@7f7fffff
	xor	ecx, ecx
; Line 1532
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
; Line 1534
	movups	XMMWORD PTR $T4[rbp-154], xmm0
	mov	QWORD PTR $T4[rbp-212], rcx
	mov	eax, 65535				; 0000ffffH
	movups	XMMWORD PTR $T4[rbp-170], xmm0
	mov	WORD PTR $T4[rbp-172], ax
	xor	eax, eax
	mov	QWORD PTR $T4[rbp-256], rcx
	xorps	xmm4, xmm4
; Line 1518
	mov	DWORD PTR $T4[rbp-248], ecx
; Line 1519
	mov	BYTE PTR $T4[rbp-244], 1
; Line 1752
	movaps	xmm0, XMMWORD PTR $T4[rbp-256]
	movaps	XMMWORD PTR font_cfg$3[rsp], xmm0
; Line 1524
	mov	BYTE PTR $T4[rbp-224], cl
; Line 1525
	mov	QWORD PTR $T4[rbp-220], rcx
; Line 1752
	movaps	xmm0, XMMWORD PTR $T4[rbp-224]
	movaps	XMMWORD PTR font_cfg$3[rsp+32], xmm0
; Line 1528
	mov	DWORD PTR $T4[rbp-192], ecx
; Line 1530
	mov	BYTE PTR $T4[rbp-184], cl
; Line 1531
	mov	DWORD PTR $T4[rbp-180], ecx
; Line 1752
	movaps	xmm0, XMMWORD PTR $T4[rbp-192]
	shufps	xmm0, xmm0, 225				; 000000e1H
	movss	xmm0, xmm2
; Line 1520
	mov	QWORD PTR $T4[rbp-240], rcx
; Line 1752
	shufps	xmm0, xmm0, 225				; 000000e1H
	movaps	XMMWORD PTR font_cfg$3[rsp+64], xmm0
	movaps	xmm0, XMMWORD PTR $T4[rbp-176]
	movss	xmm0, xmm3
; Line 1522
	mov	DWORD PTR $T4[rbp-232], 3
; Line 1752
	movaps	XMMWORD PTR font_cfg$3[rbp-176], xmm0
	movaps	xmm0, XMMWORD PTR $T4[rbp-160]
; Line 1523
	mov	DWORD PTR $T4[rbp-228], 1
; Line 1752
	movaps	xmm1, XMMWORD PTR $T4[rbp-240]
	movaps	XMMWORD PTR font_cfg$3[rsp+16], xmm1
; Line 1758
	movss	xmm2, DWORD PTR font_cfg$3[rsp+20]
	comiss	xmm4, xmm2
; Line 1527
	mov	QWORD PTR $T4[rbp-200], rcx
; Line 1534
	mov	QWORD PTR $T4[rbp-138], rax
; Line 1535
	mov	QWORD PTR $T4[rbp-128], rcx
; Line 1755
	mov	DWORD PTR font_cfg$3[rsp+28], 1
	mov	DWORD PTR font_cfg$3[rsp+24], 1
; Line 1756
	mov	BYTE PTR font_cfg$3[rsp+32], 1
	movaps	xmm1, XMMWORD PTR $T4[rbp-208]
	movaps	XMMWORD PTR font_cfg$3[rbp-160], xmm0
	movsd	xmm0, QWORD PTR $T4[rbp-128]
	movaps	XMMWORD PTR font_cfg$3[rsp+48], xmm1
	movaps	xmm1, XMMWORD PTR $T4[rbp-144]
	movsd	QWORD PTR font_cfg$3[rbp-128], xmm0
	movaps	XMMWORD PTR font_cfg$3[rbp-144], xmm1
; Line 1758
	jb	SHORT $LN22@GetTexData
; Line 1759
	movss	xmm2, DWORD PTR __real@41500000
	movss	DWORD PTR font_cfg$3[rsp+20], xmm2
$LN22@GetTexData:
; Line 1760
	cmp	BYTE PTR font_cfg$3[rbp-170], al
	jne	SHORT $LN23@GetTexData
; Line 1761
	cvttss2si r9d, xmm2
	lea	r8, OFFSET FLAT:??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx@
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR font_cfg$3[rbp-170]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	movss	xmm2, DWORD PTR font_cfg$3[rsp+20]
$LN23@GetTexData:
; Line 1762
	mov	eax, 133				; 00000085H
; Line 1765
	lea	rcx, OFFSET FLAT:?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB
	mov	WORD PTR font_cfg$3[rbp-172], ax
; Line 1766
	lea	r9, QWORD PTR font_cfg$3[rsp]
	mov	rax, QWORD PTR font_cfg$3[rsp+56]
	lea	rdx, OFFSET FLAT:?proggy_clean_ttf_compressed_data_base85@@3QBDB
	test	rax, rax
	cmovne	rcx, rax
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, rbx
	call	?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromMemoryCompressedBase85TTF
; Line 1767
	mov	DWORD PTR [rax+68], 1065353216		; 3f800000H
$LN13@GetTexData:
; Line 1889
	cmp	BYTE PTR [rbx], 0
	je	SHORT $LN46@GetTexData
	mov	r8d, 1889				; 00000761H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN46@GetTexData:
; Line 1890
	mov	rcx, rbx
	call	?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z ; ImFontAtlasBuildWithStbTruetype
$LN12@GetTexData:
; Line 1672
	mov	rdi, QWORD PTR [rbx+24]
; Line 1686
	test	rdi, rdi
	je	SHORT $LN51@GetTexData
; Line 1688
	movsxd	rcx, DWORD PTR [rbx+44]
	movsxd	rax, DWORD PTR [rbx+40]
	imul	rcx, rax
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 1691
	mov	edx, DWORD PTR [rbx+44]
	imul	edx, DWORD PTR [rbx+40]
	mov	QWORD PTR [rbx+32], rax
	test	edx, edx
	jle	SHORT $LN51@GetTexData
$LL4@GetTexData:
; Line 1692
	movzx	ecx, BYTE PTR [rdi]
	lea	rax, QWORD PTR [rax+4]
	shl	ecx, 24
	lea	rdi, QWORD PTR [rdi+1]
	or	ecx, 16777215				; 00ffffffH
	dec	edx
	mov	DWORD PTR [rax-4], ecx
	test	edx, edx
	jg	SHORT $LL4@GetTexData
$LN51@GetTexData:
	mov	rdi, QWORD PTR [rsp+376]
$LN3@GetTexData:
; Line 1696
	mov	rax, QWORD PTR [rbx+32]
	mov	QWORD PTR [r12], rax
	mov	r12, QWORD PTR [rsp+368]
; Line 1697
	test	r15, r15
	je	SHORT $LN7@GetTexData
	mov	eax, DWORD PTR [rbx+40]
	mov	DWORD PTR [r15], eax
$LN7@GetTexData:
; Line 1698
	mov	r15, QWORD PTR [rsp+352]
	test	r14, r14
	je	SHORT $LN8@GetTexData
	mov	eax, DWORD PTR [rbx+44]
	mov	DWORD PTR [r14], eax
$LN8@GetTexData:
; Line 1699
	mov	r14, QWORD PTR [rsp+360]
	mov	rbx, QWORD PTR [rsp+384]
	test	rsi, rsi
	je	SHORT $LN9@GetTexData
	mov	DWORD PTR [rsi], 4
$LN9@GetTexData:
; Line 1700
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 392				; 00000188H
	pop	rsi
	pop	rbp
	ret	0
?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z ENDP ; ImFontAtlas::GetTexDataAsRGBA32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetTexDataAsAlpha8@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z
_TEXT	SEGMENT
font_cfg$3 = 48
$T4 = 192
__$ArrayPad$ = 336
this$ = 416
out_pixels$ = 424
out_width$ = 432
out_height$ = 440
out_bytes_per_pixel$ = 448
?GetTexDataAsAlpha8@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z PROC ; ImFontAtlas::GetTexDataAsAlpha8, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1663
$LN38:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-104]
	sub	rsp, 360				; 00000168H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
; Line 1665
	cmp	QWORD PTR [rcx+24], 0
	mov	rsi, r9
	mov	rdi, QWORD PTR out_bytes_per_pixel$[rbp-256]
	mov	r14, r8
	mov	r15, rdx
	mov	rbx, rcx
	jne	$LN2@GetTexData
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	cmp	DWORD PTR [rcx+96], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1667
	jne	$LN3@GetTexData
; Line 1529
	movss	xmm2, DWORD PTR __real@7f7fffff
	xor	ecx, ecx
; Line 1532
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
; Line 1534
	movups	XMMWORD PTR $T4[rbp-154], xmm0
	mov	QWORD PTR $T4[rbp-212], rcx
	mov	eax, 65535				; 0000ffffH
	movups	XMMWORD PTR $T4[rbp-170], xmm0
	mov	WORD PTR $T4[rbp-172], ax
	xor	eax, eax
	mov	QWORD PTR $T4[rbp-256], rcx
	xorps	xmm4, xmm4
; Line 1518
	mov	DWORD PTR $T4[rbp-248], ecx
; Line 1519
	mov	BYTE PTR $T4[rbp-244], 1
; Line 1752
	movaps	xmm0, XMMWORD PTR $T4[rbp-256]
	movaps	XMMWORD PTR font_cfg$3[rsp], xmm0
; Line 1524
	mov	BYTE PTR $T4[rbp-224], cl
; Line 1525
	mov	QWORD PTR $T4[rbp-220], rcx
; Line 1752
	movaps	xmm0, XMMWORD PTR $T4[rbp-224]
	movaps	XMMWORD PTR font_cfg$3[rsp+32], xmm0
; Line 1528
	mov	DWORD PTR $T4[rbp-192], ecx
; Line 1530
	mov	BYTE PTR $T4[rbp-184], cl
; Line 1531
	mov	DWORD PTR $T4[rbp-180], ecx
; Line 1752
	movaps	xmm0, XMMWORD PTR $T4[rbp-192]
	shufps	xmm0, xmm0, 225				; 000000e1H
	movss	xmm0, xmm2
; Line 1520
	mov	QWORD PTR $T4[rbp-240], rcx
; Line 1752
	shufps	xmm0, xmm0, 225				; 000000e1H
	movaps	XMMWORD PTR font_cfg$3[rsp+64], xmm0
	movaps	xmm0, XMMWORD PTR $T4[rbp-176]
	movss	xmm0, xmm3
; Line 1522
	mov	DWORD PTR $T4[rbp-232], 3
; Line 1752
	movaps	XMMWORD PTR font_cfg$3[rbp-176], xmm0
	movaps	xmm0, XMMWORD PTR $T4[rbp-160]
; Line 1523
	mov	DWORD PTR $T4[rbp-228], 1
; Line 1752
	movaps	xmm1, XMMWORD PTR $T4[rbp-240]
	movaps	XMMWORD PTR font_cfg$3[rsp+16], xmm1
; Line 1758
	movss	xmm2, DWORD PTR font_cfg$3[rsp+20]
	comiss	xmm4, xmm2
; Line 1527
	mov	QWORD PTR $T4[rbp-200], rcx
; Line 1534
	mov	QWORD PTR $T4[rbp-138], rax
; Line 1535
	mov	QWORD PTR $T4[rbp-128], rcx
; Line 1755
	mov	DWORD PTR font_cfg$3[rsp+28], 1
	mov	DWORD PTR font_cfg$3[rsp+24], 1
; Line 1756
	mov	BYTE PTR font_cfg$3[rsp+32], 1
	movaps	xmm1, XMMWORD PTR $T4[rbp-208]
	movaps	XMMWORD PTR font_cfg$3[rbp-160], xmm0
	movsd	xmm0, QWORD PTR $T4[rbp-128]
	movaps	XMMWORD PTR font_cfg$3[rsp+48], xmm1
	movaps	xmm1, XMMWORD PTR $T4[rbp-144]
	movsd	QWORD PTR font_cfg$3[rbp-128], xmm0
	movaps	XMMWORD PTR font_cfg$3[rbp-144], xmm1
; Line 1758
	jb	SHORT $LN12@GetTexData
; Line 1759
	movss	xmm2, DWORD PTR __real@41500000
	movss	DWORD PTR font_cfg$3[rsp+20], xmm2
$LN12@GetTexData:
; Line 1760
	cmp	BYTE PTR font_cfg$3[rbp-170], al
	jne	SHORT $LN13@GetTexData
; Line 1761
	cvttss2si r9d, xmm2
	lea	r8, OFFSET FLAT:??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx@
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR font_cfg$3[rbp-170]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	movss	xmm2, DWORD PTR font_cfg$3[rsp+20]
$LN13@GetTexData:
; Line 1762
	mov	eax, 133				; 00000085H
; Line 1765
	lea	rcx, OFFSET FLAT:?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB
	mov	WORD PTR font_cfg$3[rbp-172], ax
; Line 1766
	lea	r9, QWORD PTR font_cfg$3[rsp]
	mov	rax, QWORD PTR font_cfg$3[rsp+56]
	lea	rdx, OFFSET FLAT:?proggy_clean_ttf_compressed_data_base85@@3QBDB
	test	rax, rax
	cmovne	rcx, rax
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, rbx
	call	?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromMemoryCompressedBase85TTF
; Line 1767
	mov	DWORD PTR [rax+68], 1065353216		; 3f800000H
$LN3@GetTexData:
; Line 1889
	cmp	BYTE PTR [rbx], 0
	je	SHORT $LN36@GetTexData
	mov	r8d, 1889				; 00000761H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN36@GetTexData:
; Line 1890
	mov	rcx, rbx
	call	?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z ; ImFontAtlasBuildWithStbTruetype
$LN2@GetTexData:
; Line 1672
	mov	rax, QWORD PTR [rbx+24]
	mov	QWORD PTR [r15], rax
; Line 1673
	test	r14, r14
	je	SHORT $LN4@GetTexData
	mov	eax, DWORD PTR [rbx+40]
	mov	DWORD PTR [r14], eax
$LN4@GetTexData:
; Line 1674
	test	rsi, rsi
	je	SHORT $LN5@GetTexData
	mov	eax, DWORD PTR [rbx+44]
	mov	DWORD PTR [rsi], eax
$LN5@GetTexData:
; Line 1675
	test	rdi, rdi
	je	SHORT $LN6@GetTexData
	mov	DWORD PTR [rdi], 1
$LN6@GetTexData:
; Line 1676
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 360				; 00000168H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
?GetTexDataAsAlpha8@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z ENDP ; ImFontAtlas::GetTexDataAsAlpha8
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Build@ImFontAtlas@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 48
?Build@ImFontAtlas@@QEAA_NXZ PROC			; ImFontAtlas::Build, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1888
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 1889
	cmp	BYTE PTR [rcx], 0
	mov	rbx, rcx
	je	SHORT $LN4@Build
	mov	r8d, 1889				; 00000761H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN4@Build:
; Line 1890
	mov	rcx, rbx
; Line 1891
	add	rsp, 32					; 00000020H
	pop	rbx
; Line 1890
	jmp	?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z ; ImFontAtlasBuildWithStbTruetype
?Build@ImFontAtlas@@QEAA_NXZ ENDP			; ImFontAtlas::Build
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Clear@ImFontAtlas@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Clear@ImFontAtlas@@QEAAXXZ PROC			; ImFontAtlas::Clear, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1656
$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 1657
	call	?ClearInputData@ImFontAtlas@@QEAAXXZ	; ImFontAtlas::ClearInputData
; Line 1638
	cmp	BYTE PTR [rbx], 0
	je	SHORT $LN8@Clear
	mov	r8d, 1638				; 00000666H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN8@Clear:
; Line 1639
	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN4@Clear
; Line 1640
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN4@Clear:
; Line 1641
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN5@Clear
; Line 1642
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN5@Clear:
; Line 1643
	xor	eax, eax
; Line 1659
	mov	rcx, rbx
; Line 1643
	mov	QWORD PTR [rbx+24], rax
; Line 1644
	mov	QWORD PTR [rbx+32], rax
; Line 1660
	add	rsp, 32					; 00000020H
	pop	rbx
; Line 1659
	jmp	?ClearFonts@ImFontAtlas@@QEAAXXZ	; ImFontAtlas::ClearFonts
?Clear@ImFontAtlas@@QEAAXXZ ENDP			; ImFontAtlas::Clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ClearFonts@ImFontAtlas@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearFonts@ImFontAtlas@@QEAAXXZ PROC			; ImFontAtlas::ClearFonts, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1648
$LN53:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
; Line 1649
	cmp	BYTE PTR [rcx], 0
	je	SHORT $LN7@ClearFonts
	mov	r8d, 1649				; 00000671H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN7@ClearFonts:
; Line 1650
	xor	ebp, ebp
	mov	esi, ebp
	mov	eax, DWORD PTR [rdi+64]
	test	eax, eax
	jle	$LN3@ClearFonts
	mov	r14d, ebp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebp, eax
	jl	SHORT $LN10@ClearFonts
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN10@ClearFonts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1651
	mov	rax, QWORD PTR [rdi+72]
	mov	rbx, QWORD PTR [r14+rax]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1291
	test	rbx, rbx
	je	$LN2@ClearFonts
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2613
	mov	QWORD PTR [rbx+16], rbp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rbx+48]
	test	rcx, rcx
	je	SHORT $LN23@ClearFonts
	mov	QWORD PTR [rbx+40], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+48], rbp
$LN23@ClearFonts:
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN26@ClearFonts
	mov	QWORD PTR [rbx], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], rbp
$LN26@ClearFonts:
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN29@ClearFonts
	mov	QWORD PTR [rbx+24], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+32], rbp
$LN29@ClearFonts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2617
	mov	QWORD PTR [rbx+56], rbp
; Line 2618
	mov	QWORD PTR [rbx+72], rbp
; Line 2619
	mov	BYTE PTR [rbx+94], 1
; Line 2620
	mov	QWORD PTR [rbx+100], rbp
; Line 2621
	mov	DWORD PTR [rbx+108], ebp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	mov	rcx, QWORD PTR [rbx+48]
	test	rcx, rcx
	je	SHORT $LN32@ClearFonts
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN32@ClearFonts:
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN36@ClearFonts
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN36@ClearFonts:
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN40@ClearFonts
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN40@ClearFonts:
; Line 1291
	mov	rcx, rbx
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@ClearFonts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1650
	inc	esi
	add	r14, 8
	mov	eax, DWORD PTR [rdi+64]
	cmp	esi, eax
	jl	$LN10@ClearFonts
$LN3@ClearFonts:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rdi+72]
	test	rcx, rcx
	je	SHORT $LN44@ClearFonts
	mov	QWORD PTR [rdi+64], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rdi+72], rbp
$LN44@ClearFonts:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1653
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?ClearFonts@ImFontAtlas@@QEAAXXZ ENDP			; ImFontAtlas::ClearFonts
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ClearTexData@ImFontAtlas@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearTexData@ImFontAtlas@@QEAAXXZ PROC			; ImFontAtlas::ClearTexData, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1637
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 1638
	cmp	BYTE PTR [rcx], 0
	mov	rbx, rcx
	je	SHORT $LN6@ClearTexDa
	mov	r8d, 1638				; 00000666H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN6@ClearTexDa:
; Line 1639
	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN2@ClearTexDa
; Line 1640
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@ClearTexDa:
; Line 1641
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN7@ClearTexDa
; Line 1642
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN7@ClearTexDa:
; Line 1645
	xor	eax, eax
	mov	QWORD PTR [rbx+32], rax
	mov	QWORD PTR [rbx+24], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?ClearTexData@ImFontAtlas@@QEAAXXZ ENDP			; ImFontAtlas::ClearTexData
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ClearInputData@ImFontAtlas@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearInputData@ImFontAtlas@@QEAAXXZ PROC		; ImFontAtlas::ClearInputData, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1614
$LN66:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	sub	rsp, 32					; 00000020H
; Line 1615
	cmp	BYTE PTR [rcx], 0
	mov	rbx, rcx
	mov	QWORD PTR [rsp+56], rdi
	je	SHORT $LN15@ClearInput
	mov	r8d, 1615				; 0000064fH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN15@ClearInput:
; Line 1616
	mov	eax, DWORD PTR [rbx+96]
	xor	ebp, ebp
	mov	QWORD PTR [rsp+48], rsi
	mov	edi, ebp
	test	eax, eax
	jle	$LN3@ClearInput
	mov	esi, ebp
	mov	edx, eax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebp, eax
	jl	SHORT $LN18@ClearInput
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	edx, DWORD PTR [rbx+96]
$LN18@ClearInput:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1617
	mov	rcx, QWORD PTR [rbx+104]
	cmp	QWORD PTR [rsi+rcx], rbp
	je	SHORT $LN2@ClearInput
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, edx
	jl	SHORT $LN58@ClearInput
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	rcx, QWORD PTR [rbx+104]
$LN58@ClearInput:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1617
	cmp	BYTE PTR [rsi+rcx+12], bpl
	je	SHORT $LN2@ClearInput
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, DWORD PTR [rbx+96]
	jl	SHORT $LN59@ClearInput
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	rcx, QWORD PTR [rbx+104]
$LN59@ClearInput:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1619
	mov	rcx, QWORD PTR [rsi+rcx]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, DWORD PTR [rbx+96]
	jl	SHORT $LN27@ClearInput
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN27@ClearInput:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1620
	mov	rax, QWORD PTR [rbx+104]
	mov	QWORD PTR [rsi+rax], rbp
$LN2@ClearInput:
; Line 1616
	mov	eax, DWORD PTR [rbx+96]
	inc	edi
	add	rsi, 136				; 00000088H
	mov	edx, eax
	cmp	edi, eax
	jl	$LN18@ClearInput
$LN3@ClearInput:
; Line 1624
	mov	eax, DWORD PTR [rbx+64]
	mov	edi, ebp
	test	eax, eax
	jle	$LN6@ClearInput
	mov	rsi, rbp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	mov	ecx, eax
	cmp	ebp, eax
	jl	SHORT $LN30@ClearInput
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	ecx, DWORD PTR [rbx+64]
$LN30@ClearInput:
	mov	rdx, QWORD PTR [rbx+72]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1625
	mov	r8, QWORD PTR [rbx+104]
	mov	rax, QWORD PTR [rsi+rdx]
	cmp	QWORD PTR [rax+80], r8
	jb	$LN5@ClearInput
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, ecx
	jl	SHORT $LN60@ClearInput
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	r8, QWORD PTR [rbx+104]
	mov	rdx, QWORD PTR [rbx+72]
$LN60@ClearInput:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1625
	movsxd	rax, DWORD PTR [rbx+96]
	imul	rcx, rax, 136				; 00000088H
	mov	rax, QWORD PTR [rsi+rdx]
	add	rcx, r8
	cmp	QWORD PTR [rax+80], rcx
	jae	SHORT $LN5@ClearInput
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, DWORD PTR [rbx+64]
	jl	SHORT $LN61@ClearInput
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	rdx, QWORD PTR [rbx+72]
$LN61@ClearInput:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1627
	mov	rax, QWORD PTR [rsi+rdx]
	mov	QWORD PTR [rax+80], rbp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, DWORD PTR [rbx+64]
	jl	SHORT $LN39@ClearInput
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN39@ClearInput:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1628
	mov	rax, QWORD PTR [rbx+72]
	mov	rcx, QWORD PTR [rax+rsi]
	mov	WORD PTR [rcx+88], bp
$LN5@ClearInput:
; Line 1624
	mov	eax, DWORD PTR [rbx+64]
	inc	edi
	add	rsi, 8
	mov	ecx, eax
	cmp	edi, eax
	jl	$LN30@ClearInput
$LN6@ClearInput:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rbx+104]
	mov	rdi, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+48]
	test	rcx, rcx
	je	SHORT $LN41@ClearInput
	mov	QWORD PTR [rbx+96], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+104], rbp
$LN41@ClearInput:
	mov	rcx, QWORD PTR [rbx+88]
	test	rcx, rcx
	je	SHORT $LL62@ClearInput
	mov	QWORD PTR [rbx+80], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+88], rbp
	npad	4
$LL62@ClearInput:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1634
	mov	DWORD PTR [rbx+112], -1
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?ClearInputData@ImFontAtlas@@QEAAXXZ ENDP		; ImFontAtlas::ClearInputData
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z
_TEXT	SEGMENT
font_cfg$3 = 48
$T4 = 192
$T5 = 192
__$ArrayPad$ = 336
this$ = 448
compressed_ttf_data_base85$ = 456
size_pixels$ = 464
font_cfg$ = 472
glyph_ranges$ = 480
?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z PROC ; ImFontAtlas::AddFontFromMemoryCompressedBase85TTF, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1819
$LN51:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-120]
	sub	rsp, 376				; 00000178H
	movaps	XMMWORD PTR [rsp+352], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	r13, QWORD PTR glyph_ranges$[rbp-256]
	mov	r12, rcx
; Line 1820
	mov	rcx, -1
	mov	rbx, r9
	movaps	xmm6, xmm2
	mov	rdi, rdx
	npad	7
$LL48@AddFontFro:
	inc	rcx
	cmp	BYTE PTR [rdx+rcx], 0
	jne	SHORT $LL48@AddFontFro
	add	ecx, 4
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	mov	esi, edx
	sar	esi, 1
	mov	eax, esi
	shr	eax, 31
	add	esi, eax
	shl	esi, 2
; Line 1821
	movsxd	rcx, esi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 1740
	movzx	r11d, BYTE PTR [rdi]
; Line 1821
	mov	r14, rax
; Line 1740
	test	r11b, r11b
	je	$LN5@AddFontFro
	lea	r10, QWORD PTR [rax+2]
	add	rdi, 2
$LL4@AddFontFro:
; Line 1742
	movsx	edx, BYTE PTR [rdi+1]
	xor	ecx, ecx
	movsx	eax, BYTE PTR [rdi+2]
; Line 1745
	lea	r10, QWORD PTR [r10+4]
	movsx	r8d, BYTE PTR [rdi]
	cmp	al, 92					; 0000005cH
	movsx	r9d, BYTE PTR [rdi-1]
	lea	rdi, QWORD PTR [rdi+5]
	setge	cl
	add	ecx, 35					; 00000023H
	sub	eax, ecx
	imul	ecx, eax, 85				; 00000055H
	xor	eax, eax
	cmp	dl, 92					; 0000005cH
	setge	al
	add	eax, 35					; 00000023H
	sub	ecx, eax
	xor	eax, eax
	add	ecx, edx
	imul	edx, ecx, 85				; 00000055H
	cmp	r8b, 92					; 0000005cH
	setge	al
	add	eax, 35					; 00000023H
	sub	edx, eax
	xor	eax, eax
	add	edx, r8d
	imul	ecx, edx, 85				; 00000055H
	cmp	r9b, 92					; 0000005cH
	setge	al
	add	eax, 35					; 00000023H
	sub	ecx, eax
	xor	eax, eax
	add	ecx, r9d
	imul	edx, ecx, 85				; 00000055H
	cmp	r11b, 92				; 0000005cH
	setge	al
	add	eax, 35					; 00000023H
	sub	edx, eax
	movsx	eax, r11b
	add	edx, eax
	mov	BYTE PTR [r10-6], dl
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [r10-5], al
	mov	eax, edx
	shr	eax, 16
	shr	edx, 24
	mov	BYTE PTR [r10-4], al
	mov	BYTE PTR [r10-3], dl
	movzx	r11d, BYTE PTR [rdi-2]
	test	r11b, r11b
	jne	$LL4@AddFontFro
$LN5@AddFontFro:
; Line 3378
	movzx	edi, BYTE PTR [r14+8]
	movzx	eax, BYTE PTR [r14+9]
	shl	eax, 16
	shl	edi, 24
	add	edi, eax
	movzx	eax, BYTE PTR [r14+10]
	shl	eax, 8
	add	edi, eax
	movzx	eax, BYTE PTR [r14+11]
	add	edi, eax
; Line 1809
	mov	ecx, edi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 1810
	mov	r8d, esi
	mov	rdx, r14
	mov	rcx, rax
	mov	r15, rax
	call	?stb_decompress@@YAIPEAEPEBEI@Z		; stb_decompress
; Line 1812
	test	rbx, rbx
	je	SHORT $LN29@AddFontFro
	movups	xmm0, XMMWORD PTR [rbx]
	movups	xmm1, XMMWORD PTR [rbx+16]
	movaps	XMMWORD PTR $T5[rbp-256], xmm0
	movups	xmm0, XMMWORD PTR [rbx+32]
	movaps	XMMWORD PTR $T5[rbp-240], xmm1
	movups	xmm1, XMMWORD PTR [rbx+48]
	movaps	XMMWORD PTR $T5[rbp-224], xmm0
	movups	xmm0, XMMWORD PTR [rbx+64]
	movaps	XMMWORD PTR $T5[rbp-208], xmm1
	movups	xmm1, XMMWORD PTR [rbx+80]
	movaps	XMMWORD PTR $T5[rbp-192], xmm0
	movups	xmm0, XMMWORD PTR [rbx+96]
	movaps	XMMWORD PTR $T5[rbp-176], xmm1
	movups	xmm1, XMMWORD PTR [rbx+112]
	movaps	XMMWORD PTR $T5[rbp-160], xmm0
	movsd	xmm0, QWORD PTR [rbx+128]
	movsd	QWORD PTR $T5[rbp-128], xmm0
	movaps	XMMWORD PTR $T5[rbp-144], xmm1
	jmp	SHORT $LN49@AddFontFro
$LN29@AddFontFro:
; Line 1529
	movss	xmm0, DWORD PTR __real@7f7fffff
	xor	ecx, ecx
	movss	DWORD PTR $T4[rbp-188], xmm0
; Line 1533
	mov	eax, 65535				; 0000ffffH
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T4[rbp-176], xmm0
	xorps	xmm0, xmm0
	mov	WORD PTR $T4[rbp-172], ax
; Line 1534
	xor	eax, eax
	movups	XMMWORD PTR $T4[rbp-170], xmm0
	mov	QWORD PTR $T4[rbp-256], rcx
	movups	XMMWORD PTR $T4[rbp-154], xmm0
	mov	DWORD PTR $T4[rbp-248], ecx
	mov	BYTE PTR $T4[rbp-244], 1
	mov	QWORD PTR $T4[rbp-240], rcx
	mov	DWORD PTR $T4[rbp-232], 3
	mov	DWORD PTR $T4[rbp-228], 1
	mov	BYTE PTR $T4[rbp-224], cl
	mov	QWORD PTR $T4[rbp-220], rcx
	mov	QWORD PTR $T4[rbp-212], rcx
	mov	QWORD PTR $T4[rbp-200], rcx
	mov	DWORD PTR $T4[rbp-192], ecx
	mov	BYTE PTR $T4[rbp-184], cl
	mov	DWORD PTR $T4[rbp-180], ecx
	mov	QWORD PTR $T4[rbp-138], rax
; Line 1535
	mov	QWORD PTR $T4[rbp-128], rcx
$LN49@AddFontFro:
; Line 1812
	lea	rax, QWORD PTR $T4[rbp-256]
	movups	xmm0, XMMWORD PTR [rax+16]
	movups	xmm1, XMMWORD PTR [rax+32]
	movups	xmm2, XMMWORD PTR [rax]
	movaps	XMMWORD PTR font_cfg$3[rsp+16], xmm0
	movups	xmm0, XMMWORD PTR [rax+48]
	movaps	XMMWORD PTR font_cfg$3[rsp+32], xmm1
	movups	xmm1, XMMWORD PTR [rax+64]
	movaps	XMMWORD PTR font_cfg$3[rsp+48], xmm0
	movups	xmm0, XMMWORD PTR [rax+80]
	movaps	XMMWORD PTR font_cfg$3[rsp+64], xmm1
	movups	xmm1, XMMWORD PTR [rax+96]
	movaps	XMMWORD PTR font_cfg$3[rbp-176], xmm0
	movups	xmm0, XMMWORD PTR [rax+112]
	movaps	XMMWORD PTR font_cfg$3[rbp-160], xmm1
	movsd	xmm1, QWORD PTR [rax+128]
; Line 1813
	movq	rax, xmm2
	movaps	XMMWORD PTR font_cfg$3[rbp-144], xmm0
	movaps	XMMWORD PTR font_cfg$3[rsp], xmm2
	movsd	QWORD PTR font_cfg$3[rbp-128], xmm1
	test	rax, rax
	je	SHORT $LN31@AddFontFro
	mov	r8d, 1813				; 00000715H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa@
	call	QWORD PTR __imp__wassert
$LN31@AddFontFro:
; Line 1815
	lea	rax, QWORD PTR font_cfg$3[rsp]
	mov	QWORD PTR [rsp+40], r13
	movaps	xmm3, xmm6
	mov	QWORD PTR [rsp+32], rax
	mov	r8d, edi
	mov	BYTE PTR font_cfg$3[rsp+12], 1
	mov	rdx, r15
	mov	rcx, r12
	call	?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromMemoryTTF
; Line 1824
	mov	rcx, r14
; Line 1815
	mov	rbx, rax
; Line 1824
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 1825
	mov	rax, rbx
; Line 1826
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+352]
	add	rsp, 376				; 00000178H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z ENDP ; ImFontAtlas::AddFontFromMemoryCompressedBase85TTF
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddFontFromMemoryCompressedTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBXHMPEBUImFontConfig@@PEBG@Z
_TEXT	SEGMENT
font_cfg$ = 48
$T3 = 192
$T4 = 192
__$ArrayPad$ = 336
this$ = 432
compressed_ttf_data$ = 440
compressed_ttf_size$ = 448
size_pixels$ = 456
font_cfg_template$ = 464
glyph_ranges$ = 472
?AddFontFromMemoryCompressedTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBXHMPEBUImFontConfig@@PEBG@Z PROC ; ImFontAtlas::AddFontFromMemoryCompressedTTF, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1807
$LN20:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-112]
	sub	rsp, 368				; 00000170H
	movaps	XMMWORD PTR [rsp+352], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
; Line 3378
	movzx	r14d, BYTE PTR [rdx+8]
; Line 1807
	mov	r12, rcx
; Line 3378
	movzx	eax, BYTE PTR [rdx+9]
; Line 1807
	movaps	xmm6, xmm3
	mov	rsi, QWORD PTR font_cfg_template$[rbp-256]
	mov	ebx, r8d
	mov	r13, QWORD PTR glyph_ranges$[rbp-256]
	mov	rdi, rdx
; Line 3378
	shl	eax, 16
	shl	r14d, 24
	add	r14d, eax
	movzx	eax, BYTE PTR [rdx+10]
	shl	eax, 8
	add	r14d, eax
	movzx	eax, BYTE PTR [rdx+11]
	add	r14d, eax
; Line 1809
	mov	ecx, r14d
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 1810
	mov	r8d, ebx
	mov	rdx, rdi
	mov	rcx, rax
	mov	r15, rax
	call	?stb_decompress@@YAIPEAEPEBEI@Z		; stb_decompress
; Line 1812
	test	rsi, rsi
	je	SHORT $LN3@AddFontFro
	movups	xmm0, XMMWORD PTR [rsi]
	movups	xmm1, XMMWORD PTR [rsi+16]
	movaps	XMMWORD PTR $T4[rbp-256], xmm0
	movups	xmm0, XMMWORD PTR [rsi+32]
	movaps	XMMWORD PTR $T4[rbp-240], xmm1
	movups	xmm1, XMMWORD PTR [rsi+48]
	movaps	XMMWORD PTR $T4[rbp-224], xmm0
	movups	xmm0, XMMWORD PTR [rsi+64]
	movaps	XMMWORD PTR $T4[rbp-208], xmm1
	movups	xmm1, XMMWORD PTR [rsi+80]
	movaps	XMMWORD PTR $T4[rbp-192], xmm0
	movups	xmm0, XMMWORD PTR [rsi+96]
	movaps	XMMWORD PTR $T4[rbp-176], xmm1
	movups	xmm1, XMMWORD PTR [rsi+112]
	movaps	XMMWORD PTR $T4[rbp-160], xmm0
	movsd	xmm0, QWORD PTR [rsi+128]
	movsd	QWORD PTR $T4[rbp-128], xmm0
	movaps	XMMWORD PTR $T4[rbp-144], xmm1
	jmp	SHORT $LN18@AddFontFro
$LN3@AddFontFro:
; Line 1529
	movss	xmm0, DWORD PTR __real@7f7fffff
	xor	ecx, ecx
	movss	DWORD PTR $T3[rbp-188], xmm0
; Line 1533
	mov	eax, 65535				; 0000ffffH
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T3[rbp-176], xmm0
	xorps	xmm0, xmm0
	mov	WORD PTR $T3[rbp-172], ax
; Line 1534
	xor	eax, eax
	movups	XMMWORD PTR $T3[rbp-170], xmm0
	mov	QWORD PTR $T3[rbp-256], rcx
	movups	XMMWORD PTR $T3[rbp-154], xmm0
	mov	DWORD PTR $T3[rbp-248], ecx
	mov	BYTE PTR $T3[rbp-244], 1
	mov	QWORD PTR $T3[rbp-240], rcx
	mov	DWORD PTR $T3[rbp-232], 3
	mov	DWORD PTR $T3[rbp-228], 1
	mov	BYTE PTR $T3[rbp-224], cl
	mov	QWORD PTR $T3[rbp-220], rcx
	mov	QWORD PTR $T3[rbp-212], rcx
	mov	QWORD PTR $T3[rbp-200], rcx
	mov	DWORD PTR $T3[rbp-192], ecx
	mov	BYTE PTR $T3[rbp-184], cl
	mov	DWORD PTR $T3[rbp-180], ecx
	mov	QWORD PTR $T3[rbp-138], rax
; Line 1535
	mov	QWORD PTR $T3[rbp-128], rcx
$LN18@AddFontFro:
; Line 1812
	lea	rax, QWORD PTR $T3[rbp-256]
	movups	xmm0, XMMWORD PTR [rax+16]
	movups	xmm1, XMMWORD PTR [rax+32]
	movups	xmm2, XMMWORD PTR [rax]
	movaps	XMMWORD PTR font_cfg$[rsp+16], xmm0
	movups	xmm0, XMMWORD PTR [rax+48]
	movaps	XMMWORD PTR font_cfg$[rsp+32], xmm1
	movups	xmm1, XMMWORD PTR [rax+64]
	movaps	XMMWORD PTR font_cfg$[rsp+48], xmm0
	movups	xmm0, XMMWORD PTR [rax+80]
	movaps	XMMWORD PTR font_cfg$[rsp+64], xmm1
	movups	xmm1, XMMWORD PTR [rax+96]
	movaps	XMMWORD PTR font_cfg$[rbp-176], xmm0
	movups	xmm0, XMMWORD PTR [rax+112]
	movaps	XMMWORD PTR font_cfg$[rbp-160], xmm1
	movsd	xmm1, QWORD PTR [rax+128]
; Line 1813
	movq	rax, xmm2
	movaps	XMMWORD PTR font_cfg$[rbp-144], xmm0
	movaps	XMMWORD PTR font_cfg$[rsp], xmm2
	movsd	QWORD PTR font_cfg$[rbp-128], xmm1
	test	rax, rax
	je	SHORT $LN5@AddFontFro
	mov	r8d, 1813				; 00000715H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa@
	call	QWORD PTR __imp__wassert
$LN5@AddFontFro:
; Line 1815
	lea	rax, QWORD PTR font_cfg$[rsp]
	mov	QWORD PTR [rsp+40], r13
	movaps	xmm3, xmm6
	mov	QWORD PTR [rsp+32], rax
	mov	r8d, r14d
	mov	BYTE PTR font_cfg$[rsp+12], 1
	mov	rdx, r15
	mov	rcx, r12
	call	?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromMemoryTTF
; Line 1816
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+448]
	movaps	xmm6, XMMWORD PTR [rsp+352]
	add	rsp, 368				; 00000170H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?AddFontFromMemoryCompressedTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBXHMPEBUImFontConfig@@PEBG@Z ENDP ; ImFontAtlas::AddFontFromMemoryCompressedTTF
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z
_TEXT	SEGMENT
font_cfg$ = 32
$T3 = 176
$T4 = 176
__$ArrayPad$ = 320
this$ = 416
ttf_data$ = 424
ttf_size$ = 432
size_pixels$ = 440
font_cfg_template$ = 448
glyph_ranges$ = 456
?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z PROC ; ImFontAtlas::AddFontFromMemoryTTF, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1794
$LN21:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-104]
	sub	rsp, 360				; 00000168H
	movaps	XMMWORD PTR [rsp+336], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
; Line 1795
	cmp	BYTE PTR [rcx], 0
	movaps	xmm6, xmm3
	mov	rbx, QWORD PTR font_cfg_template$[rbp-256]
	mov	r15d, r8d
	mov	rdi, QWORD PTR glyph_ranges$[rbp-256]
	mov	r14, rdx
	mov	rsi, rcx
	je	SHORT $LN5@AddFontFro
	mov	r8d, 1795				; 00000703H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN5@AddFontFro:
; Line 1796
	test	rbx, rbx
	je	SHORT $LN6@AddFontFro
	movups	xmm0, XMMWORD PTR [rbx]
	movups	xmm1, XMMWORD PTR [rbx+16]
	movaps	XMMWORD PTR $T4[rbp-256], xmm0
	movups	xmm0, XMMWORD PTR [rbx+32]
	movaps	XMMWORD PTR $T4[rbp-240], xmm1
	movups	xmm1, XMMWORD PTR [rbx+48]
	movaps	XMMWORD PTR $T4[rbp-224], xmm0
	movups	xmm0, XMMWORD PTR [rbx+64]
	movaps	XMMWORD PTR $T4[rbp-208], xmm1
	movups	xmm1, XMMWORD PTR [rbx+80]
	movaps	XMMWORD PTR $T4[rbp-192], xmm0
	movups	xmm0, XMMWORD PTR [rbx+96]
	movaps	XMMWORD PTR $T4[rbp-176], xmm1
	movups	xmm1, XMMWORD PTR [rbx+112]
	movaps	XMMWORD PTR $T4[rbp-160], xmm0
	movsd	xmm0, QWORD PTR [rbx+128]
	movsd	QWORD PTR $T4[rbp-128], xmm0
	movaps	XMMWORD PTR $T4[rbp-144], xmm1
	jmp	SHORT $LN19@AddFontFro
$LN6@AddFontFro:
; Line 1529
	movss	xmm0, DWORD PTR __real@7f7fffff
	xor	ecx, ecx
	movss	DWORD PTR $T3[rbp-188], xmm0
; Line 1533
	mov	eax, 65535				; 0000ffffH
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T3[rbp-176], xmm0
	xorps	xmm0, xmm0
	mov	WORD PTR $T3[rbp-172], ax
; Line 1534
	xor	eax, eax
	movups	XMMWORD PTR $T3[rbp-170], xmm0
	mov	QWORD PTR $T3[rbp-256], rcx
	movups	XMMWORD PTR $T3[rbp-154], xmm0
	mov	DWORD PTR $T3[rbp-248], ecx
	mov	BYTE PTR $T3[rbp-244], 1
	mov	QWORD PTR $T3[rbp-240], rcx
	mov	DWORD PTR $T3[rbp-232], 3
	mov	DWORD PTR $T3[rbp-228], 1
	mov	BYTE PTR $T3[rbp-224], cl
	mov	QWORD PTR $T3[rbp-220], rcx
	mov	QWORD PTR $T3[rbp-212], rcx
	mov	QWORD PTR $T3[rbp-200], rcx
	mov	DWORD PTR $T3[rbp-192], ecx
	mov	BYTE PTR $T3[rbp-184], cl
	mov	DWORD PTR $T3[rbp-180], ecx
	mov	QWORD PTR $T3[rbp-138], rax
; Line 1535
	mov	QWORD PTR $T3[rbp-128], rcx
$LN19@AddFontFro:
; Line 1796
	lea	rax, QWORD PTR $T3[rbp-256]
	movups	xmm0, XMMWORD PTR [rax+16]
	movups	xmm1, XMMWORD PTR [rax+32]
	movups	xmm2, XMMWORD PTR [rax]
	movaps	XMMWORD PTR font_cfg$[rsp+16], xmm0
	movups	xmm0, XMMWORD PTR [rax+48]
	movaps	XMMWORD PTR font_cfg$[rsp+32], xmm1
	movups	xmm1, XMMWORD PTR [rax+64]
	movaps	XMMWORD PTR font_cfg$[rsp+48], xmm0
	movups	xmm0, XMMWORD PTR [rax+80]
	movaps	XMMWORD PTR font_cfg$[rsp+64], xmm1
	movups	xmm1, XMMWORD PTR [rax+96]
	movaps	XMMWORD PTR font_cfg$[rsp+80], xmm0
	movups	xmm0, XMMWORD PTR [rax+112]
	movaps	XMMWORD PTR font_cfg$[rbp-160], xmm1
	movsd	xmm1, QWORD PTR [rax+128]
; Line 1797
	movq	rax, xmm2
	movaps	XMMWORD PTR font_cfg$[rbp-144], xmm0
	movaps	XMMWORD PTR font_cfg$[rsp], xmm2
	movsd	QWORD PTR font_cfg$[rbp-128], xmm1
	test	rax, rax
	je	SHORT $LN8@AddFontFro
	mov	r8d, 1797				; 00000705H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa@
	call	QWORD PTR __imp__wassert
$LN8@AddFontFro:
; Line 1801
	mov	rax, QWORD PTR font_cfg$[rsp+56]
; Line 1803
	lea	rdx, QWORD PTR font_cfg$[rsp]
	test	rdi, rdi
	movss	DWORD PTR font_cfg$[rsp+20], xmm6
	mov	rcx, rsi
	mov	QWORD PTR font_cfg$[rsp], r14
	cmovne	rax, rdi
	mov	DWORD PTR font_cfg$[rsp+8], r15d
	mov	QWORD PTR font_cfg$[rsp+56], rax
	call	?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z ; ImFontAtlas::AddFont
; Line 1804
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+336]
	add	rsp, 360				; 00000168H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z ENDP ; ImFontAtlas::AddFontFromMemoryTTF
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddFontFromFileTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z
_TEXT	SEGMENT
data_size$ = 48
$T3 = 64
$T4 = 64
font_cfg$ = 208
__$ArrayPad$ = 352
this$ = 448
filename$ = 456
size_pixels$ = 464
font_cfg_template$ = 472
glyph_ranges$ = 480
?AddFontFromFileTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z PROC ; ImFontAtlas::AddFontFromFileTTF, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1772
$LN31:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-128]
	sub	rsp, 384				; 00000180H
	movaps	XMMWORD PTR [rsp+368], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
; Line 1773
	cmp	BYTE PTR [rcx], 0
	mov	rdi, r9
	mov	r15, QWORD PTR glyph_ranges$[rbp-256]
	movaps	xmm6, xmm2
	mov	rbx, rdx
	mov	r14, rcx
	je	SHORT $LN9@AddFontFro
	mov	r8d, 1773				; 000006edH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN9@AddFontFro:
; Line 1774
	xor	r12d, r12d
; Line 1775
	lea	r8, QWORD PTR data_size$[rsp]
	xor	r9d, r9d
	mov	QWORD PTR data_size$[rsp], r12
	lea	rdx, OFFSET FLAT:??_C@_02JDPG@rb@
	mov	rcx, rbx
	call	?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z ; ImFileLoadToMemory
	mov	rsi, rax
; Line 1776
	test	rax, rax
	jne	SHORT $LN5@AddFontFro
; Line 1778
	mov	r8d, 1778				; 000006f2H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1EG@KCPDJPKE@?$AA?$CI?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn@
	call	QWORD PTR __imp__wassert
; Line 1779
	xor	eax, eax
	jmp	$LN1@AddFontFro
$LN5@AddFontFro:
; Line 1781
	test	rdi, rdi
	je	SHORT $LN11@AddFontFro
	movups	xmm0, XMMWORD PTR [rdi]
	movups	xmm1, XMMWORD PTR [rdi+16]
	movaps	XMMWORD PTR $T4[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rdi+32]
	movaps	XMMWORD PTR $T4[rsp+16], xmm1
	movups	xmm1, XMMWORD PTR [rdi+48]
	movaps	XMMWORD PTR $T4[rsp+32], xmm0
	movups	xmm0, XMMWORD PTR [rdi+64]
	movaps	XMMWORD PTR $T4[rsp+48], xmm1
	movups	xmm1, XMMWORD PTR [rdi+80]
	movaps	XMMWORD PTR $T4[rbp-192], xmm0
	movups	xmm0, XMMWORD PTR [rdi+96]
	movaps	XMMWORD PTR $T4[rbp-176], xmm1
	movups	xmm1, XMMWORD PTR [rdi+112]
	movaps	XMMWORD PTR $T4[rbp-160], xmm0
	movsd	xmm0, QWORD PTR [rdi+128]
	movsd	QWORD PTR $T4[rbp-128], xmm0
	movaps	XMMWORD PTR $T4[rbp-144], xmm1
	jmp	SHORT $LN29@AddFontFro
$LN11@AddFontFro:
; Line 1529
	movss	xmm0, DWORD PTR __real@7f7fffff
; Line 1533
	mov	eax, 65535				; 0000ffffH
	movss	DWORD PTR $T3[rbp-188], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T3[rbp-176], xmm0
	xorps	xmm0, xmm0
	mov	WORD PTR $T3[rbp-172], ax
; Line 1534
	xor	eax, eax
	movups	XMMWORD PTR $T3[rbp-170], xmm0
	mov	QWORD PTR $T3[rsp], r12
	movups	XMMWORD PTR $T3[rbp-154], xmm0
	mov	DWORD PTR $T3[rsp+8], r12d
	mov	BYTE PTR $T3[rsp+12], 1
	mov	QWORD PTR $T3[rsp+16], r12
	mov	DWORD PTR $T3[rsp+24], 3
	mov	DWORD PTR $T3[rsp+28], 1
	mov	BYTE PTR $T3[rsp+32], r12b
	mov	QWORD PTR $T3[rsp+36], r12
	mov	QWORD PTR $T3[rsp+44], r12
	mov	QWORD PTR $T3[rsp+56], r12
	mov	DWORD PTR $T3[rbp-192], r12d
	mov	BYTE PTR $T3[rbp-184], r12b
	mov	DWORD PTR $T3[rbp-180], r12d
	mov	QWORD PTR $T3[rbp-138], rax
; Line 1535
	mov	QWORD PTR $T3[rbp-128], r12
$LN29@AddFontFro:
; Line 1781
	lea	rax, QWORD PTR $T3[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	xmm2, XMMWORD PTR [rax+80]
	movaps	XMMWORD PTR font_cfg$[rbp-256], xmm0
	movups	xmm0, XMMWORD PTR [rax+32]
	movaps	XMMWORD PTR font_cfg$[rbp-240], xmm1
	movups	xmm1, XMMWORD PTR [rax+48]
	movaps	XMMWORD PTR font_cfg$[rbp-224], xmm0
	movups	xmm0, XMMWORD PTR [rax+64]
	movaps	XMMWORD PTR font_cfg$[rbp-176], xmm2
	movaps	XMMWORD PTR font_cfg$[rbp-192], xmm0
	movups	xmm0, XMMWORD PTR [rax+96]
	movaps	XMMWORD PTR font_cfg$[rbp-208], xmm1
	movups	xmm1, XMMWORD PTR [rax+112]
	movaps	XMMWORD PTR font_cfg$[rbp-160], xmm0
	movsd	xmm0, QWORD PTR [rax+128]
; Line 1782
	psrldq	xmm2, 6
	movd	eax, xmm2
	movaps	XMMWORD PTR font_cfg$[rbp-144], xmm1
	movsd	QWORD PTR font_cfg$[rbp-128], xmm0
	test	al, al
	jne	SHORT $LN6@AddFontFro
; Line 1786
	mov	r9, -1
	npad	1
$LL27@AddFontFro:
	inc	r9
	cmp	BYTE PTR [rbx+r9], r12b
	jne	SHORT $LL27@AddFontFro
	add	r9, rbx
	cmp	r9, rbx
	jbe	SHORT $LN28@AddFontFro
$LL4@AddFontFro:
	movzx	ecx, BYTE PTR [r9-1]
	lea	rax, QWORD PTR [r9-1]
	cmp	cl, 47					; 0000002fH
	je	SHORT $LN28@AddFontFro
	cmp	cl, 92					; 0000005cH
	je	SHORT $LN28@AddFontFro
	mov	r9, rax
	cmp	rax, rbx
	ja	SHORT $LL4@AddFontFro
$LN28@AddFontFro:
; Line 1787
	xorps	xmm0, xmm0
	lea	r8, OFFSET FLAT:??_C@_0L@EPCGLJHG@?$CFs?0?5?$CF?40fpx@
	cvtss2sd xmm0, xmm6
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR font_cfg$[rbp-170]
	movsd	QWORD PTR [rsp+32], xmm0
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
$LN6@AddFontFro:
; Line 1789
	mov	r8d, DWORD PTR data_size$[rsp]
	lea	rax, QWORD PTR font_cfg$[rbp-256]
	mov	QWORD PTR [rsp+40], r15
	movaps	xmm3, xmm6
	mov	rdx, rsi
	mov	QWORD PTR [rsp+32], rax
	mov	rcx, r14
	call	?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromMemoryTTF
$LN1@AddFontFro:
; Line 1790
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+368]
	add	rsp, 384				; 00000180H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
?AddFontFromFileTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z ENDP ; ImFontAtlas::AddFontFromFileTTF
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddFontDefault@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
_TEXT	SEGMENT
font_cfg$ = 48
$T3 = 192
$T4 = 192
__$ArrayPad$ = 336
this$ = 368
font_cfg_template$ = 376
?AddFontDefault@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z PROC ; ImFontAtlas::AddFontDefault, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1751
$LN26:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	lea	rbp, QWORD PTR [rsp-96]
	sub	rsp, 352				; 00000160H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rbx, rcx
	xorps	xmm3, xmm3
; Line 1752
	test	rdx, rdx
	je	SHORT $LN6@AddFontDef
	movups	xmm0, XMMWORD PTR [rdx]
	movups	xmm1, XMMWORD PTR [rdx+16]
	movaps	XMMWORD PTR $T4[rbp-256], xmm0
	movups	xmm0, XMMWORD PTR [rdx+32]
	movaps	XMMWORD PTR $T4[rbp-240], xmm1
	movups	xmm1, XMMWORD PTR [rdx+48]
	movaps	XMMWORD PTR $T4[rbp-224], xmm0
	movups	xmm0, XMMWORD PTR [rdx+64]
	movaps	XMMWORD PTR $T4[rbp-208], xmm1
	movups	xmm1, XMMWORD PTR [rdx+80]
	movaps	XMMWORD PTR $T4[rbp-192], xmm0
	movups	xmm0, XMMWORD PTR [rdx+96]
	movaps	XMMWORD PTR $T4[rbp-176], xmm1
	movups	xmm1, XMMWORD PTR [rdx+112]
	movaps	XMMWORD PTR $T4[rbp-160], xmm0
	movsd	xmm0, QWORD PTR [rdx+128]
	movsd	QWORD PTR $T4[rbp-128], xmm0
	movaps	XMMWORD PTR $T4[rbp-144], xmm1
	jmp	SHORT $LN24@AddFontDef
$LN6@AddFontDef:
; Line 1529
	movss	xmm0, DWORD PTR __real@7f7fffff
	xor	ecx, ecx
	movss	DWORD PTR $T3[rbp-188], xmm0
; Line 1533
	mov	eax, 65535				; 0000ffffH
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T3[rbp-176], xmm0
	xorps	xmm0, xmm0
	mov	WORD PTR $T3[rbp-172], ax
; Line 1534
	xor	eax, eax
	movups	XMMWORD PTR $T3[rbp-170], xmm0
	mov	QWORD PTR $T3[rbp-256], rcx
	movups	XMMWORD PTR $T3[rbp-154], xmm0
	mov	DWORD PTR $T3[rbp-248], ecx
	mov	BYTE PTR $T3[rbp-244], 1
	mov	QWORD PTR $T3[rbp-240], rcx
	mov	DWORD PTR $T3[rbp-232], 3
	mov	DWORD PTR $T3[rbp-228], 1
	mov	BYTE PTR $T3[rbp-224], cl
	mov	QWORD PTR $T3[rbp-220], rcx
	mov	QWORD PTR $T3[rbp-212], rcx
	mov	QWORD PTR $T3[rbp-200], rcx
	mov	DWORD PTR $T3[rbp-192], ecx
	mov	BYTE PTR $T3[rbp-184], cl
	mov	DWORD PTR $T3[rbp-180], ecx
	mov	QWORD PTR $T3[rbp-138], rax
; Line 1535
	mov	QWORD PTR $T3[rbp-128], rcx
$LN24@AddFontDef:
; Line 1752
	lea	rax, QWORD PTR $T3[rbp-256]
	movups	xmm0, XMMWORD PTR [rax]
	movups	xmm1, XMMWORD PTR [rax+16]
	movaps	XMMWORD PTR font_cfg$[rsp], xmm0
	movaps	XMMWORD PTR font_cfg$[rsp+16], xmm1
	movups	xmm0, XMMWORD PTR [rax+32]
	movups	xmm1, XMMWORD PTR [rax+48]
	movaps	XMMWORD PTR font_cfg$[rsp+32], xmm0
	movaps	XMMWORD PTR font_cfg$[rsp+48], xmm1
	movups	xmm0, XMMWORD PTR [rax+64]
	movups	xmm1, XMMWORD PTR [rax+80]
	movaps	XMMWORD PTR font_cfg$[rsp+64], xmm0
	movaps	XMMWORD PTR font_cfg$[rbp-176], xmm1
	movups	xmm0, XMMWORD PTR [rax+96]
	movups	xmm1, XMMWORD PTR [rax+112]
	movaps	XMMWORD PTR font_cfg$[rbp-160], xmm0
	movsd	xmm0, QWORD PTR [rax+128]
	movsd	QWORD PTR font_cfg$[rbp-128], xmm0
	movaps	XMMWORD PTR font_cfg$[rbp-144], xmm1
; Line 1753
	test	rdx, rdx
	jne	SHORT $LN2@AddFontDef
; Line 1755
	mov	DWORD PTR font_cfg$[rsp+28], 1
	mov	DWORD PTR font_cfg$[rsp+24], 1
; Line 1756
	mov	BYTE PTR font_cfg$[rsp+32], 1
$LN2@AddFontDef:
; Line 1758
	movss	xmm2, DWORD PTR font_cfg$[rsp+20]
	comiss	xmm3, xmm2
	jb	SHORT $LN3@AddFontDef
; Line 1759
	movss	xmm2, DWORD PTR __real@41500000
	movss	DWORD PTR font_cfg$[rsp+20], xmm2
$LN3@AddFontDef:
; Line 1760
	cmp	BYTE PTR font_cfg$[rbp-170], 0
	jne	SHORT $LN4@AddFontDef
; Line 1761
	cvttss2si r9d, xmm2
	lea	r8, OFFSET FLAT:??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx@
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR font_cfg$[rbp-170]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	movss	xmm2, DWORD PTR font_cfg$[rsp+20]
$LN4@AddFontDef:
; Line 1762
	mov	eax, 133				; 00000085H
; Line 1765
	lea	rdx, OFFSET FLAT:?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB
	mov	WORD PTR font_cfg$[rbp-172], ax
; Line 1766
	lea	r9, QWORD PTR font_cfg$[rsp]
	mov	rax, QWORD PTR font_cfg$[rsp+56]
	mov	rcx, rbx
	test	rax, rax
	cmovne	rdx, rax
	mov	QWORD PTR [rsp+32], rdx
	lea	rdx, OFFSET FLAT:?proggy_clean_ttf_compressed_data_base85@@3QBDB
	call	?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z ; ImFontAtlas::AddFontFromMemoryCompressedBase85TTF
; Line 1767
	mov	DWORD PTR [rax+68], 1065353216		; 3f800000H
; Line 1769
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+384]
	add	rsp, 352				; 00000160H
	pop	rbp
	ret	0
?AddFontDefault@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z ENDP ; ImFontAtlas::AddFontDefault
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z
_TEXT	SEGMENT
$T2 = 80
this$ = 80
font_cfg$ = 88
?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z PROC ; ImFontAtlas::AddFont, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1703
$LN68:
	push	rbx
	push	rsi
	push	rdi
	push	r12
	sub	rsp, 40					; 00000028H
; Line 1704
	cmp	BYTE PTR [rcx], 0
	mov	rbx, rcx
	mov	QWORD PTR [rsp+88], rbp
	mov	QWORD PTR [rsp+96], r13
	mov	QWORD PTR [rsp+104], r14
	mov	r14, rdx
	je	SHORT $LN9@AddFont
	mov	r8d, 1704				; 000006a8H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN9@AddFont:
; Line 1705
	cmp	QWORD PTR [r14], 0
	je	SHORT $LN10@AddFont
	cmp	DWORD PTR [r14+8], 0
	jg	SHORT $LN11@AddFont
$LN10@AddFont:
	mov	r8d, 1705				; 000006a9H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1GM@FAHJAOLI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AAD@
	call	QWORD PTR __imp__wassert
$LN11@AddFont:
; Line 1706
	movss	xmm1, DWORD PTR [r14+20]
	xorps	xmm0, xmm0
	comiss	xmm1, xmm0
	ja	SHORT $LN12@AddFont
	mov	r8d, 1706				; 000006aaH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DI@LEOIHPJH@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAS?$AAi?$AAz?$AAe?$AAP@
	call	QWORD PTR __imp__wassert
$LN12@AddFont:
; Line 1709
	xor	r12d, r12d
	mov	r13d, 65535				; 0000ffffH
	lea	ebp, QWORD PTR [r12+8]
	cmp	BYTE PTR [r14+72], r12b
	jne	$LN2@AddFont
; Line 1710
	lea	ecx, QWORD PTR [rbp+112]
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR $T2[rsp], rax
	mov	rdi, rax
	test	rax, rax
	je	SHORT $LN13@AddFont
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	mov	QWORD PTR [rax], r12
	mov	QWORD PTR [rax+8], r12
	mov	QWORD PTR [rax+24], r12
	mov	QWORD PTR [rax+32], r12
	mov	QWORD PTR [rax+40], r12
	mov	QWORD PTR [rax+48], r12
; Line 211
	mov	DWORD PTR [rax+64], r12d
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2590
	mov	QWORD PTR [rax+16], r12
; Line 2591
	mov	DWORD PTR [rax+90], -65473		; ffff003fH
; Line 2593
	mov	QWORD PTR [rax+64], r12
; Line 2594
	mov	QWORD PTR [rax+56], r12
; Line 2595
	mov	QWORD PTR [rax+72], r12
; Line 2596
	mov	QWORD PTR [rax+80], r12
; Line 2597
	mov	WORD PTR [rax+88], r12w
; Line 2598
	mov	BYTE PTR [rax+94], r12b
; Line 2599
	mov	QWORD PTR [rax+96], 1065353216		; 3f800000H
; Line 2600
	mov	QWORD PTR [rax+104], r12
; Line 2602
	xor	eax, eax
	mov	WORD PTR [rdi+112], ax
; Line 1710
	jmp	SHORT $LN14@AddFont
$LN13@AddFont:
	mov	rdi, r12
$LN14@AddFont:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rbx+64]
	mov	r8d, DWORD PTR [rbx+68]
	cmp	ecx, r8d
	jne	SHORT $LN37@AddFont
	lea	esi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN35@AddFont
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN36@AddFont
$LN35@AddFont:
	mov	eax, ebp
$LN36@AddFont:
	cmp	eax, esi
	cmovg	esi, eax
; Line 1344
	cmp	esi, r8d
	jle	SHORT $LN37@AddFont
	movsxd	rcx, esi
	shl	rcx, 3
	mov	QWORD PTR [rsp+32], r15
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+72]
	mov	r15, rax
	test	rdx, rdx
	je	SHORT $LN39@AddFont
	movsxd	r8, DWORD PTR [rbx+64]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+72]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN39@AddFont:
	mov	ecx, DWORD PTR [rbx+64]
	mov	QWORD PTR [rbx+72], r15
	mov	r15, QWORD PTR [rsp+32]
	mov	DWORD PTR [rbx+68], esi
$LN37@AddFont:
; Line 1347
	mov	rax, QWORD PTR [rbx+72]
	movsxd	rcx, ecx
	mov	QWORD PTR [rax+rcx*8], rdi
	inc	DWORD PTR [rbx+64]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1710
	jmp	SHORT $LN16@AddFont
$LN2@AddFont:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	cmp	DWORD PTR [rbx+64], r12d
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1712
	jne	SHORT $LN16@AddFont
	mov	r8d, 1712				; 000006b0H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1HI@KOOOLAEJ@?$AA?$CB?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5@
	call	QWORD PTR __imp__wassert
$LN16@AddFont:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rbx+96]
	mov	r8d, DWORD PTR [rbx+100]
	cmp	ecx, r8d
	jne	SHORT $LN50@AddFont
	lea	edi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN48@AddFont
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	ebp, DWORD PTR [r8+rax]
$LN48@AddFont:
	cmp	ebp, edi
	cmovg	edi, ebp
; Line 1344
	cmp	edi, r8d
	jle	SHORT $LN50@AddFont
	movsxd	rax, edi
	imul	rcx, rax, 136				; 00000088H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+104]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN52@AddFont
	movsxd	rcx, DWORD PTR [rbx+96]
	imul	r8, rcx, 136				; 00000088H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+104]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN52@AddFont:
	mov	ecx, DWORD PTR [rbx+96]
	mov	QWORD PTR [rbx+104], rsi
	mov	DWORD PTR [rbx+100], edi
$LN50@AddFont:
; Line 1347
	movups	xmm0, XMMWORD PTR [r14]
	mov	rbp, QWORD PTR [rsp+88]
	movsxd	rax, ecx
	imul	rcx, rax, 136				; 00000088H
	mov	rax, QWORD PTR [rbx+104]
	movups	XMMWORD PTR [rcx+rax], xmm0
	movups	xmm1, XMMWORD PTR [r14+16]
	movups	XMMWORD PTR [rcx+rax+16], xmm1
	movups	xmm0, XMMWORD PTR [r14+32]
	movups	XMMWORD PTR [rcx+rax+32], xmm0
	movups	xmm1, XMMWORD PTR [r14+48]
	movups	XMMWORD PTR [rcx+rax+48], xmm1
	movups	xmm0, XMMWORD PTR [r14+64]
	movups	XMMWORD PTR [rcx+rax+64], xmm0
	movups	xmm1, XMMWORD PTR [r14+80]
	movups	XMMWORD PTR [rcx+rax+80], xmm1
	movups	xmm0, XMMWORD PTR [r14+96]
	movups	XMMWORD PTR [rcx+rax+96], xmm0
	movups	xmm1, XMMWORD PTR [r14+112]
	movups	XMMWORD PTR [rcx+rax+112], xmm1
	movsd	xmm0, QWORD PTR [r14+128]
	movsd	QWORD PTR [rcx+rax+128], xmm0
	inc	DWORD PTR [rbx+96]
	mov	eax, DWORD PTR [rbx+96]
; Line 1336
	test	eax, eax
	jg	SHORT $LN56@AddFont
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+96]
$LN56@AddFont:
	mov	rsi, QWORD PTR [rbx+104]
	cdqe
	imul	rdi, rax, 136				; 00000088H
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1716
	mov	r9, QWORD PTR [rdi+rsi-8]
	test	r9, r9
	jne	SHORT $LN4@AddFont
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [rbx+64]
	test	eax, eax
	jg	SHORT $LN59@AddFont
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+64]
$LN59@AddFont:
	movsxd	rcx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1717
	mov	rax, QWORD PTR [rbx+72]
	mov	r9, QWORD PTR [rax+rcx*8-8]
	mov	QWORD PTR [rdi+rsi-8], r9
$LN4@AddFont:
; Line 1718
	cmp	BYTE PTR [rdi+rsi-124], r12b
	jne	SHORT $LN5@AddFont
; Line 1720
	movsxd	rcx, DWORD PTR [rdi+rsi-128]
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 1722
	movsxd	r8, DWORD PTR [rdi+rsi-128]
	mov	rcx, rax
	mov	QWORD PTR [rdi+rsi-136], rax
	mov	BYTE PTR [rdi+rsi-124], 1
	mov	rdx, QWORD PTR [r14]
	call	memcpy
	mov	r9, QWORD PTR [rdi+rsi-8]
$LN5@AddFont:
; Line 1725
	cmp	WORD PTR [r9+92], r13w
	mov	r13, QWORD PTR [rsp+96]
	jne	SHORT $LN6@AddFont
; Line 1726
	movzx	eax, WORD PTR [r14+84]
	mov	WORD PTR [r9+92], ax
$LN6@AddFont:
	mov	r14, QWORD PTR [rsp+104]
; Line 1638
	cmp	BYTE PTR [rbx], r12b
	je	SHORT $LN65@AddFont
	mov	r8d, 1638				; 00000666H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
$LN65@AddFont:
; Line 1639
	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN61@AddFont
; Line 1640
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN61@AddFont:
; Line 1641
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN62@AddFont
; Line 1642
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN62@AddFont:
; Line 1643
	mov	QWORD PTR [rbx+24], r12
; Line 1644
	mov	QWORD PTR [rbx+32], r12
; Line 1730
	mov	rax, QWORD PTR [rdi+rsi-8]
; Line 1731
	add	rsp, 40					; 00000028H
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z ENDP ; ImFontAtlas::AddFont
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1ImFontAtlas@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ImFontAtlas@@QEAA@XZ PROC				; ImFontAtlas::~ImFontAtlas, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1608
$LN28:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; Line 1609
	cmp	BYTE PTR [rcx], 0
	je	SHORT $LN4@ImFontAtla
	mov	r8d, 1609				; 00000649H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
	npad	1
$LN4@ImFontAtla:
; Line 1657
	mov	rcx, rbx
	call	?ClearInputData@ImFontAtlas@@QEAAXXZ	; ImFontAtlas::ClearInputData
	npad	1
; Line 1638
	cmp	BYTE PTR [rbx], 0
	je	SHORT $LN12@ImFontAtla
	mov	r8d, 1638				; 00000666H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn@
	call	QWORD PTR __imp__wassert
	npad	1
$LN12@ImFontAtla:
; Line 1639
	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN8@ImFontAtla
; Line 1640
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN8@ImFontAtla:
; Line 1641
	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx
	je	SHORT $LN9@ImFontAtla
; Line 1642
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN9@ImFontAtla:
; Line 1643
	xor	eax, eax
	mov	QWORD PTR [rbx+24], rax
; Line 1644
	mov	QWORD PTR [rbx+32], rax
; Line 1659
	mov	rcx, rbx
	call	?ClearFonts@ImFontAtlas@@QEAAXXZ	; ImFontAtlas::ClearFonts
	npad	1
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	mov	rcx, QWORD PTR [rbx+104]
	test	rcx, rcx
	je	SHORT $LN14@ImFontAtla
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN14@ImFontAtla:
	mov	rcx, QWORD PTR [rbx+88]
	test	rcx, rcx
	je	SHORT $LN18@ImFontAtla
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN18@ImFontAtla:
	mov	rcx, QWORD PTR [rbx+72]
	test	rcx, rcx
	je	SHORT $LN25@ImFontAtla
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN25@ImFontAtla:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1611
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1ImFontAtlas@@QEAA@XZ ENDP				; ImFontAtlas::~ImFontAtlas
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImFontAtlas@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImFontAtlas@@QEAA@XZ PROC				; ImFontAtlas::ImFontAtlas, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; File E:\reps\ocornut\imgui\imgui.h
; Line 211
	xor	eax, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1600
	mov	QWORD PTR [rcx+44], rax
; Line 1601
	mov	QWORD PTR [rcx+52], rax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	mov	QWORD PTR [rcx+64], rax
	mov	QWORD PTR [rcx+72], rax
	mov	QWORD PTR [rcx+80], rax
	mov	QWORD PTR [rcx+88], rax
	mov	QWORD PTR [rcx+96], rax
	mov	QWORD PTR [rcx+104], rax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1592
	mov	BYTE PTR [rcx], al
; Line 1593
	mov	DWORD PTR [rcx+4], eax
; Line 1594
	mov	QWORD PTR [rcx+8], rax
; Line 1595
	mov	DWORD PTR [rcx+16], eax
; Line 1598
	mov	QWORD PTR [rcx+24], rax
; Line 1599
	mov	QWORD PTR [rcx+32], rax
; Line 1600
	mov	DWORD PTR [rcx+40], eax
; Line 1601
	mov	DWORD PTR [rcx+48], eax
; Line 1602
	mov	QWORD PTR [rcx+56], rax
; Line 1605
	mov	rax, rcx
	mov	DWORD PTR [rcx+20], 1
	mov	DWORD PTR [rcx+112], -1
	ret	0
??0ImFontAtlas@@QEAA@XZ ENDP				; ImFontAtlas::ImFontAtlas
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?IsPacked@ImFontAtlasCustomRect@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?IsPacked@ImFontAtlasCustomRect@@QEBA_NXZ PROC		; ImFontAtlasCustomRect::IsPacked, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2162
	mov	eax, 65535				; 0000ffffH
	cmp	WORD PTR [rcx+4], ax
	setne	al
	ret	0
?IsPacked@ImFontAtlasCustomRect@@QEBA_NXZ ENDP		; ImFontAtlasCustomRect::IsPacked
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImFontAtlasCustomRect@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImFontAtlasCustomRect@@QEAA@XZ PROC			; ImFontAtlasCustomRect::ImFontAtlasCustomRect, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2161
	xor	edx, edx
	mov	DWORD PTR [rcx+4], -1			; ffffffffH
	mov	DWORD PTR [rcx], edx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], rdx
	mov	QWORD PTR [rcx+24], rdx
	ret	0
??0ImFontAtlasCustomRect@@QEAA@XZ ENDP			; ImFontAtlasCustomRect::ImFontAtlasCustomRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?BuildRanges@ImFontGlyphRangesBuilder@@QEAAXPEAU?$ImVector@G@@@Z
_TEXT	SEGMENT
this$ = 80
out_ranges$ = 88
$T1 = 96
?BuildRanges@ImFontGlyphRangesBuilder@@QEAAXPEAU?$ImVector@G@@@Z PROC ; ImFontGlyphRangesBuilder::BuildRanges, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2570
$LN51:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; Line 2572
	xor	r12d, r12d
	mov	rdi, rdx
	mov	ebx, r12d
	mov	r15, rcx
	npad	14
$LL4@BuildRange:
; Line 2573
	movsxd	rax, ebx
; File E:\reps\ocornut\imgui\imgui.h
; Line 2144
	mov	ebp, 1
	mov	rsi, rax
	and	al, 31
	movzx	ecx, al
	shr	rsi, 5
	shl	ebp, cl
; Line 1327
	cmp	esi, DWORD PTR [r15]
	jl	SHORT $LN13@BuildRange
	mov	r8d, 1327				; 0000052fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN13@BuildRange:
; Line 2144
	mov	rax, QWORD PTR [r15+8]
; Line 1327
	movsxd	rcx, esi
; Line 2144
	test	DWORD PTR [rax+rcx*4], ebp
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2573
	je	$LN2@BuildRange
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rdi]
	mov	r8d, DWORD PTR [rdi+4]
	cmp	ecx, r8d
	jne	SHORT $LN21@BuildRange
	lea	esi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN19@BuildRange
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN20@BuildRange
$LN19@BuildRange:
	mov	eax, 8
$LN20@BuildRange:
	cmp	eax, esi
	cmovg	esi, eax
; Line 1344
	cmp	esi, r8d
	jle	SHORT $LN21@BuildRange
	movsxd	rcx, esi
	add	rcx, rcx
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rdi+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN23@BuildRange
	movsxd	r8, DWORD PTR [rdi]
	mov	rcx, rax
	add	r8, r8
	call	memcpy
	mov	rcx, QWORD PTR [rdi+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN23@BuildRange:
	mov	ecx, DWORD PTR [rdi]
	mov	QWORD PTR [rdi+8], rbp
	mov	DWORD PTR [rdi+4], esi
$LN21@BuildRange:
; Line 1347
	mov	rax, QWORD PTR [rdi+8]
	movsxd	rcx, ecx
	mov	WORD PTR [rax+rcx*2], bx
	inc	DWORD PTR [rdi]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2576
	cmp	ebx, 65535				; 0000ffffH
	jge	SHORT $LN49@BuildRange
$LL5@BuildRange:
	lea	r14d, DWORD PTR [rbx+1]
; File E:\reps\ocornut\imgui\imgui.h
; Line 2144
	mov	ebp, 1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2576
	movsxd	rax, r14d
; File E:\reps\ocornut\imgui\imgui.h
; Line 2144
	mov	rsi, rax
	and	al, 31
	movzx	ecx, al
	shr	rsi, 5
	shl	ebp, cl
; Line 1327
	cmp	esi, DWORD PTR [r15]
	jl	SHORT $LN29@BuildRange
	mov	r8d, 1327				; 0000052fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN29@BuildRange:
; Line 2144
	mov	rax, QWORD PTR [r15+8]
; Line 1327
	movsxd	rcx, esi
; Line 2144
	test	DWORD PTR [rax+rcx*4], ebp
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2576
	je	SHORT $LN49@BuildRange
; Line 2577
	mov	ebx, r14d
	cmp	r14d, 65535				; 0000ffffH
	jl	SHORT $LL5@BuildRange
$LN49@BuildRange:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rdi]
	mov	r8d, DWORD PTR [rdi+4]
	cmp	ecx, r8d
	jne	SHORT $LN37@BuildRange
	lea	esi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN35@BuildRange
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN36@BuildRange
$LN35@BuildRange:
	mov	eax, 8
$LN36@BuildRange:
	cmp	eax, esi
	cmovg	esi, eax
; Line 1344
	cmp	esi, r8d
	jle	SHORT $LN37@BuildRange
	movsxd	rcx, esi
	add	rcx, rcx
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rdi+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN39@BuildRange
	movsxd	r8, DWORD PTR [rdi]
	mov	rcx, rax
	add	r8, r8
	call	memcpy
	mov	rcx, QWORD PTR [rdi+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN39@BuildRange:
	mov	ecx, DWORD PTR [rdi]
	mov	QWORD PTR [rdi+8], rbp
	mov	DWORD PTR [rdi+4], esi
$LN37@BuildRange:
; Line 1347
	mov	rax, QWORD PTR [rdi+8]
	movsxd	rcx, ecx
	mov	WORD PTR [rax+rcx*2], bx
	inc	DWORD PTR [rdi]
$LN2@BuildRange:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2572
	inc	ebx
	cmp	ebx, 65535				; 0000ffffH
	jle	$LL4@BuildRange
; Line 2580
	lea	rdx, QWORD PTR $T1[rsp]
	mov	WORD PTR $T1[rsp], r12w
	mov	rcx, rdi
	call	?push_back@?$ImVector@G@@QEAAXAEBG@Z	; ImVector<unsigned short>::push_back
; Line 2581
	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
?BuildRanges@ImFontGlyphRangesBuilder@@QEAAXPEAU?$ImVector@G@@@Z ENDP ; ImFontGlyphRangesBuilder::BuildRanges
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z
_TEXT	SEGMENT
this$ = 48
ranges$ = 56
?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z PROC	; ImFontGlyphRangesBuilder::AddRanges, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2563
$LN27:
	mov	QWORD PTR [rsp+32], rbx
	push	r14
	sub	rsp, 32					; 00000020H
; Line 2564
	movzx	ebx, WORD PTR [rdx]
	mov	r14, rcx
	test	bx, bx
	je	$LN3@AddRanges
; File E:\reps\ocornut\imgui\imgui.h
; Line 2145
	mov	QWORD PTR [rsp+48], rbp
	lea	rbp, QWORD PTR [rdx+2]
	mov	QWORD PTR [rsp+56], rsi
	mov	QWORD PTR [rsp+64], rdi
	npad	3
$LL4@AddRanges:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2565
	cmp	bx, WORD PTR [rbp]
	ja	SHORT $LN2@AddRanges
	npad	10
$LL7@AddRanges:
; File E:\reps\ocornut\imgui\imgui.h
; Line 2146
	movzx	eax, bx
; Line 2145
	mov	esi, 1
	mov	edi, eax
	and	al, 31
	movzx	ecx, al
	shr	rdi, 5
	shl	esi, cl
; Line 1326
	cmp	edi, DWORD PTR [r14]
	jl	SHORT $LN15@AddRanges
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN15@AddRanges:
	mov	rax, QWORD PTR [r14+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2565
	inc	bx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	mov	ecx, edi
; Line 2145
	or	DWORD PTR [rax+rcx*4], esi
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2565
	cmp	bx, WORD PTR [rbp]
	jbe	SHORT $LL7@AddRanges
$LN2@AddRanges:
; Line 2564
	movzx	ebx, WORD PTR [rbp+2]
	add	rbp, 4
	test	bx, bx
	jne	SHORT $LL4@AddRanges
	mov	rdi, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+48]
$LN3@AddRanges:
; Line 2567
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z ENDP	; ImFontGlyphRangesBuilder::AddRanges
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddText@ImFontGlyphRangesBuilder@@QEAAXPEBD0@Z
_TEXT	SEGMENT
this$ = 64
text$ = 72
c$1 = 80
text_end$ = 80
?AddText@ImFontGlyphRangesBuilder@@QEAAXPEBD0@Z PROC	; ImFontGlyphRangesBuilder::AddText, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2550
$LN20:
	mov	QWORD PTR [rsp+32], rbx
	push	rsi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+64], rbp
	mov	rsi, r8
	mov	QWORD PTR [rsp+72], rdi
	mov	rbx, rdx
	mov	r14, rcx
	xor	r15d, r15d
$LL2@AddText:
; Line 2551
	test	rsi, rsi
	je	SHORT $LN6@AddText
	cmp	rbx, rsi
	mov	eax, r15d
	setb	al
	jmp	SHORT $LN7@AddText
$LN6@AddText:
	movsx	eax, BYTE PTR [rbx]
$LN7@AddText:
	test	eax, eax
	je	SHORT $LN16@AddText
; Line 2554
	mov	r8, rsi
	mov	DWORD PTR c$1[rsp], r15d
	mov	rdx, rbx
	lea	rcx, QWORD PTR c$1[rsp]
	call	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z	; ImTextCharFromUtf8
; Line 2555
	movsxd	rcx, eax
	add	rbx, rcx
; Line 2556
	test	eax, eax
	je	SHORT $LN16@AddText
; File E:\reps\ocornut\imgui\imgui.h
; Line 2146
	movzx	eax, WORD PTR c$1[rsp]
; Line 2145
	mov	ebp, 1
	mov	edi, eax
	and	al, 31
	movzx	ecx, al
	shr	rdi, 5
	shl	ebp, cl
; Line 1326
	cmp	edi, DWORD PTR [r14]
	jl	SHORT $LN14@AddText
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN14@AddText:
	mov	rax, QWORD PTR [r14+8]
	mov	ecx, edi
; Line 2145
	or	DWORD PTR [rax+rcx*4], ebp
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 2559
	jmp	SHORT $LL2@AddText
$LN16@AddText:
	mov	rdi, QWORD PTR [rsp+72]
; Line 2560
	mov	rbp, QWORD PTR [rsp+64]
	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rsi
	ret	0
?AddText@ImFontGlyphRangesBuilder@@QEAAXPEBD0@Z ENDP	; ImFontGlyphRangesBuilder::AddText
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddChar@ImFontGlyphRangesBuilder@@QEAAXG@Z
_TEXT	SEGMENT
this$ = 48
c$ = 56
?AddChar@ImFontGlyphRangesBuilder@@QEAAXG@Z PROC	; ImFontGlyphRangesBuilder::AddChar, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2146
$LN9:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	movzx	eax, dx
	mov	rsi, rcx
; Line 2145
	mov	ebx, eax
	mov	edi, 1
	and	al, 31
	shr	rbx, 5
	movzx	ecx, al
	shl	edi, cl
; Line 1326
	cmp	ebx, DWORD PTR [rsi]
	jl	SHORT $LN7@AddChar
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN7@AddChar:
	mov	rax, QWORD PTR [rsi+8]
; Line 2146
	mov	rsi, QWORD PTR [rsp+56]
; Line 1326
	mov	ecx, ebx
; Line 2146
	mov	rbx, QWORD PTR [rsp+48]
; Line 2145
	or	DWORD PTR [rax+rcx*4], edi
; Line 2146
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?AddChar@ImFontGlyphRangesBuilder@@QEAAXG@Z ENDP	; ImFontGlyphRangesBuilder::AddChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?SetBit@ImFontGlyphRangesBuilder@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
n$ = 56
?SetBit@ImFontGlyphRangesBuilder@@QEAAX_K@Z PROC	; ImFontGlyphRangesBuilder::SetBit, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2145
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rbx, rdx
	movzx	ecx, dl
	shr	rbx, 5
	and	cl, 31
	mov	edi, 1
	shl	edi, cl
; Line 1326
	cmp	ebx, DWORD PTR [rsi]
	jl	SHORT $LN5@SetBit
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN5@SetBit:
	mov	rax, QWORD PTR [rsi+8]
; Line 2145
	mov	rsi, QWORD PTR [rsp+56]
; Line 1326
	movsxd	rcx, ebx
; Line 2145
	mov	rbx, QWORD PTR [rsp+48]
	or	DWORD PTR [rax+rcx*4], edi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetBit@ImFontGlyphRangesBuilder@@QEAAX_K@Z ENDP	; ImFontGlyphRangesBuilder::SetBit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetBit@ImFontGlyphRangesBuilder@@QEBA_N_K@Z
_TEXT	SEGMENT
this$ = 48
n$ = 56
?GetBit@ImFontGlyphRangesBuilder@@QEBA_N_K@Z PROC	; ImFontGlyphRangesBuilder::GetBit, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2144
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rbx, rdx
	movzx	ecx, dl
	shr	rbx, 5
	and	cl, 31
	mov	edi, 1
	shl	edi, cl
; Line 1327
	cmp	ebx, DWORD PTR [rsi]
	jl	SHORT $LN5@GetBit
	mov	r8d, 1327				; 0000052fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN5@GetBit:
; Line 2144
	mov	rax, QWORD PTR [rsi+8]
	mov	rsi, QWORD PTR [rsp+56]
; Line 1327
	movsxd	rcx, ebx
; Line 2144
	mov	rbx, QWORD PTR [rsp+48]
	test	DWORD PTR [rax+rcx*4], edi
	setne	al
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?GetBit@ImFontGlyphRangesBuilder@@QEBA_N_K@Z ENDP	; ImFontGlyphRangesBuilder::GetBit
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@I@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@I@@QEAAXH@Z PROC			; ImVector<unsigned int>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@I@@QEAAXH@Z ENDP			; ImVector<unsigned int>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@I@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@I@@QEAAXH@Z PROC			; ImVector<unsigned int>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rcx, esi
	shl	rcx, 2
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@I@@QEAAXH@Z ENDP			; ImVector<unsigned int>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@I@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@I@@QEBAHH@Z PROC		; ImVector<unsigned int>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@I@@QEBAHH@Z ENDP		; ImVector<unsigned int>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$ImVector@I@@QEBAPEBIXZ
_TEXT	SEGMENT
this$ = 8
?end@?$ImVector@I@@QEBAPEBIXZ PROC			; ImVector<unsigned int>::end, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1333
	movsxd	rdx, DWORD PTR [rcx]
	mov	rax, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rax+rdx*4]
	ret	0
?end@?$ImVector@I@@QEBAPEBIXZ ENDP			; ImVector<unsigned int>::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$ImVector@I@@QEBAPEBIXZ
_TEXT	SEGMENT
this$ = 8
?begin@?$ImVector@I@@QEBAPEBIXZ PROC			; ImVector<unsigned int>::begin, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1331
	mov	rax, QWORD PTR [rcx+8]
	ret	0
?begin@?$ImVector@I@@QEBAPEBIXZ ENDP			; ImVector<unsigned int>::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@I@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@I@@QEAAXXZ PROC			; ImVector<unsigned int>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@I@@QEAAXXZ ENDP			; ImVector<unsigned int>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@I@@QEBAAEBIH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@I@@QEBAAEBIH@Z PROC			; ImVector<unsigned int>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1327
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1327				; 0000052fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rax, QWORD PTR [rax+rbx*4]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@I@@QEBAAEBIH@Z ENDP			; ImVector<unsigned int>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@I@@QEAAAEAIH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@I@@QEAAAEAIH@Z PROC			; ImVector<unsigned int>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rax, QWORD PTR [rax+rbx*4]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@I@@QEAAAEAIH@Z ENDP			; ImVector<unsigned int>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?empty@?$ImVector@I@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$ImVector@I@@QEBA_NXZ PROC			; ImVector<unsigned int>::empty, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	cmp	DWORD PTR [rcx], 0
	sete	al
	ret	0
?empty@?$ImVector@I@@QEBA_NXZ ENDP			; ImVector<unsigned int>::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@I@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@I@@QEAA@XZ PROC				; ImVector<unsigned int>::~ImVector<unsigned int>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@I@@QEAA@XZ ENDP				; ImVector<unsigned int>::~ImVector<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImFontConfig@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImFontConfig@@QEAA@XZ PROC				; ImFontConfig::ImFontConfig, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1517
	xor	edx, edx
; Line 1519
	mov	BYTE PTR [rcx+12], 1
	mov	QWORD PTR [rcx], rdx
; Line 1533
	mov	eax, 65535				; 0000ffffH
	mov	WORD PTR [rcx+84], ax
	xorps	xmm0, xmm0
	mov	DWORD PTR [rcx+8], edx
; Line 1534
	xor	eax, eax
	mov	QWORD PTR [rcx+16], rdx
	mov	BYTE PTR [rcx+32], dl
	mov	QWORD PTR [rcx+36], rdx
	mov	QWORD PTR [rcx+44], rdx
	mov	QWORD PTR [rcx+56], rdx
	mov	DWORD PTR [rcx+64], edx
	mov	BYTE PTR [rcx+72], dl
	mov	DWORD PTR [rcx+76], edx
	mov	DWORD PTR [rcx+24], 3
	mov	DWORD PTR [rcx+28], 1
	mov	DWORD PTR [rcx+68], 2139095039		; 7f7fffffH
	mov	DWORD PTR [rcx+80], 1065353216		; 3f800000H
	movups	XMMWORD PTR [rcx+86], xmm0
	movups	XMMWORD PTR [rcx+102], xmm0
	mov	QWORD PTR [rcx+118], rax
; Line 1536
	mov	rax, rcx
	mov	QWORD PTR [rcx+128], rdx
	ret	0
??0ImFontConfig@@QEAA@XZ ENDP				; ImFontConfig::ImFontConfig
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z
_TEXT	SEGMENT
this$ = 80
fb_scale$ = 88
?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z PROC	; ImDrawData::ScaleClipRects, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1452
$LN26:
	push	rbp
	push	r12
	push	r15
	sub	rsp, 48					; 00000030H
; Line 1453
	xor	ebp, ebp
	mov	r12, rdx
	mov	r15, rcx
	cmp	DWORD PTR [rcx+16], ebp
	jle	$LN3@ScaleClipR
	mov	QWORD PTR [rsp+80], rbx
	mov	QWORD PTR [rsp+88], rsi
	mov	QWORD PTR [rsp+96], rdi
	mov	QWORD PTR [rsp+104], r14
	xor	r14d, r14d
$LL4@ScaleClipR:
; Line 1455
	mov	rax, QWORD PTR [r15+8]
; Line 1456
	xor	ebx, ebx
	mov	rsi, QWORD PTR [r14+rax]
	mov	eax, DWORD PTR [rsi]
	test	eax, eax
	jle	SHORT $LN2@ScaleClipR
; Line 1458
	xor	edi, edi
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, eax
	jl	SHORT $LN11@ScaleClipR
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN11@ScaleClipR:
	mov	rax, QWORD PTR [rsi+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1456
	inc	ebx
; Line 1459
	movss	xmm1, DWORD PTR [r12]
	movss	xmm2, DWORD PTR [r12+4]
	movaps	xmm3, xmm1
	movaps	xmm0, xmm2
	mulss	xmm3, DWORD PTR [rdi+rax+4]
	mulss	xmm0, DWORD PTR [rdi+rax+8]
	mulss	xmm1, DWORD PTR [rdi+rax+12]
	mulss	xmm2, DWORD PTR [rdi+rax+16]
	shufps	xmm3, xmm3, 225				; 000000e1H
	movss	xmm3, xmm0
	shufps	xmm3, xmm3, 198				; 000000c6H
	movss	xmm3, xmm1
	shufps	xmm3, xmm3, 39				; 00000027H
	movss	xmm3, xmm2
	shufps	xmm3, xmm3, 57				; 00000039H
	movups	XMMWORD PTR [rdi+rax+4], xmm3
	mov	eax, DWORD PTR [rsi]
	add	rdi, 56					; 00000038H
	cmp	ebx, eax
	jl	SHORT $LN11@ScaleClipR
$LN2@ScaleClipR:
; Line 1453
	inc	ebp
	add	r14, 8
	cmp	ebp, DWORD PTR [r15+16]
	jl	$LL4@ScaleClipR
	mov	r14, QWORD PTR [rsp+104]
	mov	rdi, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+88]
	mov	rbx, QWORD PTR [rsp+80]
$LN3@ScaleClipR:
; Line 1462
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r12
	pop	rbp
	ret	0
?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z ENDP	; ImDrawData::ScaleClipRects
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?DeIndexAllBuffers@ImDrawData@@QEAAXXZ
_TEXT	SEGMENT
new_vtx_buffer$ = 32
this$ = 112
i$1$ = 120
tv528 = 128
?DeIndexAllBuffers@ImDrawData@@QEAAXXZ PROC		; ImDrawData::DeIndexAllBuffers, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1431
$LN65:
	mov	QWORD PTR [rsp+32], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
	mov	r15, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	r12d, r12d
	mov	QWORD PTR new_vtx_buffer$[rsp], r12
	xor	r14d, r14d
	xor	r13d, r13d
	mov	QWORD PTR new_vtx_buffer$[rsp+8], r13
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1433
	mov	QWORD PTR [rcx+20], r13
; Line 1434
	xor	eax, eax
	mov	DWORD PTR i$1$[rsp], eax
	cmp	DWORD PTR [rcx+16], eax
	jle	$LN3@DeIndexAll
	xor	ecx, ecx
	mov	QWORD PTR tv528[rsp], rcx
	npad	4
$LL4@DeIndexAll:
; Line 1436
	mov	rbx, QWORD PTR [r15+8]
	mov	rbx, QWORD PTR [rcx+rbx]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	mov	ebp, DWORD PTR [rbx+16]
	test	ebp, ebp
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1437
	je	$LN2@DeIndexAll
; Line 1439
	mov	eax, ebp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	cmp	ebp, r12d
	jle	SHORT $LN22@DeIndexAll
; Line 1340
	test	r12d, r12d
	je	SHORT $LN20@DeIndexAll
	mov	eax, r12d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r12d
	jmp	SHORT $LN21@DeIndexAll
$LN20@DeIndexAll:
	mov	eax, 8
$LN21@DeIndexAll:
	mov	edi, ebp
	cmp	eax, ebp
	cmovg	edi, eax
; Line 1341
	mov	eax, ebp
; Line 1344
	cmp	edi, r12d
	jle	SHORT $LN22@DeIndexAll
	movsxd	rax, edi
	lea	rcx, QWORD PTR [rax+rax*4]
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rsi, rax
	test	r13, r13
	je	SHORT $LN24@DeIndexAll
	movsxd	rdx, r14d
	lea	r8, QWORD PTR [rdx+rdx*4]
	shl	r8, 2
	mov	rdx, r13
	mov	rcx, rax
	call	memcpy
	mov	rcx, r13
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN24@DeIndexAll:
	mov	r13, rsi
	mov	r12d, edi
	mov	eax, DWORD PTR [rbx+16]
$LN22@DeIndexAll:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1440
	xor	edi, edi
	test	eax, eax
	jle	$LN60@DeIndexAll
; Line 1441
	xor	r14d, r14d
	mov	r15, r13
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, eax
	jl	SHORT $LN28@DeIndexAll
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN28@DeIndexAll:
	mov	rax, QWORD PTR [rbx+24]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1441
	movzx	esi, WORD PTR [r14+rax]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	esi, DWORD PTR [rbx+32]
	jl	SHORT $LN31@DeIndexAll
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN31@DeIndexAll:
	lea	rcx, QWORD PTR [rsi+rsi*4]
	mov	rax, QWORD PTR [rbx+40]
	lea	rsi, QWORD PTR [rax+rcx*4]
	cmp	edi, ebp
	jl	SHORT $LN34@DeIndexAll
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN34@DeIndexAll:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1441
	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR [r15], xmm0
	mov	eax, DWORD PTR [rsi+16]
	mov	DWORD PTR [r15+16], eax
; Line 1440
	inc	edi
	add	r14, 2
	add	r15, 20
	mov	eax, DWORD PTR [rbx+16]
	cmp	edi, eax
	jl	SHORT $LN28@DeIndexAll
	mov	r15, QWORD PTR this$[rsp]
$LN60@DeIndexAll:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1338
	mov	r14d, DWORD PTR [rbx+32]
	mov	DWORD PTR new_vtx_buffer$[rsp], r14d
	mov	DWORD PTR [rbx+32], ebp
	mov	eax, r12d
	mov	r12d, DWORD PTR [rbx+36]
	mov	DWORD PTR new_vtx_buffer$[rsp+4], r12d
	mov	DWORD PTR [rbx+36], eax
	mov	rax, r13
	mov	r13, QWORD PTR [rbx+40]
	mov	QWORD PTR new_vtx_buffer$[rsp+8], r13
	mov	QWORD PTR [rbx+40], rax
; Line 1341
	mov	ecx, DWORD PTR [rbx+20]
	test	ecx, ecx
	jns	SHORT $LN44@DeIndexAll
; Line 1340
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	xor	edi, edi
	test	eax, eax
	cmovg	edi, eax
; Line 1344
	cmp	edi, ecx
	jle	SHORT $LN44@DeIndexAll
	movsxd	rcx, edi
	add	rcx, rcx
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rsi, rax
	mov	rdx, QWORD PTR [rbx+24]
	test	rdx, rdx
	je	SHORT $LN46@DeIndexAll
	movsxd	r8, DWORD PTR [rbx+16]
	add	r8, r8
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+24]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN46@DeIndexAll:
	mov	QWORD PTR [rbx+24], rsi
	mov	DWORD PTR [rbx+20], edi
	mov	ebp, DWORD PTR [rbx+32]
$LN44@DeIndexAll:
; Line 1341
	mov	DWORD PTR [rbx+16], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1444
	add	DWORD PTR [r15+24], ebp
	mov	eax, DWORD PTR i$1$[rsp]
	mov	rcx, QWORD PTR tv528[rsp]
$LN2@DeIndexAll:
; Line 1434
	inc	eax
	mov	DWORD PTR i$1$[rsp], eax
	add	rcx, 8
	mov	QWORD PTR tv528[rsp], rcx
	cmp	eax, DWORD PTR [r15+16]
	jl	$LL4@DeIndexAll
$LN3@DeIndexAll:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	test	r13, r13
	je	SHORT $LN61@DeIndexAll
	mov	rcx, r13
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN61@DeIndexAll:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1446
	mov	rbx, QWORD PTR [rsp+136]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?DeIndexAllBuffers@ImDrawData@@QEAAXXZ ENDP		; ImDrawData::DeIndexAllBuffers
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
new_vtx_buffer$ = 32
this$ = 112
i$1$ = 120
tv528 = 128
?dtor$0@?0??DeIndexAllBuffers@ImDrawData@@QEAAXXZ@4HA PROC ; `ImDrawData::DeIndexAllBuffers'::`1'::dtor$0
	lea	rcx, QWORD PTR new_vtx_buffer$[rdx]
	jmp	??1?$ImVector@UImDrawVert@@@@QEAA@XZ	; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
?dtor$0@?0??DeIndexAllBuffers@ImDrawData@@QEAAXXZ@4HA ENDP ; `ImDrawData::DeIndexAllBuffers'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
new_vtx_buffer$ = 32
this$ = 112
i$1$ = 120
tv528 = 128
?dtor$0@?0??DeIndexAllBuffers@ImDrawData@@QEAAXXZ@4HA PROC ; `ImDrawData::DeIndexAllBuffers'::`1'::dtor$0
	lea	rcx, QWORD PTR new_vtx_buffer$[rdx]
	jmp	??1?$ImVector@UImDrawVert@@@@QEAA@XZ	; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
?dtor$0@?0??DeIndexAllBuffers@ImDrawData@@QEAAXXZ@4HA ENDP ; `ImDrawData::DeIndexAllBuffers'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?UpdateTextureID@ImDrawList@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?UpdateTextureID@ImDrawList@@QEAAXXZ PROC		; ImDrawList::UpdateTextureID, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 471
$LN20:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 473
	movsxd	rax, DWORD PTR [rcx+112]
	xor	esi, esi
	mov	rbx, rcx
	test	eax, eax
	je	SHORT $LN8@UpdateText
	mov	rdx, rax
	mov	rax, QWORD PTR [rcx+120]
	mov	rdi, QWORD PTR [rax+rdx*8-8]
	jmp	SHORT $LN9@UpdateText
$LN8@UpdateText:
	mov	rdi, rsi
$LN9@UpdateText:
; Line 474
	mov	r9d, DWORD PTR [rcx]
	test	r9d, r9d
	je	$LN3@UpdateText
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	jg	SHORT $LN18@UpdateText
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	r9d, DWORD PTR [rbx]
$LN18@UpdateText:
	mov	r8, QWORD PTR [rbx+8]
	movsxd	rax, r9d
	add	r8, -56					; ffffffffffffffc8H
	imul	rcx, rax, 56				; 00000038H
	add	r8, rcx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 475
	je	$LN3@UpdateText
	mov	eax, DWORD PTR [r8]
	test	eax, eax
	je	SHORT $LN4@UpdateText
	cmp	QWORD PTR [r8+24], rdi
	jne	$LN3@UpdateText
$LN4@UpdateText:
	cmp	QWORD PTR [r8+40], rsi
	jne	SHORT $LN3@UpdateText
; Line 483
	cmp	r9d, 1
	lea	rdx, QWORD PTR [r8-56]
	cmovle	rdx, rsi
	test	eax, eax
	jne	SHORT $LN5@UpdateText
	test	rdx, rdx
	je	SHORT $LN5@UpdateText
	cmp	QWORD PTR [rdx+24], rdi
	jne	SHORT $LN5@UpdateText
	mov	eax, DWORD PTR [rbx+96]
	test	eax, eax
	je	SHORT $LN14@UpdateText
	dec	eax
	movsxd	rcx, eax
	shl	rcx, 4
	add	rcx, QWORD PTR [rbx+104]
	jmp	SHORT $LN15@UpdateText
$LN14@UpdateText:
	mov	rcx, QWORD PTR [rbx+56]
	add	rcx, 28
$LN15@UpdateText:
	mov	rax, QWORD PTR [rdx+4]
	cmp	rax, QWORD PTR [rcx]
	jne	SHORT $LN5@UpdateText
	mov	rax, QWORD PTR [rdx+12]
	cmp	rax, QWORD PTR [rcx+8]
	jne	SHORT $LN5@UpdateText
	cmp	QWORD PTR [rdx+40], rsi
	jne	SHORT $LN5@UpdateText
; Line 484
	mov	rcx, rbx
; Line 487
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 484
	jmp	?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ ; ImVector<ImDrawCmd>::pop_back
$LN5@UpdateText:
; Line 486
	mov	QWORD PTR [r8+24], rdi
; Line 487
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@UpdateText:
; Line 477
	mov	rcx, rbx
; Line 487
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 477
	jmp	?AddDrawCmd@ImDrawList@@QEAAXXZ		; ImDrawList::AddDrawCmd
?UpdateTextureID@ImDrawList@@QEAAXXZ ENDP		; ImDrawList::UpdateTextureID
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?UpdateClipRect@ImDrawList@@QEAAXXZ
_TEXT	SEGMENT
curr_clip_rect$ = 32
this$ = 64
?UpdateClipRect@ImDrawList@@QEAAXXZ PROC		; ImDrawList::UpdateClipRect, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 452
$LN17:
	sub	rsp, 56					; 00000038H
; Line 454
	mov	eax, DWORD PTR [rcx+96]
	mov	rdx, rcx
	test	eax, eax
	je	SHORT $LN8@UpdateClip
	dec	eax
	movsxd	rcx, eax
	shl	rcx, 4
	add	rcx, QWORD PTR [rdx+104]
	jmp	SHORT $LN9@UpdateClip
$LN8@UpdateClip:
	mov	rcx, QWORD PTR [rcx+56]
	add	rcx, 28
$LN9@UpdateClip:
	movups	xmm0, XMMWORD PTR [rcx]
; Line 455
	movsxd	r10, DWORD PTR [rdx]
	mov	QWORD PTR [rsp+48], rbx
	movups	XMMWORD PTR curr_clip_rect$[rsp], xmm0
	test	r10d, r10d
	jle	$LN3@UpdateClip
	mov	r8, QWORD PTR [rdx+8]
	imul	rcx, r10, 56				; 00000038H
	add	r8, -56					; ffffffffffffffc8H
	add	r8, rcx
; Line 456
	je	$LN3@UpdateClip
	mov	eax, DWORD PTR [r8]
	mov	rbx, QWORD PTR curr_clip_rect$[rsp+8]
	mov	r11, QWORD PTR curr_clip_rect$[rsp]
	test	eax, eax
	je	SHORT $LN4@UpdateClip
	cmp	QWORD PTR [r8+4], r11
	jne	SHORT $LN3@UpdateClip
	cmp	QWORD PTR [r8+12], rbx
	jne	SHORT $LN3@UpdateClip
$LN4@UpdateClip:
	cmp	QWORD PTR [r8+40], 0
	jne	SHORT $LN3@UpdateClip
; Line 464
	xor	ecx, ecx
	lea	r9, QWORD PTR [r8-56]
	cmp	r10d, 1
	cmovle	r9, rcx
	test	eax, eax
	jne	SHORT $LN5@UpdateClip
	test	r9, r9
	je	SHORT $LN5@UpdateClip
	cmp	QWORD PTR [r9+4], r11
	jne	SHORT $LN5@UpdateClip
	cmp	QWORD PTR [r9+12], rbx
	jne	SHORT $LN5@UpdateClip
	movsxd	rax, DWORD PTR [rdx+112]
	test	eax, eax
	je	SHORT $LN14@UpdateClip
	mov	rcx, rax
	mov	rax, QWORD PTR [rdx+120]
	mov	rcx, QWORD PTR [rax+rcx*8-8]
$LN14@UpdateClip:
	cmp	QWORD PTR [r9+24], rcx
	jne	SHORT $LN5@UpdateClip
	cmp	QWORD PTR [r9+40], 0
	jne	SHORT $LN5@UpdateClip
; Line 465
	mov	rcx, rdx
	mov	rbx, QWORD PTR [rsp+48]
; Line 468
	add	rsp, 56					; 00000038H
; Line 465
	jmp	?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ ; ImVector<ImDrawCmd>::pop_back
$LN5@UpdateClip:
; Line 467
	movups	XMMWORD PTR [r8+4], xmm0
	mov	rbx, QWORD PTR [rsp+48]
; Line 468
	add	rsp, 56					; 00000038H
	ret	0
$LN3@UpdateClip:
; Line 458
	mov	rcx, rdx
	mov	rbx, QWORD PTR [rsp+48]
; Line 468
	add	rsp, 56					; 00000038H
; Line 458
	jmp	?AddDrawCmd@ImDrawList@@QEAAXXZ		; ImDrawList::AddDrawCmd
?UpdateClipRect@ImDrawList@@QEAAXXZ ENDP		; ImDrawList::UpdateClipRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PrimWriteIdx@ImDrawList@@QEAAXG@Z
_TEXT	SEGMENT
this$ = 8
idx$ = 16
?PrimWriteIdx@ImDrawList@@QEAAXG@Z PROC			; ImDrawList::PrimWriteIdx, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2066
	mov	rax, QWORD PTR [rcx+88]
	mov	WORD PTR [rax], dx
	add	QWORD PTR [rcx+88], 2
	ret	0
?PrimWriteIdx@ImDrawList@@QEAAXG@Z ENDP			; ImDrawList::PrimWriteIdx
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PrimWriteVtx@ImDrawList@@QEAAXAEBUImVec2@@0I@Z
_TEXT	SEGMENT
this$ = 8
pos$ = 16
uv$ = 24
col$ = 32
?PrimWriteVtx@ImDrawList@@QEAAXAEBUImVec2@@0I@Z PROC	; ImDrawList::PrimWriteVtx, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2065
	mov	rax, QWORD PTR [rcx+80]
	movsd	xmm0, QWORD PTR [rdx]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR [rcx+80]
	movsd	xmm1, QWORD PTR [r8]
	movsd	QWORD PTR [rax+8], xmm1
	mov	rax, QWORD PTR [rcx+80]
	mov	DWORD PTR [rax+16], r9d
	add	QWORD PTR [rcx+80], 20
	inc	DWORD PTR [rcx+76]
	ret	0
?PrimWriteVtx@ImDrawList@@QEAAXAEBUImVec2@@0I@Z ENDP	; ImDrawList::PrimWriteVtx
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PrimQuadUV@ImDrawList@@QEAAXAEBUImVec2@@0000000I@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
b$ = 24
c$ = 32
d$ = 40
uv_a$ = 48
uv_b$ = 56
uv_c$ = 64
uv_d$ = 72
col$ = 80
?PrimQuadUV@ImDrawList@@QEAAXAEBUImVec2@@0000000I@Z PROC ; ImDrawList::PrimQuadUV, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 605
$LN4:
	mov	QWORD PTR [rsp+8], rbx
; Line 606
	movzx	r11d, WORD PTR [rcx+76]
	mov	rbx, rcx
; Line 607
	mov	rax, QWORD PTR [rcx+88]
	lea	r10d, DWORD PTR [r11+1]
	mov	WORD PTR [rax], r11w
	mov	rax, QWORD PTR [rcx+88]
	mov	WORD PTR [rax+2], r10w
	lea	r10d, DWORD PTR [r11+2]
	mov	rax, QWORD PTR [rcx+88]
	mov	WORD PTR [rax+4], r10w
; Line 608
	mov	rax, QWORD PTR [rcx+88]
	mov	WORD PTR [rax+6], r11w
	add	r11w, 3
	mov	rax, QWORD PTR [rcx+88]
	mov	WORD PTR [rax+8], r10w
	mov	rax, QWORD PTR [rcx+88]
	mov	WORD PTR [rax+10], r11w
; Line 609
	mov	rax, QWORD PTR [rcx+80]
	movsd	xmm0, QWORD PTR [rdx]
	mov	edx, DWORD PTR col$[rsp]
	movsd	QWORD PTR [rax], xmm0
	mov	rcx, QWORD PTR [rcx+80]
	mov	rax, QWORD PTR uv_a$[rsp]
	movsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rcx+8], xmm0
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], edx
; Line 610
	movsd	xmm0, QWORD PTR [r8]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax+20], xmm0
	mov	rcx, QWORD PTR [rbx+80]
	mov	rax, QWORD PTR uv_b$[rsp]
	movsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rcx+28], xmm0
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+36], edx
; Line 611
	movsd	xmm0, QWORD PTR [r9]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax+40], xmm0
	mov	rcx, QWORD PTR [rbx+80]
	mov	rax, QWORD PTR uv_c$[rsp]
	movsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rcx+48], xmm0
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+56], edx
; Line 612
	mov	rcx, QWORD PTR [rbx+80]
	mov	rax, QWORD PTR d$[rsp]
	movsd	xmm0, QWORD PTR [rax]
	mov	rax, QWORD PTR uv_d$[rsp]
	movsd	QWORD PTR [rcx+60], xmm0
	mov	rcx, QWORD PTR [rbx+80]
	movsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rcx+68], xmm0
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+76], edx
; Line 613
	add	QWORD PTR [rbx+80], 80			; 00000050H
; Line 614
	add	DWORD PTR [rbx+76], 4
; Line 615
	add	QWORD PTR [rbx+88], 12
; Line 616
	mov	rbx, QWORD PTR [rsp+8]
	ret	0
?PrimQuadUV@ImDrawList@@QEAAXAEBUImVec2@@0000000I@Z ENDP ; ImDrawList::PrimQuadUV
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z
_TEXT	SEGMENT
this$ = 80
a$ = 88
c$ = 96
uv_a$ = 104
uv_c$ = 112
col$ = 120
?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z PROC	; ImDrawList::PrimRectUV, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 590
$LN12:
	push	rbx
	sub	rsp, 64					; 00000040H
; Line 593
	mov	rax, QWORD PTR [rcx+88]
	mov	rbx, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm3, DWORD PTR [r9+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 590
	mov	r10, r9
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm4, DWORD PTR [r8]
	movss	xmm5, DWORD PTR [rdx+4]
	mov	r11, QWORD PTR uv_c$[rsp]
	movaps	XMMWORD PTR [rsp+48], xmm6
	movss	xmm6, DWORD PTR [r9]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 592
	movzx	r9d, WORD PTR [rcx+76]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm2, DWORD PTR [r11]
	movaps	XMMWORD PTR [rsp+32], xmm7
	movss	xmm7, DWORD PTR [r11+4]
	movaps	XMMWORD PTR [rsp+16], xmm8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 593
	lea	ecx, DWORD PTR [r9+1]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm8, DWORD PTR [rdx]
	movaps	XMMWORD PTR [rsp], xmm9
	movss	xmm9, DWORD PTR [r8+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 593
	mov	WORD PTR [rax], r9w
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+2], cx
	lea	ecx, DWORD PTR [r9+2]
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+4], cx
; Line 594
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+6], r9w
	add	r9w, 3
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+8], cx
	mov	rax, QWORD PTR [rbx+88]
; Line 595
	mov	ecx, DWORD PTR col$[rsp]
	mov	WORD PTR [rax+10], r9w
	movsd	xmm0, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax], xmm0
	movsd	xmm1, QWORD PTR [r10]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax+8], xmm1
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], ecx
; Line 596
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+20], xmm4
	movss	DWORD PTR [rax+24], xmm5
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+28], xmm2
	movss	DWORD PTR [rax+32], xmm3
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+36], ecx
; Line 597
	movsd	xmm0, QWORD PTR [r8]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax+40], xmm0
	movsd	xmm1, QWORD PTR [r11]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax+48], xmm1
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+56], ecx
; Line 598
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+60], xmm8
; Line 602
	movaps	xmm8, XMMWORD PTR [rsp+16]
	movss	DWORD PTR [rax+64], xmm9
	mov	rax, QWORD PTR [rbx+80]
	movaps	xmm9, XMMWORD PTR [rsp]
	movss	DWORD PTR [rax+68], xmm6
	movaps	xmm6, XMMWORD PTR [rsp+48]
	movss	DWORD PTR [rax+72], xmm7
	mov	rax, QWORD PTR [rbx+80]
	movaps	xmm7, XMMWORD PTR [rsp+32]
	mov	DWORD PTR [rax+76], ecx
	add	QWORD PTR [rbx+80], 80			; 00000050H
	add	DWORD PTR [rbx+76], 4
	add	QWORD PTR [rbx+88], 12
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z ENDP	; ImDrawList::PrimRectUV
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PrimRect@ImDrawList@@QEAAXAEBUImVec2@@0I@Z
_TEXT	SEGMENT
this$ = 32
a$ = 40
c$ = 48
col$ = 56
?PrimRect@ImDrawList@@QEAAXAEBUImVec2@@0I@Z PROC	; ImDrawList::PrimRect, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 575
$LN8:
	push	rbx
	sub	rsp, 16
; Line 576
	mov	rax, QWORD PTR [rcx+56]
	mov	rbx, rcx
; Line 577
	movzx	r10d, WORD PTR [rcx+76]
	mov	r11, rdx
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm2, DWORD PTR [rdx+4]
	movss	xmm3, DWORD PTR [rdx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 576
	movss	xmm5, DWORD PTR [rax]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm1, DWORD PTR [r8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 578
	lea	edx, DWORD PTR [r10+1]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm4, DWORD PTR [r8+4]
	movaps	XMMWORD PTR [rsp], xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 576
	movss	xmm6, DWORD PTR [rax+4]
; Line 578
	mov	rax, QWORD PTR [rcx+88]
	mov	WORD PTR [rax], r10w
	mov	rax, QWORD PTR [rcx+88]
	lea	ecx, DWORD PTR [r10+2]
	mov	WORD PTR [rax+2], dx
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+4], cx
; Line 579
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+6], r10w
	add	r10w, 3
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+8], cx
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+10], r10w
; Line 580
	movsd	xmm0, QWORD PTR [r11]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+8], xmm5
	movss	DWORD PTR [rax+12], xmm6
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], r9d
; Line 581
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+20], xmm1
	movss	DWORD PTR [rax+24], xmm2
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+28], xmm5
	movss	DWORD PTR [rax+32], xmm6
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+36], r9d
; Line 582
	movsd	xmm0, QWORD PTR [r8]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax+40], xmm0
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+48], xmm5
	movss	DWORD PTR [rax+52], xmm6
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+56], r9d
; Line 583
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+60], xmm3
	movss	DWORD PTR [rax+64], xmm4
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+68], xmm5
	movss	DWORD PTR [rax+72], xmm6
	mov	rax, QWORD PTR [rbx+80]
; Line 587
	movaps	xmm6, XMMWORD PTR [rsp]
	mov	DWORD PTR [rax+76], r9d
	add	QWORD PTR [rbx+80], 80			; 00000050H
	add	DWORD PTR [rbx+76], 4
	add	QWORD PTR [rbx+88], 12
	add	rsp, 16
	pop	rbx
	ret	0
?PrimRect@ImDrawList@@QEAAXAEBUImVec2@@0I@Z ENDP	; ImDrawList::PrimRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PrimUnreserve@ImDrawList@@QEAAXHH@Z
_TEXT	SEGMENT
this$ = 48
idx_count$ = 56
vtx_count$ = 64
?PrimUnreserve@ImDrawList@@QEAAXHH@Z PROC		; ImDrawList::PrimUnreserve, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 564
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 567
	movsxd	rax, DWORD PTR [rcx]
	mov	esi, edx
	imul	r9, rax, 56				; 00000038H
	mov	rax, QWORD PTR [rcx+8]
	mov	rdi, rcx
; Line 568
	sub	DWORD PTR [r9+rax-56], edx
; Line 569
	mov	ebx, DWORD PTR [rcx+32]
	sub	ebx, r8d
; File E:\reps\ocornut\imgui\imgui.h
; Line 1343
	cmp	ebx, DWORD PTR [rcx+32]
	jle	SHORT $LN5@PrimUnrese
	mov	r8d, 1343				; 0000053fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz@
	call	QWORD PTR __imp__wassert
$LN5@PrimUnrese:
	mov	DWORD PTR [rdi+32], ebx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 570
	mov	ebx, DWORD PTR [rdi+16]
	sub	ebx, esi
; File E:\reps\ocornut\imgui\imgui.h
; Line 1343
	cmp	ebx, DWORD PTR [rdi+16]
	jle	SHORT $LN9@PrimUnrese
	mov	r8d, 1343				; 0000053fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz@
	call	QWORD PTR __imp__wassert
$LN9@PrimUnrese:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 571
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rdi+16], ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?PrimUnreserve@ImDrawList@@QEAAXHH@Z ENDP		; ImDrawList::PrimUnreserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PrimReserve@ImDrawList@@QEAAXHH@Z
_TEXT	SEGMENT
this$ = 48
idx_count$ = 56
vtx_count$ = 64
?PrimReserve@ImDrawList@@QEAAXHH@Z PROC			; ImDrawList::PrimReserve, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 540
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 543
	mov	r9d, DWORD PTR [rcx+76]
	mov	esi, r8d
	add	r9d, r8d
	mov	ebp, edx
	mov	rdi, rcx
	cmp	r9d, 65536				; 00010000H
	jb	SHORT $LN2@PrimReserv
	test	BYTE PTR [rcx+48], 4
	je	SHORT $LN2@PrimReserv
; Line 545
	mov	eax, DWORD PTR [rcx+32]
	mov	DWORD PTR [rcx+72], eax
; Line 546
	mov	DWORD PTR [rcx+76], 0
; Line 547
	call	?AddDrawCmd@ImDrawList@@QEAAXXZ		; ImDrawList::AddDrawCmd
$LN2@PrimReserv:
; Line 550
	movsxd	rax, DWORD PTR [rdi]
	imul	rcx, rax, 56				; 00000038H
	mov	rax, QWORD PTR [rdi+8]
; Line 551
	add	DWORD PTR [rcx+rax-56], ebp
; Line 553
	lea	rcx, QWORD PTR [rdi+32]
	movsxd	rbx, DWORD PTR [rcx]
; Line 554
	lea	edx, DWORD PTR [rbx+rsi]
	call	?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z ; ImVector<ImDrawVert>::resize
; Line 555
	mov	rax, QWORD PTR [rdi+40]
	lea	rcx, QWORD PTR [rbx+rbx*4]
; Line 557
	movsxd	rbx, DWORD PTR [rdi+16]
	lea	rcx, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR [rdi+80], rcx
; Line 558
	lea	edx, DWORD PTR [rbx+rbp]
	lea	rcx, QWORD PTR [rdi+16]
	call	?resize@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::resize
; Line 559
	mov	rax, QWORD PTR [rdi+24]
; Line 560
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	lea	rcx, QWORD PTR [rax+rbx*2]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+88], rcx
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?PrimReserve@ImDrawList@@QEAAXHH@Z ENDP			; ImDrawList::PrimReserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ClearFreeMemory@ImDrawList@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearFreeMemory@ImDrawList@@QEAAXXZ PROC		; ImDrawList::ClearFreeMemory, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 396
$LN22:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	xor	edi, edi
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN4@ClearFreeM
	mov	QWORD PTR [rbx], rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], rdi
$LN4@ClearFreeM:
	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN7@ClearFreeM
	mov	QWORD PTR [rbx+16], rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+24], rdi
$LN7@ClearFreeM:
	mov	rcx, QWORD PTR [rbx+40]
	test	rcx, rcx
	je	SHORT $LN10@ClearFreeM
	mov	QWORD PTR [rbx+32], rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+40], rdi
$LN10@ClearFreeM:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 400
	mov	DWORD PTR [rbx+76], edi
; Line 401
	mov	QWORD PTR [rbx+80], rdi
; Line 402
	mov	QWORD PTR [rbx+88], rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rbx+104]
	test	rcx, rcx
	je	SHORT $LN13@ClearFreeM
	mov	QWORD PTR [rbx+96], rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+104], rdi
$LN13@ClearFreeM:
	mov	rcx, QWORD PTR [rbx+120]
	test	rcx, rcx
	je	SHORT $LN16@ClearFreeM
	mov	QWORD PTR [rbx+112], rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+120], rdi
$LN16@ClearFreeM:
	mov	rcx, QWORD PTR [rbx+136]
	test	rcx, rcx
	je	SHORT $LN19@ClearFreeM
	mov	QWORD PTR [rbx+128], rdi
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+136], rdi
$LN19@ClearFreeM:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 406
	lea	rcx, QWORD PTR [rbx+144]
; Line 407
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 406
	jmp	?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ ; ImDrawListSplitter::ClearFreeMemory
?ClearFreeMemory@ImDrawList@@QEAAXXZ ENDP		; ImDrawList::ClearFreeMemory
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Clear@ImDrawList@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Clear@ImDrawList@@QEAAXXZ PROC				; ImDrawList::Clear, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 380
$LN29:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 381
	xor	edx, edx
	mov	rbx, rcx
	call	?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z ; ImVector<ImDrawCmd>::resize
; Line 382
	lea	rcx, QWORD PTR [rbx+16]
	xor	edx, edx
	call	?resize@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::resize
; Line 383
	lea	rcx, QWORD PTR [rbx+32]
	xor	edx, edx
	call	?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z ; ImVector<ImDrawVert>::resize
; Line 384
	mov	rax, QWORD PTR [rbx+56]
	xor	esi, esi
	test	rax, rax
	je	SHORT $LN3@Clear
	mov	eax, DWORD PTR [rax+44]
	jmp	SHORT $LN4@Clear
$LN3@Clear:
	mov	eax, esi
$LN4@Clear:
	mov	DWORD PTR [rbx+48], eax
; Line 385
	mov	QWORD PTR [rbx+72], rsi
; Line 387
	mov	QWORD PTR [rbx+80], rsi
; Line 388
	mov	QWORD PTR [rbx+88], rsi
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	mov	ecx, DWORD PTR [rbx+100]
	test	ecx, ecx
	jns	SHORT $LN6@Clear
; Line 1340
	mov	eax, ecx
	cdq
	sub	eax, edx
	mov	edx, esi
	sar	eax, 1
	add	eax, ecx
; Line 1341
	lea	rcx, QWORD PTR [rbx+96]
; Line 1340
	test	eax, eax
	cmovg	edx, eax
; Line 1341
	call	?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z	; ImVector<ImVec4>::reserve
$LN6@Clear:
	mov	DWORD PTR [rbx+96], esi
	mov	ecx, DWORD PTR [rbx+116]
	test	ecx, ecx
	jns	SHORT $LN13@Clear
; Line 1340
	mov	eax, ecx
	cdq
	sub	eax, edx
	mov	edx, esi
	sar	eax, 1
	add	eax, ecx
; Line 1341
	lea	rcx, QWORD PTR [rbx+112]
; Line 1340
	test	eax, eax
	cmovg	edx, eax
; Line 1341
	call	?reserve@?$ImVector@PEAX@@QEAAXH@Z	; ImVector<void *>::reserve
$LN13@Clear:
	mov	DWORD PTR [rbx+112], esi
	mov	ecx, DWORD PTR [rbx+132]
	test	ecx, ecx
	jns	SHORT $LN20@Clear
; Line 1340
	mov	eax, ecx
	cdq
	sub	eax, edx
	mov	edx, esi
	sar	eax, 1
	add	eax, ecx
; Line 1341
	lea	rcx, QWORD PTR [rbx+128]
; Line 1340
	test	eax, eax
	cmovg	edx, eax
; Line 1341
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
$LN20@Clear:
	mov	DWORD PTR [rbx+128], esi
; Line 1931
	mov	DWORD PTR [rbx+144], esi
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 393
	mov	rsi, QWORD PTR [rsp+56]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1931
	mov	DWORD PTR [rbx+148], 1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 393
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Clear@ImDrawList@@QEAAXXZ ENDP				; ImDrawList::Clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?CloneOutput@ImDrawList@@QEBAPEAU1@XZ
_TEXT	SEGMENT
$T1 = 80
this$ = 80
$T2 = 88
$T3 = 96
$T4 = 104
?CloneOutput@ImDrawList@@QEBAPEAU1@XZ PROC		; ImDrawList::CloneOutput, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 410
$LN23:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rsi, rcx
; Line 411
	mov	ecx, 168				; 000000a8H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR $T2[rsp], rax
	lea	rcx, QWORD PTR $T1[rsp]
	mov	QWORD PTR $T3[rsp], rcx
	mov	QWORD PTR $T4[rsp], rax
	xor	ebp, ebp
	test	rax, rax
	je	SHORT $LN3@CloneOutpu
	mov	rdx, QWORD PTR [rsi+56]
	mov	rcx, rax
	call	??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z ; ImDrawList::ImDrawList
	mov	rbx, rax
	jmp	SHORT $LN4@CloneOutpu
$LN3@CloneOutpu:
	mov	rbx, rbp
$LN4@CloneOutpu:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN9@CloneOutpu
	mov	QWORD PTR [rbx], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], rbp
$LN9@CloneOutpu:
; Line 1319
	mov	edx, DWORD PTR [rsi]
	mov	rcx, rbx
	call	?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z ; ImVector<ImDrawCmd>::resize
	movsxd	rax, DWORD PTR [rbx]
	imul	r8, rax, 56				; 00000038H
	mov	rdx, QWORD PTR [rsi+8]
	mov	rcx, QWORD PTR [rbx+8]
	call	memcpy
; Line 1329
	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN14@CloneOutpu
	mov	QWORD PTR [rbx+16], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+24], rbp
$LN14@CloneOutpu:
; Line 1319
	mov	edx, DWORD PTR [rsi+16]
	lea	rcx, QWORD PTR [rbx+16]
	call	?resize@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::resize
	movsxd	r8, DWORD PTR [rbx+16]
	add	r8, r8
	mov	rdx, QWORD PTR [rsi+24]
	mov	rcx, QWORD PTR [rbx+24]
	call	memcpy
; Line 1329
	mov	rcx, QWORD PTR [rbx+40]
	test	rcx, rcx
	je	SHORT $LN19@CloneOutpu
	mov	QWORD PTR [rbx+32], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+40], rbp
$LN19@CloneOutpu:
; Line 1319
	mov	edx, DWORD PTR [rsi+32]
	lea	rcx, QWORD PTR [rbx+32]
	call	?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z ; ImVector<ImDrawVert>::resize
	movsxd	rax, DWORD PTR [rbx+32]
	lea	r8, QWORD PTR [rax+rax*4]
	shl	r8, 2
	mov	rdx, QWORD PTR [rsi+40]
	mov	rcx, QWORD PTR [rbx+40]
	call	memcpy
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 415
	mov	eax, DWORD PTR [rsi+48]
	mov	DWORD PTR [rbx+48], eax
; Line 416
	mov	rax, rbx
; Line 417
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?CloneOutput@ImDrawList@@QEBAPEAU1@XZ ENDP		; ImDrawList::CloneOutput
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
this$ = 80
$T2 = 88
$T3 = 96
$T4 = 104
?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA PROC ; `ImDrawList::CloneOutput'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	r8, QWORD PTR $T2[rbp]
	mov	rax, QWORD PTR $T3[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR $T4[rbp]
	call	??3@YAXPEAXUImNewDummy@@0@Z		; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA ENDP ; `ImDrawList::CloneOutput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
this$ = 80
$T2 = 88
$T3 = 96
$T4 = 104
?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA PROC ; `ImDrawList::CloneOutput'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	r8, QWORD PTR $T2[rbp]
	mov	rax, QWORD PTR $T3[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR $T4[rbp]
	call	??3@YAXPEAXUImNewDummy@@0@Z		; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??CloneOutput@ImDrawList@@QEBAPEAU1@XZ@4HA ENDP ; `ImDrawList::CloneOutput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddDrawCmd@ImDrawList@@QEAAXXZ
_TEXT	SEGMENT
draw_cmd$ = 32
this$ = 112
?AddDrawCmd@ImDrawList@@QEAAXXZ PROC			; ImDrawList::AddDrawCmd, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 424
$LN14:
	push	rbx
	sub	rsp, 96					; 00000060H
; Line 426
	mov	eax, DWORD PTR [rcx+96]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1888
	xor	edx, edx
	mov	DWORD PTR draw_cmd$[rsp], edx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 424
	mov	rbx, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1888
	mov	QWORD PTR draw_cmd$[rsp+40], rdx
	mov	QWORD PTR draw_cmd$[rsp+48], rdx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 426
	test	eax, eax
	je	SHORT $LN3@AddDrawCmd
	dec	eax
	movsxd	rcx, eax
	shl	rcx, 4
	add	rcx, QWORD PTR [rbx+104]
	jmp	SHORT $LN4@AddDrawCmd
$LN3@AddDrawCmd:
	mov	rcx, QWORD PTR [rcx+56]
	add	rcx, 28
$LN4@AddDrawCmd:
	movups	xmm0, XMMWORD PTR [rcx]
; Line 427
	movsxd	rax, DWORD PTR [rbx+112]
	movups	XMMWORD PTR draw_cmd$[rsp+4], xmm0
	test	eax, eax
	je	SHORT $LN5@AddDrawCmd
	mov	rcx, rax
	mov	rax, QWORD PTR [rbx+120]
	mov	rcx, QWORD PTR [rax+rcx*8-8]
	mov	QWORD PTR draw_cmd$[rsp+24], rcx
	jmp	SHORT $LN6@AddDrawCmd
$LN5@AddDrawCmd:
	mov	QWORD PTR draw_cmd$[rsp+24], rdx
$LN6@AddDrawCmd:
; Line 428
	mov	eax, DWORD PTR [rbx+72]
; Line 431
	movss	xmm0, DWORD PTR draw_cmd$[rsp+12]
	comiss	xmm0, DWORD PTR draw_cmd$[rsp+4]
	mov	DWORD PTR draw_cmd$[rsp+32], eax
	mov	eax, DWORD PTR [rbx+16]
	mov	DWORD PTR draw_cmd$[rsp+36], eax
	jb	SHORT $LN7@AddDrawCmd
	movss	xmm0, DWORD PTR draw_cmd$[rsp+16]
	comiss	xmm0, DWORD PTR draw_cmd$[rsp+8]
	jae	SHORT $LN8@AddDrawCmd
$LN7@AddDrawCmd:
	mov	r8d, 431				; 000001afH
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1LC@MAEAJCLC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe@
	call	QWORD PTR __imp__wassert
$LN8@AddDrawCmd:
; Line 432
	lea	rdx, QWORD PTR draw_cmd$[rsp]
	mov	rcx, rbx
	call	?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z ; ImVector<ImDrawCmd>::push_back
; Line 433
	add	rsp, 96					; 00000060H
	pop	rbx
	ret	0
?AddDrawCmd@ImDrawList@@QEAAXXZ ENDP			; ImDrawList::AddDrawCmd
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddCallback@ImDrawList@@QEAAXP6AXPEBU1@PEBUImDrawCmd@@@ZPEAX@Z
_TEXT	SEGMENT
this$ = 48
callback$ = 56
callback_data$ = 64
?AddCallback@ImDrawList@@QEAAXP6AXPEBU1@PEBUImDrawCmd@@@ZPEAX@Z PROC ; ImDrawList::AddCallback, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 436
$LN14:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 437
	mov	eax, DWORD PTR [rcx]
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx
	test	eax, eax
	je	SHORT $LN3@AddCallbac
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	jg	SHORT $LN9@AddCallbac
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx]
$LN9@AddCallbac:
	dec	eax
	movsxd	rcx, eax
	imul	rax, rcx, 56				; 00000038H
	add	rax, QWORD PTR [rbx+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 438
	je	SHORT $LN3@AddCallbac
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN3@AddCallbac
	cmp	QWORD PTR [rax+40], 0
	je	SHORT $LN2@AddCallbac
$LN3@AddCallbac:
; Line 440
	mov	rcx, rbx
	call	?AddDrawCmd@ImDrawList@@QEAAXXZ		; ImDrawList::AddDrawCmd
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [rbx]
	test	eax, eax
	jg	SHORT $LN12@AddCallbac
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx]
$LN12@AddCallbac:
	dec	eax
	movsxd	rcx, eax
	imul	rax, rcx, 56				; 00000038H
	add	rax, QWORD PTR [rbx+8]
$LN2@AddCallbac:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 446
	mov	rcx, rbx
	mov	QWORD PTR [rax+40], rsi
	mov	QWORD PTR [rax+48], rdi
; Line 447
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 446
	jmp	?AddDrawCmd@ImDrawList@@QEAAXXZ		; ImDrawList::AddDrawCmd
?AddCallback@ImDrawList@@QEAAXP6AXPEBU1@PEBUImDrawCmd@@@ZPEAX@Z ENDP ; ImDrawList::AddCallback
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z
_TEXT	SEGMENT
this$ = 112
$T1 = 120
$T2 = 120
$T3 = 120
$T4 = 120
$T5 = 120
$T6 = 120
a$ = 120
b$ = 128
rounding$ = 136
rounding_corners$ = 144
?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z PROC	; ImDrawList::PathRect, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 987
$LN81:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 96					; 00000060H
	mov	r10d, DWORD PTR rounding_corners$[rsp]
	mov	rsi, r8
	movss	xmm2, DWORD PTR __real@3f000000
	mov	eax, r10d
	movss	xmm1, DWORD PTR __real@3f800000
	and	eax, 12
	cmp	al, 12
	movaps	XMMWORD PTR [rsp+80], xmm6
	mov	eax, r10d
	movaps	xmm6, xmm3
	setne	r9b
	mov	r14, rdx
	and	eax, 3
	mov	rbx, rcx
	cmp	al, 3
	setne	al
	test	r9b, al
; Line 988
	je	SHORT $LN6@PathRect
	movaps	xmm3, xmm1
	jmp	SHORT $LN7@PathRect
$LN6@PathRect:
	movaps	xmm3, xmm2
$LN7@PathRect:
	movss	xmm5, DWORD PTR [rdx]
	movss	xmm0, DWORD PTR [r8]
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
; Line 672
	movss	xmm4, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 988
	subss	xmm0, xmm5
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
; Line 672
	andps	xmm0, xmm4
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 988
	mulss	xmm0, xmm3
	subss	xmm0, xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	comiss	xmm0, xmm6
	ja	SHORT $LN23@PathRect
	movaps	xmm6, xmm0
$LN23@PathRect:
	mov	eax, r10d
	and	eax, 10
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 989
	cmp	al, 10
	mov	eax, r10d
	setne	cl
	and	eax, 5
	cmp	al, 5
	setne	al
	test	cl, al
	je	SHORT $LN8@PathRect
	movaps	xmm2, xmm1
$LN8@PathRect:
	movss	xmm3, DWORD PTR [rdx+4]
	movss	xmm0, DWORD PTR [r8+4]
	subss	xmm0, xmm3
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
; Line 672
	andps	xmm0, xmm4
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 989
	mulss	xmm0, xmm2
	subss	xmm0, xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	comiss	xmm0, xmm6
	ja	SHORT $LN29@PathRect
	movaps	xmm6, xmm0
$LN29@PathRect:
	xorps	xmm0, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 991
	comiss	xmm0, xmm6
	jae	$LN79@PathRect
	test	r10d, r10d
	je	$LN79@PathRect
; Line 1000
	movaps	XMMWORD PTR [rsp+64], xmm7
	movaps	XMMWORD PTR [rsp+48], xmm8
	test	r10b, 1
	je	SHORT $LN10@PathRect
	movaps	xmm2, xmm6
	jmp	SHORT $LN11@PathRect
$LN10@PathRect:
	xorps	xmm2, xmm2
$LN11@PathRect:
; Line 1001
	test	r10b, 2
	je	SHORT $LN12@PathRect
	movaps	xmm8, xmm6
	jmp	SHORT $LN13@PathRect
$LN12@PathRect:
	xorps	xmm8, xmm8
$LN13@PathRect:
; Line 1002
	test	r10b, 8
	je	SHORT $LN14@PathRect
	movaps	xmm7, xmm6
	jmp	SHORT $LN15@PathRect
$LN14@PathRect:
	xorps	xmm7, xmm7
$LN15@PathRect:
; Line 1003
	test	r10b, 4
	jne	SHORT $LN17@PathRect
	xorps	xmm6, xmm6
$LN17@PathRect:
; Line 1004
	addss	xmm5, xmm2
	mov	DWORD PTR [rsp+32], 9
	addss	xmm3, xmm2
	mov	r9d, 6
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rbx
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T4[rsp], xmm5
	movss	DWORD PTR $T4[rsp+4], xmm3
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1004
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
; Line 1005
	movss	xmm0, DWORD PTR [rsi]
	lea	rdx, QWORD PTR $T3[rsp]
	movaps	xmm1, xmm8
	mov	DWORD PTR [rsp+32], 12
	addss	xmm1, DWORD PTR [r14+4]
	subss	xmm0, xmm8
	mov	r9d, 9
	movaps	xmm2, xmm8
	mov	rcx, rbx
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T3[rsp+4], xmm1
	movss	DWORD PTR $T3[rsp], xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1005
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
; Line 1006
	movss	xmm0, DWORD PTR [rsi]
	lea	rdx, QWORD PTR $T2[rsp]
	movss	xmm1, DWORD PTR [rsi+4]
	subss	xmm0, xmm7
	subss	xmm1, xmm7
	mov	DWORD PTR [rsp+32], 3
	xor	r9d, r9d
	movaps	xmm2, xmm7
	mov	rcx, rbx
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T2[rsp], xmm0
	movss	DWORD PTR $T2[rsp+4], xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1006
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
; Line 1007
	movss	xmm1, DWORD PTR [rsi+4]
	lea	rdx, QWORD PTR $T1[rsp]
	movaps	xmm0, xmm6
	mov	DWORD PTR [rsp+32], 6
	addss	xmm0, DWORD PTR [r14]
	subss	xmm1, xmm6
	mov	r9d, 3
	movaps	xmm2, xmm6
	mov	rcx, rbx
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rsp], xmm0
	movss	DWORD PTR $T1[rsp+4], xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1007
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
	movaps	xmm8, XMMWORD PTR [rsp+48]
	movaps	xmm7, XMMWORD PTR [rsp+64]
	jmp	$LN3@PathRect
$LN79@PathRect:
; File E:\reps\ocornut\imgui\imgui.h
; Line 2032
	sub	rbx, -128				; ffffffffffffff80H
	mov	QWORD PTR [rsp+112], rdi
; Line 1347
	mov	edi, 8
	mov	eax, DWORD PTR [rbx]
	mov	ecx, DWORD PTR [rbx+4]
	cmp	eax, ecx
	jne	SHORT $LN33@PathRect
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN37@PathRect
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN38@PathRect
$LN37@PathRect:
	mov	eax, edi
$LN38@PathRect:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN33@PathRect:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR [r14]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rbx]
	inc	eax
	mov	DWORD PTR [rbx], eax
; Line 212
	movss	xmm0, DWORD PTR [rsi]
	movss	xmm1, DWORD PTR [r14+4]
; Line 1347
	mov	r8d, DWORD PTR [rbx+4]
; Line 212
	movss	DWORD PTR $T6[rsp], xmm0
	movss	DWORD PTR $T6[rsp+4], xmm1
; Line 1347
	cmp	eax, r8d
	jne	SHORT $LN44@PathRect
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN48@PathRect
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN49@PathRect
$LN48@PathRect:
	mov	eax, edi
$LN49@PathRect:
	cmp	eax, ecx
	cmovg	ecx, eax
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN44@PathRect:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rbx]
	inc	eax
	mov	DWORD PTR [rbx], eax
	mov	r8d, DWORD PTR [rbx+4]
	cmp	eax, r8d
	jne	SHORT $LN53@PathRect
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN57@PathRect
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN58@PathRect
$LN57@PathRect:
	mov	eax, edi
$LN58@PathRect:
	cmp	eax, ecx
	cmovg	ecx, eax
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN53@PathRect:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rbx]
	inc	eax
	mov	DWORD PTR [rbx], eax
; Line 212
	movss	xmm0, DWORD PTR [r14]
	movss	xmm1, DWORD PTR [rsi+4]
; Line 1347
	mov	r8d, DWORD PTR [rbx+4]
; Line 212
	movss	DWORD PTR $T5[rsp], xmm0
	movss	DWORD PTR $T5[rsp+4], xmm1
; Line 1347
	cmp	eax, r8d
	jne	SHORT $LN64@PathRect
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN68@PathRect
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	edi, DWORD PTR [r8+rax]
$LN68@PathRect:
	cmp	edi, ecx
	cmovg	ecx, edi
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN64@PathRect:
	mov	rcx, QWORD PTR [rbx+8]
	mov	rdi, QWORD PTR [rsp+112]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T5[rsp]
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
$LN3@PathRect:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1009
	movaps	xmm6, XMMWORD PTR [rsp+80]
	lea	r11, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	r14
	ret	0
?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z ENDP	; ImDrawList::PathRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z
_TEXT	SEGMENT
$T1 = 240
this$ = 240
p2$ = 248
p3$ = 256
p4$ = 264
num_segments$ = 272
?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z PROC ; ImDrawList::PathBezierCurveTo, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 972
$LN34:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 192				; 000000c0H
; Line 973
	lea	rbx, QWORD PTR [rcx+128]
	movaps	XMMWORD PTR [rsp+128], xmm9
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	r10d, DWORD PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 972
	mov	r15, r9
	movaps	XMMWORD PTR [rsp+112], xmm10
	mov	r12, r8
	mov	r13, rdx
	mov	rdi, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	test	r10d, r10d
	jg	SHORT $LN10@PathBezier
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	r10d, DWORD PTR [rbx]
$LN10@PathBezier:
	mov	rax, QWORD PTR [rbx+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 974
	mov	r14d, DWORD PTR num_segments$[rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	movsxd	rcx, r10d
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 973
	movss	xmm9, DWORD PTR [rax+rcx*8-8]
	movss	xmm10, DWORD PTR [rax+rcx*8-4]
; Line 974
	test	r14d, r14d
	jne	SHORT $LN5@PathBezier
; Line 976
	movss	xmm3, DWORD PTR [r15+4]
	movaps	xmm2, xmm10
	mov	rax, QWORD PTR [rdi+56]
	movaps	xmm1, xmm9
	mov	DWORD PTR [rsp+80], r14d
	mov	rcx, rbx
	movss	xmm0, DWORD PTR [rax+20]
	movss	DWORD PTR [rsp+72], xmm0
	movss	xmm0, DWORD PTR [r15]
	movss	DWORD PTR [rsp+64], xmm3
	movss	xmm3, DWORD PTR [r12+4]
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR [r12]
	movss	DWORD PTR [rsp+48], xmm3
	movss	xmm3, DWORD PTR [r13+4]
	movss	DWORD PTR [rsp+40], xmm0
	movss	DWORD PTR [rsp+32], xmm3
	movss	xmm3, DWORD PTR [r13]
	call	?PathBezierToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z ; PathBezierToCasteljau
; Line 977
	jmp	$LN3@PathBezier
$LN5@PathBezier:
	mov	QWORD PTR [rsp+248], rbp
; Line 980
	mov	ebp, 1
	movaps	XMMWORD PTR [rsp+160], xmm7
	movd	xmm0, r14d
	movaps	XMMWORD PTR [rsp+144], xmm8
	movss	xmm8, DWORD PTR __real@3f800000
	movaps	xmm7, xmm8
	cvtdq2ps xmm0, xmm0
	divss	xmm7, xmm0
; Line 981
	cmp	r14d, ebp
	jl	$LN32@PathBezier
; Line 982
	movaps	XMMWORD PTR [rsp+176], xmm6
	movaps	XMMWORD PTR [rsp+96], xmm11
	movss	xmm11, DWORD PTR __real@40400000
	mov	QWORD PTR [rsp+256], rsi
	npad	8
$LL4@PathBezier:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rbx+4]
	xorps	xmm1, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 937
	movaps	xmm0, xmm8
; Line 982
	cvtsi2ss xmm1, ebp
	mulss	xmm1, xmm7
; Line 937
	subss	xmm0, xmm1
; Line 941
	movaps	xmm3, xmm1
	mulss	xmm3, xmm1
	mulss	xmm3, xmm1
	movaps	xmm5, xmm0
	mulss	xmm5, xmm11
	movaps	xmm4, xmm0
	mulss	xmm4, xmm0
	movaps	xmm6, xmm5
	mulss	xmm5, xmm1
	mulss	xmm6, xmm0
	mulss	xmm4, xmm0
; Line 942
	movaps	xmm0, xmm9
	mulss	xmm5, xmm1
	mulss	xmm6, xmm1
	mulss	xmm0, xmm4
	movaps	xmm1, xmm5
	mulss	xmm1, DWORD PTR [r12]
	movaps	xmm2, xmm6
	mulss	xmm2, DWORD PTR [r13]
	mulss	xmm6, DWORD PTR [r13+4]
	mulss	xmm5, DWORD PTR [r12+4]
	addss	xmm2, xmm0
	movaps	xmm0, xmm3
	mulss	xmm3, DWORD PTR [r15+4]
	mulss	xmm0, DWORD PTR [r15]
	addss	xmm2, xmm1
	addss	xmm2, xmm0
	movaps	xmm0, xmm10
	mulss	xmm0, xmm4
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rsp], xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 942
	addss	xmm6, xmm0
	addss	xmm6, xmm5
	addss	xmm6, xmm3
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rsp+4], xmm6
; Line 1347
	cmp	r10d, ecx
	jne	SHORT $LN22@PathBezier
	lea	edi, DWORD PTR [r10+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN20@PathBezier
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN21@PathBezier
$LN20@PathBezier:
	mov	eax, 8
$LN21@PathBezier:
	cmp	eax, edi
	cmovg	edi, eax
; Line 1344
	cmp	edi, ecx
	jle	SHORT $LN22@PathBezier
	movsxd	rcx, edi
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN24@PathBezier
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN24@PathBezier:
	mov	r10d, DWORD PTR [rbx]
	mov	QWORD PTR [rbx+8], rsi
	mov	DWORD PTR [rbx+4], edi
$LN22@PathBezier:
; Line 1347
	mov	rcx, QWORD PTR [rbx+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 981
	inc	ebp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	rax, QWORD PTR $T1[rsp]
	movsxd	rdx, r10d
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
	mov	r10d, DWORD PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 981
	cmp	ebp, r14d
	jle	$LL4@PathBezier
	movaps	xmm11, XMMWORD PTR [rsp+96]
	movaps	xmm6, XMMWORD PTR [rsp+176]
	mov	rsi, QWORD PTR [rsp+256]
$LN32@PathBezier:
	movaps	xmm7, XMMWORD PTR [rsp+160]
	mov	rbp, QWORD PTR [rsp+248]
	movaps	xmm8, XMMWORD PTR [rsp+144]
$LN3@PathBezier:
; Line 984
	lea	r11, QWORD PTR [rsp+192]
	mov	rbx, QWORD PTR [r11+72]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z ENDP ; ImDrawList::PathBezierCurveTo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 112
center$ = 120
radius$ = 128
a_min_of_12$ = 136
a_max_of_12$ = 144
?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z PROC	; ImDrawList::PathArcToFast, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 895
$LN34:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	movaps	XMMWORD PTR [rsp+48], xmm6
	xorps	xmm0, xmm0
	movaps	xmm6, xmm2
	mov	esi, r9d
; Line 896
	ucomiss	xmm6, xmm0
	mov	r12, rdx
	mov	r13, rcx
	jp	SHORT $LN32@PathArcToF
	je	$LN6@PathArcToF
$LN32@PathArcToF:
	mov	r15d, DWORD PTR a_max_of_12$[rsp]
	cmp	r9d, r15d
	jg	$LN6@PathArcToF
; Line 909
	lea	rbx, QWORD PTR [rcx+128]
	mov	eax, DWORD PTR [rbx]
	lea	edx, DWORD PTR [r15+1]
	sub	eax, r9d
	mov	rcx, rbx
	add	edx, eax
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
; Line 913
	mov	r8d, DWORD PTR [rbx]
	mov	r14d, 8
	mov	QWORD PTR [rsp+112], rbp
	mov	QWORD PTR [rsp+120], rdi
	npad	1
$LL4@PathArcToF:
	mov	eax, 715827883				; 2aaaaaabH
	movaps	xmm0, xmm6
	imul	esi
	movaps	xmm1, xmm6
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	mov	eax, esi
	lea	ecx, DWORD PTR [rdx+rdx*2]
	shl	ecx, 2
	sub	eax, ecx
	movsxd	rcx, eax
	mov	rax, QWORD PTR [r13+56]
	mulss	xmm0, DWORD PTR [rax+rcx*8+48]
	mulss	xmm1, DWORD PTR [rax+rcx*8+52]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rbx+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 913
	addss	xmm0, DWORD PTR [r12]
	addss	xmm1, DWORD PTR [r12+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rsp], xmm0
	movss	DWORD PTR $T1[rsp+4], xmm1
; Line 1347
	cmp	r8d, ecx
	jne	SHORT $LN24@PathArcToF
	lea	edi, DWORD PTR [r8+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN22@PathArcToF
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN23@PathArcToF
$LN22@PathArcToF:
	mov	eax, r14d
$LN23@PathArcToF:
	cmp	eax, edi
	cmovg	edi, eax
; Line 1344
	cmp	edi, ecx
	jle	SHORT $LN24@PathArcToF
	movsxd	rcx, edi
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN26@PathArcToF
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN26@PathArcToF:
	mov	r8d, DWORD PTR [rbx]
	mov	QWORD PTR [rbx+8], rbp
	mov	DWORD PTR [rbx+4], edi
$LN24@PathArcToF:
; Line 1347
	mov	rcx, QWORD PTR [rbx+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 910
	inc	esi
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	rax, QWORD PTR $T1[rsp]
	movsxd	rdx, r8d
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
	mov	r8d, DWORD PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 910
	cmp	esi, r15d
	jle	$LL4@PathArcToF
; Line 896
	mov	rdi, QWORD PTR [rsp+120]
	mov	rbp, QWORD PTR [rsp+112]
	jmp	SHORT $LN3@PathArcToF
$LN6@PathArcToF:
; Line 898
	lea	rbx, QWORD PTR [rcx+128]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	eax, DWORD PTR [rbx]
	mov	ecx, DWORD PTR [rbx+4]
	cmp	eax, ecx
	jne	SHORT $LN9@PathArcToF
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN13@PathArcToF
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	r14d, DWORD PTR [rcx+rax]
	jmp	SHORT $LN14@PathArcToF
$LN13@PathArcToF:
	mov	r14d, 8
$LN14@PathArcToF:
	cmp	r14d, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, r14d
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN9@PathArcToF:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR [r12]
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
$LN3@PathArcToF:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 915
	mov	rbx, QWORD PTR [rsp+128]
	movaps	xmm6, XMMWORD PTR [rsp+48]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rsi
	ret	0
?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ENDP	; ImDrawList::PathArcToFast
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 160
center$ = 168
radius$ = 176
a_min$ = 184
a_max$ = 192
num_segments$ = 200
?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z PROC	; ImDrawList::PathArcTo, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 918
$LN27:
	push	rbx
	push	r15
	sub	rsp, 136				; 00000088H
	movaps	XMMWORD PTR [rsp+96], xmm7
	lea	rbx, QWORD PTR [rcx+128]
	movaps	xmm7, xmm2
	movaps	XMMWORD PTR [rsp+64], xmm9
	xorps	xmm0, xmm0
	movaps	xmm9, xmm3
; Line 919
	ucomiss	xmm7, xmm0
	mov	r15, rdx
	jp	SHORT $LN5@PathArcTo
	jne	SHORT $LN5@PathArcTo
; Line 921
	mov	rcx, rbx
	call	?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z ; ImVector<ImVec2>::push_back
; Line 922
	jmp	$LN3@PathArcTo
$LN5@PathArcTo:
	mov	QWORD PTR [rsp+160], rbp
; Line 927
	mov	rcx, rbx
	mov	QWORD PTR [rsp+128], r14
	mov	r14d, DWORD PTR num_segments$[rsp]
	lea	edx, DWORD PTR [r14+1]
	add	edx, DWORD PTR [rbx]
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	xor	ebp, ebp
; Line 928
	test	r14d, r14d
	js	$LN25@PathArcTo
; Line 931
	mov	QWORD PTR [rsp+168], rsi
	mov	esi, DWORD PTR [rbx]
	movaps	XMMWORD PTR [rsp+112], xmm6
	movaps	XMMWORD PTR [rsp+80], xmm8
	movss	xmm8, DWORD PTR a_max$[rsp]
	movaps	XMMWORD PTR [rsp+48], xmm10
	subss	xmm8, xmm9
	movd	xmm10, r14d
	cvtdq2ps xmm10, xmm10
	mov	QWORD PTR [rsp+176], rdi
	npad	6
$LL4@PathArcTo:
; Line 930
	xorps	xmm6, xmm6
	cvtsi2ss xmm6, ebp
	divss	xmm6, xmm10
	mulss	xmm6, xmm8
	addss	xmm6, xmm9
; Line 931
	movaps	xmm0, xmm6
	call	cosf
	mulss	xmm0, xmm7
	addss	xmm0, DWORD PTR [r15]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rsp], xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 931
	movaps	xmm0, xmm6
	call	sinf
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rbx+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 931
	mulss	xmm0, xmm7
	addss	xmm0, DWORD PTR [r15+4]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rsp+4], xmm0
; Line 1347
	cmp	esi, ecx
	jne	SHORT $LN16@PathArcTo
	lea	edi, DWORD PTR [rsi+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN14@PathArcTo
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN15@PathArcTo
$LN14@PathArcTo:
	mov	eax, 8
$LN15@PathArcTo:
	cmp	eax, edi
	cmovg	edi, eax
; Line 1344
	cmp	edi, ecx
	jle	SHORT $LN16@PathArcTo
	movsxd	rcx, edi
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN18@PathArcTo
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN18@PathArcTo:
	mov	QWORD PTR [rbx+8], rsi
	mov	esi, DWORD PTR [rbx]
	mov	DWORD PTR [rbx+4], edi
$LN16@PathArcTo:
; Line 1347
	mov	rcx, QWORD PTR [rbx+8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 928
	inc	ebp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	rax, QWORD PTR $T1[rsp]
	movsxd	rdx, esi
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
	mov	esi, DWORD PTR [rbx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 928
	cmp	ebp, r14d
	jle	$LL4@PathArcTo
	movaps	xmm10, XMMWORD PTR [rsp+48]
	movaps	xmm8, XMMWORD PTR [rsp+80]
	movaps	xmm6, XMMWORD PTR [rsp+112]
	mov	rdi, QWORD PTR [rsp+176]
	mov	rsi, QWORD PTR [rsp+168]
$LN25@PathArcTo:
	mov	rbp, QWORD PTR [rsp+160]
	mov	r14, QWORD PTR [rsp+128]
$LN3@PathArcTo:
; Line 933
	movaps	xmm7, XMMWORD PTR [rsp+96]
	movaps	xmm9, XMMWORD PTR [rsp+64]
	add	rsp, 136				; 00000088H
	pop	r15
	pop	rbx
	ret	0
?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ENDP	; ImDrawList::PathArcTo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PathStroke@ImDrawList@@QEAAXI_NM@Z
_TEXT	SEGMENT
this$ = 64
col$ = 72
closed$ = 80
thickness$ = 88
?PathStroke@ImDrawList@@QEAAXI_NM@Z PROC		; ImDrawList::PathStroke, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2035
$LN4:
	push	rbx
	sub	rsp, 48					; 00000030H
	movss	DWORD PTR [rsp+40], xmm3
	mov	r9d, edx
	mov	rdx, QWORD PTR [rcx+136]
	mov	rbx, rcx
	mov	BYTE PTR [rsp+32], r8b
	mov	r8d, DWORD PTR [rcx+128]
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
	mov	DWORD PTR [rbx+128], 0
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?PathStroke@ImDrawList@@QEAAXI_NM@Z ENDP		; ImDrawList::PathStroke
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PathFillConvex@ImDrawList@@QEAAXI@Z
_TEXT	SEGMENT
this$ = 48
col$ = 56
?PathFillConvex@ImDrawList@@QEAAXI@Z PROC		; ImDrawList::PathFillConvex, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	r8d, DWORD PTR [rcx+128]
	mov	r9d, edx
	mov	rdx, QWORD PTR [rcx+136]
	mov	rbx, rcx
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	DWORD PTR [rbx+128], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?PathFillConvex@ImDrawList@@QEAAXI@Z ENDP		; ImDrawList::PathFillConvex
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z
_TEXT	SEGMENT
this$ = 48
pos$ = 56
?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z PROC	; ImDrawList::PathLineTo, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 2032
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rbx, QWORD PTR [rcx+128]
	mov	rdi, rdx
; Line 1347
	mov	eax, DWORD PTR [rbx]
	mov	ecx, DWORD PTR [rbx+4]
	cmp	eax, ecx
	jne	SHORT $LN4@PathLineTo
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN8@PathLineTo
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN9@PathLineTo
$LN8@PathLineTo:
	mov	eax, 8
$LN9@PathLineTo:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN4@PathLineTo:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
; Line 2032
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ENDP	; ImDrawList::PathLineTo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z
_TEXT	SEGMENT
this$ = 96
user_texture_id$ = 104
p_min$ = 112
p_max$ = 120
uv_min$ = 128
uv_max$ = 136
col$ = 144
rounding$ = 152
rounding_corners$ = 160
?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z PROC ; ImDrawList::AddImageRounded, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1273
$LN17:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r12
	push	r15
	sub	rsp, 64					; 00000040H
; Line 1274
	mov	esi, DWORD PTR col$[rsp]
	mov	r15, r9
	mov	r12, r8
	mov	rbx, rdx
	mov	rdi, rcx
	test	esi, -16777216				; ff000000H
	je	$LN6@AddImageRo
; Line 1277
	xorps	xmm0, xmm0
	mov	QWORD PTR [rsp+104], r14
	comiss	xmm0, DWORD PTR rounding$[rsp]
	jae	$LN4@AddImageRo
	mov	r14d, DWORD PTR rounding_corners$[rsp]
	test	r14b, 15
	je	$LN4@AddImageRo
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	add	rcx, 112				; 00000070H
	mov	QWORD PTR [rsp+96], rbp
	cmp	DWORD PTR [rcx], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1283
	je	SHORT $LN8@AddImageRo
	call	?back@?$ImVector@PEAX@@QEAAAEAPEAXXZ	; ImVector<void *>::back
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN8@AddImageRo
	xor	bpl, bpl
	jmp	SHORT $LN5@AddImageRo
$LN8@AddImageRo:
; Line 1285
	mov	rdx, rbx
	mov	rcx, rdi
	mov	bpl, 1
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
$LN5@AddImageRo:
; Line 1288
	movss	xmm3, DWORD PTR rounding$[rsp]
	mov	r8, r15
	mov	ebx, DWORD PTR [rdi+32]
	mov	rdx, r12
	mov	rcx, rdi
	mov	DWORD PTR [rsp+32], r14d
	call	?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z ; ImDrawList::PathRect
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
	mov	r8d, DWORD PTR [rdi+128]
	mov	r9d, esi
	mov	rdx, QWORD PTR [rdi+136]
	mov	rcx, rdi
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1291
	mov	rax, QWORD PTR uv_max$[rsp]
	mov	r9, r12
	mov	r8d, DWORD PTR [rdi+32]
	mov	edx, ebx
	mov	BYTE PTR [rsp+56], 1
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR uv_min$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], r15
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
	mov	DWORD PTR [rdi+128], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1291
	call	?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z ; ImGui::ShadeVertsLinearUV
; Line 1293
	test	bpl, bpl
	mov	rbp, QWORD PTR [rsp+96]
	je	SHORT $LN15@AddImageRo
; Line 1294
	mov	rcx, rdi
	call	?PopTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::PopTextureID
	jmp	SHORT $LN15@AddImageRo
$LN4@AddImageRo:
; Line 1279
	mov	rax, QWORD PTR uv_max$[rsp]
	mov	DWORD PTR [rsp+48], esi
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR uv_min$[rsp]
	mov	QWORD PTR [rsp+32], rax
	call	?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z ; ImDrawList::AddImage
$LN15@AddImageRo:
	mov	r14, QWORD PTR [rsp+104]
$LN6@AddImageRo:
; Line 1295
	mov	rbx, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r12
	pop	rdi
	ret	0
?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z ENDP ; ImDrawList::AddImageRounded
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z
_TEXT	SEGMENT
this$ = 64
user_texture_id$ = 72
p1$ = 80
p2$ = 88
p3$ = 96
p4$ = 104
uv1$ = 112
uv2$ = 120
uv3$ = 128
uv4$ = 136
col$ = 144
?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z PROC ; ImDrawList::AddImageQuad, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1257
$LN17:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rdi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; Line 1258
	mov	ebp, DWORD PTR col$[rsp]
	mov	r14, r9
	mov	r15, r8
	mov	rdi, rdx
	mov	rbx, rcx
	test	ebp, -16777216				; ff000000H
	je	$LN4@AddImageQu
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	mov	eax, DWORD PTR [rcx+112]
	mov	QWORD PTR [rsp+64], rsi
	test	eax, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1261
	je	SHORT $LN6@AddImageQu
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	jg	SHORT $LN12@AddImageQu
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+112]
$LN12@AddImageQu:
	movsxd	rcx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1261
	mov	rax, QWORD PTR [rbx+120]
	cmp	rdi, QWORD PTR [rax+rcx*8-8]
	jne	SHORT $LN6@AddImageQu
	xor	sil, sil
	jmp	SHORT $LN3@AddImageQu
$LN6@AddImageQu:
; Line 1263
	mov	rdx, rdi
	mov	rcx, rbx
	mov	sil, 1
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
$LN3@AddImageQu:
; Line 1265
	mov	edx, 6
	mov	rcx, rbx
	lea	r8d, QWORD PTR [rdx-2]
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 606
	movzx	edx, WORD PTR [rbx+76]
; Line 607
	mov	rax, QWORD PTR [rbx+88]
	lea	ecx, DWORD PTR [rdx+1]
	mov	WORD PTR [rax], dx
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+2], cx
	lea	ecx, DWORD PTR [rdx+2]
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+4], cx
; Line 608
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+6], dx
	add	dx, 3
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+8], cx
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+10], dx
; Line 609
	movsd	xmm0, QWORD PTR [r15]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax], xmm0
	mov	rcx, QWORD PTR [rbx+80]
	mov	rax, QWORD PTR uv1$[rsp]
	movsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rcx+8], xmm0
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], ebp
; Line 610
	movsd	xmm0, QWORD PTR [r14]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax+20], xmm0
	mov	rcx, QWORD PTR [rbx+80]
	mov	rax, QWORD PTR uv2$[rsp]
	movsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rcx+28], xmm0
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+36], ebp
; Line 611
	mov	rcx, QWORD PTR [rbx+80]
	mov	rax, QWORD PTR p3$[rsp]
	movsd	xmm0, QWORD PTR [rax]
	mov	rax, QWORD PTR uv3$[rsp]
	movsd	QWORD PTR [rcx+40], xmm0
	mov	rcx, QWORD PTR [rbx+80]
	movsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rcx+48], xmm0
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+56], ebp
; Line 612
	mov	rcx, QWORD PTR [rbx+80]
	mov	rax, QWORD PTR p4$[rsp]
	movsd	xmm0, QWORD PTR [rax]
	mov	rax, QWORD PTR uv4$[rsp]
	movsd	QWORD PTR [rcx+60], xmm0
	mov	rcx, QWORD PTR [rbx+80]
	movsd	xmm0, QWORD PTR [rax]
	movsd	QWORD PTR [rcx+68], xmm0
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+76], ebp
; Line 613
	add	QWORD PTR [rbx+80], 80			; 00000050H
; Line 614
	add	DWORD PTR [rbx+76], 4
; Line 615
	add	QWORD PTR [rbx+88], 12
; Line 1268
	test	sil, sil
	mov	rsi, QWORD PTR [rsp+64]
	je	SHORT $LN4@AddImageQu
; Line 1269
	mov	rcx, rbx
	call	?PopTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::PopTextureID
$LN4@AddImageQu:
; Line 1270
	mov	rbx, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z ENDP ; ImDrawList::AddImageQuad
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z
_TEXT	SEGMENT
this$ = 80
user_texture_id$ = 88
p_min$ = 96
p_max$ = 104
uv_min$ = 112
uv_max$ = 120
col$ = 128
?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z PROC	; ImDrawList::AddImage, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1241
$LN15:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
; Line 1242
	mov	ebp, DWORD PTR col$[rsp]
	mov	r14, r9
	mov	r15, r8
	mov	rsi, rdx
	mov	rbx, rcx
	test	ebp, -16777216				; ff000000H
	je	$LN4@AddImage
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	mov	eax, DWORD PTR [rcx+112]
	mov	QWORD PTR [rsp+80], rdi
	test	eax, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1245
	je	SHORT $LN6@AddImage
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	jg	SHORT $LN12@AddImage
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+112]
$LN12@AddImage:
	movsxd	rcx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1245
	mov	rax, QWORD PTR [rbx+120]
	cmp	rsi, QWORD PTR [rax+rcx*8-8]
	jne	SHORT $LN6@AddImage
	xor	dil, dil
	jmp	SHORT $LN3@AddImage
$LN6@AddImage:
; Line 1247
	mov	rdx, rsi
	mov	rcx, rbx
	mov	dil, 1
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
$LN3@AddImage:
; Line 1249
	mov	edx, 6
	mov	rcx, rbx
	lea	r8d, QWORD PTR [rdx-2]
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 1250
	mov	rax, QWORD PTR uv_max$[rsp]
	mov	r8, r14
	mov	r9, QWORD PTR uv_min$[rsp]
	mov	rdx, r15
	mov	DWORD PTR [rsp+40], ebp
	mov	rcx, rbx
	mov	QWORD PTR [rsp+32], rax
	call	?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z ; ImDrawList::PrimRectUV
; Line 1252
	test	dil, dil
	mov	rdi, QWORD PTR [rsp+80]
	je	SHORT $LN4@AddImage
; Line 1253
	mov	rcx, rbx
	call	?PopTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::PopTextureID
$LN4@AddImage:
; Line 1254
	mov	rbx, QWORD PTR [rsp+88]
	mov	rbp, QWORD PTR [rsp+96]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	rsi
	ret	0
?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z ENDP	; ImDrawList::AddImage
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddBezierCurve@ImDrawList@@QEAAXAEBUImVec2@@000IMH@Z
_TEXT	SEGMENT
this$ = 64
p1$ = 72
p2$ = 80
p3$ = 88
p4$ = 96
col$ = 104
thickness$ = 112
num_segments$ = 120
?AddBezierCurve@ImDrawList@@QEAAXAEBUImVec2@@000IMH@Z PROC ; ImDrawList::AddBezierCurve, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1197
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	push	rsi
	sub	rsp, 48					; 00000030H
; Line 1198
	test	DWORD PTR col$[rsp], -16777216		; ff000000H
	mov	rsi, r9
	mov	rbp, r8
	mov	rbx, rcx
	je	SHORT $LN1@AddBezierC
; Line 1201
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1202
	mov	eax, DWORD PTR num_segments$[rsp]
	mov	r8, rsi
	mov	r9, QWORD PTR p4$[rsp]
	mov	rdx, rbp
	mov	rcx, rbx
	mov	DWORD PTR [rsp+32], eax
	call	?PathBezierCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z ; ImDrawList::PathBezierCurveTo
; File E:\reps\ocornut\imgui\imgui.h
; Line 2035
	movss	xmm0, DWORD PTR thickness$[rsp]
	mov	rcx, rbx
	mov	r9d, DWORD PTR col$[rsp]
	mov	r8d, DWORD PTR [rbx+128]
	mov	rdx, QWORD PTR [rbx+136]
	movss	DWORD PTR [rsp+40], xmm0
	mov	BYTE PTR [rsp+32], 0
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
	mov	DWORD PTR [rbx+128], 0
$LN1@AddBezierC:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1204
	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rsi
	ret	0
?AddBezierCurve@ImDrawList@@QEAAXAEBUImVec2@@000IMH@Z ENDP ; ImDrawList::AddBezierCurve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z
_TEXT	SEGMENT
tv1978 = 0
points$1$ = 0
i1$1$ = 8
vtx_inner_idx$1$ = 12
col$1$ = 16
col_trans$1$ = 20
vtx_outer_idx$1$ = 24
vtx_count$1$ = 28
$T1 = 32
tv1942 = 40
__$ArrayPad$ = 48
this$ = 224
points$ = 232
points_count$ = 240
col$ = 248
?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z PROC ; ImDrawList::AddConvexPolyFilled, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 814
$LN70:
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 208				; 000000d0H
	lea	rbp, QWORD PTR [rsp+32]
	mov	QWORD PTR [rbp+224], rbx
	mov	QWORD PTR [rbp+232], rsi
	mov	QWORD PTR [rbp+240], rdi
	movaps	XMMWORD PTR [rbp+160], xmm6
	movaps	XMMWORD PTR [rbp+144], xmm7
	movaps	XMMWORD PTR [rbp+128], xmm8
	movaps	XMMWORD PTR [rbp+112], xmm9
	movaps	XMMWORD PTR [rbp+96], xmm10
	movaps	XMMWORD PTR [rbp+80], xmm11
	movaps	XMMWORD PTR [rbp+64], xmm12
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	mov	DWORD PTR col$1$[rbp], r9d
	mov	edi, r9d
	mov	r14d, r8d
	mov	rsi, rdx
	mov	QWORD PTR points$1$[rbp], rdx
	mov	rbx, rcx
; Line 815
	cmp	r8d, 3
	jl	$LN25@AddConvexP
; Line 820
	test	BYTE PTR [rcx+48], 2
	mov	rax, QWORD PTR [rcx+56]
	movss	xmm11, DWORD PTR [rax]
	movss	xmm12, DWORD PTR [rax+4]
	je	$LN24@AddConvexP
; Line 824
	mov	eax, r9d
; Line 825
	lea	edx, DWORD PTR [r14*8-6]
	and	eax, 16777215				; 00ffffffH
	add	edx, r14d
	mov	DWORD PTR col_trans$1$[rbp], eax
; Line 826
	lea	eax, DWORD PTR [r14+r14]
; Line 827
	mov	r8d, eax
	mov	DWORD PTR vtx_count$1$[rbp], eax
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 830
	mov	esi, DWORD PTR [rbx+76]
	mov	r8d, 2
	mov	DWORD PTR vtx_inner_idx$1$[rbp], esi
; Line 831
	lea	eax, DWORD PTR [rsi+1]
	mov	DWORD PTR vtx_outer_idx$1$[rbp], eax
$LL4@AddConvexP:
; Line 834
	mov	rax, QWORD PTR [rbx+88]
	movzx	edx, r8w
	add	dx, dx
	inc	r8d
	add	dx, si
	mov	WORD PTR [rax], si
	mov	rax, QWORD PTR [rbx+88]
	lea	ecx, DWORD PTR [rdx-2]
	mov	WORD PTR [rax+2], cx
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+4], dx
; Line 835
	add	QWORD PTR [rbx+88], 6
	cmp	r8d, r14d
	jl	SHORT $LL4@AddConvexP
; Line 839
	mov	rsi, QWORD PTR points$1$[rbp]
	movsxd	rax, r14d
	shl	rax, 3
	lea	rcx, QWORD PTR [rax+15]
	cmp	rcx, rax
	ja	SHORT $LN67@AddConvexP
	mov	rcx, 1152921504606846960		; 0ffffffffffffff0H
$LN67@AddConvexP:
	and	rcx, -16
	mov	rax, rcx
	call	__chkstk
; Line 840
	movss	xmm9, DWORD PTR __xmm@80000000800000008000000080000000
	lea	eax, DWORD PTR [r14-1]
	movss	xmm8, DWORD PTR __real@3f800000
	sub	rsp, rcx
	xor	ecx, ecx
	cdqe
	mov	edx, ecx
	xorps	xmm10, xmm10
	lea	r13, QWORD PTR [rsp+32]
	cmp	r14d, 4
	jl	$LC45@AddConvexP
	lea	r12, QWORD PTR [rax*8]
	mov	QWORD PTR $T1[rbp], rcx
	mov	eax, 12
	lea	rdi, QWORD PTR [rsi+12]
	sub	rax, rsi
	mov	r15, r13
	mov	QWORD PTR tv1942[rbp], rax
	sub	r15, rsi
	lea	eax, DWORD PTR [r14-4]
	shr	eax, 2
	inc	eax
	mov	ecx, eax
	mov	QWORD PTR tv1978[rbp], rcx
	lea	eax, DWORD PTR [rax*4]
	mov	DWORD PTR i1$1$[rbp], eax
	npad	7
$LL50@AddConvexP:
; Line 844
	movss	xmm6, DWORD PTR [rdi-12]
; Line 845
	movss	xmm7, DWORD PTR [rdi-8]
	subss	xmm6, DWORD PTR [r12+rsi]
	subss	xmm7, DWORD PTR [r12+rsi+4]
; Line 846
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm10
	jbe	SHORT $LN46@AddConvexP
	call	sqrtf
	movaps	xmm1, xmm8
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN46@AddConvexP:
; Line 847
	movss	DWORD PTR [r12+r13], xmm7
; Line 848
	xorps	xmm6, xmm9
	movss	DWORD PTR [r12+r13+4], xmm6
	movss	xmm6, DWORD PTR [rdi-4]
	movss	xmm7, DWORD PTR [rdi]
	subss	xmm6, DWORD PTR [rdi-12]
	subss	xmm7, DWORD PTR [rdi-8]
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm10
	jbe	SHORT $LN47@AddConvexP
; Line 846
	call	sqrtf
	movaps	xmm1, xmm8
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN47@AddConvexP:
; Line 847
	movss	DWORD PTR [r15+rdi-12], xmm7
; Line 848
	xorps	xmm6, xmm9
	movss	DWORD PTR [r15+rdi-8], xmm6
	movss	xmm6, DWORD PTR [rdi+4]
	movss	xmm7, DWORD PTR [rdi+8]
	subss	xmm6, DWORD PTR [rdi-4]
	subss	xmm7, DWORD PTR [rdi]
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm10
	jbe	SHORT $LN48@AddConvexP
; Line 846
	call	sqrtf
	movaps	xmm1, xmm8
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN48@AddConvexP:
; Line 847
	movss	DWORD PTR [r15+rdi-4], xmm7
; Line 848
	xorps	xmm6, xmm9
	movss	DWORD PTR [r15+rdi], xmm6
	movss	xmm6, DWORD PTR [rdi+12]
	movss	xmm7, DWORD PTR [rdi+16]
	subss	xmm6, DWORD PTR [rdi+4]
	subss	xmm7, DWORD PTR [rdi+8]
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm10
	jbe	SHORT $LN49@AddConvexP
; Line 846
	call	sqrtf
	movaps	xmm1, xmm8
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN49@AddConvexP:
; Line 848
	mov	rcx, QWORD PTR $T1[rbp]
	xorps	xmm6, xmm9
	mov	r12, QWORD PTR tv1942[rbp]
	movss	DWORD PTR [r15+rdi+4], xmm7
	add	r12, rdi
	movss	DWORD PTR [r15+rdi+8], xmm6
	add	rdi, 32					; 00000020H
	lea	rax, QWORD PTR [rcx+3]
	add	rcx, 4
	sub	QWORD PTR tv1978[rbp], 1
	mov	QWORD PTR $T1[rbp], rcx
	jne	$LL50@AddConvexP
; Line 840
	mov	edx, DWORD PTR i1$1$[rbp]
	cmp	edx, r14d
	jge	SHORT $LN44@AddConvexP
$LC45@AddConvexP:
	mov	r12d, r14d
	lea	rdi, QWORD PTR [rax*8]
	sub	r12d, edx
	lea	r15, QWORD PTR [rsi+rcx*8]
$LC51@AddConvexP:
; Line 844
	movss	xmm6, DWORD PTR [r15]
; Line 845
	movss	xmm7, DWORD PTR [r15+4]
	subss	xmm6, DWORD PTR [rdi+rsi]
	subss	xmm7, DWORD PTR [rdi+rsi+4]
; Line 846
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm10
	jbe	SHORT $LN8@AddConvexP
	call	sqrtf
	movaps	xmm1, xmm8
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN8@AddConvexP:
; Line 847
	movss	DWORD PTR [rdi+r13], xmm7
; Line 848
	xorps	xmm6, xmm9
	movss	DWORD PTR [rdi+r13+4], xmm6
	mov	rdi, r15
	sub	rdi, rsi
	add	r15, 8
	sub	r12, 1
	jne	SHORT $LC51@AddConvexP
$LN44@AddConvexP:
; Line 851
	movss	xmm6, DWORD PTR __real@3f000000
	lea	r11, QWORD PTR [rsi+4]
	mov	r9d, DWORD PTR vtx_inner_idx$1$[rbp]
	lea	r15d, DWORD PTR [r14-1]
	mov	edi, DWORD PTR col$1$[rbp]
	mov	r10, r13
	mov	r12d, DWORD PTR col_trans$1$[rbp]
	sub	r10, rsi
	xor	esi, esi
	npad	14
$LL13@AddConvexP:
; Line 856
	movss	xmm3, DWORD PTR [r11+r10-4]
; Line 858
	movaps	xmm1, xmm6
	movss	xmm4, DWORD PTR [r11+r10]
	movaps	xmm5, xmm8
	movsxd	rax, r15d
; Line 868
	movzx	r8d, si
	add	r15w, r15w
	add	r8w, r8w
	addss	xmm3, DWORD PTR [r13+rax*8]
	addss	xmm4, DWORD PTR [r13+rax*8+4]
	mov	rax, QWORD PTR [rbx+80]
	lea	ecx, DWORD PTR [r9+r15]
	lea	edx, DWORD PTR [r9+r8]
	mulss	xmm3, xmm6
	mulss	xmm4, xmm6
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movaps	xmm2, xmm4
	mulss	xmm2, xmm4
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR [r11-4]
	maxss	xmm1, xmm2
	divss	xmm5, xmm1
	movaps	xmm2, xmm5
	mulss	xmm5, xmm4
	mulss	xmm2, xmm3
	mulss	xmm5, xmm6
	mulss	xmm2, xmm6
	subss	xmm0, xmm2
	movss	DWORD PTR [rax], xmm0
	movss	xmm1, DWORD PTR [r11]
	mov	rax, QWORD PTR [rbx+80]
	subss	xmm1, xmm5
	movss	DWORD PTR [rax+4], xmm1
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+8], xmm11
	movss	DWORD PTR [rax+12], xmm12
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], edi
	addss	xmm2, DWORD PTR [r11-4]
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+20], xmm2
	addss	xmm5, DWORD PTR [r11]
	mov	rax, QWORD PTR [rbx+80]
	add	r11, 8
	movss	DWORD PTR [rax+24], xmm5
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+28], xmm11
	movss	DWORD PTR [rax+32], xmm12
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+36], r12d
	mov	rax, QWORD PTR [rbx+88]
	add	QWORD PTR [rbx+80], 40			; 00000028H
	mov	WORD PTR [rax], dx
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+2], cx
	mov	rax, QWORD PTR [rbx+88]
	mov	ecx, DWORD PTR vtx_outer_idx$1$[rbp]
	add	r15w, cx
; Line 869
	add	r8w, cx
	mov	WORD PTR [rax+4], r15w
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+6], r15w
	mov	r15d, esi
	mov	rax, QWORD PTR [rbx+88]
	inc	esi
	mov	WORD PTR [rax+8], r8w
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+10], dx
; Line 870
	add	QWORD PTR [rbx+88], 12
	cmp	esi, r14d
	jl	$LL13@AddConvexP
; Line 872
	movzx	eax, WORD PTR vtx_count$1$[rbp]
; Line 873
	jmp	$LN68@AddConvexP
$LN24@AddConvexP:
; Line 877
	lea	eax, DWORD PTR [r14-2]
; Line 879
	mov	r8d, r14d
	lea	edx, DWORD PTR [rax+rax*2]
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
	mov	rcx, r14
	npad	14
$LL19@AddConvexP:
; Line 882
	mov	rax, QWORD PTR [rbx+80]
	movsd	xmm0, QWORD PTR [rsi]
	lea	rsi, QWORD PTR [rsi+8]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+8], xmm11
	movss	DWORD PTR [rax+12], xmm12
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], edi
; Line 883
	add	QWORD PTR [rbx+80], 20
	sub	rcx, 1
	jne	SHORT $LL19@AddConvexP
; Line 885
	mov	r8d, 2
	npad	8
$LL22@AddConvexP:
; Line 887
	mov	rcx, QWORD PTR [rbx+88]
	movzx	eax, WORD PTR [rbx+76]
	mov	WORD PTR [rcx], ax
	lea	ecx, DWORD PTR [r8-1]
	add	cx, WORD PTR [rbx+76]
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+2], cx
	movzx	ecx, r8w
	mov	rax, QWORD PTR [rbx+88]
	inc	r8d
	add	cx, WORD PTR [rbx+76]
	mov	WORD PTR [rax+4], cx
; Line 888
	add	QWORD PTR [rbx+88], 6
	cmp	r8d, r14d
	jl	SHORT $LL22@AddConvexP
; Line 890
	movzx	eax, r14w
$LN68@AddConvexP:
; Line 892
	add	DWORD PTR [rbx+76], eax
$LN25@AddConvexP:
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rbp+224]
	mov	rsi, QWORD PTR [rbp+232]
	mov	rdi, QWORD PTR [rbp+240]
	movaps	xmm6, XMMWORD PTR [rbp+160]
	movaps	xmm7, XMMWORD PTR [rbp+144]
	movaps	xmm8, XMMWORD PTR [rbp+128]
	movaps	xmm9, XMMWORD PTR [rbp+112]
	movaps	xmm10, XMMWORD PTR [rbp+96]
	movaps	xmm11, XMMWORD PTR [rbp+80]
	movaps	xmm12, XMMWORD PTR [rbp+64]
	lea	rsp, QWORD PTR [rbp+176]
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ENDP ; ImDrawList::AddConvexPolyFilled
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z
_TEXT	SEGMENT
idx2$1$ = 0
idx1$1$ = 0
i1$1$ = 0
tv4763 = 0
tv4679 = 0
thick_line$1$ = 8
col$1$ = 12
temp_points$1$ = 16
tv5066 = 16
tv5064 = 16
tv5059 = 16
col_trans$1$ = 24
tv4710 = 32
tv4708 = 40
tv4761 = 48
p1$1$ = 56
tv4766 = 56
tv5051 = 64
tv4707 = 72
this$1$ = 80
__$ArrayPad$ = 88
this$ = 272
points$ = 280
points_count$ = 288
col$ = 296
closed$ = 304
thickness$ = 312
?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z PROC	; ImDrawList::AddPolyline, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 626
$LN223:
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	mov	QWORD PTR [rbp+272], rbx
	mov	QWORD PTR [rbp+280], rsi
	mov	QWORD PTR [rbp+288], rdi
	movaps	XMMWORD PTR [rbp+208], xmm6
	movaps	XMMWORD PTR [rbp+192], xmm7
	movaps	XMMWORD PTR [rbp+176], xmm8
	movaps	XMMWORD PTR [rbp+160], xmm9
	movaps	XMMWORD PTR [rbp+144], xmm10
	movaps	XMMWORD PTR [rbp+128], xmm11
	movaps	XMMWORD PTR [rbp+112], xmm12
	movaps	XMMWORD PTR [rbp+96], xmm13
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	movsxd	r15, r8d
	mov	rsi, rdx
	mov	DWORD PTR col$1$[rbp], r9d
	mov	rdi, rcx
	mov	QWORD PTR this$1$[rbp], rcx
; Line 627
	cmp	r15d, 2
	jl	$LN27@AddPolylin
; Line 630
	mov	rax, QWORD PTR [rcx+56]
; Line 635
	cmp	BYTE PTR closed$[rbp], 0
	movss	xmm13, DWORD PTR thickness$[rbp]
	movss	xmm10, DWORD PTR __real@3f800000
	movss	xmm8, DWORD PTR [rax]
	movss	xmm9, DWORD PTR [rax+4]
	lea	eax, DWORD PTR [r15-1]
	cmovne	eax, r15d
	comiss	xmm13, xmm10
; Line 636
	movsxd	rbx, eax
	mov	QWORD PTR tv4710[rbp], rbx
	seta	cl
	test	BYTE PTR [rdi+48], 1
	mov	BYTE PTR thick_line$1$[rbp], cl
	je	$LN34@AddPolylin
; Line 640
	and	r9d, 16777215				; 00ffffffH
; Line 644
	movzx	ebx, cl
	mov	DWORD PTR col_trans$1$[rbp], r9d
	mov	edx, 18
	mov	r9d, 12
	lea	r8d, DWORD PTR [rbx+3]
	imul	r8d, r15d
	test	cl, cl
	mov	rcx, rdi
	cmove	edx, r9d
	imul	edx, eax
	mov	DWORD PTR tv4708[rbp], r8d
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 647
	lea	eax, DWORD PTR [rbx*2+3]
	imul	eax, r15d
	movsxd	rcx, eax
	shl	rcx, 3
	lea	rax, QWORD PTR [rcx+15]
	cmp	rax, rcx
	ja	SHORT $LN219@AddPolylin
	mov	rax, 1152921504606846960		; 0ffffffffffffff0H
$LN219@AddPolylin:
	and	rax, -16
	call	__chkstk
; Line 650
	mov	r11, QWORD PTR tv4710[rbp]
	xor	r14d, r14d
	movss	xmm11, DWORD PTR __xmm@80000000800000008000000080000000
	sub	rsp, rax
	mov	ecx, r14d
	mov	ebx, r14d
	xorps	xmm12, xmm12
	lea	r12, QWORD PTR [rsp+32]
	lea	r13, QWORD PTR [r12+r15*8]
	mov	QWORD PTR temp_points$1$[rbp], r13
	cmp	r11, 4
	jl	$LC193@AddPolylin
	lea	rax, QWORD PTR [r11-3]
	mov	edi, 2
	mov	QWORD PTR tv4707[rbp], rax
	mov	r13d, ecx
	npad	1
$LL206@AddPolylin:
; Line 653
	lea	r8, QWORD PTR [rsi+rbx*8]
	mov	rdx, r14
	lea	ecx, DWORD PTR [rdi-1]
	mov	QWORD PTR tv4763[rbp], r8
	cmp	ecx, r15d
	lea	rax, QWORD PTR [rbx+1]
	cmovne	rdx, rax
	movss	xmm6, DWORD PTR [rsi+rdx*8]
; Line 654
	movss	xmm7, DWORD PTR [rsi+rdx*8+4]
	subss	xmm6, DWORD PTR [r8]
	subss	xmm7, DWORD PTR [r8+4]
; Line 655
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm12
	jbe	SHORT $LN196@AddPolylin
	call	sqrtf
	mov	r8, QWORD PTR tv4763[rbp]
	movaps	xmm1, xmm10
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN196@AddPolylin:
; Line 656
	movss	DWORD PTR [r12+rbx*8], xmm7
	lea	rcx, QWORD PTR [r12+rbx*8]
; Line 657
	xorps	xmm6, xmm11
	mov	QWORD PTR tv4761[rbp], rcx
	movss	DWORD PTR [rcx+4], xmm6
	lea	rdx, QWORD PTR [rbx+2]
	cmp	edi, r15d
	mov	rax, r14
	cmovne	rax, rdx
	movss	xmm6, DWORD PTR [rsi+rax*8]
	movss	xmm7, DWORD PTR [rsi+rax*8+4]
	subss	xmm6, DWORD PTR [r8+8]
	subss	xmm7, DWORD PTR [r8+12]
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm12
	jbe	SHORT $LN199@AddPolylin
; Line 655
	call	sqrtf
	mov	rcx, QWORD PTR tv4761[rbp]
	movaps	xmm1, xmm10
	mov	r8, QWORD PTR tv4763[rbp]
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN199@AddPolylin:
; Line 656
	movss	DWORD PTR [rcx+8], xmm7
	lea	rdx, QWORD PTR [rbx+3]
; Line 657
	xorps	xmm6, xmm11
	mov	QWORD PTR tv5051[rbp], rdx
	movss	DWORD PTR [rcx+12], xmm6
	lea	eax, DWORD PTR [rdi+1]
	cmp	eax, r15d
	mov	rcx, r14
	cmovne	rcx, rdx
	movss	xmm6, DWORD PTR [rsi+rcx*8]
	movss	xmm7, DWORD PTR [rsi+rcx*8+4]
	subss	xmm6, DWORD PTR [rsi+rbx*8+16]
	subss	xmm7, DWORD PTR [r8+20]
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm12
	jbe	SHORT $LN202@AddPolylin
; Line 655
	call	sqrtf
	mov	r8, QWORD PTR tv4763[rbp]
	movaps	xmm1, xmm10
	mov	rdx, QWORD PTR tv5051[rbp]
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN202@AddPolylin:
; Line 657
	mov	rax, QWORD PTR tv4761[rbp]
	xorps	xmm6, xmm11
	movss	DWORD PTR [r12+rbx*8+16], xmm7
	mov	rcx, r14
	add	rbx, 4
	movss	DWORD PTR [rax+20], xmm6
	lea	eax, DWORD PTR [rdi+2]
	cmp	eax, r15d
	cmovne	rcx, rbx
	movss	xmm6, DWORD PTR [rsi+rcx*8]
	movss	xmm7, DWORD PTR [rsi+rcx*8+4]
	subss	xmm6, DWORD PTR [rsi+rdx*8]
	subss	xmm7, DWORD PTR [r8+28]
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm12
	jbe	SHORT $LN205@AddPolylin
; Line 655
	call	sqrtf
	mov	rdx, QWORD PTR tv5051[rbp]
	movaps	xmm1, xmm10
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN205@AddPolylin:
; Line 657
	mov	rax, QWORD PTR tv4761[rbp]
	add	r13d, 4
	add	edi, 4
	movss	DWORD PTR [r12+rdx*8], xmm7
	xorps	xmm6, xmm11
	movss	DWORD PTR [rax+28], xmm6
	cmp	rbx, QWORD PTR tv4707[rbp]
	jl	$LL206@AddPolylin
	mov	rdi, QWORD PTR this$1$[rbp]
	mov	r11, QWORD PTR tv4710[rbp]
	mov	DWORD PTR i1$1$[rbp], r13d
	mov	ecx, DWORD PTR i1$1$[rbp]
	mov	r13, QWORD PTR temp_points$1$[rbp]
$LC193@AddPolylin:
; Line 650
	cmp	rbx, r11
	jge	$LN192@AddPolylin
	inc	ecx
	mov	DWORD PTR tv4679[rbp], ecx
$LC4@AddPolylin:
; Line 653
	cmp	ecx, r15d
	lea	rdx, QWORD PTR [rbx+1]
	mov	rax, r14
	mov	QWORD PTR tv5059[rbp], rdx
	cmovne	rax, rdx
	movss	xmm6, DWORD PTR [rsi+rax*8]
; Line 654
	movss	xmm7, DWORD PTR [rsi+rax*8+4]
	subss	xmm6, DWORD PTR [rsi+rbx*8]
	subss	xmm7, DWORD PTR [rsi+rbx*8+4]
; Line 655
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm12
	jbe	SHORT $LN5@AddPolylin
	call	sqrtf
	mov	ecx, DWORD PTR tv4679[rbp]
	movaps	xmm1, xmm10
	mov	rdx, QWORD PTR tv5059[rbp]
	mov	r11, QWORD PTR tv4710[rbp]
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN5@AddPolylin:
; Line 656
	inc	ecx
	movss	DWORD PTR [r12+rbx*8], xmm7
	mov	DWORD PTR tv4679[rbp], ecx
; Line 657
	xorps	xmm6, xmm11
	movss	DWORD PTR [r12+rbx*8+4], xmm6
	mov	rbx, rdx
	cmp	rdx, r11
	jl	SHORT $LC4@AddPolylin
$LN192@AddPolylin:
; Line 659
	movzx	eax, BYTE PTR closed$[rbp]
	mov	r10, r15
	test	al, al
	jne	SHORT $LN207@AddPolylin
; Line 660
	movsd	xmm0, QWORD PTR [r12+r15*8-16]
	movsd	QWORD PTR [r12+r15*8-8], xmm0
$LN207@AddPolylin:
; Line 662
	cmp	BYTE PTR thick_line$1$[rbp], r14b
	jne	$LN38@AddPolylin
; Line 664
	test	al, al
	jne	$LN40@AddPolylin
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movss	xmm1, DWORD PTR [r12]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 668
	lea	eax, DWORD PTR [r15+r15]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm1, DWORD PTR [rsi]
	movss	xmm0, DWORD PTR [r12+4]
	addss	xmm0, DWORD PTR [rsi+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 668
	movsxd	rcx, eax
	movss	DWORD PTR [r13], xmm1
	movss	DWORD PTR [r13+4], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm0, DWORD PTR [rsi+4]
	subss	xmm0, DWORD PTR [r12+4]
	movss	xmm2, DWORD PTR [rsi]
	subss	xmm2, DWORD PTR [r12]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 667
	movss	DWORD PTR [r13+12], xmm0
	movss	DWORD PTR [r13+8], xmm2
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movss	xmm1, DWORD PTR [rsi+r10*8-8]
	movss	xmm0, DWORD PTR [rsi+r10*8-4]
	addss	xmm1, DWORD PTR [r12+r10*8-8]
	addss	xmm0, DWORD PTR [r12+r10*8-4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 668
	movss	DWORD PTR [r13+rcx*8-16], xmm1
	movss	DWORD PTR [r13+rcx*8-12], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 295
	movss	xmm1, DWORD PTR [rsi+r10*8-8]
	movss	xmm0, DWORD PTR [rsi+r10*8-4]
	subss	xmm1, DWORD PTR [r12+r10*8-8]
	subss	xmm0, DWORD PTR [r12+r10*8-4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 669
	movss	DWORD PTR [r13+rcx*8-8], xmm1
	movss	DWORD PTR [r13+rcx*8-4], xmm0
$LN40@AddPolylin:
; Line 673
	mov	r9d, DWORD PTR [rdi+76]
; Line 674
	test	r11, r11
	jle	$LN9@AddPolylin
; Line 660
	movss	xmm5, DWORD PTR __real@3f000000
	mov	rdx, r14
	mov	ebx, 1
	npad	7
$LL10@AddPolylin:
; Line 677
	lea	rax, QWORD PTR [rdx+1]
	cmp	ebx, r15d
	mov	rcx, r14
	mov	QWORD PTR tv5064[rbp], rax
	cmovne	rcx, rax
	jne	SHORT $LN54@AddPolylin
	mov	r8d, DWORD PTR [rdi+76]
	jmp	SHORT $LN55@AddPolylin
$LN54@AddPolylin:
	lea	r8d, DWORD PTR [r9+3]
$LN55@AddPolylin:
; Line 680
	movss	xmm4, DWORD PTR [r12+rdx*8]
	lea	rax, QWORD PTR [rcx*8]
	addss	xmm4, DWORD PTR [rax+r12]
; Line 681
	movss	xmm3, DWORD PTR [rax+r12+4]
; Line 682
	movaps	xmm1, xmm5
	addss	xmm3, DWORD PTR [r12+rdx*8+4]
; Line 687
	shl	rcx, 4
; Line 696
	lea	edx, DWORD PTR [r8+1]
	add	rcx, r13
	inc	ebx
	mulss	xmm4, xmm5
	mulss	xmm3, xmm5
	movaps	xmm0, xmm4
	mulss	xmm0, xmm4
	movaps	xmm2, xmm3
	mulss	xmm2, xmm3
	addss	xmm2, xmm0
	movaps	xmm0, xmm10
	maxss	xmm1, xmm2
	divss	xmm0, xmm1
	mulss	xmm3, xmm0
	mulss	xmm4, xmm0
	movaps	xmm1, xmm3
	movaps	xmm0, xmm4
	addss	xmm0, DWORD PTR [rax+rsi]
	movss	DWORD PTR [rcx], xmm0
	addss	xmm1, DWORD PTR [rax+rsi+4]
	movss	DWORD PTR [rcx+4], xmm1
	movss	xmm0, DWORD PTR [rax+rsi]
	subss	xmm0, xmm4
	movss	DWORD PTR [rcx+8], xmm0
	movss	xmm1, DWORD PTR [rax+rsi+4]
	subss	xmm1, xmm3
	movss	DWORD PTR [rcx+12], xmm1
	lea	ecx, DWORD PTR [r9+2]
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax], r8w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+2], r9w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+4], cx
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+6], cx
	lea	ecx, DWORD PTR [r8+2]
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+8], cx
	lea	ecx, DWORD PTR [r9+1]
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+10], r8w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+12], dx
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+14], cx
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+16], r9w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+18], r9w
; Line 700
	mov	r9d, r8d
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+20], r8w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+22], dx
	add	QWORD PTR [rdi+88], 24
	mov	rdx, QWORD PTR tv5064[rbp]
	cmp	rdx, r11
	jl	$LL10@AddPolylin
$LN9@AddPolylin:
; Line 704
	test	r10, r10
	jle	$LN24@AddPolylin
	mov	ecx, DWORD PTR col$1$[rbp]
	mov	edx, DWORD PTR col_trans$1$[rbp]
	npad	6
$LL16@AddPolylin:
; Line 706
	movsd	xmm0, QWORD PTR [rsi]
	lea	rsi, QWORD PTR [rsi+8]
	mov	rax, QWORD PTR [rdi+80]
	lea	r13, QWORD PTR [r13+16]
	inc	r14
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+8], xmm8
	movss	DWORD PTR [rax+12], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+16], ecx
; Line 707
	movsd	xmm0, QWORD PTR [r13-16]
	mov	rax, QWORD PTR [rdi+80]
	movsd	QWORD PTR [rax+20], xmm0
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+28], xmm8
	movss	DWORD PTR [rax+32], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+36], edx
; Line 708
	mov	rax, QWORD PTR [rdi+80]
	movsd	xmm0, QWORD PTR [r13-8]
	movsd	QWORD PTR [rax+40], xmm0
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+48], xmm8
	movss	DWORD PTR [rax+52], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+56], edx
; Line 709
	add	QWORD PTR [rdi+80], 60			; 0000003cH
	cmp	r14, r10
	jl	$LL16@AddPolylin
; Line 777
	movzx	eax, WORD PTR tv4708[rbp]
	add	DWORD PTR [rdi+76], eax
; Line 778
	jmp	$LN27@AddPolylin
$LN38@AddPolylin:
; Line 714
	movss	xmm7, DWORD PTR __real@3f000000
	subss	xmm13, xmm10
	mulss	xmm13, xmm7
	movaps	xmm6, xmm13
	addss	xmm6, xmm10
; Line 715
	test	al, al
	jne	$LN218@AddPolylin
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 722
	lea	eax, DWORD PTR [r15*4-4]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	mulss	xmm0, DWORD PTR [r12+4]
	movaps	xmm1, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 722
	movsxd	rcx, eax
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	mulss	xmm1, DWORD PTR [r12]
	movaps	xmm2, xmm13
; Line 294
	addss	xmm0, DWORD PTR [rsi+4]
	addss	xmm1, DWORD PTR [rsi]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 718
	movss	DWORD PTR [r13+4], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm0, xmm13
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 718
	movss	DWORD PTR [r13], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm1, xmm13
	mulss	xmm0, DWORD PTR [r12+4]
	mulss	xmm2, DWORD PTR [r12]
; Line 294
	addss	xmm0, DWORD PTR [rsi+4]
	addss	xmm2, DWORD PTR [rsi]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 719
	movss	DWORD PTR [r13+12], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm0, xmm13
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 719
	movss	DWORD PTR [r13+8], xmm2
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	mulss	xmm0, DWORD PTR [r12]
	mulss	xmm1, DWORD PTR [r12+4]
; Line 295
	movss	xmm2, DWORD PTR [rsi]
	subss	xmm2, xmm0
	movss	xmm0, DWORD PTR [rsi+4]
	subss	xmm0, xmm1
; Line 292
	movaps	xmm1, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 720
	movss	DWORD PTR [r13+16], xmm2
	movss	DWORD PTR [r13+20], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm0, xmm6
	mulss	xmm0, DWORD PTR [r12]
	mulss	xmm1, DWORD PTR [r12+4]
; Line 295
	movss	xmm2, DWORD PTR [rsi]
	subss	xmm2, xmm0
	movss	xmm0, DWORD PTR [rsi+4]
	subss	xmm0, xmm1
; Line 292
	movaps	xmm1, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 721
	movss	DWORD PTR [r13+24], xmm2
	movss	DWORD PTR [r13+28], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm0, xmm6
	mulss	xmm0, DWORD PTR [r12+r10*8-4]
	mulss	xmm1, DWORD PTR [r12+r10*8-8]
; Line 294
	addss	xmm0, DWORD PTR [rsi+r10*8-4]
	addss	xmm1, DWORD PTR [rsi+r10*8-8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 722
	movss	DWORD PTR [r13+rcx*8+4], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm0, xmm13
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 722
	movss	DWORD PTR [r13+rcx*8], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm1, xmm13
	mulss	xmm0, DWORD PTR [r12+r10*8-4]
	mulss	xmm1, DWORD PTR [r12+r10*8-8]
; Line 294
	addss	xmm0, DWORD PTR [rsi+r10*8-4]
	addss	xmm1, DWORD PTR [rsi+r10*8-8]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 723
	movss	DWORD PTR [r13+rcx*8+12], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm0, xmm13
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 723
	movss	DWORD PTR [r13+rcx*8+8], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm1, xmm13
	mulss	xmm0, DWORD PTR [r12+r10*8-8]
	mulss	xmm1, DWORD PTR [r12+r10*8-4]
; Line 295
	movss	xmm2, DWORD PTR [rsi+r10*8-8]
	subss	xmm2, xmm0
	movss	xmm0, DWORD PTR [rsi+r10*8-4]
	subss	xmm0, xmm1
; Line 292
	movaps	xmm1, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 724
	movss	DWORD PTR [r13+rcx*8+16], xmm2
	movss	DWORD PTR [r13+rcx*8+20], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 292
	movaps	xmm0, xmm6
	mulss	xmm0, DWORD PTR [r12+r10*8-8]
; Line 295
	movss	xmm2, DWORD PTR [rsi+r10*8-8]
; Line 292
	mulss	xmm1, DWORD PTR [r12+r10*8-4]
; Line 295
	subss	xmm2, xmm0
	movss	xmm0, DWORD PTR [rsi+r10*8-4]
	subss	xmm0, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 725
	movss	DWORD PTR [r13+rcx*8+24], xmm2
	movss	DWORD PTR [r13+rcx*8+28], xmm0
$LN218@AddPolylin:
; Line 729
	mov	eax, DWORD PTR [rdi+76]
	mov	DWORD PTR idx1$1$[rbp], eax
; Line 730
	test	r11, r11
	jle	$LN18@AddPolylin
; Line 660
	mov	rdx, r14
	mov	ebx, 1
	mov	r10d, eax
	npad	12
$LL19@AddPolylin:
; Line 733
	lea	rax, QWORD PTR [rdx+1]
	cmp	ebx, r15d
	mov	rcx, r14
	mov	QWORD PTR tv5066[rbp], rax
	cmovne	rcx, rax
	jne	SHORT $LN58@AddPolylin
	mov	r8d, DWORD PTR [rdi+76]
	jmp	SHORT $LN221@AddPolylin
$LN58@AddPolylin:
	lea	r8d, DWORD PTR [r10+4]
$LN221@AddPolylin:
; Line 736
	movss	xmm5, DWORD PTR [r12+rdx*8]
	lea	rax, QWORD PTR [rcx*8]
	addss	xmm5, DWORD PTR [rax+r12]
; Line 737
	movss	xmm4, DWORD PTR [r12+rdx*8+4]
; Line 756
	lea	r9d, DWORD PTR [r8+1]
	addss	xmm4, DWORD PTR [rax+r12+4]
	shl	rcx, 5
	lea	edx, DWORD PTR [r10+2]
	add	rcx, r13
	mov	DWORD PTR idx2$1$[rbp], r8d
	mulss	xmm5, xmm7
	movaps	xmm1, xmm7
; Line 757
	add	r8w, 2
	mulss	xmm4, xmm7
	movaps	xmm0, xmm5
	mulss	xmm0, xmm5
	movaps	xmm2, xmm4
	mulss	xmm2, xmm4
	addss	xmm2, xmm0
	movaps	xmm0, xmm10
	maxss	xmm1, xmm2
	divss	xmm0, xmm1
	mulss	xmm4, xmm0
	mulss	xmm5, xmm0
	movaps	xmm3, xmm4
	mulss	xmm4, xmm13
	movaps	xmm2, xmm5
	mulss	xmm3, xmm6
	mulss	xmm2, xmm6
	movaps	xmm1, xmm3
	mulss	xmm5, xmm13
	movaps	xmm0, xmm2
	addss	xmm0, DWORD PTR [rax+rsi]
	movss	DWORD PTR [rcx], xmm0
	movaps	xmm0, xmm5
	addss	xmm1, DWORD PTR [rax+rsi+4]
	movss	DWORD PTR [rcx+4], xmm1
	movaps	xmm1, xmm4
	addss	xmm0, DWORD PTR [rax+rsi]
	movss	DWORD PTR [rcx+8], xmm0
	addss	xmm1, DWORD PTR [rax+rsi+4]
	movss	DWORD PTR [rcx+12], xmm1
	movss	xmm0, DWORD PTR [rax+rsi]
	subss	xmm0, xmm5
	movss	DWORD PTR [rcx+16], xmm0
	movss	xmm1, DWORD PTR [rax+rsi+4]
	subss	xmm1, xmm4
	movss	DWORD PTR [rcx+20], xmm1
	movss	xmm0, DWORD PTR [rax+rsi]
	subss	xmm0, xmm2
	movss	DWORD PTR [rcx+24], xmm0
	movss	xmm1, DWORD PTR [rax+rsi+4]
	subss	xmm1, xmm3
	movss	DWORD PTR [rcx+28], xmm1
	lea	ecx, DWORD PTR [r10+1]
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax], r9w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+2], cx
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+4], dx
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+6], dx
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+8], r8w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+10], r9w
; Line 758
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+12], r9w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+14], cx
	mov	rax, QWORD PTR [rdi+88]
; Line 759
	mov	ecx, DWORD PTR idx2$1$[rbp]
	mov	WORD PTR [rax+16], r10w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+18], r10w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+20], cx
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+22], r9w
; Line 760
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+24], r8w
	add	r10w, 3
	mov	rax, QWORD PTR [rdi+88]
; Line 761
	add	cx, 3
	inc	ebx
	mov	WORD PTR [rax+26], dx
	mov	rax, QWORD PTR [rdi+88]
	mov	rdx, QWORD PTR tv5066[rbp]
	mov	WORD PTR [rax+28], r10w
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+30], r10w
	mov	rax, QWORD PTR [rdi+88]
; Line 764
	mov	r10d, DWORD PTR idx2$1$[rbp]
	mov	WORD PTR [rax+32], cx
	mov	rax, QWORD PTR [rdi+88]
	mov	WORD PTR [rax+34], r8w
	add	QWORD PTR [rdi+88], 36			; 00000024H
	cmp	rdx, r11
	jl	$LL19@AddPolylin
	mov	r10, r15
$LN18@AddPolylin:
; Line 768
	test	r10, r10
	jle	$LN24@AddPolylin
; Line 725
	mov	edx, DWORD PTR col$1$[rbp]
	lea	rcx, QWORD PTR [r13+16]
	mov	r8d, DWORD PTR col_trans$1$[rbp]
	npad	7
$LL25@AddPolylin:
; Line 770
	movsd	xmm0, QWORD PTR [rcx-16]
	lea	rcx, QWORD PTR [rcx+32]
	mov	rax, QWORD PTR [rdi+80]
	inc	r14
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+8], xmm8
	movss	DWORD PTR [rax+12], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+16], r8d
; Line 771
	movsd	xmm0, QWORD PTR [rcx-40]
	mov	rax, QWORD PTR [rdi+80]
	movsd	QWORD PTR [rax+20], xmm0
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+28], xmm8
	movss	DWORD PTR [rax+32], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+36], edx
; Line 772
	movsd	xmm0, QWORD PTR [rcx-32]
	mov	rax, QWORD PTR [rdi+80]
	movsd	QWORD PTR [rax+40], xmm0
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+48], xmm8
	movss	DWORD PTR [rax+52], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+56], edx
; Line 773
	mov	rax, QWORD PTR [rdi+80]
	movsd	xmm0, QWORD PTR [rcx-24]
	movsd	QWORD PTR [rax+60], xmm0
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+68], xmm8
	movss	DWORD PTR [rax+72], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+76], r8d
; Line 774
	add	QWORD PTR [rdi+80], 80			; 00000050H
	cmp	r14, r10
	jl	$LL25@AddPolylin
$LN24@AddPolylin:
; Line 777
	movzx	eax, WORD PTR tv4708[rbp]
	add	DWORD PTR [rdi+76], eax
; Line 778
	jmp	$LN27@AddPolylin
$LN34@AddPolylin:
; Line 782
	lea	edx, DWORD PTR [rax+rax*2]
; Line 784
	mov	rcx, rdi
	add	edx, edx
	lea	r8d, DWORD PTR [rax*4]
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 786
	test	rbx, rbx
	jle	$LN27@AddPolylin
; Line 725
	mulss	xmm13, DWORD PTR __real@3f000000
	xor	r14d, r14d
	mov	edx, DWORD PTR col$1$[rbp]
	mov	r13d, r14d
	xorps	xmm12, xmm12
	lea	ebx, QWORD PTR [r14+1]
	npad	2
$LL28@AddPolylin:
; Line 792
	movss	xmm11, DWORD PTR [rsi+r13*8]
	lea	rcx, QWORD PTR [rsi+r13*8]
	inc	r13
	mov	QWORD PTR p1$1$[rbp], rcx
	cmp	ebx, r15d
	mov	r12, r14
	cmovne	r12, r13
	movss	xmm6, DWORD PTR [rsi+r12*8]
; Line 793
	movss	xmm7, DWORD PTR [rsi+r12*8+4]
	subss	xmm6, xmm11
	subss	xmm7, DWORD PTR [rcx+4]
; Line 794
	movaps	xmm1, xmm6
	movaps	xmm0, xmm7
	mulss	xmm1, xmm6
	mulss	xmm0, xmm7
	addss	xmm0, xmm1
	comiss	xmm0, xmm12
	jbe	SHORT $LN29@AddPolylin
	call	sqrtf
	mov	rcx, QWORD PTR p1$1$[rbp]
	movaps	xmm1, xmm10
	mov	edx, DWORD PTR col$1$[rbp]
	divss	xmm1, xmm0
	mulss	xmm6, xmm1
	mulss	xmm7, xmm1
$LN29@AddPolylin:
; Line 798
	mov	rax, QWORD PTR [rdi+80]
	inc	ebx
	mulss	xmm7, xmm13
	mulss	xmm6, xmm13
	movaps	xmm0, xmm7
	addss	xmm0, xmm11
	movss	DWORD PTR [rax], xmm0
; Line 799
	movaps	xmm0, xmm7
	movss	xmm1, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR [rdi+80]
	subss	xmm1, xmm6
	movss	DWORD PTR [rax+4], xmm1
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+8], xmm8
	movss	DWORD PTR [rax+12], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+16], edx
	addss	xmm0, DWORD PTR [rsi+r12*8]
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+20], xmm0
	movss	xmm1, DWORD PTR [rsi+r12*8+4]
	mov	rax, QWORD PTR [rdi+80]
	subss	xmm1, xmm6
	movss	DWORD PTR [rax+24], xmm1
; Line 800
	movaps	xmm1, xmm6
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+28], xmm8
	movss	DWORD PTR [rax+32], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+36], edx
	movss	xmm0, DWORD PTR [rsi+r12*8]
	mov	rax, QWORD PTR [rdi+80]
	subss	xmm0, xmm7
	movss	DWORD PTR [rax+40], xmm0
	addss	xmm1, DWORD PTR [rsi+r12*8+4]
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+44], xmm1
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+48], xmm8
	movss	DWORD PTR [rax+52], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+56], edx
; Line 801
	movss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR [rdi+80]
	subss	xmm0, xmm7
	movss	DWORD PTR [rax+60], xmm0
	addss	xmm6, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+64], xmm6
	mov	rax, QWORD PTR [rdi+80]
	movss	DWORD PTR [rax+68], xmm8
	movss	DWORD PTR [rax+72], xmm9
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax+76], edx
; Line 804
	mov	rcx, QWORD PTR [rdi+88]
	movzx	eax, WORD PTR [rdi+76]
	add	QWORD PTR [rdi+80], 80			; 00000050H
	mov	WORD PTR [rcx], ax
	movzx	ecx, WORD PTR [rdi+76]
	mov	rax, QWORD PTR [rdi+88]
	inc	cx
	mov	WORD PTR [rax+2], cx
	mov	rax, QWORD PTR [rdi+88]
	movzx	ecx, WORD PTR [rdi+76]
	add	cx, 2
	mov	WORD PTR [rax+4], cx
; Line 805
	mov	rcx, QWORD PTR [rdi+88]
	movzx	eax, WORD PTR [rdi+76]
	mov	WORD PTR [rcx+6], ax
	mov	rax, QWORD PTR [rdi+88]
	movzx	ecx, WORD PTR [rdi+76]
	add	cx, 2
	mov	WORD PTR [rax+8], cx
	movzx	ecx, WORD PTR [rdi+76]
	mov	rax, QWORD PTR [rdi+88]
	add	cx, 3
	mov	WORD PTR [rax+10], cx
; Line 806
	add	QWORD PTR [rdi+88], 12
; Line 807
	add	DWORD PTR [rdi+76], 4
	cmp	r13, QWORD PTR tv4710[rbp]
	jl	$LL28@AddPolylin
$LN27@AddPolylin:
; Line 810
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rbp+272]
	mov	rsi, QWORD PTR [rbp+280]
	mov	rdi, QWORD PTR [rbp+288]
	movaps	xmm6, XMMWORD PTR [rbp+208]
	movaps	xmm7, XMMWORD PTR [rbp+192]
	movaps	xmm8, XMMWORD PTR [rbp+176]
	movaps	xmm9, XMMWORD PTR [rbp+160]
	movaps	xmm10, XMMWORD PTR [rbp+144]
	movaps	xmm11, XMMWORD PTR [rbp+128]
	movaps	xmm12, XMMWORD PTR [rbp+112]
	movaps	xmm13, XMMWORD PTR [rbp+96]
	lea	rsp, QWORD PTR [rbp+224]
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ENDP	; ImDrawList::AddPolyline
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z
_TEXT	SEGMENT
clip_rect$ = 80
this$ = 144
font$ = 152
font_size$ = 160
pos$ = 168
col$ = 176
text_begin$ = 184
text_end$ = 192
wrap_width$ = 200
cpu_fine_clip_rect$ = 208
?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z PROC ; ImDrawList::AddText, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1207
$LN39:
	mov	rax, rsp
	mov	QWORD PTR [rax+24], rbp
	push	rsi
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H
; Line 1208
	mov	r14d, DWORD PTR col$[rsp]
	mov	r15, r9
	movaps	XMMWORD PTR [rax-40], xmm6
	movaps	xmm6, xmm2
	mov	rbp, rdx
	mov	rsi, rcx
	test	r14d, -16777216				; ff000000H
	je	$LN1@AddText
; Line 1211
	mov	QWORD PTR [rax+8], rbx
	mov	rbx, QWORD PTR text_end$[rsp]
	mov	QWORD PTR [rax+16], rdi
	mov	rdi, QWORD PTR text_begin$[rsp]
	test	rbx, rbx
	jne	SHORT $LN3@AddText
; Line 1212
	mov	rbx, -1
	npad	7
$LL34@AddText:
	inc	rbx
	cmp	BYTE PTR [rdi+rbx], 0
	jne	SHORT $LL34@AddText
	add	rbx, rdi
$LN3@AddText:
; Line 1213
	cmp	rdi, rbx
	je	$LN36@AddText
; Line 1217
	test	rdx, rdx
	jne	SHORT $LN33@AddText
; Line 1218
	mov	rax, QWORD PTR [rcx+56]
	mov	rbp, QWORD PTR [rax+8]
$LN33@AddText:
; Line 1219
	xorps	xmm0, xmm0
	ucomiss	xmm2, xmm0
	jp	SHORT $LN6@AddText
	jne	SHORT $LN6@AddText
; Line 1220
	mov	rax, QWORD PTR [rcx+56]
	movss	xmm6, DWORD PTR [rax+16]
$LN6@AddText:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [rcx+112]
	test	eax, eax
	jg	SHORT $LN12@AddText
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rsi+112]
$LN12@AddText:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1222
	mov	rcx, QWORD PTR [rbp+72]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	movsxd	rdx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1222
	mov	rax, QWORD PTR [rsi+120]
	mov	rax, QWORD PTR [rax+rdx*8-8]
	cmp	QWORD PTR [rcx+8], rax
	je	SHORT $LN9@AddText
	mov	r8d, 1222				; 000004c6H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1GM@DGBHKFGF@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr@
	call	QWORD PTR __imp__wassert
$LN9@AddText:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [rsi+96]
	test	eax, eax
	jg	SHORT $LN15@AddText
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rsi+96]
$LN15@AddText:
	movsxd	rcx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1224
	mov	rax, QWORD PTR [rsi+104]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	add	rcx, rcx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1224
	movups	xmm0, XMMWORD PTR [rax+rcx*8-16]
; Line 1225
	mov	rax, QWORD PTR cpu_fine_clip_rect$[rsp]
	movups	XMMWORD PTR clip_rect$[rsp], xmm0
	test	rax, rax
	je	SHORT $LN37@AddText
; Line 1227
	movss	xmm1, DWORD PTR [rax]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	movss	xmm0, DWORD PTR clip_rect$[rsp]
	comiss	xmm0, xmm1
	jae	SHORT $LN19@AddText
	movss	DWORD PTR clip_rect$[rsp], xmm1
$LN19@AddText:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1228
	movss	xmm1, DWORD PTR [rax+4]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	movss	xmm0, DWORD PTR clip_rect$[rsp+4]
	comiss	xmm0, xmm1
	jae	SHORT $LN23@AddText
	movss	DWORD PTR clip_rect$[rsp+4], xmm1
$LN23@AddText:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1229
	movss	xmm0, DWORD PTR [rax+8]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	comiss	xmm0, DWORD PTR clip_rect$[rsp+8]
	ja	SHORT $LN27@AddText
	movss	DWORD PTR clip_rect$[rsp+8], xmm0
$LN27@AddText:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1230
	movss	xmm0, DWORD PTR [rax+12]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 349
	comiss	xmm0, DWORD PTR clip_rect$[rsp+12]
	ja	SHORT $LN31@AddText
	movss	DWORD PTR clip_rect$[rsp+12], xmm0
$LN31@AddText:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1232
	test	rax, rax
$LN37@AddText:
	movss	xmm0, DWORD PTR wrap_width$[rsp]
	setne	al
	mov	r9, QWORD PTR [r15]
	movaps	xmm2, xmm6
	mov	BYTE PTR [rsp+72], al
	mov	rdx, rsi
	movss	DWORD PTR [rsp+64], xmm0
	lea	rax, QWORD PTR clip_rect$[rsp]
	mov	QWORD PTR [rsp+56], rbx
	mov	rcx, rbp
	mov	QWORD PTR [rsp+48], rdi
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], r14d
	call	?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z ; ImFont::RenderText
$LN36@AddText:
	mov	rbx, QWORD PTR [rsp+144]
	mov	rdi, QWORD PTR [rsp+152]
$LN1@AddText:
; Line 1233
	mov	rbp, QWORD PTR [rsp+160]
	movaps	xmm6, XMMWORD PTR [rsp+96]
	add	rsp, 112				; 00000070H
	pop	r15
	pop	r14
	pop	rsi
	ret	0
?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z ENDP ; ImDrawList::AddText
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z
_TEXT	SEGMENT
clip_rect$1 = 80
this$ = 144
pos$ = 152
col$ = 160
text_begin$ = 168
text_end$ = 176
?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z PROC	; ImDrawList::AddText, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1236
$LN40:
; Line 1208
	test	r8d, -16777216				; ff000000H
	je	$LN38@AddText
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H
; Line 1237
	mov	rbx, QWORD PTR text_end$[rsp]
	mov	rdi, r9
	mov	r14d, r8d
	mov	r15, rdx
	mov	rsi, rcx
; Line 1211
	test	rbx, rbx
	jne	SHORT $LN5@AddText
; Line 1212
	mov	rbx, -1
$LL37@AddText:
	inc	rbx
	cmp	BYTE PTR [r9+rbx], 0
	jne	SHORT $LL37@AddText
	add	rbx, rdi
$LN5@AddText:
; Line 1213
	cmp	rdi, rbx
	je	$LN3@AddText
; Line 1218
	mov	rax, QWORD PTR [rcx+56]
	mov	QWORD PTR [rsp+144], rbp
	movaps	XMMWORD PTR [rsp+96], xmm6
	mov	rbp, QWORD PTR [rax+8]
; Line 1220
	movss	xmm6, DWORD PTR [rax+16]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [rcx+112]
	test	eax, eax
	jg	SHORT $LN14@AddText
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rsi+112]
$LN14@AddText:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1222
	mov	rcx, QWORD PTR [rbp+72]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	movsxd	rdx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1222
	mov	rax, QWORD PTR [rsi+120]
	mov	rax, QWORD PTR [rax+rdx*8-8]
	cmp	QWORD PTR [rcx+8], rax
	je	SHORT $LN11@AddText
	mov	r8d, 1222				; 000004c6H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1GM@DGBHKFGF@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr@
	call	QWORD PTR __imp__wassert
$LN11@AddText:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [rsi+96]
	test	eax, eax
	jg	SHORT $LN17@AddText
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rsi+96]
$LN17@AddText:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1232
	mov	r9, QWORD PTR [r15]
	xorps	xmm1, xmm1
	mov	BYTE PTR [rsp+72], 0
	movaps	xmm2, xmm6
	movss	DWORD PTR [rsp+64], xmm1
	mov	rcx, rbp
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	movsxd	rdx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1224
	mov	rax, QWORD PTR [rsi+104]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	add	rdx, rdx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1232
	mov	QWORD PTR [rsp+56], rbx
	mov	QWORD PTR [rsp+48], rdi
	movups	xmm0, XMMWORD PTR [rax+rdx*8-16]
	lea	rax, QWORD PTR clip_rect$1[rsp]
	mov	rdx, rsi
	mov	QWORD PTR [rsp+40], rax
	movups	XMMWORD PTR clip_rect$1[rsp], xmm0
	mov	DWORD PTR [rsp+32], r14d
	call	?RenderText@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IAEBUImVec4@@PEBD3M_N@Z ; ImFont::RenderText
	movaps	xmm6, XMMWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+144]
$LN3@AddText:
; Line 1238
	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
$LN38@AddText:
	ret	0
?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z ENDP	; ImDrawList::AddText
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddNgonFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z
_TEXT	SEGMENT
this$ = 64
center$ = 72
radius$ = 80
col$ = 88
num_segments$ = 96
?AddNgonFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z PROC	; ImDrawList::AddNgonFilled, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1185
$LN9:
; Line 1186
	test	r9d, -16777216				; ff000000H
	je	SHORT $LN7@AddNgonFil
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	eax, DWORD PTR num_segments$[rsp]
	mov	edi, r9d
	mov	rbx, rcx
	cmp	eax, 2
	jle	SHORT $LN3@AddNgonFil
; Line 1190
	movd	xmm0, eax
	xorps	xmm3, xmm3
	cvtdq2ps xmm0, xmm0
; Line 1191
	dec	eax
	mov	DWORD PTR [rsp+40], eax
	movaps	xmm1, xmm0
	subss	xmm1, DWORD PTR __real@3f800000
	mulss	xmm1, DWORD PTR __real@40c90fdb
	divss	xmm1, xmm0
	movss	DWORD PTR [rsp+32], xmm1
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
	mov	r8d, DWORD PTR [rbx+128]
	mov	r9d, edi
	mov	rdx, QWORD PTR [rbx+136]
	mov	rcx, rbx
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	DWORD PTR [rbx+128], 0
$LN3@AddNgonFil:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1193
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
$LN7@AddNgonFil:
	ret	0
?AddNgonFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z ENDP	; ImDrawList::AddNgonFilled
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddNgon@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
_TEXT	SEGMENT
this$ = 64
center$ = 72
radius$ = 80
col$ = 88
num_segments$ = 96
thickness$ = 104
?AddNgon@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z PROC	; ImDrawList::AddNgon, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1173
$LN9:
; Line 1174
	test	r9d, -16777216				; ff000000H
	je	$LN7@AddNgon
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	eax, DWORD PTR num_segments$[rsp]
	mov	ebx, r9d
	mov	rdi, rcx
	cmp	eax, 2
	jle	SHORT $LN3@AddNgon
; Line 1179
	subss	xmm2, DWORD PTR __real@3f000000
	movd	xmm0, eax
	xorps	xmm3, xmm3
	cvtdq2ps xmm0, xmm0
	dec	eax
	mov	DWORD PTR [rsp+40], eax
	movaps	xmm1, xmm0
	subss	xmm1, DWORD PTR __real@3f800000
	mulss	xmm1, DWORD PTR __real@40c90fdb
	divss	xmm1, xmm0
	movss	DWORD PTR [rsp+32], xmm1
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
; File E:\reps\ocornut\imgui\imgui.h
; Line 2035
	movss	xmm0, DWORD PTR thickness$[rsp]
	mov	r9d, ebx
	mov	r8d, DWORD PTR [rdi+128]
	mov	rcx, rdi
	mov	rdx, QWORD PTR [rdi+136]
	movss	DWORD PTR [rsp+40], xmm0
	mov	BYTE PTR [rsp+32], 1
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
	mov	DWORD PTR [rdi+128], 0
$LN3@AddNgon:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1181
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
$LN7@AddNgon:
	ret	0
?AddNgon@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z ENDP	; ImDrawList::AddNgon
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z
_TEXT	SEGMENT
this$ = 96
center$ = 104
radius$ = 112
col$ = 120
num_segments$ = 128
?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z PROC ; ImDrawList::AddCircleFilled, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1142
$LN25:
; Line 1143
	test	r9d, -16777216				; ff000000H
	je	$LN23@AddCircleF
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 80					; 00000050H
	movaps	XMMWORD PTR [rsp+64], xmm6
; Line 1142
	mov	edi, r9d
; Line 1143
	movaps	XMMWORD PTR [rsp+48], xmm7
	movaps	xmm6, xmm2
	xorps	xmm7, xmm7
	mov	rsi, rdx
	comiss	xmm7, xmm6
	mov	rbx, rcx
	jae	$LN22@AddCircleF
; Line 1147
	mov	eax, DWORD PTR num_segments$[rsp]
	test	eax, eax
	jg	SHORT $LN4@AddCircleF
; Line 1150
	mov	rdx, QWORD PTR [rbx+56]
	cvttss2si ecx, xmm6
	lea	eax, DWORD PTR [rcx-1]
; Line 1151
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN6@AddCircleF
; Line 1152
	movsxd	rax, ecx
	movzx	eax, BYTE PTR [rax+rdx+143]
	jmp	SHORT $LN18@AddCircleF
$LN6@AddCircleF:
; Line 1154
	movaps	xmm0, xmm6
	subss	xmm0, DWORD PTR [rdx+24]
	divss	xmm0, xmm6
	call	acosf
	movss	xmm1, DWORD PTR __real@40c90fdb
	divss	xmm1, xmm0
	cvttss2si eax, xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	cmp	eax, 12
	jl	SHORT $LN21@AddCircleF
$LN17@AddCircleF:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1164
	mov	ecx, 512				; 00000200H
	cmp	eax, ecx
	cmovg	eax, ecx
$LN18@AddCircleF:
	cmp	eax, 12
	jne	SHORT $LN8@AddCircleF
$LN21@AddCircleF:
; Line 1165
	xor	r9d, r9d
	mov	DWORD PTR [rsp+32], 12
	movaps	xmm2, xmm6
	mov	rdx, rsi
	mov	rcx, rbx
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
	jmp	SHORT $LN9@AddCircleF
$LN4@AddCircleF:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	cmp	eax, 3
	jge	SHORT $LN17@AddCircleF
	mov	eax, 3
$LN8@AddCircleF:
	movd	xmm0, eax
	xorps	xmm3, xmm3
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1163
	cvtdq2ps xmm0, xmm0
; Line 1167
	dec	eax
	mov	rdx, rsi
	mov	DWORD PTR [rsp+40], eax
	mov	rcx, rbx
	movaps	xmm2, xmm6
	movaps	xmm1, xmm0
	subss	xmm1, DWORD PTR __real@3f800000
	mulss	xmm1, DWORD PTR __real@40c90fdb
	divss	xmm1, xmm0
	movss	DWORD PTR [rsp+32], xmm1
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
$LN9@AddCircleF:
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
	mov	r8d, DWORD PTR [rbx+128]
	mov	r9d, edi
	mov	rdx, QWORD PTR [rbx+136]
	mov	rcx, rbx
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	DWORD PTR [rbx+128], 0
$LN22@AddCircleF:
	movaps	xmm7, XMMWORD PTR [rsp+48]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1169
	mov	rbx, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	movaps	xmm6, XMMWORD PTR [rsp+64]
	add	rsp, 80					; 00000050H
	pop	rdi
$LN23@AddCircleF:
	ret	0
?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z ENDP ; ImDrawList::AddCircleFilled
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z
_TEXT	SEGMENT
this$ = 96
center$ = 104
radius$ = 112
col$ = 120
num_segments$ = 128
thickness$ = 136
?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z PROC	; ImDrawList::AddCircle, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1112
$LN25:
; Line 1113
	test	r9d, -16777216				; ff000000H
	je	$LN23@AddCircle
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 80					; 00000050H
	movaps	XMMWORD PTR [rsp+64], xmm6
; Line 1112
	mov	edi, r9d
; Line 1113
	movaps	XMMWORD PTR [rsp+48], xmm7
	movaps	xmm6, xmm2
	xorps	xmm7, xmm7
	mov	rsi, rdx
	comiss	xmm7, xmm6
	mov	rbx, rcx
	jae	$LN22@AddCircle
; Line 1117
	mov	eax, DWORD PTR num_segments$[rsp]
	test	eax, eax
	jg	SHORT $LN4@AddCircle
; Line 1120
	mov	rdx, QWORD PTR [rbx+56]
	cvttss2si ecx, xmm6
	lea	eax, DWORD PTR [rcx-1]
; Line 1121
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN6@AddCircle
; Line 1122
	movsxd	rax, ecx
	movzx	eax, BYTE PTR [rax+rdx+143]
	jmp	$LN18@AddCircle
$LN6@AddCircle:
; Line 1124
	movaps	xmm0, xmm6
	subss	xmm0, DWORD PTR [rdx+24]
	divss	xmm0, xmm6
	call	acosf
	movss	xmm1, DWORD PTR __real@40c90fdb
	divss	xmm1, xmm0
	cvttss2si eax, xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	cmp	eax, 12
	jge	$LN17@AddCircle
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1134
	subss	xmm6, DWORD PTR __real@3f000000
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	jmp	$LN21@AddCircle
$LN4@AddCircle:
	cmp	eax, 3
	jge	$LN17@AddCircle
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1134
	subss	xmm6, DWORD PTR __real@3f000000
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 351
	mov	eax, 3
$LN8@AddCircle:
	movd	xmm0, eax
	xorps	xmm3, xmm3
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1133
	cvtdq2ps xmm0, xmm0
; Line 1137
	dec	eax
	mov	rdx, rsi
	mov	DWORD PTR [rsp+40], eax
	mov	rcx, rbx
	movaps	xmm2, xmm6
	movaps	xmm1, xmm0
	subss	xmm1, DWORD PTR __real@3f800000
	mulss	xmm1, DWORD PTR __real@40c90fdb
	divss	xmm1, xmm0
	movss	DWORD PTR [rsp+32], xmm1
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
$LN9@AddCircle:
; File E:\reps\ocornut\imgui\imgui.h
; Line 2035
	movss	xmm0, DWORD PTR thickness$[rsp]
	mov	r9d, edi
	mov	r8d, DWORD PTR [rbx+128]
	mov	rcx, rbx
	mov	rdx, QWORD PTR [rbx+136]
	movss	DWORD PTR [rsp+40], xmm0
	mov	BYTE PTR [rsp+32], 1
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
	mov	DWORD PTR [rbx+128], 0
$LN22@AddCircle:
	movaps	xmm7, XMMWORD PTR [rsp+48]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1139
	mov	rbx, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	movaps	xmm6, XMMWORD PTR [rsp+64]
	add	rsp, 80					; 00000050H
	pop	rdi
$LN23@AddCircle:
	ret	0
$LN17@AddCircle:
; Line 1134
	mov	ecx, 512				; 00000200H
	cmp	eax, ecx
	cmovg	eax, ecx
$LN18@AddCircle:
	subss	xmm6, DWORD PTR __real@3f000000
	cmp	eax, 12
	jne	$LN8@AddCircle
$LN21@AddCircle:
; Line 1135
	xor	r9d, r9d
	mov	DWORD PTR [rsp+32], 12
	movaps	xmm2, xmm6
	mov	rdx, rsi
	mov	rcx, rbx
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
	jmp	$LN9@AddCircle
?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z ENDP	; ImDrawList::AddCircle
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z
_TEXT	SEGMENT
this$ = 48
p1$ = 56
p2$ = 64
p3$ = 72
col$ = 80
?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z PROC ; ImDrawList::AddTriangleFilled, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1101
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	push	rsi
	sub	rsp, 32					; 00000020H
; Line 1102
	test	DWORD PTR col$[rsp], -16777216		; ff000000H
	mov	rsi, r9
	mov	rbp, r8
	mov	rbx, rcx
	je	SHORT $LN1@AddTriangl
; Line 1105
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1106
	mov	rdx, rbp
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1107
	mov	rdx, rsi
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
	mov	r9d, DWORD PTR col$[rsp]
	mov	rcx, rbx
	mov	r8d, DWORD PTR [rbx+128]
	mov	rdx, QWORD PTR [rbx+136]
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	DWORD PTR [rbx+128], 0
$LN1@AddTriangl:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1109
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z ENDP ; ImDrawList::AddTriangleFilled
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddTriangle@ImDrawList@@QEAAXAEBUImVec2@@00IM@Z
_TEXT	SEGMENT
this$ = 64
p1$ = 72
p2$ = 80
p3$ = 88
col$ = 96
thickness$ = 104
?AddTriangle@ImDrawList@@QEAAXAEBUImVec2@@00IM@Z PROC	; ImDrawList::AddTriangle, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1090
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	push	rsi
	sub	rsp, 48					; 00000030H
; Line 1091
	test	DWORD PTR col$[rsp], -16777216		; ff000000H
	mov	rsi, r9
	mov	rbp, r8
	mov	rbx, rcx
	je	SHORT $LN1@AddTriangl
; Line 1094
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1095
	mov	rdx, rbp
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1096
	mov	rdx, rsi
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; File E:\reps\ocornut\imgui\imgui.h
; Line 2035
	movss	xmm0, DWORD PTR thickness$[rsp]
	mov	rcx, rbx
	mov	r9d, DWORD PTR col$[rsp]
	mov	r8d, DWORD PTR [rbx+128]
	mov	rdx, QWORD PTR [rbx+136]
	movss	DWORD PTR [rsp+40], xmm0
	mov	BYTE PTR [rsp+32], 1
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
	mov	DWORD PTR [rbx+128], 0
$LN1@AddTriangl:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1098
	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rsi
	ret	0
?AddTriangle@ImDrawList@@QEAAXAEBUImVec2@@00IM@Z ENDP	; ImDrawList::AddTriangle
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddQuadFilled@ImDrawList@@QEAAXAEBUImVec2@@000I@Z
_TEXT	SEGMENT
this$ = 48
p1$ = 56
p2$ = 64
p3$ = 72
p4$ = 80
col$ = 88
?AddQuadFilled@ImDrawList@@QEAAXAEBUImVec2@@000I@Z PROC	; ImDrawList::AddQuadFilled, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1078
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	push	rsi
	sub	rsp, 32					; 00000020H
; Line 1079
	test	DWORD PTR col$[rsp], -16777216		; ff000000H
	mov	rsi, r9
	mov	rbp, r8
	mov	rbx, rcx
	je	SHORT $LN1@AddQuadFil
; Line 1082
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1083
	mov	rdx, rbp
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1084
	mov	rdx, rsi
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1085
	mov	rdx, QWORD PTR p4$[rsp]
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
	mov	r9d, DWORD PTR col$[rsp]
	mov	rcx, rbx
	mov	r8d, DWORD PTR [rbx+128]
	mov	rdx, QWORD PTR [rbx+136]
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	DWORD PTR [rbx+128], 0
$LN1@AddQuadFil:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1087
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?AddQuadFilled@ImDrawList@@QEAAXAEBUImVec2@@000I@Z ENDP	; ImDrawList::AddQuadFilled
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddQuad@ImDrawList@@QEAAXAEBUImVec2@@000IM@Z
_TEXT	SEGMENT
this$ = 64
p1$ = 72
p2$ = 80
p3$ = 88
p4$ = 96
col$ = 104
thickness$ = 112
?AddQuad@ImDrawList@@QEAAXAEBUImVec2@@000IM@Z PROC	; ImDrawList::AddQuad, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1066
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	push	rsi
	sub	rsp, 48					; 00000030H
; Line 1067
	test	DWORD PTR col$[rsp], -16777216		; ff000000H
	mov	rsi, r9
	mov	rbp, r8
	mov	rbx, rcx
	je	SHORT $LN1@AddQuad
; Line 1070
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1071
	mov	rdx, rbp
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1072
	mov	rdx, rsi
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 1073
	mov	rdx, QWORD PTR p4$[rsp]
	mov	rcx, rbx
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; File E:\reps\ocornut\imgui\imgui.h
; Line 2035
	movss	xmm0, DWORD PTR thickness$[rsp]
	mov	rcx, rbx
	mov	r9d, DWORD PTR col$[rsp]
	mov	r8d, DWORD PTR [rbx+128]
	mov	rdx, QWORD PTR [rbx+136]
	movss	DWORD PTR [rsp+40], xmm0
	mov	BYTE PTR [rsp+32], 1
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
	mov	DWORD PTR [rbx+128], 0
$LN1@AddQuad:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1075
	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rsi
	ret	0
?AddQuad@ImDrawList@@QEAAXAEBUImVec2@@000IM@Z ENDP	; ImDrawList::AddQuad
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z
_TEXT	SEGMENT
this$ = 96
p_min$ = 104
p_max$ = 112
col_upr_left$ = 120
col_upr_right$ = 128
col_bot_right$ = 136
col_bot_left$ = 144
?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z PROC ; ImDrawList::AddRectFilledMultiColor, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1051
$LN29:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
; Line 1052
	mov	esi, DWORD PTR col_upr_right$[rsp]
	mov	eax, r9d
	mov	ebp, DWORD PTR col_bot_right$[rsp]
	or	eax, esi
	mov	r14d, DWORD PTR col_bot_left$[rsp]
	or	eax, ebp
	or	eax, r14d
	mov	edi, r9d
	mov	r15, r8
	mov	r12, rdx
	mov	rbx, rcx
	test	eax, -16777216				; ff000000H
	je	$LN1@AddRectFil
; Line 1055
	mov	rax, QWORD PTR [rcx+56]
; Line 1056
	mov	edx, 6
	movaps	XMMWORD PTR [rsp+48], xmm6
	movaps	XMMWORD PTR [rsp+32], xmm7
	movss	xmm6, DWORD PTR [rax]
	lea	r8d, QWORD PTR [rdx-2]
	movss	xmm7, DWORD PTR [rax+4]
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; File E:\reps\ocornut\imgui\imgui.h
; Line 2066
	mov	rcx, QWORD PTR [rbx+88]
	movzx	eax, WORD PTR [rbx+76]
	mov	WORD PTR [rcx], ax
	add	QWORD PTR [rbx+88], 2
	mov	rcx, QWORD PTR [rbx+88]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1057
	movzx	eax, WORD PTR [rbx+76]
	inc	ax
; File E:\reps\ocornut\imgui\imgui.h
; Line 2066
	mov	WORD PTR [rcx], ax
	add	QWORD PTR [rbx+88], 2
	mov	rcx, QWORD PTR [rbx+88]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1057
	movzx	eax, WORD PTR [rbx+76]
	add	ax, 2
; File E:\reps\ocornut\imgui\imgui.h
; Line 2066
	mov	WORD PTR [rcx], ax
	add	QWORD PTR [rbx+88], 2
	movzx	eax, WORD PTR [rbx+76]
	mov	rcx, QWORD PTR [rbx+88]
	mov	WORD PTR [rcx], ax
	add	QWORD PTR [rbx+88], 2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1058
	movzx	eax, WORD PTR [rbx+76]
; File E:\reps\ocornut\imgui\imgui.h
; Line 2066
	mov	rcx, QWORD PTR [rbx+88]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1058
	add	ax, 2
; File E:\reps\ocornut\imgui\imgui.h
; Line 2066
	mov	WORD PTR [rcx], ax
	add	QWORD PTR [rbx+88], 2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1058
	movzx	eax, WORD PTR [rbx+76]
; File E:\reps\ocornut\imgui\imgui.h
; Line 2066
	mov	rcx, QWORD PTR [rbx+88]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1058
	add	ax, 3
; File E:\reps\ocornut\imgui\imgui.h
; Line 2066
	mov	WORD PTR [rcx], ax
	add	QWORD PTR [rbx+88], 2
; Line 2065
	movsd	xmm0, QWORD PTR [r12]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+8], xmm6
	movss	DWORD PTR [rax+12], xmm7
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], edi
	inc	DWORD PTR [rbx+76]
	mov	rax, QWORD PTR [rbx+80]
	add	rax, 20
	mov	QWORD PTR [rbx+80], rax
; Line 212
	movss	xmm0, DWORD PTR [r15]
	movss	xmm1, DWORD PTR [r12+4]
; Line 2065
	movss	DWORD PTR [rax], xmm0
	movss	DWORD PTR [rax+4], xmm1
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+8], xmm6
	movss	DWORD PTR [rax+12], xmm7
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], esi
	add	QWORD PTR [rbx+80], 20
	inc	DWORD PTR [rbx+76]
	movsd	xmm0, QWORD PTR [r15]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+8], xmm6
	movss	DWORD PTR [rax+12], xmm7
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], ebp
	mov	rax, QWORD PTR [rbx+80]
	inc	DWORD PTR [rbx+76]
	add	rax, 20
	mov	QWORD PTR [rbx+80], rax
; Line 212
	movss	xmm0, DWORD PTR [r12]
	movss	xmm1, DWORD PTR [r15+4]
; Line 2065
	movss	DWORD PTR [rax], xmm0
	movss	DWORD PTR [rax+4], xmm1
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+8], xmm6
	movss	DWORD PTR [rax+12], xmm7
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], r14d
	add	QWORD PTR [rbx+80], 20
	inc	DWORD PTR [rbx+76]
	movaps	xmm7, XMMWORD PTR [rsp+32]
	movaps	xmm6, XMMWORD PTR [rsp+48]
$LN1@AddRectFil:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1063
	mov	rbx, QWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+104]
	mov	rsi, QWORD PTR [rsp+112]
	mov	rdi, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	ret	0
?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z ENDP ; ImDrawList::AddRectFilledMultiColor
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z
_TEXT	SEGMENT
this$ = 80
p_min$ = 88
p_max$ = 96
col$ = 104
rounding$ = 112
rounding_corners$ = 120
?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z PROC	; ImDrawList::AddRectFilled, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1034
$LN16:
; Line 1035
	test	r9d, -16777216				; ff000000H
	je	$LN14@AddRectFil
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 1037
	movss	xmm3, DWORD PTR rounding$[rsp]
	xorps	xmm0, xmm0
	comiss	xmm3, xmm0
	mov	edi, r9d
	mov	rsi, r8
	mov	rbp, rdx
	mov	rbx, rcx
	jbe	SHORT $LN3@AddRectFil
; Line 1039
	mov	eax, DWORD PTR rounding_corners$[rsp]
	mov	DWORD PTR [rsp+32], eax
	call	?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z ; ImDrawList::PathRect
; File E:\reps\ocornut\imgui\imgui.h
; Line 2034
	mov	r8d, DWORD PTR [rbx+128]
	mov	r9d, edi
	mov	rdx, QWORD PTR [rbx+136]
	mov	rcx, rbx
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	DWORD PTR [rbx+128], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1041
	jmp	$LN4@AddRectFil
$LN3@AddRectFil:
; Line 1044
	mov	edx, 6
	movaps	XMMWORD PTR [rsp+48], xmm6
	lea	r8d, QWORD PTR [rdx-2]
	call	?PrimReserve@ImDrawList@@QEAAXHH@Z	; ImDrawList::PrimReserve
; Line 577
	movzx	edx, WORD PTR [rbx+76]
	mov	rax, QWORD PTR [rbx+56]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm1, DWORD PTR [rsi]
	movss	xmm2, DWORD PTR [rbp+4]
	movss	xmm3, DWORD PTR [rbp]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 578
	lea	ecx, DWORD PTR [rdx+1]
	movss	xmm6, DWORD PTR [rax+4]
	movss	xmm5, DWORD PTR [rax]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm4, DWORD PTR [rsi+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 578
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax], dx
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+2], cx
	lea	ecx, DWORD PTR [rdx+2]
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+4], cx
; Line 579
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+6], dx
	add	dx, 3
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+8], cx
	mov	rax, QWORD PTR [rbx+88]
	mov	WORD PTR [rax+10], dx
; Line 580
	movsd	xmm0, QWORD PTR [rbp]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+8], xmm5
	movss	DWORD PTR [rax+12], xmm6
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+16], edi
; Line 581
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+20], xmm1
	movss	DWORD PTR [rax+24], xmm2
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+28], xmm5
	movss	DWORD PTR [rax+32], xmm6
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+36], edi
; Line 582
	movsd	xmm0, QWORD PTR [rsi]
	mov	rax, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax+40], xmm0
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+48], xmm5
	movss	DWORD PTR [rax+52], xmm6
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax+56], edi
; Line 583
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+60], xmm3
	movss	DWORD PTR [rax+64], xmm4
	mov	rax, QWORD PTR [rbx+80]
	movss	DWORD PTR [rax+68], xmm5
	movss	DWORD PTR [rax+72], xmm6
	mov	rax, QWORD PTR [rbx+80]
; Line 586
	movaps	xmm6, XMMWORD PTR [rsp+48]
	mov	DWORD PTR [rax+76], edi
	add	QWORD PTR [rbx+80], 80			; 00000050H
	add	DWORD PTR [rbx+76], 4
	add	QWORD PTR [rbx+88], 12
$LN4@AddRectFil:
; Line 1047
	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
$LN14@AddRectFil:
	ret	0
?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ENDP	; ImDrawList::AddRectFilled
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 56
$T4 = 56
this$ = 80
p_min$ = 88
p_max$ = 96
col$ = 104
rounding$ = 112
rounding_corners$ = 120
thickness$ = 128
?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z PROC	; ImDrawList::AddRect, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1023
$LN35:
; Line 1024
	test	r9d, -16777216				; ff000000H
	je	$LN32@AddRect
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 1026
	test	BYTE PTR [rcx+48], 1
	mov	edi, r9d
	movss	xmm0, DWORD PTR __real@3f000000
	mov	rbx, rcx
	movss	xmm3, DWORD PTR [rdx]
	movss	xmm4, DWORD PTR [rdx+4]
	addss	xmm3, xmm0
	mov	eax, DWORD PTR rounding_corners$[rsp]
	addss	xmm4, xmm0
	movss	xmm1, DWORD PTR [r8]
	movss	xmm2, DWORD PTR [r8+4]
	mov	DWORD PTR [rsp+32], eax
	je	SHORT $LN3@AddRect
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	subss	xmm1, xmm0
	movss	DWORD PTR $T4[rsp], xmm3
	subss	xmm2, xmm0
	movss	DWORD PTR $T4[rsp+4], xmm4
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1027
	lea	r8, QWORD PTR $T2[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T2[rsp], xmm1
	movss	DWORD PTR $T2[rsp+4], xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1027
	jmp	SHORT $LN33@AddRect
$LN3@AddRect:
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	subss	xmm1, DWORD PTR __real@3efae148
	subss	xmm2, DWORD PTR __real@3efae148
	movss	DWORD PTR $T1[rsp], xmm3
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1029
	lea	r8, QWORD PTR $T3[rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T1[rsp+4], xmm4
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1029
	lea	rdx, QWORD PTR $T1[rsp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR $T3[rsp], xmm1
	movss	DWORD PTR $T3[rsp+4], xmm2
$LN33@AddRect:
; Line 2035
	movss	xmm3, DWORD PTR rounding$[rsp]
	call	?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z ; ImDrawList::PathRect
	movss	xmm0, DWORD PTR thickness$[rsp]
	mov	r9d, edi
	mov	r8d, DWORD PTR [rbx+128]
	mov	rcx, rbx
	mov	rdx, QWORD PTR [rbx+136]
	movss	DWORD PTR [rsp+40], xmm0
	mov	BYTE PTR [rsp+32], 1
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
	mov	DWORD PTR [rbx+128], 0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1031
	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 64					; 00000040H
	pop	rdi
$LN32@AddRect:
	ret	0
?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ENDP	; ImDrawList::AddRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
this$ = 96
p1$ = 104
p2$ = 112
col$ = 120
thickness$ = 128
?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z PROC	; ImDrawList::AddLine, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1012
$LN38:
; Line 1013
	test	r9d, -16777216				; ff000000H
	je	$LN36@AddLine
	mov	rax, rsp
	mov	QWORD PTR [rax+24], rbp
	mov	QWORD PTR [rax+32], rsi
	push	r14
	sub	rsp, 80					; 00000050H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movss	xmm0, DWORD PTR [rdx]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1012
	mov	rsi, rcx
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	mov	QWORD PTR [rax+8], rbx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1012
	mov	ebp, r9d
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	mov	QWORD PTR [rax+16], rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 2032
	lea	rbx, QWORD PTR [rcx+128]
; Line 1347
	mov	ecx, DWORD PTR [rbx+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1012
	mov	r14, r8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movaps	XMMWORD PTR [rax-24], xmm6
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	edi, 8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movss	xmm6, DWORD PTR __real@3f000000
	addss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rax-40], xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movss	xmm0, DWORD PTR [rdx+4]
	addss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rax-36], xmm0
; Line 1347
	mov	eax, DWORD PTR [rbx]
	cmp	eax, ecx
	jne	SHORT $LN13@AddLine
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN17@AddLine
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN18@AddLine
$LN17@AddLine:
	mov	eax, edi
$LN18@AddLine:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN13@AddLine:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rcx+rdx*8], rax
	mov	eax, DWORD PTR [rbx]
	inc	eax
	mov	DWORD PTR [rbx], eax
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	movss	xmm0, DWORD PTR [r14]
	movss	xmm1, DWORD PTR [r14+4]
	addss	xmm0, xmm6
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	r8d, DWORD PTR [rbx+4]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 294
	addss	xmm1, xmm6
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	movaps	xmm6, XMMWORD PTR [rsp+64]
; Line 212
	movss	DWORD PTR $T1[rsp], xmm0
	movss	DWORD PTR $T1[rsp+4], xmm1
; Line 1347
	cmp	eax, r8d
	jne	SHORT $LN28@AddLine
	lea	ecx, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN32@AddLine
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	edi, DWORD PTR [r8+rax]
$LN32@AddLine:
	cmp	edi, ecx
	cmovg	ecx, edi
; Line 1347
	mov	edx, ecx
	mov	rcx, rbx
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN28@AddLine:
	mov	rcx, QWORD PTR [rbx+8]
; Line 2035
	mov	r9d, ebp
	movss	xmm0, DWORD PTR thickness$[rsp]
; Line 1347
	movsxd	rdx, eax
	mov	rax, QWORD PTR $T1[rsp]
; Line 2035
	movss	DWORD PTR [rsp+40], xmm0
	mov	BYTE PTR [rsp+32], 0
; Line 1347
	mov	QWORD PTR [rcx+rdx*8], rax
; Line 2035
	mov	rcx, rsi
; Line 1347
	inc	DWORD PTR [rbx]
; Line 2035
	mov	r8d, DWORD PTR [rbx]
	mov	rdx, QWORD PTR [rsi+136]
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HI_NM@Z ; ImDrawList::AddPolyline
	mov	rdi, QWORD PTR [rsp+104]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1018
	mov	rbp, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
; File E:\reps\ocornut\imgui\imgui.h
; Line 2035
	mov	DWORD PTR [rbx], 0
	mov	rbx, QWORD PTR [rsp+96]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1018
	add	rsp, 80					; 00000050H
	pop	r14
$LN36@AddLine:
	ret	0
?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z ENDP	; ImDrawList::AddLine
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PopTextureID@ImDrawList@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?PopTextureID@ImDrawList@@QEAAXXZ PROC			; ImDrawList::PopTextureID, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 530
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 531
	cmp	DWORD PTR [rcx+112], 0
	mov	rbx, rcx
	jg	SHORT $LN3@PopTexture
	mov	r8d, 531				; 00000213H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DC@CKLENJON@?$AA_?$AAT?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AAI?$AAd?$AAS?$AAt?$AAa?$AAc?$AAk@
	call	QWORD PTR __imp__wassert
$LN3@PopTexture:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1348
	mov	eax, DWORD PTR [rbx+112]
	test	eax, eax
	jg	SHORT $LN6@PopTexture
	mov	r8d, 1348				; 00000544H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+112]
$LN6@PopTexture:
	dec	eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 533
	mov	rcx, rbx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1348
	mov	DWORD PTR [rbx+112], eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 534
	add	rsp, 32					; 00000020H
	pop	rbx
; Line 533
	jmp	?UpdateTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::UpdateTextureID
?PopTextureID@ImDrawList@@QEAAXXZ ENDP			; ImDrawList::PopTextureID
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PushTextureID@ImDrawList@@QEAAXPEAX@Z
_TEXT	SEGMENT
this$ = 48
texture_id$ = 56
?PushTextureID@ImDrawList@@QEAAXPEAX@Z PROC		; ImDrawList::PushTextureID, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 524
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	eax, DWORD PTR [rcx+112]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 524
	mov	rsi, rdx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	r8d, DWORD PTR [rcx+116]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 524
	mov	rdi, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	cmp	eax, r8d
	jne	SHORT $LN4@PushTextur
	lea	r9d, DWORD PTR [rax+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN8@PushTextur
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN9@PushTextur
$LN8@PushTextur:
	mov	eax, 8
$LN9@PushTextur:
	cmp	eax, r9d
	cmovg	r9d, eax
; Line 1347
	add	rcx, 112				; 00000070H
	mov	edx, r9d
	call	?reserve@?$ImVector@PEAX@@QEAAXH@Z	; ImVector<void *>::reserve
	mov	eax, DWORD PTR [rdi+112]
$LN4@PushTextur:
	movsxd	rcx, eax
	mov	rax, QWORD PTR [rdi+120]
	mov	QWORD PTR [rax+rcx*8], rsi
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 526
	mov	rcx, rdi
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	inc	DWORD PTR [rdi+112]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 527
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 526
	jmp	?UpdateTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::UpdateTextureID
?PushTextureID@ImDrawList@@QEAAXPEAX@Z ENDP		; ImDrawList::PushTextureID
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PopClipRect@ImDrawList@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?PopClipRect@ImDrawList@@QEAAXXZ PROC			; ImDrawList::PopClipRect, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 517
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 518
	cmp	DWORD PTR [rcx+96], 0
	mov	rbx, rcx
	jg	SHORT $LN3@PopClipRec
	mov	r8d, 518				; 00000206H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@MJAOFGMF@?$AA_?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe?$AAc?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4@
	call	QWORD PTR __imp__wassert
$LN3@PopClipRec:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1348
	mov	eax, DWORD PTR [rbx+96]
	test	eax, eax
	jg	SHORT $LN6@PopClipRec
	mov	r8d, 1348				; 00000544H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+96]
$LN6@PopClipRec:
	dec	eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 520
	mov	rcx, rbx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1348
	mov	DWORD PTR [rbx+96], eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 521
	add	rsp, 32					; 00000020H
	pop	rbx
; Line 520
	jmp	?UpdateClipRect@ImDrawList@@QEAAXXZ	; ImDrawList::UpdateClipRect
?PopClipRect@ImDrawList@@QEAAXXZ ENDP			; ImDrawList::PopClipRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PushClipRectFullScreen@ImDrawList@@QEAAXXZ
_TEXT	SEGMENT
cr$1 = 32
this$ = 64
?PushClipRectFullScreen@ImDrawList@@QEAAXXZ PROC	; ImDrawList::PushClipRectFullScreen, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 512
$LN32:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
; Line 513
	mov	rax, QWORD PTR [rcx+56]
	mov	rdi, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	xmm0, DWORD PTR [rax+36]
	movss	xmm2, DWORD PTR [rax+28]
; Line 225
	comiss	xmm2, xmm0
; Line 212
	movss	xmm3, DWORD PTR [rax+40]
	movss	xmm1, DWORD PTR [rax+32]
; Line 225
	movss	DWORD PTR cr$1[rsp], xmm2
	movss	DWORD PTR cr$1[rsp+4], xmm1
	movss	DWORD PTR cr$1[rsp+8], xmm0
	movss	DWORD PTR cr$1[rsp+12], xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	jb	SHORT $LN18@PushClipRe
	movss	DWORD PTR cr$1[rsp+8], xmm2
$LN18@PushClipRe:
	comiss	xmm1, xmm3
	jb	SHORT $LN22@PushClipRe
	movss	DWORD PTR cr$1[rsp+12], xmm1
$LN22@PushClipRe:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	eax, DWORD PTR [rcx+96]
	mov	ecx, DWORD PTR [rcx+100]
	cmp	eax, ecx
	jne	SHORT $LN25@PushClipRe
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN29@PushClipRe
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN30@PushClipRe
$LN29@PushClipRe:
	mov	eax, 8
$LN30@PushClipRe:
	cmp	eax, r8d
; Line 1347
	lea	rcx, QWORD PTR [rdi+96]
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z	; ImVector<ImVec4>::reserve
	mov	eax, DWORD PTR [rdi+96]
$LN25@PushClipRe:
	movups	xmm0, XMMWORD PTR cr$1[rsp]
	movsxd	rcx, eax
	mov	rax, QWORD PTR [rdi+104]
	add	rcx, rcx
	movups	XMMWORD PTR [rax+rcx*8], xmm0
	inc	DWORD PTR [rdi+96]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 508
	mov	rcx, rdi
; Line 514
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
; Line 508
	jmp	?UpdateClipRect@ImDrawList@@QEAAXXZ	; ImDrawList::UpdateClipRect
?PushClipRectFullScreen@ImDrawList@@QEAAXXZ ENDP	; ImDrawList::PushClipRectFullScreen
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z
_TEXT	SEGMENT
current$1 = 32
cr_max$ = 32
cr$ = 48
cr_min$ = 80
this$ = 80
intersect_with_current_clip_rect$ = 104
?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z PROC	; ImDrawList::PushClipRect, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 494
$LN26:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR cr_min$[rsp], rdx
	mov	rdi, rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movss	xmm1, DWORD PTR cr_min$[rsp]
	movss	xmm0, DWORD PTR cr_min$[rsp+4]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 494
	mov	QWORD PTR cr_max$[rsp], r8
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movss	xmm3, DWORD PTR cr_max$[rsp]
	movss	xmm2, DWORD PTR cr_max$[rsp+4]
	movss	DWORD PTR cr$[rsp], xmm1
	movss	DWORD PTR cr$[rsp+4], xmm0
	movss	DWORD PTR cr$[rsp+8], xmm3
	movss	DWORD PTR cr$[rsp+12], xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 496
	test	r9b, r9b
	je	SHORT $LN6@PushClipRe
	movsxd	rax, DWORD PTR [rcx+96]
	test	eax, eax
	je	SHORT $LN6@PushClipRe
; Line 498
	mov	rcx, rax
	mov	rax, QWORD PTR [rdi+104]
	add	rcx, rcx
	movups	xmm4, XMMWORD PTR [rax+rcx*8-16]
; Line 499
	comiss	xmm4, xmm1
	movups	XMMWORD PTR current$1[rsp], xmm4
	jbe	SHORT $LN3@PushClipRe
	movss	DWORD PTR cr$[rsp], xmm4
	movaps	xmm1, xmm4
$LN3@PushClipRe:
; Line 500
	movss	xmm4, DWORD PTR current$1[rsp+4]
	comiss	xmm4, xmm0
	jbe	SHORT $LN4@PushClipRe
	movss	DWORD PTR cr$[rsp+4], xmm4
	movaps	xmm0, xmm4
$LN4@PushClipRe:
; Line 501
	movss	xmm4, DWORD PTR current$1[rsp+8]
	comiss	xmm3, xmm4
	jbe	SHORT $LN5@PushClipRe
	movss	DWORD PTR cr$[rsp+8], xmm4
	movaps	xmm3, xmm4
$LN5@PushClipRe:
; Line 502
	movss	xmm4, DWORD PTR current$1[rsp+12]
	comiss	xmm2, xmm4
	jbe	SHORT $LN6@PushClipRe
	movss	DWORD PTR cr$[rsp+12], xmm4
	movaps	xmm2, xmm4
$LN6@PushClipRe:
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 350
	comiss	xmm1, xmm3
	jb	SHORT $LN12@PushClipRe
	movss	DWORD PTR cr$[rsp+8], xmm1
$LN12@PushClipRe:
	comiss	xmm0, xmm2
	jb	SHORT $LN16@PushClipRe
	movss	DWORD PTR cr$[rsp+12], xmm0
$LN16@PushClipRe:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	eax, DWORD PTR [rdi+96]
	mov	ecx, DWORD PTR [rdi+100]
	cmp	eax, ecx
	jne	SHORT $LN19@PushClipRe
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN23@PushClipRe
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN24@PushClipRe
$LN23@PushClipRe:
	mov	eax, 8
$LN24@PushClipRe:
	cmp	eax, r8d
; Line 1347
	lea	rcx, QWORD PTR [rdi+96]
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z	; ImVector<ImVec4>::reserve
	mov	eax, DWORD PTR [rdi+96]
$LN19@PushClipRe:
	movups	xmm0, XMMWORD PTR cr$[rsp]
	movsxd	rcx, eax
	mov	rax, QWORD PTR [rdi+104]
	add	rcx, rcx
	movups	XMMWORD PTR [rax+rcx*8], xmm0
	inc	DWORD PTR [rdi+96]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 508
	mov	rcx, rdi
; Line 509
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
; Line 508
	jmp	?UpdateClipRect@ImDrawList@@QEAAXXZ	; ImDrawList::UpdateClipRect
?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z ENDP	; ImDrawList::PushClipRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
_TEXT	SEGMENT
this$ = 80
shared_data$ = 88
??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z PROC	; ImDrawList::ImDrawList, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1989
$LN57:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
; Line 1317
	xor	r12d, r12d
	mov	QWORD PTR [rcx], r12
	mov	QWORD PTR [rcx+8], r12
	mov	QWORD PTR [rcx+16], r12
	mov	QWORD PTR [rcx+24], r12
	mov	QWORD PTR [rcx+32], r12
	mov	QWORD PTR [rcx+40], r12
	mov	QWORD PTR [rcx+96], r12
	mov	QWORD PTR [rcx+104], r12
	mov	QWORD PTR [rcx+112], r12
	mov	QWORD PTR [rcx+120], r12
; Line 1989
	lea	r14, QWORD PTR [rcx+128]
; Line 1317
	mov	QWORD PTR [r14], r12
	mov	QWORD PTR [r14+8], r12
	mov	QWORD PTR [rcx+152], r12
	mov	QWORD PTR [rcx+160], r12
; Line 1931
	mov	DWORD PTR [rcx+144], r12d
	mov	DWORD PTR [rcx+148], 1
; Line 1989
	mov	QWORD PTR [rcx+56], rdx
	mov	QWORD PTR [rcx+64], r12
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 381
	xor	edx, edx
	call	?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z ; ImVector<ImDrawCmd>::resize
; Line 382
	xor	edx, edx
	lea	rcx, QWORD PTR [rsi+16]
	call	?resize@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::resize
; Line 383
	xor	edx, edx
	lea	rcx, QWORD PTR [rsi+32]
	call	?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z ; ImVector<ImDrawVert>::resize
; Line 384
	mov	rax, QWORD PTR [rsi+56]
	test	rax, rax
	je	SHORT $LN30@ImDrawList
	mov	eax, DWORD PTR [rax+44]
	jmp	SHORT $LN31@ImDrawList
$LN30@ImDrawList:
	mov	eax, r12d
$LN31@ImDrawList:
	mov	DWORD PTR [rsi+48], eax
; Line 385
	mov	QWORD PTR [rsi+72], r12
; Line 387
	mov	QWORD PTR [rsi+80], r12
; Line 388
	mov	QWORD PTR [rsi+88], r12
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	mov	ecx, DWORD PTR [rsi+100]
	test	ecx, ecx
	jns	SHORT $LN33@ImDrawList
; Line 1340
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	mov	edx, r12d
	test	eax, eax
	cmovg	edx, eax
; Line 1341
	lea	rcx, QWORD PTR [rsi+96]
	call	?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z	; ImVector<ImVec4>::reserve
$LN33@ImDrawList:
	mov	DWORD PTR [rsi+96], r12d
	mov	ecx, DWORD PTR [rsi+116]
	test	ecx, ecx
	jns	SHORT $LN40@ImDrawList
; Line 1340
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	mov	edx, r12d
	test	eax, eax
	cmovg	edx, eax
; Line 1341
	lea	rcx, QWORD PTR [rsi+112]
	call	?reserve@?$ImVector@PEAX@@QEAAXH@Z	; ImVector<void *>::reserve
$LN40@ImDrawList:
	mov	DWORD PTR [rsi+112], r12d
	mov	ecx, DWORD PTR [r14+4]
	test	ecx, ecx
	jns	SHORT $LN47@ImDrawList
; Line 1340
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	mov	edx, r12d
	test	eax, eax
	cmovg	edx, eax
; Line 1341
	mov	rcx, r14
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
$LN47@ImDrawList:
	mov	DWORD PTR [r14], r12d
; Line 1931
	mov	DWORD PTR [rsi+144], r12d
	mov	DWORD PTR [rsi+148], 1
; Line 1989
	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+88]
	mov	rbp, QWORD PTR [rsp+96]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z ENDP	; ImDrawList::ImDrawList
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$ImVector@UImDrawCmd@@@@QEAA@XZ	; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>
?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 16
	jmp	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 32					; 00000020H
	jmp	??1?$ImVector@UImDrawVert@@@@QEAA@XZ	; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 96					; 00000060H
	jmp	??1?$ImVector@UImVec4@@@@QEAA@XZ	; ImVector<ImVec4>::~ImVector<ImVec4>
?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$4
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 112				; 00000070H
	jmp	??1?$ImVector@PEAX@@QEAA@XZ		; ImVector<void *>::~ImVector<void *>
?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$5
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 128				; 00000080H
	jmp	??1?$ImVector@UImVec2@@@@QEAA@XZ	; ImVector<ImVec2>::~ImVector<ImVec2>
?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$6@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$6
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 144				; 00000090H
	jmp	??1ImDrawListSplitter@@QEAA@XZ		; ImDrawListSplitter::~ImDrawListSplitter
?dtor$6@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$ImVector@UImDrawCmd@@@@QEAA@XZ	; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>
?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 16
	jmp	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 32					; 00000020H
	jmp	??1?$ImVector@UImDrawVert@@@@QEAA@XZ	; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 96					; 00000060H
	jmp	??1?$ImVector@UImVec4@@@@QEAA@XZ	; ImVector<ImVec4>::~ImVector<ImVec4>
?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$4
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 112				; 00000070H
	jmp	??1?$ImVector@PEAX@@QEAA@XZ		; ImVector<void *>::~ImVector<void *>
?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$5
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 128				; 00000080H
	jmp	??1?$ImVector@UImVec2@@@@QEAA@XZ	; ImVector<ImVec2>::~ImVector<ImVec2>
?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
shared_data$ = 88
?dtor$6@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$6
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 144				; 00000090H
	jmp	??1ImDrawListSplitter@@QEAA@XZ		; ImDrawListSplitter::~ImDrawListSplitter
?dtor$6@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z PROC ; ImVector<ImVec2>::push_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
$LN9:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	mov	ecx, DWORD PTR [rcx+4]
	mov	rdi, rdx
	cmp	eax, ecx
	jne	SHORT $LN2@push_back
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN6@push_back
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@push_back
$LN6@push_back:
	mov	eax, 8
$LN7@push_back:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
	mov	eax, DWORD PTR [rbx]
$LN2@push_back:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z ENDP ; ImVector<ImVec2>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z PROC		; ImVector<ImVec2>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z ENDP		; ImVector<ImVec2>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@UImVec2@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@UImVec2@@@@QEAAXH@Z PROC		; ImVector<ImVec2>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	ebx, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	SHORT $LN8@resize
; Line 1340
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, ebx
	mov	edx, ebx
; Line 1341
	mov	rcx, rdi
; Line 1340
	cmovg	edx, eax
; Line 1341
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
$LN8@resize:
	mov	DWORD PTR [rdi], ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@UImVec2@@@@QEAAXH@Z ENDP		; ImVector<ImVec2>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z PROC	; ImVector<ImVec2>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z ENDP	; ImVector<ImVec2>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?back@?$ImVector@UImVec2@@@@QEAAAEAUImVec2@@XZ
_TEXT	SEGMENT
this$ = 48
?back@?$ImVector@UImVec2@@@@QEAAAEAUImVec2@@XZ PROC	; ImVector<ImVec2>::back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN3@back
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx]
$LN3@back:
	dec	eax
	movsxd	rcx, eax
	mov	rax, QWORD PTR [rbx+8]
	lea	rax, QWORD PTR [rax+rcx*8]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?back@?$ImVector@UImVec2@@@@QEAAAEAUImVec2@@XZ ENDP	; ImVector<ImVec2>::back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@UImVec2@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@UImVec2@@@@QEAAXXZ PROC		; ImVector<ImVec2>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@UImVec2@@@@QEAAXXZ ENDP		; ImVector<ImVec2>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImVec2@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImVec2@@@@QEAA@XZ PROC			; ImVector<ImVec2>::~ImVector<ImVec2>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImVec2@@@@QEAA@XZ ENDP			; ImVector<ImVec2>::~ImVector<ImVec2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImVec2@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImVec2@@@@QEAA@XZ PROC			; ImVector<ImVec2>::ImVector<ImVec2>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImVec2@@@@QEAA@XZ ENDP			; ImVector<ImVec2>::ImVector<ImVec2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?pop_back@?$ImVector@PEAX@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?pop_back@?$ImVector@PEAX@@QEAAXXZ PROC			; ImVector<void *>::pop_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1348
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN4@pop_back
	mov	r8d, 1348				; 00000544H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	dec	DWORD PTR [rbx]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@pop_back:
	dec	eax
	mov	DWORD PTR [rcx], eax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?pop_back@?$ImVector@PEAX@@QEAAXXZ ENDP			; ImVector<void *>::pop_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$ImVector@PEAX@@QEAAXAEBQEAX@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
?push_back@?$ImVector@PEAX@@QEAAXAEBQEAX@Z PROC		; ImVector<void *>::push_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
$LN9:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	mov	ecx, DWORD PTR [rcx+4]
	mov	rdi, rdx
	cmp	eax, ecx
	jne	SHORT $LN2@push_back
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN6@push_back
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@push_back
$LN6@push_back:
	mov	eax, 8
$LN7@push_back:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@PEAX@@QEAAXH@Z	; ImVector<void *>::reserve
	mov	eax, DWORD PTR [rbx]
$LN2@push_back:
	mov	rcx, QWORD PTR [rbx+8]
	movsxd	rdx, eax
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rcx+rdx*8], rax
	inc	DWORD PTR [rbx]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$ImVector@PEAX@@QEAAXAEBQEAX@Z ENDP		; ImVector<void *>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@PEAX@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@PEAX@@QEAAXH@Z PROC			; ImVector<void *>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@PEAX@@QEAAXH@Z ENDP			; ImVector<void *>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@PEAX@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@PEAX@@QEAAXH@Z PROC			; ImVector<void *>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	ebx, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	SHORT $LN8@resize
; Line 1340
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, ebx
	mov	edx, ebx
; Line 1341
	mov	rcx, rdi
; Line 1340
	cmovg	edx, eax
; Line 1341
	call	?reserve@?$ImVector@PEAX@@QEAAXH@Z	; ImVector<void *>::reserve
$LN8@resize:
	mov	DWORD PTR [rdi], ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@PEAX@@QEAAXH@Z ENDP			; ImVector<void *>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@PEAX@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@PEAX@@QEBAHH@Z PROC		; ImVector<void *>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@PEAX@@QEBAHH@Z ENDP		; ImVector<void *>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?back@?$ImVector@PEAX@@QEAAAEAPEAXXZ
_TEXT	SEGMENT
this$ = 48
?back@?$ImVector@PEAX@@QEAAAEAPEAXXZ PROC		; ImVector<void *>::back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN3@back
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx]
$LN3@back:
	dec	eax
	movsxd	rcx, eax
	mov	rax, QWORD PTR [rbx+8]
	lea	rax, QWORD PTR [rax+rcx*8]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?back@?$ImVector@PEAX@@QEAAAEAPEAXXZ ENDP		; ImVector<void *>::back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@PEAX@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@PEAX@@QEAAXXZ PROC			; ImVector<void *>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@PEAX@@QEAAXXZ ENDP			; ImVector<void *>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?empty@?$ImVector@PEAX@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$ImVector@PEAX@@QEBA_NXZ PROC			; ImVector<void *>::empty, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	cmp	DWORD PTR [rcx], 0
	sete	al
	ret	0
?empty@?$ImVector@PEAX@@QEBA_NXZ ENDP			; ImVector<void *>::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@PEAX@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@PEAX@@QEAA@XZ PROC			; ImVector<void *>::~ImVector<void *>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@PEAX@@QEAA@XZ ENDP			; ImVector<void *>::~ImVector<void *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@PEAX@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@PEAX@@QEAA@XZ PROC			; ImVector<void *>::ImVector<void *>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@PEAX@@QEAA@XZ ENDP			; ImVector<void *>::ImVector<void *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?pop_back@?$ImVector@UImVec4@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?pop_back@?$ImVector@UImVec4@@@@QEAAXXZ PROC		; ImVector<ImVec4>::pop_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1348
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN4@pop_back
	mov	r8d, 1348				; 00000544H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	dec	DWORD PTR [rbx]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@pop_back:
	dec	eax
	mov	DWORD PTR [rcx], eax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?pop_back@?$ImVector@UImVec4@@@@QEAAXXZ ENDP		; ImVector<ImVec4>::pop_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$ImVector@UImVec4@@@@QEAAXAEBUImVec4@@@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
?push_back@?$ImVector@UImVec4@@@@QEAAXAEBUImVec4@@@Z PROC ; ImVector<ImVec4>::push_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
$LN9:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	mov	ecx, DWORD PTR [rcx+4]
	mov	rdi, rdx
	cmp	eax, ecx
	jne	SHORT $LN2@push_back
	lea	r8d, DWORD PTR [rax+1]
; Line 1340
	test	ecx, ecx
	je	SHORT $LN6@push_back
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@push_back
$LN6@push_back:
	mov	eax, 8
$LN7@push_back:
	cmp	eax, r8d
; Line 1347
	mov	rcx, rbx
; Line 1340
	cmovg	r8d, eax
; Line 1347
	mov	edx, r8d
	call	?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z	; ImVector<ImVec4>::reserve
	mov	eax, DWORD PTR [rbx]
$LN2@push_back:
	movups	xmm0, XMMWORD PTR [rdi]
	movsxd	rcx, eax
	mov	rax, QWORD PTR [rbx+8]
	add	rcx, rcx
	movups	XMMWORD PTR [rax+rcx*8], xmm0
	inc	DWORD PTR [rbx]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$ImVector@UImVec4@@@@QEAAXAEBUImVec4@@@Z ENDP ; ImVector<ImVec4>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z PROC		; ImVector<ImVec4>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 4
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 4
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z ENDP		; ImVector<ImVec4>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@UImVec4@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@UImVec4@@@@QEAAXH@Z PROC		; ImVector<ImVec4>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	ebx, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	SHORT $LN8@resize
; Line 1340
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, ebx
	mov	edx, ebx
; Line 1341
	mov	rcx, rdi
; Line 1340
	cmovg	edx, eax
; Line 1341
	call	?reserve@?$ImVector@UImVec4@@@@QEAAXH@Z	; ImVector<ImVec4>::reserve
$LN8@resize:
	mov	DWORD PTR [rdi], ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@UImVec4@@@@QEAAXH@Z ENDP		; ImVector<ImVec4>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImVec4@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImVec4@@@@QEBAHH@Z PROC	; ImVector<ImVec4>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImVec4@@@@QEBAHH@Z ENDP	; ImVector<ImVec4>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ
_TEXT	SEGMENT
this$ = 48
?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ PROC	; ImVector<ImVec4>::back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN3@back
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx]
$LN3@back:
	dec	eax
	cdqe
	shl	rax, 4
	add	rax, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ ENDP	; ImVector<ImVec4>::back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@UImVec4@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@UImVec4@@@@QEAAXXZ PROC		; ImVector<ImVec4>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@UImVec4@@@@QEAAXXZ ENDP		; ImVector<ImVec4>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImVec4@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImVec4@@@@QEAA@XZ PROC			; ImVector<ImVec4>::~ImVector<ImVec4>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImVec4@@@@QEAA@XZ ENDP			; ImVector<ImVec4>::~ImVector<ImVec4>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImVec4@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImVec4@@@@QEAA@XZ PROC			; ImVector<ImVec4>::ImVector<ImVec4>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImVec4@@@@QEAA@XZ ENDP			; ImVector<ImVec4>::ImVector<ImVec4>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z PROC	; ImVector<ImDrawVert>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	lea	rcx, QWORD PTR [rdi+rdi*4]
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	rcx, DWORD PTR [rbx]
	lea	r8, QWORD PTR [rcx+rcx*4]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z ENDP	; ImVector<ImDrawVert>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?shrink@?$ImVector@UImDrawVert@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?shrink@?$ImVector@UImDrawVert@@@@QEAAXH@Z PROC		; ImVector<ImDrawVert>::shrink, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1343
$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx
	mov	rdi, rcx
	cmp	edx, DWORD PTR [rcx]
	jle	SHORT $LN4@shrink
	mov	r8d, 1343				; 0000053fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz@
	call	QWORD PTR __imp__wassert
	mov	DWORD PTR [rdi], ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@shrink:
	mov	DWORD PTR [rcx], ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?shrink@?$ImVector@UImDrawVert@@@@QEAAXH@Z ENDP		; ImVector<ImDrawVert>::shrink
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z PROC		; ImVector<ImDrawVert>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rax, esi
	mov	QWORD PTR [rsp+48], rbp
	lea	rcx, QWORD PTR [rax+rax*4]
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	rcx, DWORD PTR [rbx]
	lea	r8, QWORD PTR [rcx+rcx*4]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z ENDP		; ImVector<ImDrawVert>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImDrawVert@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImDrawVert@@@@QEBAHH@Z PROC	; ImVector<ImDrawVert>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImDrawVert@@@@QEBAHH@Z ENDP	; ImVector<ImDrawVert>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?swap@?$ImVector@UImDrawVert@@@@QEAAXAEAU1@@Z
_TEXT	SEGMENT
this$ = 8
rhs$ = 16
?swap@?$ImVector@UImDrawVert@@@@QEAAXAEAU1@@Z PROC	; ImVector<ImDrawVert>::swap, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1338
	mov	r8d, DWORD PTR [rdx]
	mov	eax, DWORD PTR [rcx]
	mov	DWORD PTR [rdx], eax
	mov	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR [rcx], r8d
	mov	r8d, DWORD PTR [rdx+4]
	mov	DWORD PTR [rdx+4], eax
	mov	rax, QWORD PTR [rcx+8]
	mov	DWORD PTR [rcx+4], r8d
	mov	r8, QWORD PTR [rdx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	QWORD PTR [rcx+8], r8
	ret	0
?swap@?$ImVector@UImDrawVert@@@@QEAAXAEAU1@@Z ENDP	; ImVector<ImDrawVert>::swap
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@UImDrawVert@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@UImDrawVert@@@@QEAAXXZ PROC		; ImVector<ImDrawVert>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@UImDrawVert@@@@QEAAXXZ ENDP		; ImVector<ImDrawVert>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UImDrawVert@@@@QEAAAEAUImDrawVert@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UImDrawVert@@@@QEAAAEAUImDrawVert@@H@Z PROC ; ImVector<ImDrawVert>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rdx, QWORD PTR [rbx+rbx*4]
	mov	rbx, QWORD PTR [rsp+48]
	lea	rax, QWORD PTR [rax+rdx*4]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UImDrawVert@@@@QEAAAEAUImDrawVert@@H@Z ENDP ; ImVector<ImDrawVert>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImDrawVert@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImDrawVert@@@@QEAA@XZ PROC		; ImVector<ImDrawVert>::~ImVector<ImDrawVert>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImDrawVert@@@@QEAA@XZ ENDP		; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??4?$ImVector@UImDrawVert@@@@QEAAAEAU0@AEBU0@@Z
_TEXT	SEGMENT
this$ = 48
src$ = 56
??4?$ImVector@UImDrawVert@@@@QEAAAEAU0@AEBU0@@Z PROC	; ImVector<ImDrawVert>::operator=, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1319
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, rdx
; Line 1329
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN4@operator
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN4@operator:
; Line 1319
	mov	edx, DWORD PTR [rdi]
	mov	rcx, rbx
	call	?resize@?$ImVector@UImDrawVert@@@@QEAAXH@Z ; ImVector<ImDrawVert>::resize
	movsxd	rax, DWORD PTR [rbx]
	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [rbx+8]
	lea	r8, QWORD PTR [rax+rax*4]
	shl	r8, 2
	call	memcpy
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4?$ImVector@UImDrawVert@@@@QEAAAEAU0@AEBU0@@Z ENDP	; ImVector<ImDrawVert>::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImDrawVert@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImDrawVert@@@@QEAA@XZ PROC		; ImVector<ImDrawVert>::ImVector<ImDrawVert>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImDrawVert@@@@QEAA@XZ ENDP		; ImVector<ImDrawVert>::ImVector<ImDrawVert>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z
_TEXT	SEGMENT
this$ = 48
draw_list$ = 56
idx$ = 64
?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z PROC ; ImDrawListSplitter::SetCurrentChannel, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1412
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, r8d
	mov	rsi, rdx
	mov	rdi, rcx
; Line 1413
	test	r8d, r8d
	js	SHORT $LN4@SetCurrent
	cmp	ebx, DWORD PTR [rcx+4]
	jl	SHORT $LN5@SetCurrent
$LN4@SetCurrent:
	mov	r8d, 1413				; 00000585H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DC@ILGGLBID@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx@
	call	QWORD PTR __imp__wassert
$LN5@SetCurrent:
; Line 1414
	movsxd	rax, DWORD PTR [rdi]
	cmp	eax, ebx
	je	SHORT $LN1@SetCurrent
; Line 1417
	movups	xmm0, XMMWORD PTR [rsi]
	mov	rcx, rax
	mov	rax, QWORD PTR [rdi+16]
	shl	rcx, 5
	movups	XMMWORD PTR [rcx+rax], xmm0
; Line 1418
	movsxd	rcx, DWORD PTR [rdi]
	mov	rax, QWORD PTR [rdi+16]
	movups	xmm0, XMMWORD PTR [rsi+16]
	shl	rcx, 5
	movups	XMMWORD PTR [rcx+rax+16], xmm0
; Line 1420
	mov	rax, QWORD PTR [rdi+16]
	mov	rcx, rbx
	mov	DWORD PTR [rdi], ebx
	shl	rcx, 5
	movups	xmm0, XMMWORD PTR [rax+rcx]
	movups	XMMWORD PTR [rsi], xmm0
; Line 1421
	mov	rax, QWORD PTR [rdi+16]
	movups	xmm0, XMMWORD PTR [rax+rcx+16]
	movups	XMMWORD PTR [rsi+16], xmm0
; Line 1422
	movsxd	rcx, DWORD PTR [rsi+16]
	mov	rax, QWORD PTR [rsi+24]
	lea	rcx, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR [rsi+88], rcx
$LN1@SetCurrent:
; Line 1423
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z ENDP ; ImDrawListSplitter::SetCurrentChannel
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z
_TEXT	SEGMENT
new_cmd_buffer_count$1$ = 112
this$ = 112
draw_list$ = 120
new_idx_buffer_count$1$ = 128
tv1363 = 136
?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z PROC	; ImDrawListSplitter::Merge, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1357
$LN85:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rdx
	push	r12
	push	r14
	sub	rsp, 88					; 00000058H
; Line 1359
	cmp	DWORD PTR [rcx+4], 1
	mov	r12, rdx
	mov	r14, rcx
	jle	$LN1@Merge
; Line 1414
	mov	QWORD PTR [rax-24], rbx
	mov	QWORD PTR [rax-32], rbp
	mov	QWORD PTR [rax-40], rsi
	mov	QWORD PTR [rax-48], rdi
	mov	QWORD PTR [rax-56], r13
	mov	QWORD PTR [rax-64], r15
	movsxd	rax, DWORD PTR [rcx]
	test	eax, eax
	je	SHORT $LN83@Merge
; Line 1417
	movups	xmm0, XMMWORD PTR [rdx]
	mov	r8, rax
	mov	rax, QWORD PTR [rcx+16]
	shl	r8, 5
	movups	XMMWORD PTR [r8+rax], xmm0
; Line 1418
	movsxd	rcx, DWORD PTR [rcx]
	mov	rax, QWORD PTR [r14+16]
	movups	xmm0, XMMWORD PTR [rdx+16]
	shl	rcx, 5
	movups	XMMWORD PTR [rcx+rax+16], xmm0
; Line 1420
	mov	rax, QWORD PTR [r14+16]
	mov	DWORD PTR [r14], 0
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rdx], xmm0
; Line 1421
	mov	rax, QWORD PTR [r14+16]
	movups	xmm0, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rdx+16], xmm0
; Line 1422
	movsxd	rcx, DWORD PTR [rdx+16]
	mov	rax, QWORD PTR [rdx+24]
	lea	rcx, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR [rdx+88], rcx
$LN83@Merge:
; Line 1363
	mov	edx, DWORD PTR [rdx]
	test	edx, edx
	je	SHORT $LN12@Merge
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, edx
	jg	SHORT $LN30@Merge
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [r12]
$LN30@Merge:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1363
	mov	edx, eax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	cdqe
	imul	rcx, rax, 56				; 00000038H
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1363
	mov	rax, QWORD PTR [r12+8]
	cmp	DWORD PTR [rcx+rax-56], 0
	jne	SHORT $LN12@Merge
; Line 1364
	mov	rcx, r12
	call	?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ ; ImVector<ImDrawCmd>::pop_back
	mov	edx, DWORD PTR [r12]
$LN12@Merge:
; Line 1369
	mov	eax, DWORD PTR [r14+4]
	xor	ebp, ebp
	mov	DWORD PTR new_cmd_buffer_count$1$[rsp], ebp
	mov	DWORD PTR new_idx_buffer_count$1$[rsp], ebp
	test	eax, eax
	jle	SHORT $LN19@Merge
	test	edx, edx
	jle	SHORT $LN19@Merge
	mov	rcx, r12
	call	?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ ; ImVector<ImDrawCmd>::back
	mov	rsi, rax
	mov	eax, DWORD PTR [r14+4]
; Line 1370
	test	rsi, rsi
	je	SHORT $LN82@Merge
	mov	edi, DWORD PTR [rsi+36]
	add	edi, DWORD PTR [rsi]
	jmp	SHORT $LN22@Merge
$LN19@Merge:
; Line 1369
	xor	esi, esi
$LN82@Merge:
; Line 1370
	xor	edi, edi
$LN22@Merge:
; Line 1371
	mov	r15d, 1
	lea	r13d, QWORD PTR [r15+31]
	cmp	eax, r15d
	jle	$LN3@Merge
; Line 1373
	mov	ebp, r13d
	mov	QWORD PTR tv1363[rsp], r13
	mov	r13d, DWORD PTR new_cmd_buffer_count$1$[rsp]
	mov	r12d, r13d
$LL4@Merge:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r15d, DWORD PTR [r14+8]
	jl	SHORT $LN33@Merge
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN33@Merge:
	mov	rbx, QWORD PTR [r14+16]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1374
	movsxd	r9, DWORD PTR [rbx+rbp]
	mov	edx, r9d
	test	r9d, r9d
	jle	SHORT $LN13@Merge
	mov	rax, QWORD PTR [rbx+rbp+8]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	rdx, r9
	imul	rcx, r9, 56				; 00000038H
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1374
	cmp	DWORD PTR [rcx+rax-56], 0
	jne	SHORT $LN13@Merge
; File E:\reps\ocornut\imgui\imgui.h
; Line 1348
	dec	edx
	mov	DWORD PTR [rbx+rbp], edx
	mov	r9d, edx
$LN13@Merge:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1376
	mov	r8d, edx
	test	edx, edx
	jle	$LN72@Merge
	test	rsi, rsi
	je	$LN45@Merge
	mov	rcx, QWORD PTR [rbx+rbp+8]
; Line 1353
	mov	rax, QWORD PTR [rsi+4]
	cmp	rax, QWORD PTR [rcx+4]
	jne	$LN45@Merge
	mov	rax, QWORD PTR [rsi+12]
	cmp	rax, QWORD PTR [rcx+12]
	jne	$LN45@Merge
	mov	rax, QWORD PTR [rcx+24]
	cmp	QWORD PTR [rsi+24], rax
	jne	$LN45@Merge
	mov	eax, DWORD PTR [rcx+32]
	cmp	DWORD PTR [rsi+32], eax
	jne	$LN45@Merge
	cmp	QWORD PTR [rsi+40], 0
	jne	$LN45@Merge
	cmp	QWORD PTR [rcx+40], 0
	jne	$LN45@Merge
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	test	r9d, r9d
	jg	SHORT $LN49@Merge
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	rcx, QWORD PTR [rbx+rbp+8]
$LN49@Merge:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1379
	mov	eax, DWORD PTR [rcx]
	add	DWORD PTR [rsi], eax
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	mov	r8d, DWORD PTR [rbx+rbp]
	test	r8d, r8d
	jg	SHORT $LN52@Merge
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	r8d, DWORD PTR [rbx+rbp]
$LN52@Merge:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1380
	mov	rbp, QWORD PTR [rbx+rbp+8]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1350
	movsxd	rax, r8d
	mov	r9, rbp
	imul	rcx, rax, 56				; 00000038H
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1380
	add	edi, DWORD PTR [rbp]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1350
	add	rcx, rbp
	cmp	rbp, rcx
	jb	SHORT $LN56@Merge
	mov	r8d, 1350				; 00000546H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DK@JJGEFOJO@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	mov	rax, QWORD PTR tv1363[rsp]
	mov	r9, QWORD PTR [rbx+rax+8]
	mov	r8d, DWORD PTR [rbx+rax]
$LN56@Merge:
	sub	rbp, r9
	mov	rax, 5270498306774157605		; 4924924924924925H
	imul	rbp
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	movsxd	rax, r8d
	imul	rcx, rdx, 56				; 00000038H
	sub	rax, rdx
	imul	r8, rax, 56				; 00000038H
	add	rcx, r9
	sub	r8, 56					; 00000038H
	lea	rdx, QWORD PTR [rcx+56]
	call	memmove
	mov	rbp, QWORD PTR tv1363[rsp]
	dec	DWORD PTR [rbx+rbp]
	mov	r8d, DWORD PTR [rbx+rbp]
$LN45@Merge:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1383
	test	r8d, r8d
	jle	SHORT $LN72@Merge
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	lea	eax, DWORD PTR [r8-1]
	movsxd	rcx, eax
	imul	rsi, rcx, 56				; 00000038H
	add	rsi, QWORD PTR [rbx+rbp+8]
$LN72@Merge:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1386
	add	r12d, DWORD PTR [rbx+rbp+16]
	add	r13d, r8d
; Line 1387
	xor	ecx, ecx
	test	r8d, r8d
	jle	SHORT $LN2@Merge
; Line 1385
	mov	rdx, QWORD PTR [rbx+rbp+8]
	xor	eax, eax
	npad	14
$LL7@Merge:
; Line 1389
	mov	DWORD PTR [rdx+rax+36], edi
	lea	rax, QWORD PTR [rax+56]
; Line 1390
	mov	rdx, QWORD PTR [rbx+rbp+8]
	inc	ecx
	add	edi, DWORD PTR [rdx+rax-56]
	cmp	ecx, DWORD PTR [rbx+rbp]
	jl	SHORT $LL7@Merge
$LN2@Merge:
; Line 1371
	add	rbp, 32					; 00000020H
	inc	r15d
	mov	QWORD PTR tv1363[rsp], rbp
	cmp	r15d, DWORD PTR [r14+4]
	jl	$LL4@Merge
	mov	DWORD PTR new_cmd_buffer_count$1$[rsp], r13d
	mov	r13d, 32				; 00000020H
	mov	ebp, DWORD PTR new_cmd_buffer_count$1$[rsp]
	mov	DWORD PTR new_idx_buffer_count$1$[rsp], r12d
	mov	r12, QWORD PTR draw_list$[rsp]
$LN3@Merge:
; Line 1393
	mov	edx, DWORD PTR [r12]
	mov	rcx, r12
	add	edx, ebp
	call	?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z ; ImVector<ImDrawCmd>::resize
; Line 1394
	mov	edx, DWORD PTR [r12+16]
	lea	rcx, QWORD PTR [r12+16]
	movsxd	rdi, DWORD PTR new_idx_buffer_count$1$[rsp]
	add	edx, edi
	call	?resize@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::resize
; Line 1397
	movsxd	rcx, DWORD PTR [r12]
; Line 1399
	mov	esi, 1
	movsxd	rax, ebp
	sub	rcx, rax
	mov	rax, QWORD PTR [r12+24]
	imul	r15, rcx, 56				; 00000038H
	movsxd	rcx, DWORD PTR [r12+16]
	add	r15, QWORD PTR [r12+8]
	sub	rcx, rdi
	lea	rbp, QWORD PTR [rax+rcx*2]
	cmp	DWORD PTR [r14+4], esi
	jle	SHORT $LN9@Merge
$LL10@Merge:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	esi, DWORD PTR [r14+8]
	jl	SHORT $LN62@Merge
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN62@Merge:
	mov	rdi, QWORD PTR [r14+16]
	add	rdi, r13
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1402
	movsxd	rax, DWORD PTR [rdi]
	test	eax, eax
	je	SHORT $LN16@Merge
	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, r15
	imul	rbx, rax, 56				; 00000038H
	mov	r8, rbx
	call	memcpy
	add	r15, rbx
$LN16@Merge:
; Line 1403
	movsxd	rax, DWORD PTR [rdi+16]
	test	eax, eax
	je	SHORT $LN8@Merge
	mov	rdx, QWORD PTR [rdi+24]
	mov	rbx, rax
	add	rbx, rbx
	mov	rcx, rbp
	mov	r8, rbx
	call	memcpy
	add	rbp, rbx
$LN8@Merge:
; Line 1399
	inc	esi
	add	r13, 32					; 00000020H
	cmp	esi, DWORD PTR [r14+4]
	jl	SHORT $LL10@Merge
$LN9@Merge:
; Line 1406
	mov	rcx, r12
	mov	QWORD PTR [r12+88], rbp
	call	?UpdateClipRect@ImDrawList@@QEAAXXZ	; ImDrawList::UpdateClipRect
; Line 1407
	mov	rcx, r12
	call	?UpdateTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::UpdateTextureID
; Line 1408
	mov	r15, QWORD PTR [rsp+40]
	mov	r13, QWORD PTR [rsp+48]
	mov	rdi, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+80]
	mov	DWORD PTR [r14+4], 1
$LN1@Merge:
; Line 1409
	add	rsp, 88					; 00000058H
	pop	r14
	pop	r12
	ret	0
?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z ENDP	; ImDrawListSplitter::Merge
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z
_TEXT	SEGMENT
$T1 = 32
draw_cmd$2 = 40
tv1015 = 160
this$ = 160
draw_list$ = 168
channels_count$ = 176
tv1014 = 184
?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z PROC ; ImDrawListSplitter::Split, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1319
$LN99:
	push	rbx
	push	rbp
	push	rdi
	push	r13
	push	r15
	sub	rsp, 112				; 00000070H
; Line 1320
	cmp	DWORD PTR [rcx], 0
	mov	r13, rdx
	movsxd	rbx, r8d
	mov	rdi, rcx
	jne	SHORT $LN10@Split
	cmp	DWORD PTR [rcx+4], 1
	jle	SHORT $LN11@Split
$LN10@Split:
	mov	r8d, 1320				; 00000528H
	lea	rdx, OFFSET FLAT:??_C@_1EK@NLEDJEBN@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BAE@LAENHIMB@?$AA_?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG@
	call	QWORD PTR __imp__wassert
$LN11@Split:
; Line 1321
	movsxd	rbp, DWORD PTR [rdi+8]
	mov	QWORD PTR [rsp+168], rsi
	mov	eax, ebp
	mov	QWORD PTR [rsp+96], r14
; Line 1322
	cmp	ebp, ebx
	jge	SHORT $LN5@Split
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	mov	ecx, DWORD PTR [rdi+12]
	cmp	ebx, ecx
	jle	SHORT $LN22@Split
; Line 1340
	test	ecx, ecx
	je	SHORT $LN20@Split
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN21@Split
$LN20@Split:
	mov	eax, 8
$LN21@Split:
	cmp	eax, ebx
	mov	esi, ebx
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN22@Split
	movsxd	rcx, esi
	shl	rcx, 5
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rdi+16]
	mov	r14, rax
	test	rdx, rdx
	je	SHORT $LN24@Split
	movsxd	r8, DWORD PTR [rdi+8]
	mov	rcx, rax
	shl	r8, 5
	call	memcpy
	mov	rcx, QWORD PTR [rdi+16]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN24@Split:
	mov	QWORD PTR [rdi+16], r14
	mov	DWORD PTR [rdi+12], esi
$LN22@Split:
; Line 1341
	mov	DWORD PTR [rdi+8], ebx
	mov	eax, ebx
$LN5@Split:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1324
	mov	DWORD PTR [rdi+4], ebx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	test	eax, eax
	jg	SHORT $LN28@Split
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN28@Split:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1329
	mov	rax, QWORD PTR [rdi+16]
	xorps	xmm0, xmm0
; Line 1330
	mov	r15d, 1
	mov	QWORD PTR tv1015[rsp], rbx
	movups	XMMWORD PTR [rax], xmm0
	movups	XMMWORD PTR [rax+16], xmm0
	cmp	rbx, r15
	jle	$LN3@Split
; Line 1332
	mov	rax, rbp
	mov	QWORD PTR [rsp+104], r12
	mov	QWORD PTR tv1014[rsp], rax
	lea	ebx, QWORD PTR [r15+31]
	mov	r12d, r15d
	xor	r14d, r14d
$LL4@Split:
	cmp	r12, rax
	jl	SHORT $LN6@Split
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r15d, DWORD PTR [rdi+8]
	jl	SHORT $LN31@Split
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN31@Split:
	mov	rcx, QWORD PTR [rdi+16]
	add	rcx, rbx
	mov	QWORD PTR $T1[rsp], rcx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1334
	je	$LN7@Split
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx], xmm0
	movups	XMMWORD PTR [rcx+16], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	mov	QWORD PTR [rcx], 0
	mov	QWORD PTR [rcx+8], r14
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+24], r14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1335
	jmp	$LN7@Split
$LN6@Split:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r15d, DWORD PTR [rdi+8]
	jl	SHORT $LN40@Split
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN40@Split:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1338
	mov	rsi, QWORD PTR [rdi+16]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	mov	ecx, DWORD PTR [rbx+rsi+4]
	test	ecx, ecx
	jns	SHORT $LN48@Split
; Line 1340
	mov	eax, ecx
	mov	ebp, r14d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	test	eax, eax
	cmovg	ebp, eax
; Line 1344
	cmp	ebp, ecx
	jle	SHORT $LN48@Split
	movsxd	rax, ebp
	imul	rcx, rax, 56				; 00000038H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+rsi+8]
	mov	r14, rax
	test	rdx, rdx
	je	SHORT $LN50@Split
	movsxd	rcx, DWORD PTR [rbx+rsi]
	imul	r8, rcx, 56				; 00000038H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+rsi+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN50@Split:
	mov	QWORD PTR [rbx+rsi+8], r14
	xor	r14d, r14d
	mov	DWORD PTR [rbx+rsi+4], ebp
$LN48@Split:
; Line 1341
	mov	DWORD PTR [rbx+rsi], r14d
; Line 1326
	cmp	r15d, DWORD PTR [rdi+8]
	jl	SHORT $LN54@Split
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN54@Split:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1339
	mov	rsi, QWORD PTR [rdi+16]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	mov	ecx, DWORD PTR [rsi+rbx+20]
	test	ecx, ecx
	jns	SHORT $LN62@Split
; Line 1340
	mov	eax, ecx
	mov	ebp, r14d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	test	eax, eax
	cmovg	ebp, eax
; Line 1344
	cmp	ebp, ecx
	jle	SHORT $LN62@Split
	movsxd	rcx, ebp
	add	rcx, rcx
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rsi+rbx+24]
	mov	r14, rax
	test	rdx, rdx
	je	SHORT $LN64@Split
	movsxd	r8, DWORD PTR [rsi+rbx+16]
	mov	rcx, rax
	add	r8, r8
	call	memcpy
	mov	rcx, QWORD PTR [rsi+rbx+24]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN64@Split:
	mov	QWORD PTR [rsi+rbx+24], r14
	xor	r14d, r14d
	mov	DWORD PTR [rsi+rbx+20], ebp
$LN62@Split:
; Line 1341
	mov	DWORD PTR [rsi+rbx+16], r14d
$LN7@Split:
; Line 1326
	cmp	r15d, DWORD PTR [rdi+8]
	jl	SHORT $LN68@Split
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN68@Split:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1341
	mov	rax, QWORD PTR [rdi+16]
	cmp	DWORD PTR [rbx+rax], 0
	jne	$LN2@Split
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [r13+96]
; Line 1888
	mov	DWORD PTR draw_cmd$2[rsp], r14d
	mov	QWORD PTR draw_cmd$2[rsp+32], 0
	mov	QWORD PTR draw_cmd$2[rsp+40], r14
	mov	QWORD PTR draw_cmd$2[rsp+48], r14
; Line 1336
	test	eax, eax
	jg	SHORT $LN75@Split
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [r13+96]
$LN75@Split:
	movsxd	rcx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1344
	mov	rax, QWORD PTR [r13+104]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	add	rcx, rcx
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1344
	movups	xmm0, XMMWORD PTR [rax+rcx*8-16]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	mov	eax, DWORD PTR [r13+112]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1344
	movups	XMMWORD PTR draw_cmd$2[rsp+4], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
	test	eax, eax
	jg	SHORT $LN78@Split
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [r13+112]
$LN78@Split:
	movsxd	rcx, eax
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1345
	mov	rax, QWORD PTR [r13+120]
	mov	rcx, QWORD PTR [rax+rcx*8-8]
	mov	QWORD PTR draw_cmd$2[rsp+24], rcx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	r15d, DWORD PTR [rdi+8]
	jl	SHORT $LN81@Split
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN81@Split:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1346
	mov	rsi, QWORD PTR [rdi+16]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
	mov	ecx, DWORD PTR [rbx+rsi]
	mov	r8d, DWORD PTR [rbx+rsi+4]
	cmp	ecx, r8d
	jne	SHORT $LN89@Split
	lea	ebp, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN87@Split
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN88@Split
$LN87@Split:
	mov	eax, 8
$LN88@Split:
	cmp	eax, ebp
	cmovg	ebp, eax
; Line 1344
	cmp	ebp, r8d
	jle	SHORT $LN89@Split
	movsxd	rax, ebp
	imul	rcx, rax, 56				; 00000038H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+rsi+8]
	mov	r14, rax
	test	rdx, rdx
	je	SHORT $LN91@Split
	movsxd	rcx, DWORD PTR [rbx+rsi]
	imul	r8, rcx, 56				; 00000038H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+rsi+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN91@Split:
	mov	ecx, DWORD PTR [rbx+rsi]
	mov	QWORD PTR [rbx+rsi+8], r14
	xor	r14d, r14d
	mov	DWORD PTR [rbx+rsi+4], ebp
$LN89@Split:
; Line 1347
	movups	xmm0, XMMWORD PTR draw_cmd$2[rsp]
	movsxd	rax, ecx
	movups	xmm1, XMMWORD PTR draw_cmd$2[rsp+16]
	imul	rcx, rax, 56				; 00000038H
	mov	rax, QWORD PTR [rbx+rsi+8]
	movups	XMMWORD PTR [rcx+rax], xmm0
	movups	xmm0, XMMWORD PTR draw_cmd$2[rsp+32]
	movups	XMMWORD PTR [rcx+rax+16], xmm1
	movsd	xmm1, QWORD PTR draw_cmd$2[rsp+48]
	movups	XMMWORD PTR [rcx+rax+32], xmm0
	movsd	QWORD PTR [rcx+rax+48], xmm1
	inc	DWORD PTR [rbx+rsi]
$LN2@Split:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1330
	mov	rax, QWORD PTR tv1014[rsp]
	inc	r15d
	inc	r12
	add	rbx, 32					; 00000020H
	cmp	r12, QWORD PTR tv1015[rsp]
	jl	$LL4@Split
	mov	r12, QWORD PTR [rsp+104]
$LN3@Split:
	mov	r14, QWORD PTR [rsp+96]
; Line 1349
	mov	rsi, QWORD PTR [rsp+168]
	add	rsp, 112				; 00000070H
	pop	r15
	pop	r13
	pop	rdi
	pop	rbp
	pop	rbx
	ret	0
?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z ENDP ; ImDrawListSplitter::Split
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ PROC	; ImDrawListSplitter::ClearFreeMemory, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1305
$LN34:
	mov	QWORD PTR [rsp+32], rbx
	push	rbp
	sub	rsp, 32					; 00000020H
; Line 1306
	mov	eax, DWORD PTR [rcx+8]
	xor	ebp, ebp
	mov	QWORD PTR [rsp+56], rdi
	mov	rbx, rcx
	mov	edi, ebp
	test	eax, eax
	jle	$LN3@ClearFreeM
	mov	QWORD PTR [rsp+48], rsi
	mov	QWORD PTR [rsp+64], r14
	mov	r14d, ebp
	npad	2
$LL4@ClearFreeM:
; Line 1308
	cmp	edi, DWORD PTR [rbx]
	jne	SHORT $LN5@ClearFreeM
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, eax
	jl	SHORT $LN9@ClearFreeM
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN9@ClearFreeM:
	xorps	xmm0, xmm0
	movsxd	rax, edi
	shl	rax, 5
	add	rax, QWORD PTR [rbx+16]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1309
	movups	XMMWORD PTR [rax], xmm0
	movups	XMMWORD PTR [rax+16], xmm0
$LN5@ClearFreeM:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	edi, DWORD PTR [rbx+8]
	jl	SHORT $LN12@ClearFreeM
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN12@ClearFreeM:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1310
	mov	rsi, QWORD PTR [rbx+16]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rsi+r14+8]
	test	rcx, rcx
	je	SHORT $LN31@ClearFreeM
	mov	QWORD PTR [rsi+r14], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rsi+r14+8], rbp
$LN31@ClearFreeM:
; Line 1326
	cmp	edi, DWORD PTR [rbx+8]
	jl	SHORT $LN18@ClearFreeM
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN18@ClearFreeM:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1311
	mov	rsi, QWORD PTR [rbx+16]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rsi+r14+24]
	test	rcx, rcx
	je	SHORT $LN2@ClearFreeM
	mov	QWORD PTR [rsi+r14+16], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rsi+r14+24], rbp
$LN2@ClearFreeM:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1306
	mov	eax, DWORD PTR [rbx+8]
	inc	edi
	add	r14, 32					; 00000020H
	cmp	edi, eax
	jl	$LL4@ClearFreeM
	mov	r14, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+48]
$LN3@ClearFreeM:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rdi, QWORD PTR [rsp+56]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1313
	mov	DWORD PTR [rbx], ebp
; Line 1314
	mov	DWORD PTR [rbx+4], 1
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
	mov	rcx, QWORD PTR [rbx+16]
	test	rcx, rcx
	je	SHORT $LN23@ClearFreeM
	mov	QWORD PTR [rbx+8], rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+16], rbp
$LN23@ClearFreeM:
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 1316
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ ENDP	; ImDrawListSplitter::ClearFreeMemory
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Clear@ImDrawListSplitter@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Clear@ImDrawListSplitter@@QEAAXXZ PROC			; ImDrawListSplitter::Clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1931
	mov	DWORD PTR [rcx], 0
	mov	DWORD PTR [rcx+4], 1
	ret	0
?Clear@ImDrawListSplitter@@QEAAXXZ ENDP			; ImDrawListSplitter::Clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1ImDrawListSplitter@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ImDrawListSplitter@@QEAA@XZ PROC			; ImDrawListSplitter::~ImDrawListSplitter, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1930
$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ ; ImDrawListSplitter::ClearFreeMemory
	npad	1
; Line 1320
	mov	rcx, QWORD PTR [rbx+16]
	test	rcx, rcx
	je	SHORT $LN7@ImDrawList
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN7@ImDrawList:
; Line 1930
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1ImDrawListSplitter@@QEAA@XZ ENDP			; ImDrawListSplitter::~ImDrawListSplitter
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImDrawListSplitter@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImDrawListSplitter@@QEAA@XZ PROC			; ImDrawListSplitter::ImDrawListSplitter, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; Line 1931
	mov	DWORD PTR [rcx], eax
; Line 1929
	mov	rax, rcx
; Line 1931
	mov	DWORD PTR [rcx+4], 1
; Line 1929
	ret	0
??0ImDrawListSplitter@@QEAA@XZ ENDP			; ImDrawListSplitter::ImDrawListSplitter
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z PROC	; ImVector<ImDrawChannel>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 5
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 5
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImDrawChannel@@@@QEAAXH@Z ENDP	; ImVector<ImDrawChannel>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z PROC	; ImVector<ImDrawChannel>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rcx, esi
	shl	rcx, 5
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 5
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@UImDrawChannel@@@@QEAAXH@Z ENDP	; ImVector<ImDrawChannel>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImDrawChannel@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImDrawChannel@@@@QEBAHH@Z PROC ; ImVector<ImDrawChannel>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImDrawChannel@@@@QEBAHH@Z ENDP ; ImVector<ImDrawChannel>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ PROC	; ImVector<ImDrawChannel>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ ENDP	; ImVector<ImDrawChannel>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UImDrawChannel@@@@QEAAAEAUImDrawChannel@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UImDrawChannel@@@@QEAAAEAUImDrawChannel@@H@Z PROC ; ImVector<ImDrawChannel>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	shl	rax, 5
	add	rax, QWORD PTR [rdi+8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UImDrawChannel@@@@QEAAAEAUImDrawChannel@@H@Z ENDP ; ImVector<ImDrawChannel>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImDrawChannel@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImDrawChannel@@@@QEAA@XZ PROC		; ImVector<ImDrawChannel>::~ImVector<ImDrawChannel>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImDrawChannel@@@@QEAA@XZ ENDP		; ImVector<ImDrawChannel>::~ImVector<ImDrawChannel>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImDrawChannel@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImDrawChannel@@@@QEAA@XZ PROC		; ImVector<ImDrawChannel>::ImVector<ImDrawChannel>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImDrawChannel@@@@QEAA@XZ ENDP		; ImVector<ImDrawChannel>::ImVector<ImDrawChannel>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImDrawChannel@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImDrawChannel@@QEAA@XZ PROC				; ImDrawChannel::ImDrawChannel, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR [rcx+24], rax
	mov	rax, rcx
	ret	0
??0ImDrawChannel@@QEAA@XZ ENDP				; ImDrawChannel::ImDrawChannel
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$ImVector@UImDrawCmd@@@@QEAAPEAUImDrawCmd@@PEBU2@@Z
_TEXT	SEGMENT
this$ = 48
it$ = 56
?erase@?$ImVector@UImDrawCmd@@@@QEAAPEAUImDrawCmd@@PEBU2@@Z PROC ; ImVector<ImDrawCmd>::erase, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1350
$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	rdx, rcx
	jb	SHORT $LN6@erase
	movsxd	rax, DWORD PTR [rdi]
	imul	r8, rax, 56				; 00000038H
	add	r8, rcx
	cmp	rdx, r8
	jb	SHORT $LN4@erase
$LN6@erase:
	mov	r8d, 1350				; 00000546H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DK@JJGEFOJO@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	mov	rcx, QWORD PTR [rdi+8]
$LN4@erase:
	sub	rbx, rcx
	mov	rax, 5270498306774157605		; 4924924924924925H
	imul	rbx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	movsxd	rax, DWORD PTR [rdi]
	imul	rbx, rdx, 56				; 00000038H
	sub	rax, rdx
	imul	r8, rax, 56				; 00000038H
	add	rcx, rbx
	sub	r8, 56					; 00000038H
	lea	rdx, QWORD PTR [rcx+56]
	call	memmove
	mov	rax, QWORD PTR [rdi+8]
	dec	DWORD PTR [rdi]
	add	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?erase@?$ImVector@UImDrawCmd@@@@QEAAPEAUImDrawCmd@@PEBU2@@Z ENDP ; ImVector<ImDrawCmd>::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ PROC		; ImVector<ImDrawCmd>::pop_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1348
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN4@pop_back
	mov	r8d, 1348				; 00000544H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	dec	DWORD PTR [rbx]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@pop_back:
	dec	eax
	mov	DWORD PTR [rcx], eax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?pop_back@?$ImVector@UImDrawCmd@@@@QEAAXXZ ENDP		; ImVector<ImDrawCmd>::pop_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z PROC ; ImVector<ImDrawCmd>::push_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
$LN14:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rbp, rdx
	mov	ecx, DWORD PTR [rcx]
	mov	r8d, DWORD PTR [rbx+4]
	cmp	ecx, r8d
	jne	SHORT $LN8@push_back
	mov	QWORD PTR [rsp+56], rdi
	lea	edi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN6@push_back
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN7@push_back
$LN6@push_back:
	mov	eax, 8
$LN7@push_back:
	cmp	eax, edi
	cmovg	edi, eax
; Line 1344
	cmp	edi, r8d
	jle	SHORT $LN12@push_back
	movsxd	rax, edi
	imul	rcx, rax, 56				; 00000038H
	mov	QWORD PTR [rsp+48], rsi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN10@push_back
	movsxd	rcx, DWORD PTR [rbx]
	imul	r8, rcx, 56				; 00000038H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@push_back:
	mov	ecx, DWORD PTR [rbx]
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN12@push_back:
	mov	rdi, QWORD PTR [rsp+56]
$LN8@push_back:
; Line 1347
	movups	xmm0, XMMWORD PTR [rbp]
	movsxd	rax, ecx
	imul	rcx, rax, 56				; 00000038H
	mov	rax, QWORD PTR [rbx+8]
	movups	XMMWORD PTR [rcx+rax], xmm0
	movups	xmm1, XMMWORD PTR [rbp+16]
	movups	XMMWORD PTR [rcx+rax+16], xmm1
	movups	xmm0, XMMWORD PTR [rbp+32]
	movups	XMMWORD PTR [rcx+rax+32], xmm0
	movsd	xmm1, QWORD PTR [rbp+48]
	movsd	QWORD PTR [rcx+rax+48], xmm1
	inc	DWORD PTR [rbx]
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?push_back@?$ImVector@UImDrawCmd@@@@QEAAXAEBUImDrawCmd@@@Z ENDP ; ImVector<ImDrawCmd>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z PROC		; ImVector<ImDrawCmd>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	imul	rcx, rdi, 56				; 00000038H
	mov	QWORD PTR [rsp+48], rsi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	rcx, DWORD PTR [rbx]
	imul	r8, rcx, 56				; 00000038H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UImDrawCmd@@@@QEAAXH@Z ENDP		; ImVector<ImDrawCmd>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z PROC		; ImVector<ImDrawCmd>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rax, esi
	imul	rcx, rax, 56				; 00000038H
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	rcx, DWORD PTR [rbx]
	imul	r8, rcx, 56				; 00000038H
	mov	rcx, rax
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z ENDP		; ImVector<ImDrawCmd>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UImDrawCmd@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UImDrawCmd@@@@QEBAHH@Z PROC	; ImVector<ImDrawCmd>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UImDrawCmd@@@@QEBAHH@Z ENDP	; ImVector<ImDrawCmd>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ
_TEXT	SEGMENT
this$ = 48
?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ PROC ; ImVector<ImDrawCmd>::back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1336
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rcx]
	mov	rbx, rcx
	test	eax, eax
	jg	SHORT $LN3@back
	mov	r8d, 1336				; 00000538H
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx]
$LN3@back:
	dec	eax
	movsxd	rcx, eax
	imul	rax, rcx, 56				; 00000038H
	add	rax, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ ENDP ; ImVector<ImDrawCmd>::back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@UImDrawCmd@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@UImDrawCmd@@@@QEAAXXZ PROC		; ImVector<ImDrawCmd>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@UImDrawCmd@@@@QEAAXXZ ENDP		; ImVector<ImDrawCmd>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z PROC	; ImVector<ImDrawCmd>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	imul	rax, rbx, 56				; 00000038H
	mov	rbx, QWORD PTR [rsp+48]
	add	rax, QWORD PTR [rdi+8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z ENDP	; ImVector<ImDrawCmd>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UImDrawCmd@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UImDrawCmd@@@@QEAA@XZ PROC		; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UImDrawCmd@@@@QEAA@XZ ENDP		; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??4?$ImVector@UImDrawCmd@@@@QEAAAEAU0@AEBU0@@Z
_TEXT	SEGMENT
this$ = 48
src$ = 56
??4?$ImVector@UImDrawCmd@@@@QEAAAEAU0@AEBU0@@Z PROC	; ImVector<ImDrawCmd>::operator=, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1319
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, rdx
; Line 1329
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN4@operator
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN4@operator:
; Line 1319
	mov	edx, DWORD PTR [rdi]
	mov	rcx, rbx
	call	?resize@?$ImVector@UImDrawCmd@@@@QEAAXH@Z ; ImVector<ImDrawCmd>::resize
	movsxd	rax, DWORD PTR [rbx]
	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [rbx+8]
	imul	r8, rax, 56				; 00000038H
	call	memcpy
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4?$ImVector@UImDrawCmd@@@@QEAAAEAU0@AEBU0@@Z ENDP	; ImVector<ImDrawCmd>::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UImDrawCmd@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UImDrawCmd@@@@QEAA@XZ PROC		; ImVector<ImDrawCmd>::ImVector<ImDrawCmd>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UImDrawCmd@@@@QEAA@XZ ENDP		; ImVector<ImDrawCmd>::ImVector<ImDrawCmd>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImDrawCmd@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImDrawCmd@@QEAA@XZ PROC				; ImDrawCmd::ImDrawCmd, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 224
	xor	eax, eax
	mov	QWORD PTR [rcx+12], rax
	mov	QWORD PTR [rcx+4], rax
; Line 1888
	mov	DWORD PTR [rcx], eax
	mov	QWORD PTR [rcx+24], rax
	mov	QWORD PTR [rcx+32], rax
	mov	QWORD PTR [rcx+40], rax
	mov	QWORD PTR [rcx+48], rax
	mov	rax, rcx
	ret	0
??0ImDrawCmd@@QEAA@XZ ENDP				; ImDrawCmd::ImDrawCmd
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$ImVector@G@@QEAAXAEBG@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
?push_back@?$ImVector@G@@QEAAXAEBG@Z PROC		; ImVector<unsigned short>::push_back, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1347
$LN14:
	mov	QWORD PTR [rsp+24], rbx
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	r14, rdx
	mov	ecx, DWORD PTR [rcx]
	mov	r8d, DWORD PTR [rbx+4]
	cmp	ecx, r8d
	jne	SHORT $LN8@push_back
	mov	QWORD PTR [rsp+56], rdi
	lea	edi, DWORD PTR [rcx+1]
; Line 1340
	test	r8d, r8d
	je	SHORT $LN6@push_back
	mov	eax, r8d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r8d
	jmp	SHORT $LN7@push_back
$LN6@push_back:
	mov	eax, 8
$LN7@push_back:
	cmp	eax, edi
	cmovg	edi, eax
; Line 1344
	cmp	edi, r8d
	jle	SHORT $LN12@push_back
	movsxd	rcx, edi
	add	rcx, rcx
	mov	QWORD PTR [rsp+48], rsi
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN10@push_back
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	add	r8, r8
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@push_back:
	mov	ecx, DWORD PTR [rbx]
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN12@push_back:
	mov	rdi, QWORD PTR [rsp+56]
$LN8@push_back:
; Line 1347
	movzx	eax, WORD PTR [r14]
	movsxd	rdx, ecx
	mov	rcx, QWORD PTR [rbx+8]
	mov	WORD PTR [rcx+rdx*2], ax
	inc	DWORD PTR [rbx]
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?push_back@?$ImVector@G@@QEAAXAEBG@Z ENDP		; ImVector<unsigned short>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@G@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@G@@QEAAXH@Z PROC			; ImVector<unsigned short>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	add	rcx, rcx
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	add	r8, r8
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@G@@QEAAXH@Z ENDP			; ImVector<unsigned short>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?shrink@?$ImVector@G@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?shrink@?$ImVector@G@@QEAAXH@Z PROC			; ImVector<unsigned short>::shrink, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1343
$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx
	mov	rdi, rcx
	cmp	edx, DWORD PTR [rcx]
	jle	SHORT $LN4@shrink
	mov	r8d, 1343				; 0000053fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz@
	call	QWORD PTR __imp__wassert
	mov	DWORD PTR [rdi], ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@shrink:
	mov	DWORD PTR [rcx], ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?shrink@?$ImVector@G@@QEAAXH@Z ENDP			; ImVector<unsigned short>::shrink
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@G@@QEAAXHAEBG@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
v$ = 64
?resize@?$ImVector@G@@QEAAXHAEBG@Z PROC			; ImVector<unsigned short>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1342
$LN24:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	mov	ecx, DWORD PTR [rcx+4]
	mov	r14, r8
	cmp	edi, ecx
	jle	SHORT $LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN10@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN11@resize
$LN10@resize:
	mov	eax, 8
$LN11@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN22@resize
	movsxd	rcx, esi
	add	rcx, rcx
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN14@resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	add	r8, r8
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN14@resize:
	mov	QWORD PTR [rbx+8], rbp
	mov	rbp, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], esi
$LN22@resize:
	mov	rsi, QWORD PTR [rsp+56]
$LN12@resize:
; Line 1342
	movsxd	rax, DWORD PTR [rbx]
	cmp	edi, eax
	jle	SHORT $LN20@resize
	mov	rdx, rax
	cmp	rax, rdi
	jge	SHORT $LN20@resize
	npad	9
$LL4@resize:
	mov	rcx, QWORD PTR [rbx+8]
	movzx	eax, WORD PTR [r14]
	mov	WORD PTR [rcx+rdx*2], ax
	inc	rdx
	cmp	rdx, rdi
	jl	SHORT $LL4@resize
$LN20@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?resize@?$ImVector@G@@QEAAXHAEBG@Z ENDP			; ImVector<unsigned short>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@G@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@G@@QEAAXH@Z PROC			; ImVector<unsigned short>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rcx, esi
	add	rcx, rcx
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	add	r8, r8
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@G@@QEAAXH@Z ENDP			; ImVector<unsigned short>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@G@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@G@@QEBAHH@Z PROC		; ImVector<unsigned short>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@G@@QEBAHH@Z ENDP		; ImVector<unsigned short>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$ImVector@G@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$ImVector@G@@QEAAXXZ PROC			; ImVector<unsigned short>::clear, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1329
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@clear
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN2@clear:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$ImVector@G@@QEAAXXZ ENDP			; ImVector<unsigned short>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@G@@QEAAAEAGH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@G@@QEAAAEAGH@Z PROC			; ImVector<unsigned short>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@HCDEHEAL@?$AAE?$AA?3?$AA?2?$AAr?$AAe?$AAp?$AAs?$AA?2?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rax, QWORD PTR [rax+rbx*2]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@G@@QEAAAEAGH@Z ENDP			; ImVector<unsigned short>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?empty@?$ImVector@G@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$ImVector@G@@QEBA_NXZ PROC			; ImVector<unsigned short>::empty, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1322
	cmp	DWORD PTR [rcx], 0
	sete	al
	ret	0
?empty@?$ImVector@G@@QEBA_NXZ ENDP			; ImVector<unsigned short>::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@G@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@G@@QEAA@XZ PROC				; ImVector<unsigned short>::~ImVector<unsigned short>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@G@@QEAA@XZ ENDP				; ImVector<unsigned short>::~ImVector<unsigned short>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??4?$ImVector@G@@QEAAAEAU0@AEBU0@@Z
_TEXT	SEGMENT
this$ = 48
src$ = 56
??4?$ImVector@G@@QEAAAEAU0@AEBU0@@Z PROC		; ImVector<unsigned short>::operator=, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1319
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, rdx
; Line 1329
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN4@operator
	mov	QWORD PTR [rbx], 0
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	QWORD PTR [rbx+8], 0
$LN4@operator:
; Line 1319
	mov	edx, DWORD PTR [rdi]
	mov	rcx, rbx
	call	?resize@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rdx, QWORD PTR [rdi+8]
	add	r8, r8
	mov	rcx, QWORD PTR [rbx+8]
	call	memcpy
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4?$ImVector@G@@QEAAAEAU0@AEBU0@@Z ENDP		; ImVector<unsigned short>::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@G@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@G@@QEAA@XZ PROC				; ImVector<unsigned short>::ImVector<unsigned short>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@G@@QEAA@XZ ENDP				; ImVector<unsigned short>::ImVector<unsigned short>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??3@YAXPEAXUImNewDummy@@0@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
__formal$ = 24
??3@YAXPEAXUImNewDummy@@0@Z PROC			; operator delete, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1286
	ret	0
??3@YAXPEAXUImNewDummy@@0@Z ENDP			; operator delete
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??2@YAPEAX_KUImNewDummy@@PEAX@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
ptr$ = 24
??2@YAPEAX_KUImNewDummy@@PEAX@Z PROC			; operator new, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1285
	mov	rax, r8
	ret	0
??2@YAPEAX_KUImNewDummy@@PEAX@Z ENDP			; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z
_TEXT	SEGMENT
dst$ = 112
?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z PROC	; ImGui::StyleColorsLight, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 290
$LN106:
	sub	rsp, 104				; 00000068H
	movaps	XMMWORD PTR [rsp+80], xmm6
	mov	rax, rcx
	movaps	XMMWORD PTR [rsp+64], xmm7
	movaps	XMMWORD PTR [rsp+48], xmm8
; Line 291
	test	rcx, rcx
	jne	SHORT $LN4@StyleColor
	call	?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ	; ImGui::GetStyle
$LN4@StyleColor:
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm2, XMMWORD PTR __xmm@3e9eb8523f7ae1483f170a3d3e851eb8
	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
	movaps	xmm7, XMMWORD PTR __xmm@3f8000003f51eb853f51eb853f51eb85
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f19999a3f19999a3f19999a
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movaps	xmm5, xmm7
	movss	xmm4, DWORD PTR __real@3f666666
	movaps	xmm6, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm8, XMMWORD PTR __xmm@3f4ccccd3f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	subss	xmm6, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 294
	movups	XMMWORD PTR [rax+184], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f70a3d73f70a3d73f70a3d7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 296
	movups	XMMWORD PTR [rax+216], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f7ae1483f8000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 298
	movups	XMMWORD PTR [rax+248], xmm0
	xorps	xmm0, xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	shufps	xmm5, xmm5, 85				; 00000055H
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 300
	movups	XMMWORD PTR [rax+280], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3ecccccd3f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 295
	movups	XMMWORD PTR [rax+200], xmm1
; Line 302
	movups	XMMWORD PTR [rax+312], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f75c28f3f75c28f3f75c28f
	xorps	xmm1, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 297
	movups	XMMWORD PTR [rax+232], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3e99999a000000000000000000000000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 304
	movups	XMMWORD PTR [rax+344], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f028f5c3f8000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 299
	movups	XMMWORD PTR [rax+264], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 306
	movups	XMMWORD PTR [rax+376], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f07ae143f7ae1483f7ae1483f7ae148
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 301
	movups	XMMWORD PTR [rax+296], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f2b851f3f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 308
	movups	XMMWORD PTR [rax+408], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f4ccccd3efae1483efae1483efae148
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 303
	movups	XMMWORD PTR [rax+328], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f5c28f63f5c28f63f5c28f6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 310
	movups	XMMWORD PTR [rax+440], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 307
	movups	XMMWORD PTR [rax+392], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f4ccccd3f30a3d73f30a3d73f30a3d7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 312
	movups	XMMWORD PTR [rax+472], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f19999a3f4ccccd3f0a3d713eeb851f
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 309
	movups	XMMWORD PTR [rax+424], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003efae1483efae1483efae148
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 314
	movups	XMMWORD PTR [rax+504], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 311
	movups	XMMWORD PTR [rax+456], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f47ae143f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 316
	movups	XMMWORD PTR [rax+536], xmm0
; Line 320
	movups	XMMWORD PTR [rax+600], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f1eb8523ec7ae143ec7ae143ec7ae14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 313
	movups	XMMWORD PTR [rax+488], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3ecccccd3f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 321
	movups	XMMWORD PTR [rax+616], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f4ccccd3ee147ae3e0f5c29
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 315
	movups	XMMWORD PTR [rax+520], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f7ae1483f07ae143d75c28f
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 323
	movups	XMMWORD PTR [rax+648], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f2b851f3f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 317
	movups	XMMWORD PTR [rax+552], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f47ae143f4ccccd3ee147ae3e0f5c29
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 325
	movups	XMMWORD PTR [rax+680], xmm0
	movups	XMMWORD PTR [rax+632], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f0f5c293f4ccccd3f4ccccd3f4ccccd
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movaps	xmm0, xmm2
	shufps	xmm0, xmm0, 85				; 00000055H
	subss	xmm5, xmm0
	mulss	xmm6, xmm4
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 324
	movups	XMMWORD PTR [rax+664], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f7333333f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm6, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 319
	movups	XMMWORD PTR [rax+584], xmm8
; Line 326
	movups	XMMWORD PTR [rax+696], xmm1
	movups	XMMWORD PTR [rax+568], xmm2
	movups	XMMWORD PTR [rax+360], xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm3, DWORD PTR [rax+368]
	mulss	xmm5, xmm4
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+576]
	subss	xmm3, xmm0
	mulss	xmm3, xmm4
	movss	xmm1, DWORD PTR [rax+580]
	addss	xmm3, xmm0
	movss	xmm2, DWORD PTR [rax+372]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 327
	shufps	xmm6, xmm6, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	subss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 327
	movss	xmm6, xmm5
	shufps	xmm6, xmm6, 198				; 000000c6H
	movss	xmm6, xmm3
; Line 328
	movups	XMMWORD PTR [rax+728], xmm8
	shufps	xmm6, xmm6, 39				; 00000027H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm2, xmm4
	addss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 327
	movss	xmm6, xmm2
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm2, DWORD PTR __real@3f19999a
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 327
	shufps	xmm6, xmm6, 57				; 00000039H
	movups	XMMWORD PTR [rax+712], xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm0, DWORD PTR [rax+600]
	movss	xmm1, DWORD PTR [rax+608]
	subss	xmm7, xmm0
	movss	xmm5, DWORD PTR [rax+364]
	movss	xmm4, DWORD PTR [rax+368]
	movss	xmm3, DWORD PTR [rax+372]
	subss	xmm4, xmm1
	mulss	xmm7, xmm2
	mulss	xmm4, xmm2
	addss	xmm7, xmm0
	movss	xmm0, DWORD PTR [rax+604]
	subss	xmm5, xmm0
	addss	xmm4, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 329
	shufps	xmm7, xmm7, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm5, xmm2
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+612]
	subss	xmm3, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 329
	movss	xmm7, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm3, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 329
	shufps	xmm7, xmm7, 198				; 000000c6H
	movss	xmm7, xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm3, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 329
	shufps	xmm7, xmm7, 39				; 00000027H
	movss	xmm7, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm3, DWORD PTR __real@3f4ccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 329
	shufps	xmm7, xmm7, 57				; 00000039H
	movups	XMMWORD PTR [rax+744], xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm0, DWORD PTR [rax+712]
	movss	xmm6, DWORD PTR [rax+344]
	movss	xmm5, DWORD PTR [rax+348]
	subss	xmm6, xmm0
	movss	xmm1, DWORD PTR [rax+720]
	movss	xmm4, DWORD PTR [rax+352]
	movss	xmm2, DWORD PTR [rax+356]
	subss	xmm4, xmm1
	mulss	xmm6, xmm3
	mulss	xmm4, xmm3
	addss	xmm6, xmm0
	movss	xmm0, DWORD PTR [rax+716]
	subss	xmm5, xmm0
	addss	xmm4, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 330
	shufps	xmm6, xmm6, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm5, xmm3
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+724]
	subss	xmm2, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 330
	movss	xmm6, xmm5
	shufps	xmm6, xmm6, 198				; 000000c6H
	movss	xmm6, xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm2, xmm3
	movss	xmm3, DWORD PTR __real@3ecccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 330
	shufps	xmm6, xmm6, 39				; 00000027H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm2, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 330
	movss	xmm6, xmm2
	shufps	xmm6, xmm6, 57				; 00000039H
	movups	XMMWORD PTR [rax+760], xmm6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm0, DWORD PTR [rax+744]
	movss	xmm6, DWORD PTR [rax+344]
	movss	xmm5, DWORD PTR [rax+348]
	subss	xmm6, xmm0
	mulss	xmm6, xmm3
	addss	xmm6, xmm0
	movss	xmm0, DWORD PTR [rax+748]
	subss	xmm5, xmm0
	movss	xmm1, DWORD PTR [rax+752]
	movss	xmm4, DWORD PTR [rax+352]
	movss	xmm2, DWORD PTR [rax+356]
	subss	xmm4, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 342
	movaps	xmm7, XMMWORD PTR [rsp+64]
	shufps	xmm6, xmm6, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm5, xmm3
	mulss	xmm4, xmm3
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+756]
	subss	xmm2, xmm0
	addss	xmm4, xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003eb333333edc28f63f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 333
	movups	XMMWORD PTR [rax+808], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f800000000000003ee666663f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 331
	movss	xmm6, xmm5
	shufps	xmm6, xmm6, 198				; 000000c6H
	movss	xmm6, xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 331
	shufps	xmm6, xmm6, 39				; 00000027H
; Line 335
	movups	XMMWORD PTR [rax+840], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f7333333f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm2, xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003ec7ae143ec7ae143ec7ae14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 332
	movups	XMMWORD PTR [rax+792], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000003f3333333f666666
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 334
	movups	XMMWORD PTR [rax+824], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3eb333333f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 331
	movss	xmm6, xmm2
; Line 336
	movups	XMMWORD PTR [rax+856], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f3333333f3333333f3333333f333333
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 331
	shufps	xmm6, xmm6, 57				; 00000039H
; Line 339
	movups	XMMWORD PTR [rax+904], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3eb333333e4ccccd3e4ccccd3e4ccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 337
	movups	XMMWORD PTR [rax+872], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3e4ccccd3e4ccccd3e4ccccd3e4ccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 331
	movups	XMMWORD PTR [rax+776], xmm6
; Line 342
	movaps	xmm6, XMMWORD PTR [rsp+80]
	movups	XMMWORD PTR [rax+888], xmm8
	movaps	xmm8, XMMWORD PTR [rsp+48]
	movups	XMMWORD PTR [rax+936], xmm0
	movups	XMMWORD PTR [rax+920], xmm1
	add	rsp, 104				; 00000068H
	ret	0
?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z ENDP	; ImGui::StyleColorsLight
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z
_TEXT	SEGMENT
dst$ = 112
?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z PROC	; ImGui::StyleColorsClassic, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 234
$LN106:
	sub	rsp, 104				; 00000068H
	movaps	XMMWORD PTR [rsp+80], xmm6
	mov	rax, rcx
	movaps	XMMWORD PTR [rsp+64], xmm7
	movaps	XMMWORD PTR [rsp+48], xmm8
; Line 235
	test	rcx, rcx
	jne	SHORT $LN4@StyleColor
	call	?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ	; ImGui::GetStyle
$LN4@StyleColor:
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm2, XMMWORD PTR __xmm@3ee666663f6666663ecccccd3ecccccd
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f6666663f6666663f666666
	movaps	xmm7, XMMWORD PTR __xmm@3f5eb8523f2147ae3ea3d70a3ea3d70a
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f19999a3f19999a3f19999a
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movaps	xmm4, xmm7
	movss	xmm6, DWORD PTR __real@3f4ccccd
	movaps	xmm5, xmm7
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm8, XMMWORD PTR __xmm@3f4ccccd3f6666663ee666663ee66666
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	subss	xmm5, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 238
	movups	XMMWORD PTR [rax+184], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f333333000000000000000000000000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 240
	movups	XMMWORD PTR [rax+216], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f6b851f3e0f5c293de147ae3de147ae
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 242
	movups	XMMWORD PTR [rax+248], xmm0
	xorps	xmm0, xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	shufps	xmm4, xmm4, 85				; 00000055H
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 244
	movups	XMMWORD PTR [rax+280], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3ecccccd3f30a3d73ef0a3d73ef0a3d7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 246
	movups	XMMWORD PTR [rax+312], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f547ae13f0a3d713e8a3d713e8a3d71
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 239
	movups	XMMWORD PTR [rax+200], xmm1
; Line 248
	movups	XMMWORD PTR [rax+344], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3e4ccccd3f4ccccd3ecccccd3ecccccd
	xorps	xmm1, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 241
	movups	XMMWORD PTR [rax+232], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f0000003f0000003f0000003f000000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 250
	movups	XMMWORD PTR [rax+376], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f19999a3e99999a3e8000003e4ccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 243
	movups	XMMWORD PTR [rax+264], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3ec7ae143edc28f63edc28f63edc28f6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 252
	movups	XMMWORD PTR [rax+408], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3ecccccd3f4ccccd3ecccccd3ecccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 245
	movups	XMMWORD PTR [rax+296], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f30a3d73f23d70a3ed1eb853ed70a3d
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 254
	movups	XMMWORD PTR [rax+440], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f0000003f6666663f6666663f666666
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 247
	movups	XMMWORD PTR [rax+328], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f4ccccd3f0ccccd3ecccccd3ecccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 256
	movups	XMMWORD PTR [rax+472], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f19999a3f4ccccd3ec7ae143ed1eb85
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 251
	movups	XMMWORD PTR [rax+392], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3e99999a3f4ccccd3ecccccd3ecccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 258
	movups	XMMWORD PTR [rax+504], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f4a3d713f35c28f3ef5c28f3ecccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 253
	movups	XMMWORD PTR [rax+424], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f19999a3f4ccccd3ec7ae143ed1eb85
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 260
	movups	XMMWORD PTR [rax+536], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f4ccccd3f5eb8523f07ae143f07ae14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 255
	movups	XMMWORD PTR [rax+456], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3e99999a3f8000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 264
	movups	XMMWORD PTR [rax+600], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f19999a3f0000003f0000003f000000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 257
	movups	XMMWORD PTR [rax+488], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f1eb8523f1c28f63ecccccd3eb33333
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 265
	movups	XMMWORD PTR [rax+616], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f6666663f3333333f333333
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 259
	movups	XMMWORD PTR [rax+520], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f4ccccd3f0a3d713eeb851f
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 267
	movups	XMMWORD PTR [rax+648], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f19999a3f8000003f51eb853f47ae14
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 261
	movups	XMMWORD PTR [rax+552], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f3333333f19999a3f19999a
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 269
	movups	XMMWORD PTR [rax+680], xmm0
	movups	XMMWORD PTR [rax+632], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3e23d70a3f8000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movaps	xmm0, xmm2
	shufps	xmm0, xmm0, 85				; 00000055H
	subss	xmm4, xmm0
	mulss	xmm5, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 268
	movups	XMMWORD PTR [rax+664], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f6666663f8000003f51eb853f47ae14
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm5, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 263
	movups	XMMWORD PTR [rax+584], xmm8
; Line 270
	movups	XMMWORD PTR [rax+696], xmm1
	movups	XMMWORD PTR [rax+568], xmm2
	movups	XMMWORD PTR [rax+360], xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm3, DWORD PTR [rax+368]
	mulss	xmm4, xmm6
	addss	xmm4, xmm0
	movss	xmm0, DWORD PTR [rax+576]
	subss	xmm3, xmm0
	movss	xmm1, DWORD PTR [rax+580]
	movss	xmm2, DWORD PTR [rax+372]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 271
	shufps	xmm5, xmm5, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	subss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 271
	movss	xmm5, xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm3, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 271
	shufps	xmm5, xmm5, 198				; 000000c6H
; Line 272
	movups	XMMWORD PTR [rax+728], xmm8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm3, xmm0
	mulss	xmm2, xmm6
	addss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 271
	movss	xmm5, xmm3
	shufps	xmm5, xmm5, 39				; 00000027H
	movss	xmm5, xmm2
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm2, DWORD PTR __real@3f19999a
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 271
	shufps	xmm5, xmm5, 57				; 00000039H
	movups	XMMWORD PTR [rax+712], xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm0, DWORD PTR [rax+600]
	movss	xmm1, DWORD PTR [rax+608]
	subss	xmm7, xmm0
	movss	xmm5, DWORD PTR [rax+364]
	movss	xmm4, DWORD PTR [rax+368]
	movss	xmm3, DWORD PTR [rax+372]
	subss	xmm4, xmm1
	mulss	xmm7, xmm2
	mulss	xmm4, xmm2
	addss	xmm7, xmm0
	movss	xmm0, DWORD PTR [rax+604]
	subss	xmm5, xmm0
	addss	xmm4, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 273
	shufps	xmm7, xmm7, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm5, xmm2
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+612]
	subss	xmm3, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 273
	movss	xmm7, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm3, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 273
	shufps	xmm7, xmm7, 198				; 000000c6H
	movss	xmm7, xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm3, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 273
	shufps	xmm7, xmm7, 39				; 00000027H
	movss	xmm7, xmm3
	shufps	xmm7, xmm7, 57				; 00000039H
	movups	XMMWORD PTR [rax+744], xmm7
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm0, DWORD PTR [rax+712]
	movss	xmm1, DWORD PTR [rax+716]
	movss	xmm5, DWORD PTR [rax+344]
	movss	xmm3, DWORD PTR [rax+352]
	subss	xmm5, xmm0
	movss	xmm4, DWORD PTR [rax+348]
	movss	xmm2, DWORD PTR [rax+356]
	subss	xmm4, xmm1
	mulss	xmm5, xmm6
	mulss	xmm4, xmm6
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+720]
	subss	xmm3, xmm0
	addss	xmm4, xmm1
	movss	xmm1, DWORD PTR [rax+724]
	subss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 274
	shufps	xmm5, xmm5, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm3, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 274
	movss	xmm5, xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm2, xmm6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 274
	shufps	xmm5, xmm5, 198				; 000000c6H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm3, xmm0
	addss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 274
	movss	xmm5, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm3, DWORD PTR __real@3ecccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 274
	shufps	xmm5, xmm5, 39				; 00000027H
	movss	xmm5, xmm2
	shufps	xmm5, xmm5, 57				; 00000039H
	movups	XMMWORD PTR [rax+760], xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm0, DWORD PTR [rax+744]
	movss	xmm6, DWORD PTR [rax+344]
	movss	xmm5, DWORD PTR [rax+348]
	subss	xmm6, xmm0
	mulss	xmm6, xmm3
	addss	xmm6, xmm0
	movss	xmm0, DWORD PTR [rax+748]
	subss	xmm5, xmm0
	movss	xmm1, DWORD PTR [rax+752]
	movss	xmm4, DWORD PTR [rax+352]
	movss	xmm2, DWORD PTR [rax+356]
	subss	xmm4, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 286
	movaps	xmm7, XMMWORD PTR [rsp+64]
	shufps	xmm6, xmm6, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm5, xmm3
	mulss	xmm4, xmm3
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+756]
	subss	xmm2, xmm0
	addss	xmm4, xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f800000000000003f3333333f666666
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 277
	movups	XMMWORD PTR [rax+808], xmm1
	movss	xmm6, xmm5
	shufps	xmm6, xmm6, 198				; 000000c6H
	movss	xmm6, xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm2, xmm3
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 278
	movups	XMMWORD PTR [rax+824], xmm1
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm2, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 275
	shufps	xmm6, xmm6, 39				; 00000027H
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 276
	movups	XMMWORD PTR [rax+792], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, xmm1
	movaps	xmm1, XMMWORD PTR __xmm@3f800000000000003f19999a3f800000
	movaps	xmm0, XMMWORD PTR __xmm@3eb333333f8000000000000000000000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 275
	movss	xmm6, xmm2
; Line 280
	movups	XMMWORD PTR [rax+856], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f3333333f8000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 279
	movups	XMMWORD PTR [rax+840], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f666666000000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 275
	shufps	xmm6, xmm6, 57				; 00000039H
; Line 283
	movups	XMMWORD PTR [rax+904], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3eb333333e4ccccd3e4ccccd3e4ccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 281
	movups	XMMWORD PTR [rax+872], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3e4ccccd3f4ccccd3f4ccccd3f4ccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 275
	movups	XMMWORD PTR [rax+776], xmm6
; Line 286
	movaps	xmm6, XMMWORD PTR [rsp+80]
	movups	XMMWORD PTR [rax+888], xmm8
	movaps	xmm8, XMMWORD PTR [rsp+48]
	movups	XMMWORD PTR [rax+936], xmm0
	movups	XMMWORD PTR [rax+920], xmm1
	add	rsp, 104				; 00000068H
	ret	0
?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z ENDP	; ImGui::StyleColorsClassic
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z
_TEXT	SEGMENT
dst$ = 112
?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z PROC	; ImGui::StyleColorsDark, COMDAT
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 179
$LN106:
	sub	rsp, 104				; 00000068H
	movaps	XMMWORD PTR [rsp+80], xmm6
	mov	rax, rcx
	movaps	XMMWORD PTR [rsp+64], xmm7
	movaps	XMMWORD PTR [rsp+48], xmm8
; Line 180
	test	rcx, rcx
	jne	SHORT $LN4@StyleColor
	call	?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ	; ImGui::GetStyle
$LN4@StyleColor:
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm2, XMMWORD PTR __xmm@3e9eb8523f7ae1483f170a3d3e851eb8
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movaps	xmm8, XMMWORD PTR __xmm@3f8000003ef5c28f3e947ae13e23d70a
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm7, DWORD PTR __real@3f4ccccd
	movaps	xmm4, xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f0000003f0000003f000000
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movaps	xmm5, xmm8
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm3, XMMWORD PTR __xmm@3f0000003f0000003edc28f63edc28f6
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	subss	xmm5, xmm2
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm6, XMMWORD PTR __xmm@3f4ccccd3f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 183
	movups	XMMWORD PTR [rax+184], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f70a3d73d75c28f3d75c28f3d75c28f
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 185
	movups	XMMWORD PTR [rax+216], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f70a3d73da3d70a3da3d70a3da3d70a
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 187
	movups	XMMWORD PTR [rax+248], xmm0
	movups	XMMWORD PTR [rax+200], xmm1
	xorps	xmm0, xmm0
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	shufps	xmm4, xmm4, 85				; 00000055H
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 189
	movups	XMMWORD PTR [rax+280], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3ecccccd3f7ae1483f170a3d3e851eb8
	xorps	xmm1, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 191
	movups	XMMWORD PTR [rax+312], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003d23d70a3d23d70a3d23d70a
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 186
	movups	XMMWORD PTR [rax+232], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f0a3d713ef5c28f3e947ae13e23d70a
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 193
	movups	XMMWORD PTR [rax+344], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f028f5c000000000000000000000000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 190
	movups	XMMWORD PTR [rax+296], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f2b851f3f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 195
	movups	XMMWORD PTR [rax+376], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f07ae143ca3d70a3ca3d70a3ca3d70a
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 192
	movups	XMMWORD PTR [rax+328], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003e0f5c293e0f5c293e0f5c29
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 197
	movups	XMMWORD PTR [rax+408], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003ed1eb853ed1eb853ed1eb85
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 196
	movups	XMMWORD PTR [rax+392], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003e9eb8523e9eb8523e9eb852
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 199
	movups	XMMWORD PTR [rax+440], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 198
	movups	XMMWORD PTR [rax+424], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f028f5c3f028f5c3f028f5c
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 201
	movups	XMMWORD PTR [rax+472], xmm0
; Line 203
	movups	XMMWORD PTR [rax+504], xmm0
; Line 205
	movups	XMMWORD PTR [rax+536], xmm0
; Line 209
	movups	XMMWORD PTR [rax+600], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f47ae143f4000003ecccccd3dcccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 200
	movups	XMMWORD PTR [rax+456], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f6147ae3f051eb83e75c28f
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 211
	movups	XMMWORD PTR [rax+632], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3e8000003f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 202
	movups	XMMWORD PTR [rax+488], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3ecccccd3f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 213
	movups	XMMWORD PTR [rax+664], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f7333333f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 204
	movups	XMMWORD PTR [rax+520], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f7ae1483f07ae143d75c28f
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 188
	movups	XMMWORD PTR [rax+264], xmm3
; Line 210
	movups	XMMWORD PTR [rax+616], xmm3
; Line 215
	movups	XMMWORD PTR [rax+696], xmm0
	movups	XMMWORD PTR [rax+552], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f4000003ecccccd3dcccccd
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movaps	xmm0, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 212
	movups	XMMWORD PTR [rax+648], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f2b851f3f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 208
	movups	XMMWORD PTR [rax+584], xmm6
; Line 214
	movups	XMMWORD PTR [rax+680], xmm1
	movups	XMMWORD PTR [rax+568], xmm2
	movups	XMMWORD PTR [rax+360], xmm8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm3, DWORD PTR [rax+368]
	movss	xmm1, DWORD PTR [rax+580]
	shufps	xmm0, xmm0, 85				; 00000055H
	subss	xmm4, xmm0
	mulss	xmm5, xmm7
	addss	xmm5, xmm2
	movss	xmm2, DWORD PTR [rax+372]
	mulss	xmm4, xmm7
	addss	xmm4, xmm0
	movss	xmm0, DWORD PTR [rax+576]
	subss	xmm3, xmm0
	mulss	xmm3, xmm7
	addss	xmm3, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 216
	shufps	xmm5, xmm5, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	subss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 216
	movss	xmm5, xmm4
; Line 217
	movups	XMMWORD PTR [rax+728], xmm6
	shufps	xmm5, xmm5, 198				; 000000c6H
	movss	xmm5, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm2, xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 216
	shufps	xmm5, xmm5, 39				; 00000027H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 216
	movss	xmm5, xmm2
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm2, DWORD PTR __real@3f19999a
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 216
	shufps	xmm5, xmm5, 57				; 00000039H
	movups	XMMWORD PTR [rax+712], xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm0, DWORD PTR [rax+600]
	movss	xmm1, DWORD PTR [rax+608]
	subss	xmm8, xmm0
	movss	xmm5, DWORD PTR [rax+364]
	movss	xmm4, DWORD PTR [rax+368]
	movss	xmm3, DWORD PTR [rax+372]
	subss	xmm4, xmm1
	mulss	xmm8, xmm2
	mulss	xmm4, xmm2
	addss	xmm8, xmm0
	movss	xmm0, DWORD PTR [rax+604]
	subss	xmm5, xmm0
	addss	xmm4, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 218
	shufps	xmm8, xmm8, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm5, xmm2
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+612]
	subss	xmm3, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 218
	movss	xmm8, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm3, xmm2
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 218
	shufps	xmm8, xmm8, 198				; 000000c6H
	movss	xmm8, xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm3, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 218
	shufps	xmm8, xmm8, 39				; 00000027H
	movss	xmm8, xmm3
	shufps	xmm8, xmm8, 57				; 00000039H
	movups	XMMWORD PTR [rax+744], xmm8
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm0, DWORD PTR [rax+712]
	movss	xmm1, DWORD PTR [rax+716]
	movss	xmm5, DWORD PTR [rax+344]
	movss	xmm4, DWORD PTR [rax+348]
	subss	xmm5, xmm0
	movss	xmm3, DWORD PTR [rax+352]
	subss	xmm4, xmm1
	movss	xmm2, DWORD PTR [rax+356]
	mulss	xmm5, xmm7
	mulss	xmm4, xmm7
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+720]
	subss	xmm3, xmm0
	addss	xmm4, xmm1
	movss	xmm1, DWORD PTR [rax+724]
	subss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 219
	shufps	xmm5, xmm5, 225				; 000000e1H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm3, xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 219
	movss	xmm5, xmm4
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm2, xmm7
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 219
	shufps	xmm5, xmm5, 198				; 000000c6H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm3, xmm0
	addss	xmm2, xmm1
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 219
	movss	xmm5, xmm3
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm3, DWORD PTR __real@3ecccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 219
	shufps	xmm5, xmm5, 39				; 00000027H
	movss	xmm5, xmm2
	shufps	xmm5, xmm5, 57				; 00000039H
	movups	XMMWORD PTR [rax+760], xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	movss	xmm0, DWORD PTR [rax+744]
	movss	xmm6, DWORD PTR [rax+344]
	movss	xmm5, DWORD PTR [rax+348]
	subss	xmm6, xmm0
	movss	xmm1, DWORD PTR [rax+752]
	movss	xmm4, DWORD PTR [rax+352]
	mulss	xmm6, xmm3
	addss	xmm6, xmm0
	movss	xmm0, DWORD PTR [rax+748]
	subss	xmm5, xmm0
	mulss	xmm5, xmm3
	addss	xmm5, xmm0
	movss	xmm0, DWORD PTR [rax+756]
	subss	xmm4, xmm1
	movss	xmm2, DWORD PTR [rax+356]
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 231
	movaps	xmm7, XMMWORD PTR [rsp+64]
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	subss	xmm2, xmm0
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 231
	movaps	xmm8, XMMWORD PTR [rsp+48]
	shufps	xmm6, xmm6, 225				; 000000e1H
	movss	xmm6, xmm5
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm4, xmm3
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 220
	shufps	xmm6, xmm6, 198				; 000000c6H
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	mulss	xmm2, xmm3
	addss	xmm4, xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003eb333333edc28f63f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 222
	movups	XMMWORD PTR [rax+808], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f800000000000003f19999a3f800000
; File E:\reps\ocornut\imgui\imgui_internal.h
; Line 362
	addss	xmm2, xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f1c28f63f1c28f63f1c28f6
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 221
	movups	XMMWORD PTR [rax+792], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000003f3333333f666666
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 220
	movss	xmm6, xmm4
; Line 223
	movups	XMMWORD PTR [rax+824], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3eb333333f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 224
	movups	XMMWORD PTR [rax+840], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f666666000000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 220
	shufps	xmm6, xmm6, 39				; 00000027H
; Line 225
	movups	XMMWORD PTR [rax+856], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3f8000003f7ae1483f170a3d3e851eb8
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 220
	movss	xmm6, xmm2
; Line 226
	movups	XMMWORD PTR [rax+872], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3f3333333f8000003f8000003f800000
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 220
	shufps	xmm6, xmm6, 57				; 00000039H
; Line 227
	movups	XMMWORD PTR [rax+888], xmm0
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm0, XMMWORD PTR __xmm@3e4ccccd3f4ccccd3f4ccccd3f4ccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 228
	movups	XMMWORD PTR [rax+904], xmm1
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movaps	xmm1, XMMWORD PTR __xmm@3eb333333f4ccccd3f4ccccd3f4ccccd
; File E:\reps\ocornut\imgui\imgui_draw.cpp
; Line 220
	movups	XMMWORD PTR [rax+776], xmm6
; Line 231
	movaps	xmm6, XMMWORD PTR [rsp+80]
	movups	XMMWORD PTR [rax+920], xmm0
	movups	XMMWORD PTR [rax+936], xmm1
	add	rsp, 104				; 00000068H
	ret	0
?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z ENDP	; ImGui::StyleColorsDark
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImVec4@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 8
_x$ = 16
_y$ = 24
_z$ = 32
_w$ = 40
??0ImVec4@@QEAA@MMMM@Z PROC				; ImVec4::ImVec4, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 225
	movss	xmm0, DWORD PTR _w$[rsp]
	mov	rax, rcx
	movss	DWORD PTR [rcx+12], xmm0
	movss	DWORD PTR [rcx], xmm1
	movss	DWORD PTR [rcx+4], xmm2
	movss	DWORD PTR [rcx+8], xmm3
	ret	0
??0ImVec4@@QEAA@MMMM@Z ENDP				; ImVec4::ImVec4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImVec4@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImVec4@@QEAA@XZ PROC					; ImVec4::ImVec4, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 224
	xor	eax, eax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0ImVec4@@QEAA@XZ ENDP					; ImVec4::ImVec4
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImVec2@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 8
_x$ = 16
_y$ = 24
??0ImVec2@@QEAA@MM@Z PROC				; ImVec2::ImVec2, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 212
	movss	DWORD PTR [rcx], xmm1
	mov	rax, rcx
	movss	DWORD PTR [rcx+4], xmm2
	ret	0
??0ImVec2@@QEAA@MM@Z ENDP				; ImVec2::ImVec2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImVec2@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImVec2@@QEAA@XZ PROC					; ImVec2::ImVec2, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 211
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0ImVec2@@QEAA@XZ ENDP					; ImVec2::ImVec2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
__t$ = 48
__s$ = 56
__n$ = 64
__f$ = 72
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN12:
	test	r8, r8
	je	SHORT $LN10@vector
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, r9
	mov	rbx, r8
	mov	rbp, rdx
	mov	rdi, rcx
$LL2@vector:
	mov	rcx, rdi
	call	rsi
	add	rdi, rbp
	sub	rbx, 1
	jne	SHORT $LL2@vector
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN10@vector:
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
