; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??0ImVec4@@QEAA@XZ				; ImVec4::ImVec4
PUBLIC	??A?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@H@Z ; ImVector<ImDrawCmd>::operator[]
PUBLIC	?ImGui_ImplVulkan_Init@@YA_NPEAUImGui_ImplVulkan_InitInfo@@PEAUVkRenderPass_T@@@Z ; ImGui_ImplVulkan_Init
PUBLIC	?ImGui_ImplVulkan_Shutdown@@YAXXZ		; ImGui_ImplVulkan_Shutdown
PUBLIC	?ImGui_ImplVulkan_NewFrame@@YAXXZ		; ImGui_ImplVulkan_NewFrame
PUBLIC	?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z ; ImGui_ImplVulkan_RenderDrawData
PUBLIC	?ImGui_ImplVulkan_CreateFontsTexture@@YA_NPEAUVkCommandBuffer_T@@@Z ; ImGui_ImplVulkan_CreateFontsTexture
PUBLIC	?ImGui_ImplVulkan_DestroyFontUploadObjects@@YAXXZ ; ImGui_ImplVulkan_DestroyFontUploadObjects
PUBLIC	?ImGui_ImplVulkan_SetMinImageCount@@YAXI@Z	; ImGui_ImplVulkan_SetMinImageCount
PUBLIC	?ImGui_ImplVulkanH_CreateOrResizeWindow@@YAXPEAUVkInstance_T@@PEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@HHI@Z ; ImGui_ImplVulkanH_CreateOrResizeWindow
PUBLIC	?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_DestroyWindow
PUBLIC	?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z ; ImGui_ImplVulkanH_SelectSurfaceFormat
PUBLIC	?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z ; ImGui_ImplVulkanH_SelectPresentMode
PUBLIC	?ImGui_ImplVulkanH_GetMinImageCountFromPresentMode@@YAHW4VkPresentModeKHR@@@Z ; ImGui_ImplVulkanH_GetMinImageCountFromPresentMode
PUBLIC	??0ImGui_ImplVulkanH_Window@@QEAA@XZ		; ImGui_ImplVulkanH_Window::ImGui_ImplVulkanH_Window
PUBLIC	?ImGui_ImplVulkan_CreateDeviceObjects@@YA_NXZ	; ImGui_ImplVulkan_CreateDeviceObjects
PUBLIC	?ImGui_ImplVulkan_DestroyDeviceObjects@@YAXXZ	; ImGui_ImplVulkan_DestroyDeviceObjects
PUBLIC	?ImGui_ImplVulkanH_DestroyFrame@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Frame@@PEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_DestroyFrame
PUBLIC	?ImGui_ImplVulkanH_DestroyFrameSemaphores@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameSemaphores@@PEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_DestroyFrameSemaphores
PUBLIC	?ImGui_ImplVulkanH_DestroyFrameRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@PEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_DestroyFrameRenderBuffers
PUBLIC	?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_DestroyWindowRenderBuffers
PUBLIC	?ImGui_ImplVulkanH_CreateWindowSwapChain@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@HHI@Z ; ImGui_ImplVulkanH_CreateWindowSwapChain
PUBLIC	?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_CreateWindowCommandBuffers
PUBLIC	??0?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ	; ImVector<VkSurfaceFormatKHR>::ImVector<VkSurfaceFormatKHR>
PUBLIC	??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ	; ImVector<VkSurfaceFormatKHR>::~ImVector<VkSurfaceFormatKHR>
PUBLIC	??A?$ImVector@UVkSurfaceFormatKHR@@@@QEAAAEAUVkSurfaceFormatKHR@@H@Z ; ImVector<VkSurfaceFormatKHR>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@UVkSurfaceFormatKHR@@@@QEBAHH@Z ; ImVector<VkSurfaceFormatKHR>::_grow_capacity
PUBLIC	?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z ; ImVector<VkSurfaceFormatKHR>::resize
PUBLIC	?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z ; ImVector<VkSurfaceFormatKHR>::reserve
PUBLIC	??0?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ	; ImVector<enum VkPresentModeKHR>::ImVector<enum VkPresentModeKHR>
PUBLIC	??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ	; ImVector<enum VkPresentModeKHR>::~ImVector<enum VkPresentModeKHR>
PUBLIC	??A?$ImVector@W4VkPresentModeKHR@@@@QEAAAEAW4VkPresentModeKHR@@H@Z ; ImVector<enum VkPresentModeKHR>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@W4VkPresentModeKHR@@@@QEBAHH@Z ; ImVector<enum VkPresentModeKHR>::_grow_capacity
PUBLIC	?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z ; ImVector<enum VkPresentModeKHR>::resize
PUBLIC	?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z ; ImVector<enum VkPresentModeKHR>::reserve
PUBLIC	??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_1DI@JLBGOBMP@?$AAw?$AAr?$AAb?$AA?9?$AA?$DO?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAv@ ; `string'
PUBLIC	??_C@_04GHJNJNPO@main@				; `string'
PUBLIC	??_C@_0BC@CDBPHIBM@imgui_impl_vulkan@		; `string'
PUBLIC	??_C@_1CI@BJEDLNB@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1DE@KKOBOIGD@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AAD@ ; `string'
PUBLIC	??_C@_1CE@PJDNKGKP@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CB?$AA?$DN@ ; `string'
PUBLIC	??_C@_1CC@OENKIMLO@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1DE@PIBAMHLP@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_1DC@FFONJKND@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAM?$AAi?$AAn?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC@ ; `string'
PUBLIC	??_C@_1FA@GGGJGPKH@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn@ ; `string'
PUBLIC	??_C@_1CC@GENAFDPP@?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AA_?$AAp?$AAa?$AAs?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1CK@CFPAFBMF@?$AAm?$AAi?$AAn?$AA_?$AAi?$AAm?$AAa?$AAg?$AAe?$AA_?$AAc?$AAo?$AAu?$AAn?$AAt@ ; `string'
PUBLIC	??_C@_1CK@KGIELIHG@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAs@ ; `string'
PUBLIC	??_C@_1DE@PDNAAGKG@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAs@ ; `string'
PUBLIC	??_C@_1CG@BMDGPKIK@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAm?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$CB@ ; `string'
PUBLIC	??_C@_1DA@BJBCIAAE@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAm?$AAo?$AAd?$AAe?$AAs?$AA_?$AAc@ ; `string'
PUBLIC	??_C@_1EI@MIABCDLK@?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA_?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe@ ; `string'
PUBLIC	??_C@_1EE@CBIJBCDF@?$AAw?$AAd?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5@ ; `string'
PUBLIC	??_C@_1IK@GFBEKNKP@?$AAw?$AAd?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5@ ; `string'
PUBLIC	??_C@_1CA@MDIHBCFE@?$AAw?$AAd?$AA?9?$AA?$DO?$AAF?$AAr?$AAa?$AAm?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@ ; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@447a0000
PUBLIC	__real@bf800000
PUBLIC	__real@c47a0000
PUBLIC	__xmm@00000000000000010000000200000000
PUBLIC	__xmm@00000007000000000000000700000006
EXTRN	__std_terminate:PROC
EXTRN	__imp__wassert:PROC
EXTRN	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ:PROC		; ImGui::GetIO
EXTRN	?MemAlloc@ImGui@@YAPEAX_K@Z:PROC		; ImGui::MemAlloc
EXTRN	?MemFree@ImGui@@YAXPEAX@Z:PROC			; ImGui::MemFree
EXTRN	?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z:PROC ; ImFontAtlas::GetTexDataAsRGBA32
EXTRN	vkGetPhysicalDeviceMemoryProperties:PROC
EXTRN	vkDeviceWaitIdle:PROC
EXTRN	vkAllocateMemory:PROC
EXTRN	vkFreeMemory:PROC
EXTRN	vkMapMemory:PROC
EXTRN	vkUnmapMemory:PROC
EXTRN	vkFlushMappedMemoryRanges:PROC
EXTRN	vkBindBufferMemory:PROC
EXTRN	vkBindImageMemory:PROC
EXTRN	vkGetBufferMemoryRequirements:PROC
EXTRN	vkGetImageMemoryRequirements:PROC
EXTRN	vkCreateFence:PROC
EXTRN	vkDestroyFence:PROC
EXTRN	vkCreateSemaphore:PROC
EXTRN	vkDestroySemaphore:PROC
EXTRN	vkCreateBuffer:PROC
EXTRN	vkDestroyBuffer:PROC
EXTRN	vkCreateImage:PROC
EXTRN	vkDestroyImage:PROC
EXTRN	vkCreateImageView:PROC
EXTRN	vkDestroyImageView:PROC
EXTRN	vkCreateShaderModule:PROC
EXTRN	vkDestroyShaderModule:PROC
EXTRN	vkCreateGraphicsPipelines:PROC
EXTRN	vkDestroyPipeline:PROC
EXTRN	vkCreatePipelineLayout:PROC
EXTRN	vkDestroyPipelineLayout:PROC
EXTRN	vkCreateSampler:PROC
EXTRN	vkDestroySampler:PROC
EXTRN	vkCreateDescriptorSetLayout:PROC
EXTRN	vkDestroyDescriptorSetLayout:PROC
EXTRN	vkAllocateDescriptorSets:PROC
EXTRN	vkUpdateDescriptorSets:PROC
EXTRN	vkCreateFramebuffer:PROC
EXTRN	vkDestroyFramebuffer:PROC
EXTRN	vkCreateRenderPass:PROC
EXTRN	vkDestroyRenderPass:PROC
EXTRN	vkCreateCommandPool:PROC
EXTRN	vkDestroyCommandPool:PROC
EXTRN	vkAllocateCommandBuffers:PROC
EXTRN	vkFreeCommandBuffers:PROC
EXTRN	vkCmdBindPipeline:PROC
EXTRN	vkCmdSetViewport:PROC
EXTRN	vkCmdSetScissor:PROC
EXTRN	vkCmdBindDescriptorSets:PROC
EXTRN	vkCmdBindIndexBuffer:PROC
EXTRN	vkCmdBindVertexBuffers:PROC
EXTRN	vkCmdDrawIndexed:PROC
EXTRN	vkCmdCopyBufferToImage:PROC
EXTRN	vkCmdPipelineBarrier:PROC
EXTRN	vkCmdPushConstants:PROC
EXTRN	vkDestroySurfaceKHR:PROC
EXTRN	vkGetPhysicalDeviceSurfaceCapabilitiesKHR:PROC
EXTRN	vkGetPhysicalDeviceSurfaceFormatsKHR:PROC
EXTRN	vkGetPhysicalDeviceSurfacePresentModesKHR:PROC
EXTRN	vkCreateSwapchainKHR:PROC
EXTRN	vkDestroySwapchainKHR:PROC
EXTRN	vkGetSwapchainImagesKHR:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memcpy:PROC
EXTRN	memset:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A DB 058H DUP (?) ; g_VulkanInitInfo
?g_RenderPass@@3PEAUVkRenderPass_T@@EA DQ 01H DUP (?)	; g_RenderPass
?g_PipelineCreateFlags@@3IA DD 01H DUP (?)		; g_PipelineCreateFlags
	ALIGN	8

?g_DescriptorSetLayout@@3PEAUVkDescriptorSetLayout_T@@EA DQ 01H DUP (?) ; g_DescriptorSetLayout
?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA DQ 01H DUP (?) ; g_PipelineLayout
?g_DescriptorSet@@3PEAUVkDescriptorSet_T@@EA DQ 01H DUP (?) ; g_DescriptorSet
?g_Pipeline@@3PEAUVkPipeline_T@@EA DQ 01H DUP (?)	; g_Pipeline
?g_FontSampler@@3PEAUVkSampler_T@@EA DQ 01H DUP (?)	; g_FontSampler
?g_FontMemory@@3PEAUVkDeviceMemory_T@@EA DQ 01H DUP (?)	; g_FontMemory
?g_FontImage@@3PEAUVkImage_T@@EA DQ 01H DUP (?)		; g_FontImage
?g_FontView@@3PEAUVkImageView_T@@EA DQ 01H DUP (?)	; g_FontView
?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA DQ 01H DUP (?) ; g_UploadBufferMemory
?g_UploadBuffer@@3PEAUVkBuffer_T@@EA DQ 01H DUP (?)	; g_UploadBuffer
?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A DB 010H DUP (?) ; g_MainWindowRenderBuffers
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_Init@@YA_NPEAUImGui_ImplVulkan_InitInfo@@PEAUVkRenderPass_T@@@Z DD imagerel $LN12
	DD	imagerel $LN12+394
	DD	imagerel $unwind$?ImGui_ImplVulkan_Init@@YA_NPEAUImGui_ImplVulkan_InitInfo@@PEAUVkRenderPass_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_Shutdown@@YAXXZ DD imagerel $LN17
	DD	imagerel $LN17+382
	DD	imagerel $unwind$?ImGui_ImplVulkan_Shutdown@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD imagerel $LN67
	DD	imagerel $LN67+97
	DD	imagerel $unwind$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD imagerel $LN67+97
	DD	imagerel $LN67+876
	DD	imagerel $chain$6$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD imagerel $LN67+876
	DD	imagerel $LN67+1321
	DD	imagerel $chain$7$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD imagerel $LN67+1321
	DD	imagerel $LN67+1380
	DD	imagerel $chain$8$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD imagerel $LN67+1380
	DD	imagerel $LN67+1408
	DD	imagerel $chain$9$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_CreateFontsTexture@@YA_NPEAUVkCommandBuffer_T@@@Z DD imagerel $LN31
	DD	imagerel $LN31+1529
	DD	imagerel $unwind$?ImGui_ImplVulkan_CreateFontsTexture@@YA_NPEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_DestroyFontUploadObjects@@YAXXZ DD imagerel $LN6
	DD	imagerel $LN6+93
	DD	imagerel $unwind$?ImGui_ImplVulkan_DestroyFontUploadObjects@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_SetMinImageCount@@YAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+113
	DD	imagerel $unwind$?ImGui_ImplVulkan_SetMinImageCount@@YAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_CreateOrResizeWindow@@YAXPEAUVkInstance_T@@PEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@HHI@Z DD imagerel $LN4
	DD	imagerel $LN4+128
	DD	imagerel $unwind$?ImGui_ImplVulkanH_CreateOrResizeWindow@@YAXPEAUVkInstance_T@@PEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@HHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z DD imagerel $LN17
	DD	imagerel $LN17+54
	DD	imagerel $unwind$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z DD imagerel $LN17+54
	DD	imagerel $LN17+263
	DD	imagerel $chain$1$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z DD imagerel $LN17+263
	DD	imagerel $LN17+417
	DD	imagerel $chain$2$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z DD imagerel $LN88
	DD	imagerel $LN88+503
	DD	imagerel $unwind$?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z DD imagerel $LN51
	DD	imagerel $LN51+332
	DD	imagerel $unwind$?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_GetMinImageCountFromPresentMode@@YAHW4VkPresentModeKHR@@@Z DD imagerel $LN11
	DD	imagerel $LN11+77
	DD	imagerel $unwind$?ImGui_ImplVulkanH_GetMinImageCountFromPresentMode@@YAHW4VkPresentModeKHR@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_CreateDeviceObjects@@YA_NXZ DD imagerel $LN32
	DD	imagerel $LN32+1774
	DD	imagerel $unwind$?ImGui_ImplVulkan_CreateDeviceObjects@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_DestroyDeviceObjects@@YAXXZ DD imagerel $LN15
	DD	imagerel $LN15+382
	DD	imagerel $unwind$?ImGui_ImplVulkan_DestroyDeviceObjects@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_DestroyFrame@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Frame@@PEBUVkAllocationCallbacks@@@Z DD imagerel $LN4
	DD	imagerel $LN4+136
	DD	imagerel $unwind$?ImGui_ImplVulkanH_DestroyFrame@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Frame@@PEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_DestroyFrameSemaphores@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameSemaphores@@PEBUVkAllocationCallbacks@@@Z DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$?ImGui_ImplVulkanH_DestroyFrameSemaphores@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameSemaphores@@PEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_DestroyFrameRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@PEBUVkAllocationCallbacks@@@Z DD imagerel $LN9
	DD	imagerel $LN9+148
	DD	imagerel $unwind$?ImGui_ImplVulkanH_DestroyFrameRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@PEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z DD imagerel $LN25
	DD	imagerel $LN25+44
	DD	imagerel $unwind$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z DD imagerel $LN25+44
	DD	imagerel $LN25+177
	DD	imagerel $chain$0$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z DD imagerel $LN25+177
	DD	imagerel $LN25+213
	DD	imagerel $chain$1$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_CreateWindowSwapChain@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@HHI@Z DD imagerel $LN93
	DD	imagerel $LN93+1653
	DD	imagerel $unwind$?ImGui_ImplVulkanH_CreateWindowSwapChain@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@HHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z DD imagerel $LN28
	DD	imagerel $LN28+77
	DD	imagerel $unwind$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z DD imagerel $LN28+77
	DD	imagerel $LN28+476
	DD	imagerel $chain$2$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z DD imagerel $LN28+476
	DD	imagerel $LN28+492
	DD	imagerel $chain$3$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_MemoryType@@YAIII@Z DD imagerel ?ImGui_ImplVulkan_MemoryType@@YAIII@Z
	DD	imagerel ?ImGui_ImplVulkan_MemoryType@@YAIII@Z+126
	DD	imagerel $unwind$?ImGui_ImplVulkan_MemoryType@@YAIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z DD imagerel ?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z
	DD	imagerel ?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z+429
	DD	imagerel $unwind$?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z DD imagerel ?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z
	DD	imagerel ?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z+461
	DD	imagerel $unwind$?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UVkSurfaceFormatKHR@@@@QEAAAEAUVkSurfaceFormatKHR@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@UVkSurfaceFormatKHR@@@@QEAAAEAUVkSurfaceFormatKHR@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+145
	DD	imagerel $chain$1$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD imagerel $LN16+145
	DD	imagerel $LN16+163
	DD	imagerel $chain$3$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD imagerel $LN16+163
	DD	imagerel $LN16+176
	DD	imagerel $chain$4$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@W4VkPresentModeKHR@@@@QEAAAEAW4VkPresentModeKHR@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??A?$ImVector@W4VkPresentModeKHR@@@@QEAAAEAW4VkPresentModeKHR@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD imagerel $LN16+26
	DD	imagerel $LN16+145
	DD	imagerel $chain$1$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD imagerel $LN16+145
	DD	imagerel $LN16+163
	DD	imagerel $chain$3$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD imagerel $LN16+163
	DD	imagerel $LN16+176
	DD	imagerel $chain$4$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD imagerel $LN6+24
	DD	imagerel $LN6+86
	DD	imagerel $chain$0$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD imagerel $LN6+86
	DD	imagerel $LN6+97
	DD	imagerel $chain$1$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT __xmm@00000007000000000000000700000006
CONST	SEGMENT
__xmm@00000007000000000000000700000006 DB 06H, 00H, 00H, 00H, 07H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 07H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000010000000200000000
CONST	SEGMENT
__xmm@00000000000000010000000200000000 DB 00H, 00H, 00H, 00H, 02H, 00H, 00H
	DB	00H, 01H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@c47a0000
CONST	SEGMENT
__real@c47a0000 DD 0c47a0000r			; -1000
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
CONST	SEGMENT
??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@ DB 'i', 00H
	DB	' ', 00H, '<', 00H, ' ', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@MDIHBCFE@?$AAw?$AAd?$AA?9?$AA?$DO?$AAF?$AAr?$AAa?$AAm?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CA@MDIHBCFE@?$AAw?$AAd?$AA?9?$AA?$DO?$AAF?$AAr?$AAa?$AAm?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'w'
	DB	00H, 'd', 00H, '-', 00H, '>', 00H, 'F', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@GFBEKNKP@?$AAw?$AAd?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5@
CONST	SEGMENT
??_C@_1IK@GFBEKNKP@?$AAw?$AAd?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5@ DB 'w'
	DB	00H, 'd', 00H, '-', 00H, '>', 00H, 'I', 00H, 'm', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, '(', 00H, '(', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, ')', 00H, '(', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'b', 00H, 'a', 00H
	DB	'c', 00H, 'k', 00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 's', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H
	DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '('
	DB	00H, '*', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'b', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 's', 00H, ')'
	DB	00H, ')', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@CBIJBCDF@?$AAw?$AAd?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5@
CONST	SEGMENT
??_C@_1EE@CBIJBCDF@?$AAw?$AAd?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5@ DB 'w'
	DB	00H, 'd', 00H, '-', 00H, '>', 00H, 'I', 00H, 'm', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'm', 00H, 'i', 00H
	DB	'n', 00H, '_', 00H, 'i', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, '_', 00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@MIABCDLK@?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA_?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe@
CONST	SEGMENT
??_C@_1EI@MIABCDLK@?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA_?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe@ DB 'p'
	DB	00H, 'h', 00H, 'y', 00H, 's', 00H, 'i', 00H, 'c', 00H, 'a', 00H
	DB	'l', 00H, '_', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c'
	DB	00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'v'
	DB	00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@BJBCIAAE@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAm?$AAo?$AAd?$AAe?$AAs?$AA_?$AAc@
CONST	SEGMENT
??_C@_1DA@BJBCIAAE@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAm?$AAo?$AAd?$AAe?$AAs?$AA_?$AAc@ DB 'r'
	DB	00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	'_', 00H, 'm', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 's', 00H, '_'
	DB	00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@BMDGPKIK@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAm?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$CB@
CONST	SEGMENT
??_C@_1CG@BMDGPKIK@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAm?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$CB@ DB 'r'
	DB	00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	'_', 00H, 'm', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 's', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@PDNAAGKG@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAs@
CONST	SEGMENT
??_C@_1DE@PDNAAGKG@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAs@ DB 'r'
	DB	00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	'_', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't'
	DB	00H, 's', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@KGIELIHG@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAs@
CONST	SEGMENT
??_C@_1CK@KGIELIHG@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAs@ DB 'r'
	DB	00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	'_', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't'
	DB	00H, 's', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@CFPAFBMF@?$AAm?$AAi?$AAn?$AA_?$AAi?$AAm?$AAa?$AAg?$AAe?$AA_?$AAc?$AAo?$AAu?$AAn?$AAt@
CONST	SEGMENT
??_C@_1CK@CFPAFBMF@?$AAm?$AAi?$AAn?$AA_?$AAi?$AAm?$AAa?$AAg?$AAe?$AA_?$AAc?$AAo?$AAu?$AAn?$AAt@ DB 'm'
	DB	00H, 'i', 00H, 'n', 00H, '_', 00H, 'i', 00H, 'm', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n'
	DB	00H, 't', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '2', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@GENAFDPP@?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AA_?$AAp?$AAa?$AAs?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CC@GENAFDPP@?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AA_?$AAp?$AAa?$AAs?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ DB 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '_', 00H
	DB	'p', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@GGGJGPKH@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn@
CONST	SEGMENT
??_C@_1FA@GGGJGPKH@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn@ DB 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'I', 00H
	DB	'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'M'
	DB	00H, 'i', 00H, 'n', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H
	DB	'e', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@FFONJKND@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAM?$AAi?$AAn?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC@
CONST	SEGMENT
??_C@_1DC@FFONJKND@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAM?$AAi?$AAn?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC@ DB 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'M', 00H
	DB	'i', 00H, 'n', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@PIBAMHLP@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo@
CONST	SEGMENT
??_C@_1DE@PIBAMHLP@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo@ DB 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'D', 00H
	DB	'e', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@OENKIMLO@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CC@OENKIMLO@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ DB 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'Q', 00H
	DB	'u', 00H, 'e', 00H, 'u', 00H, 'e', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@PJDNKGKP@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CB?$AA?$DN@
CONST	SEGMENT
??_C@_1CE@PJDNKGKP@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CB?$AA?$DN@ DB 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@KKOBOIGD@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AAD@
CONST	SEGMENT
??_C@_1DE@KKOBOIGD@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AAD@ DB 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'P', 00H
	DB	'h', 00H, 'y', 00H, 's', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 'l'
	DB	00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@BJEDLNB@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1CI@BJEDLNB@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?5@ DB 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, '-', 00H, '>', 00H, 'I', 00H
	DB	'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e'
	DB	00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CDBPHIBM@imgui_impl_vulkan@
CONST	SEGMENT
??_C@_0BC@CDBPHIBM@imgui_impl_vulkan@ DB 'imgui_impl_vulkan', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04GHJNJNPO@main@
CONST	SEGMENT
??_C@_04GHJNJNPO@main@ DB 'main', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@JLBGOBMP@?$AAw?$AAr?$AAb?$AA?9?$AA?$DO?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAv@
CONST	SEGMENT
??_C@_1DI@JLBGOBMP@?$AAw?$AAr?$AAb?$AA?9?$AA?$DO?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAv@ DB 'w'
	DB	00H, 'r', 00H, 'b', 00H, '-', 00H, '>', 00H, 'C', 00H, 'o', 00H
	DB	'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'v', 00H, '-', 00H, '>', 00H, 'I', 00H, 'm', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
CONST	SEGMENT
??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ DB 'E'
	DB	00H, ':', 00H, '/', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 's', 00H
	DB	'/', 00H, 'o', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'n', 00H, 'u'
	DB	00H, 't', 00H, '/', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '/', 00H, 'e', 00H, 'x', 00H, 'a', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'i', 00H, 'm', 00H
	DB	'g', 00H, 'u', 00H, 'i', 00H, '_', 00H, 'i', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, '_', 00H, 'v', 00H, 'u', 00H, 'l', 00H, 'k', 00H
	DB	'a', 00H, 'n', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
_DATA	SEGMENT
?g_BufferMemoryAlignment@@3_KA DQ 0000000000000100H	; g_BufferMemoryAlignment
	ORG $+8
?__glsl_shader_vert_spv@@3PAIA DD 07230203H		; __glsl_shader_vert_spv
	DD	010000H
	DD	080001H
	DD	02eH
	DD	00H
	DD	020011H
	DD	01H
	DD	06000bH
	DD	01H
	DD	04c534c47H
	DD	06474732eH
	DD	03035342eH
	DD	00H
	DD	03000eH
	DD	00H
	DD	01H
	DD	0a000fH
	DD	00H
	DD	04H
	DD	06e69616dH
	DD	00H
	DD	0bH
	DD	0fH
	DD	015H
	DD	01bH
	DD	01cH
	DD	030003H
	DD	02H
	DD	01c2H
	DD	040005H
	DD	04H
	DD	06e69616dH
	DD	00H
	DD	030005H
	DD	09H
	DD	00H
	DD	050006H
	DD	09H
	DD	00H
	DD	06f6c6f43H
	DD	072H
	DD	040006H
	DD	09H
	DD	01H
	DD	05655H
	DD	030005H
	DD	0bH
	DD	074754fH
	DD	040005H
	DD	0fH
	DD	06c6f4361H
	DD	0726fH
	DD	030005H
	DD	015H
	DD	0565561H
	DD	060005H
	DD	019H
	DD	0505f6c67H
	DD	065567265H
	DD	078657472H
	DD	00H
	DD	060006H
	DD	019H
	DD	00H
	DD	0505f6c67H
	DD	07469736fH
	DD	06e6f69H
	DD	030005H
	DD	01bH
	DD	00H
	DD	040005H
	DD	01cH
	DD	0736f5061H
	DD	00H
	DD	060005H
	DD	01eH
	DD	073755075H
	DD	06e6f4368H
	DD	06e617473H
	DD	074H
	DD	050006H
	DD	01eH
	DD	00H
	DD	061635375H
	DD	0656cH
	DD	060006H
	DD	01eH
	DD	01H
	DD	061725475H
	DD	0616c736eH
	DD	06574H
	DD	030005H
	DD	020H
	DD	06370H
	DD	040047H
	DD	0bH
	DD	01eH
	DD	00H
	DD	040047H
	DD	0fH
	DD	01eH
	DD	02H
	DD	040047H
	DD	015H
	DD	01eH
	DD	01H
	DD	050048H
	DD	019H
	DD	00H
	DD	0bH
	DD	00H
	DD	030047H
	DD	019H
	DD	02H
	DD	040047H
	DD	01cH
	DD	01eH
	DD	00H
	DD	050048H
	DD	01eH
	DD	00H
	DD	023H
	DD	00H
	DD	050048H
	DD	01eH
	DD	01H
	DD	023H
	DD	08H
	DD	030047H
	DD	01eH
	DD	02H
	DD	020013H
	DD	02H
	DD	030021H
	DD	03H
	DD	02H
	DD	030016H
	DD	06H
	DD	020H
	DD	040017H
	DD	07H
	DD	06H
	DD	04H
	DD	040017H
	DD	08H
	DD	06H
	DD	02H
	DD	04001eH
	DD	09H
	DD	07H
	DD	08H
	DD	040020H
	DD	0aH
	DD	03H
	DD	09H
	DD	04003bH
	DD	0aH
	DD	0bH
	DD	03H
	DD	040015H
	DD	0cH
	DD	020H
	DD	01H
	DD	04002bH
	DD	0cH
	DD	0dH
	DD	00H
	DD	040020H
	DD	0eH
	DD	01H
	DD	07H
	DD	04003bH
	DD	0eH
	DD	0fH
	DD	01H
	DD	040020H
	DD	011H
	DD	03H
	DD	07H
	DD	04002bH
	DD	0cH
	DD	013H
	DD	01H
	DD	040020H
	DD	014H
	DD	01H
	DD	08H
	DD	04003bH
	DD	014H
	DD	015H
	DD	01H
	DD	040020H
	DD	017H
	DD	03H
	DD	08H
	DD	03001eH
	DD	019H
	DD	07H
	DD	040020H
	DD	01aH
	DD	03H
	DD	019H
	DD	04003bH
	DD	01aH
	DD	01bH
	DD	03H
	DD	04003bH
	DD	014H
	DD	01cH
	DD	01H
	DD	04001eH
	DD	01eH
	DD	08H
	DD	08H
	DD	040020H
	DD	01fH
	DD	09H
	DD	01eH
	DD	04003bH
	DD	01fH
	DD	020H
	DD	09H
	DD	040020H
	DD	021H
	DD	09H
	DD	08H
	DD	04002bH
	DD	06H
	DD	028H
	DD	00H
	DD	04002bH
	DD	06H
	DD	029H
	DD	03f800000H
	DD	050036H
	DD	02H
	DD	04H
	DD	00H
	DD	03H
	DD	0200f8H
	DD	05H
	DD	04003dH
	DD	07H
	DD	010H
	DD	0fH
	DD	050041H
	DD	011H
	DD	012H
	DD	0bH
	DD	0dH
	DD	03003eH
	DD	012H
	DD	010H
	DD	04003dH
	DD	08H
	DD	016H
	DD	015H
	DD	050041H
	DD	017H
	DD	018H
	DD	0bH
	DD	013H
	DD	03003eH
	DD	018H
	DD	016H
	DD	04003dH
	DD	08H
	DD	01dH
	DD	01cH
	DD	050041H
	DD	021H
	DD	022H
	DD	020H
	DD	0dH
	DD	04003dH
	DD	08H
	DD	023H
	DD	022H
	DD	050085H
	DD	08H
	DD	024H
	DD	01dH
	DD	023H
	DD	050041H
	DD	021H
	DD	025H
	DD	020H
	DD	013H
	DD	04003dH
	DD	08H
	DD	026H
	DD	025H
	DD	050081H
	DD	08H
	DD	027H
	DD	024H
	DD	026H
	DD	050051H
	DD	06H
	DD	02aH
	DD	027H
	DD	00H
	DD	050051H
	DD	06H
	DD	02bH
	DD	027H
	DD	01H
	DD	070050H
	DD	07H
	DD	02cH
	DD	02aH
	DD	02bH
	DD	028H
	DD	029H
	DD	050041H
	DD	011H
	DD	02dH
	DD	01bH
	DD	0dH
	DD	03003eH
	DD	02dH
	DD	02cH
	DD	0100fdH
	DD	010038H
?__glsl_shader_frag_spv@@3PAIA DD 07230203H		; __glsl_shader_frag_spv
	DD	010000H
	DD	080001H
	DD	01eH
	DD	00H
	DD	020011H
	DD	01H
	DD	06000bH
	DD	01H
	DD	04c534c47H
	DD	06474732eH
	DD	03035342eH
	DD	00H
	DD	03000eH
	DD	00H
	DD	01H
	DD	07000fH
	DD	04H
	DD	04H
	DD	06e69616dH
	DD	00H
	DD	09H
	DD	0dH
	DD	030010H
	DD	04H
	DD	07H
	DD	030003H
	DD	02H
	DD	01c2H
	DD	040005H
	DD	04H
	DD	06e69616dH
	DD	00H
	DD	040005H
	DD	09H
	DD	06c6f4366H
	DD	0726fH
	DD	030005H
	DD	0bH
	DD	00H
	DD	050006H
	DD	0bH
	DD	00H
	DD	06f6c6f43H
	DD	072H
	DD	040006H
	DD	0bH
	DD	01H
	DD	05655H
	DD	030005H
	DD	0dH
	DD	06e49H
	DD	050005H
	DD	016H
	DD	078655473H
	DD	065727574H
	DD	00H
	DD	040047H
	DD	09H
	DD	01eH
	DD	00H
	DD	040047H
	DD	0dH
	DD	01eH
	DD	00H
	DD	040047H
	DD	016H
	DD	022H
	DD	00H
	DD	040047H
	DD	016H
	DD	021H
	DD	00H
	DD	020013H
	DD	02H
	DD	030021H
	DD	03H
	DD	02H
	DD	030016H
	DD	06H
	DD	020H
	DD	040017H
	DD	07H
	DD	06H
	DD	04H
	DD	040020H
	DD	08H
	DD	03H
	DD	07H
	DD	04003bH
	DD	08H
	DD	09H
	DD	03H
	DD	040017H
	DD	0aH
	DD	06H
	DD	02H
	DD	04001eH
	DD	0bH
	DD	07H
	DD	0aH
	DD	040020H
	DD	0cH
	DD	01H
	DD	0bH
	DD	04003bH
	DD	0cH
	DD	0dH
	DD	01H
	DD	040015H
	DD	0eH
	DD	020H
	DD	01H
	DD	04002bH
	DD	0eH
	DD	0fH
	DD	00H
	DD	040020H
	DD	010H
	DD	01H
	DD	07H
	DD	090019H
	DD	013H
	DD	06H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	03001bH
	DD	014H
	DD	013H
	DD	040020H
	DD	015H
	DD	00H
	DD	014H
	DD	04003bH
	DD	015H
	DD	016H
	DD	00H
	DD	04002bH
	DD	0eH
	DD	018H
	DD	01H
	DD	040020H
	DD	019H
	DD	01H
	DD	0aH
	DD	050036H
	DD	02H
	DD	04H
	DD	00H
	DD	03H
	DD	0200f8H
	DD	05H
	DD	050041H
	DD	010H
	DD	011H
	DD	0dH
	DD	0fH
	DD	04003dH
	DD	07H
	DD	012H
	DD	011H
	DD	04003dH
	DD	014H
	DD	017H
	DD	016H
	DD	050041H
	DD	019H
	DD	01aH
	DD	0dH
	DD	018H
	DD	04003dH
	DD	0aH
	DD	01bH
	DD	01aH
	DD	050057H
	DD	07H
	DD	01cH
	DD	017H
	DD	01bH
	DD	050085H
	DD	07H
	DD	01dH
	DD	012H
	DD	01cH
	DD	03003eH
	DD	09H
	DD	01dH
	DD	0100fdH
	DD	010038H
_DATA	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
CONST	SEGMENT
??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@ DB 'E'
	DB	00H, ':', 00H, '/', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 's', 00H
	DB	'/', 00H, 'o', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'n', 00H, 'u'
	DB	00H, 't', 00H, '/', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '\', 00H, 'i', 00H, 'm', 00H, 'g', 00H, 'u', 00H, 'i'
	DB	00H, '.', 00H, 'h', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD 043021H
	DD	065430H
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@W4VkPresentModeKHR@@@@QEAAAEAW4VkPresentModeKHR@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN6
	DD	imagerel $LN6+24
	DD	imagerel $unwind$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD 020021H
	DD	076400H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD 043021H
	DD	065430H
	DD	076405H
	DD	imagerel $LN16
	DD	imagerel $LN16+26
	DD	imagerel $unwind$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UVkSurfaceFormatKHR@@@@QEAAAEAUVkSurfaceFormatKHR@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z DD 061b19H
	DD	012340cH
	DD	07008d20cH
	DD	050066007H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z DD 072019H
	DD	014010eH
	DD	07005e007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_MemoryType@@YAIII@Z DD 051f19H
	DD	04a340dH
	DD	048010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0230H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z DD 021H
	DD	imagerel $LN28
	DD	imagerel $LN28+77
	DD	imagerel $unwind$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z DD 062021H
	DD	01ae420H
	DD	0195410H
	DD	0183408H
	DD	imagerel $LN28
	DD	imagerel $LN28+77
	DD	imagerel $unwind$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z DD 071001H
	DD	0120110H
	DD	0d007f009H
	DD	07003c005H
	DD	06002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_CreateWindowSwapChain@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@HHI@Z DD 0a2d19H
	DD	035011cH
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck
	DD	0190H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z DD 021H
	DD	imagerel $LN25
	DD	imagerel $LN25+44
	DD	imagerel $unwind$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z DD 020521H
	DD	083405H
	DD	imagerel $LN25
	DD	imagerel $LN25+44
	DD	imagerel $unwind$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z DD 081301H
	DD	0a6413H
	DD	095413H
	DD	0f00f3213H
	DD	0700be00dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_DestroyFrameRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@PEBUVkAllocationCallbacks@@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_DestroyFrameSemaphores@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameSemaphores@@PEBUVkAllocationCallbacks@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_DestroyFrame@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Frame@@PEBUVkAllocationCallbacks@@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_DestroyDeviceObjects@@YAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_CreateDeviceObjects@@YA_NXZ DD 072b19H
	DD	07f741aH
	DD	07e341aH
	DD	07c011aH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	03d8H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_GetMinImageCountFromPresentMode@@YAHW4VkPresentModeKHR@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z DB 04H
	DB	0b5H, 02H
	DB	02H
	DB	01H, 02H
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ
	DB	040H
	DB	038H
	DB	046H
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z DB 028H
	DD	imagerel $stateUnwindMap$?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z
	DD	imagerel $ip2state$?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z DD 0a1611H
	DD	0d5416H
	DD	0c3416H
	DD	0f0125216H
	DD	0c00ee010H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z DB 04H
	DB	09dH, 02H
	DB	02H
	DB	015H, 04H
	DB	0aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z DB 0cH
	DB	0aH
	DD	imagerel ??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ
	DB	040H
	DB	038H
	DB	040H
	DB	048H
	DB	056H
	DD	imagerel __std_terminate
	DB	078H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z
	DD	imagerel $ip2state$?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z DD 0c1c11H
	DD	0e641cH
	DD	0d541cH
	DD	0c341cH
	DD	0f018521cH
	DD	0d014e016H
	DD	07010c012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z DD 021H
	DD	imagerel $LN17
	DD	imagerel $LN17+54
	DD	imagerel $unwind$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z DD 041021H
	DD	017e410H
	DD	0166408H
	DD	imagerel $LN17
	DD	imagerel $LN17+54
	DD	imagerel $unwind$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z DD 081401H
	DD	0183414H
	DD	0f00df214H
	DD	0c009d00bH
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkanH_CreateOrResizeWindow@@YAXPEAUVkInstance_T@@PEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@HHI@Z DD 081401H
	DD	0c6414H
	DD	0b5414H
	DD	0a3414H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_SetMinImageCount@@YAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_DestroyFontUploadObjects@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_CreateFontsTexture@@YA_NPEAUVkCommandBuffer_T@@@Z DD 092819H
	DD	036641aH
	DD	035341aH
	DD	030011aH
	DD	0700ce00eH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0170H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD 021H
	DD	imagerel $LN67
	DD	imagerel $LN67+97
	DD	imagerel $unwind$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD 021H
	DD	imagerel $LN67+97
	DD	imagerel $LN67+876
	DD	imagerel $chain$6$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD 020821H
	DD	0116808H
	DD	imagerel $LN67+97
	DD	imagerel $LN67+876
	DD	imagerel $chain$6$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD 0eab21H
	DD	02574abH
	DD	0da828H
	DD	0e9820H
	DD	0f881bH
	DD	0107816H
	DD	024c411H
	DD	02e3404H
	DD	imagerel $LN67
	DD	imagerel $LN67+97
	DD	imagerel $unwind$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z DD 072419H
	DD	0260116H
	DD	0e009f00bH
	DD	06005d007H
	DD	05004H
	DD	imagerel __GSHandlerCheck
	DD	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_Shutdown@@YAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplVulkan_Init@@YA_NPEAUImGui_ImplVulkan_InitInfo@@PEAUVkRenderPass_T@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z PROC	; ImVector<enum VkPresentModeKHR>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z ENDP	; ImVector<enum VkPresentModeKHR>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z PROC	; ImVector<enum VkPresentModeKHR>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rcx, esi
	shl	rcx, 2
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 2
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@W4VkPresentModeKHR@@@@QEAAXH@Z ENDP	; ImVector<enum VkPresentModeKHR>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@W4VkPresentModeKHR@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@W4VkPresentModeKHR@@@@QEBAHH@Z PROC ; ImVector<enum VkPresentModeKHR>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@W4VkPresentModeKHR@@@@QEBAHH@Z ENDP ; ImVector<enum VkPresentModeKHR>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@W4VkPresentModeKHR@@@@QEAAAEAW4VkPresentModeKHR@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@W4VkPresentModeKHR@@@@QEAAAEAW4VkPresentModeKHR@@H@Z PROC ; ImVector<enum VkPresentModeKHR>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rax, QWORD PTR [rax+rbx*4]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@W4VkPresentModeKHR@@@@QEAAAEAW4VkPresentModeKHR@@H@Z ENDP ; ImVector<enum VkPresentModeKHR>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ PROC	; ImVector<enum VkPresentModeKHR>::~ImVector<enum VkPresentModeKHR>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ ENDP	; ImVector<enum VkPresentModeKHR>::~ImVector<enum VkPresentModeKHR>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ PROC	; ImVector<enum VkPresentModeKHR>::ImVector<enum VkPresentModeKHR>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ ENDP	; ImVector<enum VkPresentModeKHR>::ImVector<enum VkPresentModeKHR>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_capacity$ = 56
?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z PROC ; ImVector<VkSurfaceFormatKHR>::reserve, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1344
$LN6:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, edx
	mov	rbx, rcx
	cmp	edi, DWORD PTR [rcx+4]
	jle	SHORT $LN1@reserve
	mov	rcx, rdi
	mov	QWORD PTR [rsp+48], rsi
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rsi, rax
	test	rdx, rdx
	je	SHORT $LN3@reserve
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	QWORD PTR [rbx+8], rsi
	mov	rsi, QWORD PTR [rsp+48]
	mov	DWORD PTR [rbx+4], edi
$LN1@reserve:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z ENDP ; ImVector<VkSurfaceFormatKHR>::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
new_size$ = 56
?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z PROC	; ImVector<VkSurfaceFormatKHR>::resize, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
$LN16:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	edi, edx
	mov	ecx, DWORD PTR [rcx+4]
	cmp	edx, ecx
	jle	$LN12@resize
; Line 1340
	mov	QWORD PTR [rsp+56], rsi
	test	ecx, ecx
	je	SHORT $LN6@resize
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ecx
	jmp	SHORT $LN7@resize
$LN6@resize:
	mov	eax, 8
$LN7@resize:
	cmp	eax, edi
	mov	esi, edi
	cmovg	esi, eax
; Line 1344
	cmp	esi, ecx
	jle	SHORT $LN13@resize
	movsxd	rcx, esi
	shl	rcx, 3
	mov	QWORD PTR [rsp+48], rbp
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, rax
	test	rdx, rdx
	je	SHORT $LN10@resize
	movsxd	r8, DWORD PTR [rbx]
	mov	rcx, rax
	shl	r8, 3
	call	memcpy
	mov	rcx, QWORD PTR [rbx+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN10@resize:
	mov	QWORD PTR [rbx+8], rbp
; Line 1341
	mov	rbp, QWORD PTR [rsp+48]
; Line 1344
	mov	DWORD PTR [rbx+4], esi
	mov	rsi, QWORD PTR [rsp+56]
; Line 1341
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@resize:
	mov	rsi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@resize:
	mov	DWORD PTR [rbx], edi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$ImVector@UVkSurfaceFormatKHR@@@@QEAAXH@Z ENDP	; ImVector<VkSurfaceFormatKHR>::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_grow_capacity@?$ImVector@UVkSurfaceFormatKHR@@@@QEBAHH@Z
_TEXT	SEGMENT
this$ = 8
sz$ = 16
?_grow_capacity@?$ImVector@UVkSurfaceFormatKHR@@@@QEBAHH@Z PROC ; ImVector<VkSurfaceFormatKHR>::_grow_capacity, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1340
	mov	r9d, DWORD PTR [rcx+4]
	mov	r8d, edx
	test	r9d, r9d
	je	SHORT $LN3@grow_capac
	mov	eax, r9d
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, r9d
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
$LN3@grow_capac:
	mov	eax, 8
	cmp	eax, r8d
	cmovg	r8d, eax
	mov	eax, r8d
	ret	0
?_grow_capacity@?$ImVector@UVkSurfaceFormatKHR@@@@QEBAHH@Z ENDP ; ImVector<VkSurfaceFormatKHR>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UVkSurfaceFormatKHR@@@@QEAAAEAUVkSurfaceFormatKHR@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UVkSurfaceFormatKHR@@@@QEAAAEAUVkSurfaceFormatKHR@@H@Z PROC ; ImVector<VkSurfaceFormatKHR>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	mov	rax, QWORD PTR [rdi+8]
	lea	rax, QWORD PTR [rax+rbx*8]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UVkSurfaceFormatKHR@@@@QEAAAEAUVkSurfaceFormatKHR@@H@Z ENDP ; ImVector<VkSurfaceFormatKHR>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ PROC	; ImVector<VkSurfaceFormatKHR>::~ImVector<VkSurfaceFormatKHR>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
$LN6:
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN2@ImVector
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	add	rsp, 40					; 00000028H
	ret	0
??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ ENDP	; ImVector<VkSurfaceFormatKHR>::~ImVector<VkSurfaceFormatKHR>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ PROC	; ImVector<VkSurfaceFormatKHR>::ImVector<VkSurfaceFormatKHR>, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ ENDP	; ImVector<VkSurfaceFormatKHR>::ImVector<VkSurfaceFormatKHR>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z
_TEXT	SEGMENT
translate$1 = 64
vertex_offset$2 = 64
desc_set$3 = 64
scale$4 = 72
vertex_buffers$5 = 72
viewport$6 = 80
__$ArrayPad$ = 104
draw_data$ = 144
command_buffer$ = 152
rb$ = 160
fb_width$ = 168
fb_height$ = 176
?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z PROC ; ImGui_ImplVulkan_SetupRenderState, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 270
	mov	QWORD PTR [rsp+8], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rdx
	mov	rdi, r8
; Line 273
	mov	r8, QWORD PTR ?g_Pipeline@@3PEAUVkPipeline_T@@EA
	mov	rsi, rcx
	mov	rcx, rbx
	xor	edx, edx
	mov	ebp, r9d
	call	vkCmdBindPipeline
; Line 274
	mov	rax, QWORD PTR ?g_DescriptorSet@@3PEAUVkDescriptorSet_T@@EA
; Line 275
	xor	r9d, r9d
	mov	r8, QWORD PTR ?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA
	xor	edx, edx
	mov	QWORD PTR [rsp+56], 0
	mov	rcx, rbx
	mov	QWORD PTR desc_set$3[rsp], rax
	lea	rax, QWORD PTR desc_set$3[rsp]
	mov	DWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 1
	call	vkCmdBindDescriptorSets
; Line 279
	cmp	DWORD PTR [rsi+24], 0
	jle	SHORT $LN2@ImGui_Impl
; Line 281
	mov	rax, QWORD PTR [rdi+32]
; Line 283
	lea	r9, QWORD PTR vertex_buffers$5[rsp]
	xor	edx, edx
	mov	QWORD PTR vertex_buffers$5[rsp], rax
	lea	rax, QWORD PTR vertex_offset$2[rsp]
	mov	QWORD PTR vertex_offset$2[rsp], 0
	mov	rcx, rbx
	mov	QWORD PTR [rsp+32], rax
	lea	r8d, QWORD PTR [rdx+1]
	call	vkCmdBindVertexBuffers
; Line 284
	mov	rdx, QWORD PTR [rdi+40]
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rcx, rbx
	call	vkCmdBindIndexBuffer
$LN2@ImGui_Impl:
; Line 296
	movd	xmm0, DWORD PTR fb_height$[rsp]
	lea	r9, QWORD PTR viewport$6[rsp]
	movd	xmm1, ebp
	xor	edx, edx
	cvtdq2ps xmm1, xmm1
	mov	rcx, rbx
	mov	QWORD PTR viewport$6[rsp], 0
	mov	DWORD PTR viewport$6[rsp+16], 0
	lea	r8d, QWORD PTR [rdx+1]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR viewport$6[rsp+8], xmm1
	movss	xmm1, DWORD PTR __real@3f800000
	movss	DWORD PTR viewport$6[rsp+20], xmm1
	movss	DWORD PTR viewport$6[rsp+12], xmm0
	call	vkCmdSetViewport
; Line 303
	movss	xmm3, DWORD PTR __real@40000000
; Line 308
	lea	rax, QWORD PTR scale$4[rsp]
	movss	xmm1, DWORD PTR __real@bf800000
	movaps	xmm2, xmm3
	divss	xmm2, DWORD PTR [rsi+36]
	mov	rdx, QWORD PTR ?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA
	xor	r9d, r9d
	mov	QWORD PTR [rsp+40], rax
	mov	rcx, rbx
	mov	DWORD PTR [rsp+32], 8
	lea	r8d, QWORD PTR [r9+1]
	divss	xmm3, DWORD PTR [rsi+40]
	movaps	xmm0, xmm1
	movss	DWORD PTR scale$4[rsp], xmm2
	mulss	xmm2, DWORD PTR [rsi+28]
	movss	DWORD PTR scale$4[rsp+4], xmm3
	mulss	xmm3, DWORD PTR [rsi+32]
	subss	xmm0, xmm2
	subss	xmm1, xmm3
	movss	DWORD PTR translate$1[rsp], xmm0
	movss	DWORD PTR translate$1[rsp+4], xmm1
	call	vkCmdPushConstants
; Line 309
	mov	rdx, QWORD PTR ?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA
	lea	rax, QWORD PTR translate$1[rsp]
	mov	r9d, 8
	mov	QWORD PTR [rsp+40], rax
	mov	rcx, rbx
	mov	DWORD PTR [rsp+32], 8
	lea	r8d, QWORD PTR [r9-7]
	call	vkCmdPushConstants
; Line 311
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+144]
	add	rsp, 112				; 00000070H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z ENDP ; ImGui_ImplVulkan_SetupRenderState
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z
_TEXT	SEGMENT
alloc_info$ = 32
buffer_info$ = 64
req$ = 120
__$ArrayPad$ = 144
buffer$ = 208
buffer_memory$ = 216
p_buffer_size$ = 224
new_size$ = 232
usage$ = 240
?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z PROC ; CreateOrResizeBuffer, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 237
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 160				; 000000a0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, rdx
	mov	rbx, r9
; Line 240
	mov	rdx, QWORD PTR [rcx]
	mov	rdi, r8
	mov	r14, rcx
	test	rdx, rdx
	je	SHORT $LN2@CreateOrRe
; Line 241
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyBuffer
$LN2@CreateOrRe:
; Line 242
	mov	rdx, QWORD PTR [rsi]
	test	rdx, rdx
	je	SHORT $LN3@CreateOrRe
; Line 243
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkFreeMemory
$LN3@CreateOrRe:
; Line 251
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	rax, QWORD PTR [rbx-1]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	xor	edx, edx
	div	QWORD PTR ?g_BufferMemoryAlignment@@3_KA
	xorps	xmm0, xmm0
	mov	DWORD PTR buffer_info$[rsp], 12
	inc	rax
	lea	rdx, QWORD PTR buffer_info$[rsp]
	imul	rax, QWORD PTR ?g_BufferMemoryAlignment@@3_KA
	movdqu	XMMWORD PTR buffer_info$[rsp+4], xmm0
	movdqu	XMMWORD PTR buffer_info$[rsp+40], xmm0
	xor	ebp, ebp
	mov	r9, r14
	mov	QWORD PTR buffer_info$[rsp+24], rax
	mov	eax, DWORD PTR usage$[rsp]
	mov	DWORD PTR buffer_info$[rsp+32], eax
	mov	DWORD PTR buffer_info$[rsp+20], ebp
	mov	DWORD PTR buffer_info$[rsp+36], ebp
	call	vkCreateBuffer
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN6@CreateOrRe
; Line 233
	mov	ecx, eax
	call	rdx
$LN6@CreateOrRe:
; Line 255
	mov	rdx, QWORD PTR [r14]
	lea	r8, QWORD PTR req$[rsp]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkGetBufferMemoryRequirements
; Line 256
	mov	rcx, QWORD PTR req$[rsp+8]
	cmp	QWORD PTR ?g_BufferMemoryAlignment@@3_KA, rcx
; Line 259
	mov	rax, QWORD PTR req$[rsp]
	cmova	rcx, QWORD PTR ?g_BufferMemoryAlignment@@3_KA
; Line 260
	mov	edx, DWORD PTR req$[rsp+16]
	mov	QWORD PTR ?g_BufferMemoryAlignment@@3_KA, rcx
	mov	ecx, 2
	mov	QWORD PTR alloc_info$[rsp+4], rbp
	mov	DWORD PTR alloc_info$[rsp+12], ebp
	mov	DWORD PTR alloc_info$[rsp+28], ebp
	mov	DWORD PTR alloc_info$[rsp], 5
	mov	QWORD PTR alloc_info$[rsp+16], rax
	call	?ImGui_ImplVulkan_MemoryType@@YAIII@Z	; ImGui_ImplVulkan_MemoryType
; Line 261
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	rdx, QWORD PTR alloc_info$[rsp]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	mov	r9, rsi
	mov	DWORD PTR alloc_info$[rsp+24], eax
	call	vkAllocateMemory
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN9@CreateOrRe
; Line 233
	mov	ecx, eax
	call	rdx
$LN9@CreateOrRe:
; Line 264
	mov	r8, QWORD PTR [rsi]
	xor	r9d, r9d
	mov	rdx, QWORD PTR [r14]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkBindBufferMemory
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN14@CreateOrRe
; Line 233
	mov	ecx, eax
	call	rdx
$LN14@CreateOrRe:
; Line 267
	mov	QWORD PTR [rdi], rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z ENDP ; CreateOrResizeBuffer
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?check_vk_result@@YAXW4VkResult@@@Z
_TEXT	SEGMENT
err$ = 8
?check_vk_result@@YAXW4VkResult@@@Z PROC		; check_vk_result, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 232
	mov	rax, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rax, rax
	je	SHORT $LN2@check_vk_r
; Line 233
	rex_jmp	rax
$LN2@check_vk_r:
; Line 234
	ret	0
?check_vk_result@@YAXW4VkResult@@@Z ENDP		; check_vk_result
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_MemoryType@@YAIII@Z
_TEXT	SEGMENT
prop$ = 32
__$ArrayPad$ = 560
properties$ = 592
type_bits$ = 600
?ImGui_ImplVulkan_MemoryType@@YAIII@Z PROC		; ImGui_ImplVulkan_MemoryType, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 219
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 576				; 00000240H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	edi, edx
	mov	ebx, ecx
; Line 222
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+8
	lea	rdx, QWORD PTR prop$[rsp]
	call	vkGetPhysicalDeviceMemoryProperties
; Line 223
	mov	ecx, DWORD PTR prop$[rsp]
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN12@ImGui_Impl
	npad	2
$LL4@ImGui_Impl:
; Line 224
	mov	r9d, DWORD PTR prop$[rsp+rax*8+4]
	and	r9d, ebx
	cmp	r9d, ebx
	jne	SHORT $LN2@ImGui_Impl
	bt	edi, eax
	jb	SHORT $LN1@ImGui_Impl
$LN2@ImGui_Impl:
; Line 223
	inc	eax
	cmp	eax, ecx
	jb	SHORT $LL4@ImGui_Impl
$LN12@ImGui_Impl:
; Line 226
	mov	eax, -1					; ffffffffH
$LN1@ImGui_Impl:
; Line 227
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+592]
	add	rsp, 576				; 00000240H
	pop	rdi
	ret	0
?ImGui_ImplVulkan_MemoryType@@YAIII@Z ENDP		; ImGui_ImplVulkan_MemoryType
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z
_TEXT	SEGMENT
info$1 = 32
info$2 = 56
info$3 = 80
info$4 = 104
physical_device$ = 192
device$ = 200
wd$ = 208
queue_family$ = 216
allocator$ = 224
?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z PROC ; ImGui_ImplVulkanH_CreateWindowCommandBuffers, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 939
$LN28:
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r15
	sub	rsp, 144				; 00000090H
	mov	r12d, r9d
	mov	r15, r8
	mov	rsi, rdx
; Line 940
	test	rcx, rcx
	je	SHORT $LN6@ImGui_Impl
	test	rdx, rdx
	jne	SHORT $LN7@ImGui_Impl
$LN6@ImGui_Impl:
	mov	r8d, 940				; 000003acH
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1EI@MIABCDLK@?$AAp?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA_?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe@
	call	QWORD PTR __imp__wassert
$LN7@ImGui_Impl:
; Line 946
	xor	r13d, r13d
	mov	edi, r13d
	cmp	DWORD PTR [r15+72], r13d
	jbe	$LN3@ImGui_Impl
	mov	QWORD PTR [rsp+192], rbx
	mov	QWORD PTR [rsp+200], rbp
	mov	rbp, QWORD PTR allocator$[rsp]
	mov	QWORD PTR [rsp+208], r14
	npad	3
$LL4@ImGui_Impl:
; Line 948
	mov	r14d, edi
; Line 955
	lea	rdx, QWORD PTR info$1[rsp]
	mov	r8, rbp
	mov	QWORD PTR info$1[rsp+4], r13
	mov	rcx, rsi
	mov	DWORD PTR info$1[rsp+12], r13d
	mov	DWORD PTR info$1[rsp], 39		; 00000027H
	lea	rbx, QWORD PTR [r14+r14*2]
	mov	DWORD PTR info$1[rsp+16], 2
	shl	rbx, 4
	add	rbx, QWORD PTR [r15+80]
	shl	r14, 4
	mov	r9, rbx
	add	r14, QWORD PTR [r15+88]
	mov	DWORD PTR info$1[rsp+20], r12d
	call	vkCreateCommandPool
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN9@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN9@ImGui_Impl:
; Line 961
	mov	rax, QWORD PTR [rbx]
; Line 964
	lea	r8, QWORD PTR [rbx+8]
	lea	rdx, QWORD PTR info$4[rsp]
	mov	QWORD PTR info$4[rsp+16], rax
	mov	rcx, rsi
	mov	QWORD PTR info$4[rsp+4], r13
	mov	DWORD PTR info$4[rsp+12], r13d
	mov	DWORD PTR info$4[rsp], 40		; 00000028H
	mov	DWORD PTR info$4[rsp+24], r13d
	mov	DWORD PTR info$4[rsp+28], 1
	call	vkAllocateCommandBuffers
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN12@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN12@ImGui_Impl:
	xorps	xmm0, xmm0
; Line 971
	lea	r9, QWORD PTR [rbx+16]
	xor	eax, eax
	lea	rdx, QWORD PTR info$2[rsp]
	movups	XMMWORD PTR info$2[rsp], xmm0
	mov	QWORD PTR info$2[rsp+16], rax
	mov	r8, rbp
	mov	rcx, rsi
	mov	DWORD PTR info$2[rsp], 8
	mov	DWORD PTR info$2[rsp+16], 1
	call	vkCreateFence
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN15@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN15@ImGui_Impl:
	xorps	xmm0, xmm0
; Line 977
	lea	rdx, QWORD PTR info$3[rsp]
	xor	eax, eax
	mov	r9, r14
	movups	XMMWORD PTR info$3[rsp], xmm0
	mov	r8, rbp
	mov	DWORD PTR info$3[rsp], 9
	mov	rcx, rsi
	mov	QWORD PTR info$3[rsp+16], rax
	call	vkCreateSemaphore
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN18@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN18@ImGui_Impl:
; Line 979
	lea	r9, QWORD PTR [r14+8]
	mov	r8, rbp
	lea	rdx, QWORD PTR info$3[rsp]
	mov	rcx, rsi
	call	vkCreateSemaphore
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN2@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN2@ImGui_Impl:
; Line 946
	inc	edi
	cmp	edi, DWORD PTR [r15+72]
	jb	$LL4@ImGui_Impl
	mov	r14, QWORD PTR [rsp+208]
	mov	rbp, QWORD PTR [rsp+200]
	mov	rbx, QWORD PTR [rsp+192]
$LN3@ImGui_Impl:
; Line 983
	add	rsp, 144				; 00000090H
	pop	r15
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z ENDP ; ImGui_ImplVulkanH_CreateWindowCommandBuffers
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_CreateWindowSwapChain@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@HHI@Z
_TEXT	SEGMENT
i$1$ = 32
old_swapchain$1$ = 40
color_attachment$1 = 40
allocator$GSCopy$1$ = 48
physical_device$GSCopy$1$ = 56
attachment$2 = 56
info$3 = 64
subpass$4 = 64
info$5 = 64
info$6 = 176
attachment$7 = 176
cap$8 = 176
dependency$9 = 240
info$10 = 272
backbuffers$11 = 272
__$ArrayPad$ = 400
physical_device$ = 496
device$ = 504
wd$ = 512
allocator$ = 520
w$ = 528
h$ = 536
min_image_count$ = 544
?ImGui_ImplVulkanH_CreateWindowSwapChain@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@HHI@Z PROC ; ImGui_ImplVulkanH_CreateWindowSwapChain, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 999
$LN93:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-168]
	sub	rsp, 424				; 000001a8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
; Line 1001
	mov	rax, QWORD PTR [r8+8]
	lea	r14, QWORD PTR [r8+8]
	mov	QWORD PTR physical_device$GSCopy$1$[rsp], rcx
; Line 1002
	xor	ebx, ebx
; Line 1003
	mov	rcx, rdx
	mov	QWORD PTR old_swapchain$1$[rsp], rax
	mov	rdi, r9
	mov	QWORD PTR allocator$GSCopy$1$[rsp], r9
	mov	r15, r8
	mov	QWORD PTR [r14], rbx
	mov	r13, rdx
	call	vkDeviceWaitIdle
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN27@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN27@ImGui_Impl:
; Line 1008
	mov	eax, ebx
	mov	DWORD PTR i$1$[rsp], ebx
	cmp	DWORD PTR [r15+72], ebx
	jbe	$LN3@ImGui_Impl
	npad	6
$LL4@ImGui_Impl:
; Line 1010
	mov	r14d, eax
; Line 1190
	mov	r8, rdi
	mov	rcx, r13
; Line 1010
	lea	rsi, QWORD PTR [r14+r14*2]
	shl	rsi, 4
	add	rsi, QWORD PTR [r15+80]
; Line 1190
	mov	rdx, QWORD PTR [rsi+16]
	call	vkDestroyFence
; Line 1191
	mov	rdx, QWORD PTR [rsi]
	lea	r9, QWORD PTR [rsi+8]
	mov	r8d, 1
	mov	rcx, r13
	call	vkFreeCommandBuffers
; Line 1192
	mov	r8, QWORD PTR allocator$GSCopy$1$[rsp]
	mov	rcx, r13
	mov	rdx, QWORD PTR [rsi]
	call	vkDestroyCommandPool
; Line 1197
	mov	rdi, QWORD PTR allocator$GSCopy$1$[rsp]
	mov	rcx, r13
	mov	rdx, QWORD PTR [rsi+32]
	mov	r8, rdi
	mov	QWORD PTR [rsi+16], rbx
	mov	QWORD PTR [rsi+8], rbx
	mov	QWORD PTR [rsi], rbx
	call	vkDestroyImageView
; Line 1198
	mov	rdx, QWORD PTR [rsi+40]
	mov	r8, rdi
	mov	rcx, r13
	call	vkDestroyFramebuffer
; Line 1011
	shl	r14, 4
; Line 1203
	mov	r8, rdi
; Line 1011
	add	r14, QWORD PTR [r15+88]
; Line 1203
	mov	rcx, r13
	mov	rdx, QWORD PTR [r14]
	call	vkDestroySemaphore
; Line 1204
	mov	rdx, QWORD PTR [r14+8]
	mov	r8, rdi
	mov	rcx, r13
	call	vkDestroySemaphore
; Line 1008
	mov	eax, DWORD PTR i$1$[rsp]
	inc	eax
; Line 1205
	mov	QWORD PTR [r14+8], rbx
	mov	QWORD PTR [r14], rbx
; Line 1008
	mov	DWORD PTR i$1$[rsp], eax
	cmp	eax, DWORD PTR [r15+72]
	jb	$LL4@ImGui_Impl
	lea	r14, QWORD PTR [r15+8]
$LN3@ImGui_Impl:
; Line 1013
	mov	rcx, QWORD PTR [r15+80]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 1014
	mov	rcx, QWORD PTR [r15+88]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 1018
	mov	rdx, QWORD PTR [r15+40]
	mov	QWORD PTR [r15+80], rbx
	mov	QWORD PTR [r15+88], rbx
	mov	DWORD PTR [r15+72], ebx
	test	rdx, rdx
	je	SHORT $LN14@ImGui_Impl
; Line 1019
	mov	r8, rdi
	mov	rcx, r13
	call	vkDestroyRenderPass
$LN14@ImGui_Impl:
; Line 1022
	mov	esi, DWORD PTR min_image_count$[rbp-256]
	test	esi, esi
	jne	SHORT $LN33@ImGui_Impl
; Line 1023
	mov	ecx, DWORD PTR [r15+32]
; Line 987
	cmp	ecx, 1
	jne	SHORT $LN34@ImGui_Impl
; Line 988
	lea	esi, QWORD PTR [rcx+2]
	jmp	SHORT $LN33@ImGui_Impl
$LN34@ImGui_Impl:
; Line 989
	lea	eax, DWORD PTR [rcx-2]
	cmp	eax, 1
	jbe	SHORT $LN36@ImGui_Impl
; Line 991
	test	ecx, ecx
	jne	SHORT $LN37@ImGui_Impl
; Line 992
	lea	esi, QWORD PTR [rcx+1]
	jmp	SHORT $LN33@ImGui_Impl
$LN37@ImGui_Impl:
; Line 993
	mov	r8d, 993				; 000003e1H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
; Line 994
	mov	esi, 1
	jmp	SHORT $LN33@ImGui_Impl
$LN36@ImGui_Impl:
; Line 990
	mov	esi, 2
$LN33@ImGui_Impl:
; Line 1029
	mov	rdx, QWORD PTR [r15+16]
; Line 1042
	lea	r8, QWORD PTR cap$8[rbp-256]
	mov	rcx, QWORD PTR physical_device$GSCopy$1$[rsp]
	xor	eax, eax
	mov	DWORD PTR info$5[rsp+20], eax
	xorps	xmm0, xmm0
	mov	eax, DWORD PTR [r15+24]
	mov	DWORD PTR info$5[rsp+36], eax
	mov	eax, DWORD PTR [r15+28]
	mov	DWORD PTR info$5[rsp+40], eax
	mov	eax, DWORD PTR [r15+32]
	mov	DWORD PTR info$5[rbp-168], eax
	mov	rax, QWORD PTR old_swapchain$1$[rsp]
	mov	QWORD PTR info$5[rbp-160], rax
	movups	XMMWORD PTR info$5[rsp+4], xmm0
	mov	DWORD PTR info$5[rsp], 1000001000	; 3b9acde8H
	movups	XMMWORD PTR info$5[rbp-192], xmm0
	mov	QWORD PTR info$5[rsp+24], rdx
	mov	DWORD PTR info$5[rsp+32], esi
	mov	DWORD PTR info$5[rsp+52], 1
	mov	QWORD PTR info$5[rsp+56], 16
	mov	DWORD PTR info$5[rbp-176], 1
	mov	DWORD PTR info$5[rbp-172], 1
	mov	DWORD PTR info$5[rbp-164], 1
	call	vkGetPhysicalDeviceSurfaceCapabilitiesKHR
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN41@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN41@ImGui_Impl:
; Line 1044
	mov	eax, DWORD PTR info$5[rsp+32]
	mov	ecx, DWORD PTR cap$8[rbp-256]
	cmp	eax, ecx
	jae	SHORT $LN16@ImGui_Impl
; Line 1045
	mov	DWORD PTR info$5[rsp+32], ecx
	jmp	SHORT $LN18@ImGui_Impl
$LN16@ImGui_Impl:
; Line 1046
	mov	ecx, DWORD PTR cap$8[rbp-252]
	test	ecx, ecx
	je	SHORT $LN18@ImGui_Impl
	cmp	eax, ecx
	cmova	eax, ecx
	mov	DWORD PTR info$5[rsp+32], eax
$LN18@ImGui_Impl:
; Line 1049
	mov	eax, DWORD PTR cap$8[rbp-248]
	cmp	eax, -1					; ffffffffH
	jne	SHORT $LN19@ImGui_Impl
; Line 1051
	mov	eax, DWORD PTR w$[rbp-256]
	mov	DWORD PTR [r15], eax
	mov	DWORD PTR info$5[rsp+44], eax
; Line 1052
	mov	eax, DWORD PTR h$[rbp-256]
; Line 1053
	jmp	SHORT $LN91@ImGui_Impl
$LN19@ImGui_Impl:
; Line 1056
	mov	DWORD PTR [r15], eax
	mov	DWORD PTR info$5[rsp+44], eax
; Line 1057
	mov	eax, DWORD PTR cap$8[rbp-244]
$LN91@ImGui_Impl:
; Line 1059
	mov	r9, r14
	mov	DWORD PTR info$5[rsp+48], eax
	mov	r8, rdi
	mov	DWORD PTR [r15+4], eax
	lea	rdx, QWORD PTR info$5[rsp]
	mov	rcx, r13
	call	vkCreateSwapchainKHR
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN44@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN44@ImGui_Impl:
; Line 1061
	mov	rdx, QWORD PTR [r14]
	lea	r8, QWORD PTR [r15+72]
	xor	r9d, r9d
	mov	rcx, r13
	call	vkGetSwapchainImagesKHR
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN47@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN47@ImGui_Impl:
; Line 1064
	mov	eax, DWORD PTR [r15+72]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR backbuffers$11[rbp-256], xmm0
	movups	XMMWORD PTR backbuffers$11[rbp-240], xmm0
	movups	XMMWORD PTR backbuffers$11[rbp-224], xmm0
	movups	XMMWORD PTR backbuffers$11[rbp-208], xmm0
	movups	XMMWORD PTR backbuffers$11[rbp-192], xmm0
	movups	XMMWORD PTR backbuffers$11[rbp-176], xmm0
	movups	XMMWORD PTR backbuffers$11[rbp-160], xmm0
	movups	XMMWORD PTR backbuffers$11[rbp-144], xmm0
	cmp	eax, esi
	jae	SHORT $LN23@ImGui_Impl
	mov	r8d, 1064				; 00000428H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1EE@CBIJBCDF@?$AAw?$AAd?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [r15+72]
$LN23@ImGui_Impl:
; Line 1065
	cmp	eax, 16
	jb	SHORT $LN24@ImGui_Impl
	mov	r8d, 1065				; 00000429H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1IK@GFBEKNKP@?$AAw?$AAd?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5@
	call	QWORD PTR __imp__wassert
$LN24@ImGui_Impl:
; Line 1066
	mov	rdx, QWORD PTR [r14]
	lea	r9, QWORD PTR backbuffers$11[rbp-256]
	lea	r8, QWORD PTR [r15+72]
	mov	rcx, r13
	call	vkGetSwapchainImagesKHR
; Line 232
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	r8, r8
	je	SHORT $LN50@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	r8
$LN50@ImGui_Impl:
; Line 1069
	cmp	QWORD PTR [r15+80], rbx
	je	SHORT $LN25@ImGui_Impl
	mov	r8d, 1069				; 0000042dH
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CA@MDIHBCFE@?$AAw?$AAd?$AA?9?$AA?$DO?$AAF?$AAr?$AAa?$AAm?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
$LN25@ImGui_Impl:
; Line 1070
	mov	eax, DWORD PTR [r15+72]
	lea	rcx, QWORD PTR [rax+rax*2]
	shl	rcx, 4
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 1071
	mov	ecx, DWORD PTR [r15+72]
	shl	rcx, 4
	mov	QWORD PTR [r15+80], rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 1072
	mov	rcx, QWORD PTR [r15+80]
	xor	edx, edx
	mov	QWORD PTR [r15+88], rax
	mov	eax, DWORD PTR [r15+72]
	lea	r8, QWORD PTR [rax+rax*2]
	shl	r8, 4
	call	memset
; Line 1073
	mov	r8d, DWORD PTR [r15+72]
	xor	edx, edx
	mov	rcx, QWORD PTR [r15+88]
	shl	r8, 4
	call	memset
; Line 1074
	mov	r9d, ebx
	cmp	DWORD PTR [r15+72], ebx
	jbe	SHORT $LN6@ImGui_Impl
	npad	2
$LL7@ImGui_Impl:
; Line 1075
	mov	rcx, QWORD PTR [r15+80]
	mov	eax, r9d
	inc	r9d
	lea	r8, QWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR backbuffers$11[rbp+rax*8-256]
	add	r8, r8
	mov	QWORD PTR [rcx+r8*8+24], rax
	cmp	r9d, DWORD PTR [r15+72]
	jb	SHORT $LL7@ImGui_Impl
$LN6@ImGui_Impl:
; Line 1077
	mov	rax, QWORD PTR old_swapchain$1$[rsp]
	test	rax, rax
	je	SHORT $LN21@ImGui_Impl
; Line 1078
	mov	r8, rdi
	mov	rdx, rax
	mov	rcx, r13
	call	vkDestroySwapchainKHR
$LN21@ImGui_Impl:
; Line 1083
	mov	eax, DWORD PTR [r15+24]
; Line 1113
	lea	r9, QWORD PTR [r15+40]
	movdqa	xmm0, XMMWORD PTR __xmm@00000000000000010000000200000000
	lea	rdx, QWORD PTR info$10[rbp-256]
	mov	DWORD PTR attachment$7[rbp-252], eax
	mov	r8, rdi
	movzx	eax, BYTE PTR [r15+48]
	neg	al
	mov	DWORD PTR attachment$7[rbp-256], ebx
	lea	rax, QWORD PTR color_attachment$1[rsp]
	mov	DWORD PTR attachment$7[rbp-248], 1
	mov	QWORD PTR subpass$4[rsp+32], rax
	sbb	ecx, ecx
	add	ecx, 2
	mov	DWORD PTR attachment$7[rbp-224], 1000001002 ; 3b9acdeaH
	lea	rax, QWORD PTR attachment$7[rbp-256]
	mov	DWORD PTR attachment$7[rbp-244], ecx
	mov	QWORD PTR info$10[rbp-232], rax
	mov	rcx, r13
	lea	rax, QWORD PTR subpass$4[rsp]
	mov	DWORD PTR color_attachment$1[rsp], ebx
	mov	QWORD PTR info$10[rbp-216], rax
	lea	rax, QWORD PTR dependency$9[rbp-256]
	movdqu	XMMWORD PTR attachment$7[rbp-240], xmm0
	mov	QWORD PTR info$10[rbp-200], rax
	xorps	xmm0, xmm0
	mov	DWORD PTR color_attachment$1[rsp+4], 2
	mov	QWORD PTR subpass$4[rsp], rbx
	mov	QWORD PTR subpass$4[rsp+8], rbx
	mov	QWORD PTR subpass$4[rsp+16], rbx
	mov	QWORD PTR subpass$4[rsp+24], 1
	mov	QWORD PTR subpass$4[rsp+40], rbx
	movdqa	XMMWORD PTR subpass$4[rsp+48], xmm0
	mov	QWORD PTR subpass$4[rbp-192], rbx
	mov	QWORD PTR dependency$9[rbp-236], 256	; 00000100H
	mov	DWORD PTR dependency$9[rbp-256], -1	; ffffffffH
	mov	DWORD PTR dependency$9[rbp-252], ebx
	mov	DWORD PTR dependency$9[rbp-248], 1024	; 00000400H
	mov	QWORD PTR dependency$9[rbp-244], 1024	; 00000400H
	mov	QWORD PTR info$10[rbp-252], rbx
	mov	QWORD PTR info$10[rbp-244], rbx
	mov	QWORD PTR info$10[rbp-224], 1
	mov	QWORD PTR info$10[rbp-208], 1
	mov	DWORD PTR info$10[rbp-256], 38		; 00000026H
	mov	DWORD PTR info$10[rbp-236], 1
	call	vkCreateRenderPass
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN53@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN53@ImGui_Impl:
; Line 1129
	mov	ecx, DWORD PTR [r15+72]
	mov	edi, ebx
	mov	eax, DWORD PTR [r15+24]
	mov	rsi, QWORD PTR allocator$GSCopy$1$[rsp]
	mov	QWORD PTR info$3[rsp+4], rbx
	mov	QWORD PTR info$3[rsp+12], rbx
	mov	DWORD PTR info$3[rsp+20], ebx
	mov	QWORD PTR info$3[rbp-184], 1
	mov	DWORD PTR info$3[rsp], 15
	mov	DWORD PTR info$3[rsp+32], 1
	mov	DWORD PTR info$3[rsp+36], eax
	mov	DWORD PTR info$3[rsp+40], 3
	mov	DWORD PTR info$3[rsp+44], 4
	mov	DWORD PTR info$3[rsp+48], 5
	mov	DWORD PTR info$3[rsp+52], 6
	mov	QWORD PTR info$3[rsp+56], 1
	mov	QWORD PTR info$3[rbp-192], 1
	test	ecx, ecx
	je	SHORT $LN9@ImGui_Impl
	npad	2
$LL10@ImGui_Impl:
; Line 1131
	mov	eax, edi
; Line 1133
	lea	rdx, QWORD PTR info$3[rsp]
	mov	r8, rsi
	mov	rcx, r13
	lea	r9, QWORD PTR [rax+rax*2]
	shl	r9, 4
	add	r9, QWORD PTR [r15+80]
	mov	rax, QWORD PTR [r9+24]
	add	r9, 32					; 00000020H
	mov	QWORD PTR info$3[rsp+24], rax
	call	vkCreateImageView
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN8@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN8@ImGui_Impl:
; Line 1129
	mov	ecx, DWORD PTR [r15+72]
	inc	edi
	cmp	edi, ecx
	jb	SHORT $LL10@ImGui_Impl
$LN9@ImGui_Impl:
; Line 1143
	mov	rax, QWORD PTR [r15+40]
	mov	QWORD PTR info$6[rbp-232], rax
; Line 1145
	lea	rax, QWORD PTR attachment$2[rsp]
	mov	QWORD PTR info$6[rbp-216], rax
; Line 1146
	mov	eax, DWORD PTR [r15]
	mov	DWORD PTR info$6[rbp-208], eax
; Line 1147
	mov	eax, DWORD PTR [r15+4]
	mov	DWORD PTR info$6[rbp-204], eax
	mov	QWORD PTR info$6[rbp-252], rbx
	mov	QWORD PTR info$6[rbp-244], rbx
	mov	DWORD PTR info$6[rbp-236], ebx
	mov	QWORD PTR info$6[rbp-224], 1
; Line 1148
	mov	QWORD PTR info$6[rbp-200], 1
	mov	DWORD PTR info$6[rbp-256], 37		; 00000025H
; Line 1149
	test	ecx, ecx
	je	SHORT $LN12@ImGui_Impl
	npad	7
$LL13@ImGui_Impl:
; Line 1151
	mov	eax, ebx
; Line 1153
	lea	rdx, QWORD PTR info$6[rbp-256]
	mov	r8, rsi
	mov	rcx, r13
	lea	r9, QWORD PTR [rax+rax*2]
	shl	r9, 4
	add	r9, QWORD PTR [r15+80]
	mov	rax, QWORD PTR [r9+32]
	add	r9, 40					; 00000028H
	mov	QWORD PTR attachment$2[rsp], rax
	call	vkCreateFramebuffer
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN11@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN11@ImGui_Impl:
; Line 1149
	inc	ebx
	cmp	ebx, DWORD PTR [r15+72]
	jb	SHORT $LL13@ImGui_Impl
$LN12@ImGui_Impl:
; Line 1157
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 424				; 000001a8H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
?ImGui_ImplVulkanH_CreateWindowSwapChain@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@HHI@Z ENDP ; ImGui_ImplVulkanH_CreateWindowSwapChain
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z
_TEXT	SEGMENT
device$ = 64
buffers$ = 72
allocator$ = 80
?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z PROC ; ImGui_ImplVulkanH_DestroyWindowRenderBuffers, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 1219
$LN25:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; Line 1220
	xor	r15d, r15d
	mov	rbp, r8
	mov	rsi, rdx
	mov	r14, rcx
	mov	edi, r15d
	cmp	DWORD PTR [rdx+4], r15d
	jbe	$LN3@ImGui_Impl
	mov	QWORD PTR [rsp+64], rbx
$LL4@ImGui_Impl:
; Line 1221
	mov	eax, edi
	lea	rbx, QWORD PTR [rax+rax*2]
	shl	rbx, 4
	add	rbx, QWORD PTR [rsi+8]
; Line 1210
	mov	rdx, QWORD PTR [rbx+32]
	test	rdx, rdx
	je	SHORT $LN20@ImGui_Impl
	mov	r8, rbp
	mov	rcx, r14
	call	vkDestroyBuffer
	mov	QWORD PTR [rbx+32], r15
$LN20@ImGui_Impl:
; Line 1211
	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN21@ImGui_Impl
	mov	r8, rbp
	mov	rcx, r14
	call	vkFreeMemory
	mov	QWORD PTR [rbx], r15
$LN21@ImGui_Impl:
; Line 1212
	mov	rdx, QWORD PTR [rbx+40]
	test	rdx, rdx
	je	SHORT $LN22@ImGui_Impl
	mov	r8, rbp
	mov	rcx, r14
	call	vkDestroyBuffer
	mov	QWORD PTR [rbx+40], r15
$LN22@ImGui_Impl:
; Line 1213
	mov	rdx, QWORD PTR [rbx+8]
	test	rdx, rdx
	je	SHORT $LN23@ImGui_Impl
	mov	r8, rbp
	mov	rcx, r14
	call	vkFreeMemory
	mov	QWORD PTR [rbx+8], r15
$LN23@ImGui_Impl:
; Line 1220
	inc	edi
; Line 1214
	mov	QWORD PTR [rbx+16], r15
; Line 1215
	mov	QWORD PTR [rbx+24], r15
; Line 1220
	cmp	edi, DWORD PTR [rsi+4]
	jb	SHORT $LL4@ImGui_Impl
	mov	rbx, QWORD PTR [rsp+64]
$LN3@ImGui_Impl:
; Line 1222
	mov	rcx, QWORD PTR [rsi+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 1226
	mov	rbp, QWORD PTR [rsp+72]
	mov	QWORD PTR [rsi+8], r15
	mov	QWORD PTR [rsi], r15
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z ENDP ; ImGui_ImplVulkanH_DestroyWindowRenderBuffers
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_DestroyFrameRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@PEBUVkAllocationCallbacks@@@Z
_TEXT	SEGMENT
device$ = 48
buffers$ = 56
allocator$ = 64
?ImGui_ImplVulkanH_DestroyFrameRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@PEBUVkAllocationCallbacks@@@Z PROC ; ImGui_ImplVulkanH_DestroyFrameRenderBuffers, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 1209
$LN9:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
; Line 1210
	xor	ebp, ebp
	mov	rdx, QWORD PTR [rdx+32]
	mov	rdi, r8
	mov	rsi, rcx
	test	rdx, rdx
	je	SHORT $LN2@ImGui_Impl
	call	vkDestroyBuffer
	mov	QWORD PTR [rbx+32], rbp
$LN2@ImGui_Impl:
; Line 1211
	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN3@ImGui_Impl
	mov	r8, rdi
	mov	rcx, rsi
	call	vkFreeMemory
	mov	QWORD PTR [rbx], rbp
$LN3@ImGui_Impl:
; Line 1212
	mov	rdx, QWORD PTR [rbx+40]
	test	rdx, rdx
	je	SHORT $LN4@ImGui_Impl
	mov	r8, rdi
	mov	rcx, rsi
	call	vkDestroyBuffer
	mov	QWORD PTR [rbx+40], rbp
$LN4@ImGui_Impl:
; Line 1213
	mov	rdx, QWORD PTR [rbx+8]
	test	rdx, rdx
	je	SHORT $LN7@ImGui_Impl
	mov	r8, rdi
	mov	rcx, rsi
	call	vkFreeMemory
	mov	QWORD PTR [rbx+8], rbp
$LN7@ImGui_Impl:
; Line 1216
	mov	rsi, QWORD PTR [rsp+64]
	mov	QWORD PTR [rbx+24], rbp
	mov	QWORD PTR [rbx+16], rbp
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?ImGui_ImplVulkanH_DestroyFrameRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@PEBUVkAllocationCallbacks@@@Z ENDP ; ImGui_ImplVulkanH_DestroyFrameRenderBuffers
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_DestroyFrameSemaphores@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameSemaphores@@PEBUVkAllocationCallbacks@@@Z
_TEXT	SEGMENT
device$ = 48
fsd$ = 56
allocator$ = 64
?ImGui_ImplVulkanH_DestroyFrameSemaphores@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameSemaphores@@PEBUVkAllocationCallbacks@@@Z PROC ; ImGui_ImplVulkanH_DestroyFrameSemaphores, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 1202
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rbx, r8
; Line 1203
	mov	rdx, QWORD PTR [rdx]
	mov	rdi, rcx
	call	vkDestroySemaphore
; Line 1204
	mov	rdx, QWORD PTR [rsi+8]
	mov	r8, rbx
	mov	rcx, rdi
	call	vkDestroySemaphore
; Line 1206
	mov	rbx, QWORD PTR [rsp+48]
	xor	eax, eax
	mov	QWORD PTR [rsi+8], rax
	mov	QWORD PTR [rsi], rax
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?ImGui_ImplVulkanH_DestroyFrameSemaphores@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_FrameSemaphores@@PEBUVkAllocationCallbacks@@@Z ENDP ; ImGui_ImplVulkanH_DestroyFrameSemaphores
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_DestroyFrame@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Frame@@PEBUVkAllocationCallbacks@@@Z
_TEXT	SEGMENT
device$ = 48
fd$ = 56
allocator$ = 64
?ImGui_ImplVulkanH_DestroyFrame@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Frame@@PEBUVkAllocationCallbacks@@@Z PROC ; ImGui_ImplVulkanH_DestroyFrame, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 1189
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rdi, r8
; Line 1190
	mov	rdx, QWORD PTR [rdx+16]
	mov	rbp, rcx
	call	vkDestroyFence
; Line 1191
	mov	rdx, QWORD PTR [rsi]
	lea	r9, QWORD PTR [rsi+8]
	mov	r8d, 1
	mov	rcx, rbp
	call	vkFreeCommandBuffers
; Line 1192
	mov	rdx, QWORD PTR [rsi]
	mov	r8, rdi
	mov	rcx, rbp
	call	vkDestroyCommandPool
; Line 1197
	mov	rdx, QWORD PTR [rsi+32]
	xor	eax, eax
	mov	r8, rdi
	mov	QWORD PTR [rsi+16], rax
	mov	rcx, rbp
	mov	QWORD PTR [rsi+8], rax
	mov	QWORD PTR [rsi], rax
	call	vkDestroyImageView
; Line 1198
	mov	rdx, QWORD PTR [rsi+40]
	mov	r8, rdi
	mov	rcx, rbp
; Line 1199
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 1198
	jmp	vkDestroyFramebuffer
?ImGui_ImplVulkanH_DestroyFrame@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Frame@@PEBUVkAllocationCallbacks@@@Z ENDP ; ImGui_ImplVulkanH_DestroyFrame
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_DestroyDeviceObjects@@YAXXZ
_TEXT	SEGMENT
?ImGui_ImplVulkan_DestroyDeviceObjects@@YAXXZ PROC	; ImGui_ImplVulkan_DestroyDeviceObjects, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 796
$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 798
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	rdx, OFFSET FLAT:?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_DestroyWindowRenderBuffers
; Line 783
	mov	rdx, QWORD PTR ?g_UploadBuffer@@3PEAUVkBuffer_T@@EA
	xor	ebx, ebx
	test	rdx, rdx
	je	SHORT $LN11@ImGui_Impl
; Line 785
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyBuffer
; Line 786
	mov	QWORD PTR ?g_UploadBuffer@@3PEAUVkBuffer_T@@EA, rbx
$LN11@ImGui_Impl:
; Line 788
	mov	rdx, QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA
	test	rdx, rdx
	je	SHORT $LN12@ImGui_Impl
; Line 790
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkFreeMemory
; Line 791
	mov	QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA, rbx
$LN12@ImGui_Impl:
; Line 801
	mov	rdx, QWORD PTR ?g_FontView@@3PEAUVkImageView_T@@EA
	test	rdx, rdx
	je	SHORT $LN2@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyImageView
	mov	QWORD PTR ?g_FontView@@3PEAUVkImageView_T@@EA, rbx
$LN2@ImGui_Impl:
; Line 802
	mov	rdx, QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA
	test	rdx, rdx
	je	SHORT $LN3@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyImage
	mov	QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA, rbx
$LN3@ImGui_Impl:
; Line 803
	mov	rdx, QWORD PTR ?g_FontMemory@@3PEAUVkDeviceMemory_T@@EA
	test	rdx, rdx
	je	SHORT $LN4@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkFreeMemory
	mov	QWORD PTR ?g_FontMemory@@3PEAUVkDeviceMemory_T@@EA, rbx
$LN4@ImGui_Impl:
; Line 804
	mov	rdx, QWORD PTR ?g_FontSampler@@3PEAUVkSampler_T@@EA
	test	rdx, rdx
	je	SHORT $LN5@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroySampler
	mov	QWORD PTR ?g_FontSampler@@3PEAUVkSampler_T@@EA, rbx
$LN5@ImGui_Impl:
; Line 805
	mov	rdx, QWORD PTR ?g_DescriptorSetLayout@@3PEAUVkDescriptorSetLayout_T@@EA
	test	rdx, rdx
	je	SHORT $LN6@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyDescriptorSetLayout
	mov	QWORD PTR ?g_DescriptorSetLayout@@3PEAUVkDescriptorSetLayout_T@@EA, rbx
$LN6@ImGui_Impl:
; Line 806
	mov	rdx, QWORD PTR ?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA
	test	rdx, rdx
	je	SHORT $LN7@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyPipelineLayout
	mov	QWORD PTR ?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA, rbx
$LN7@ImGui_Impl:
; Line 807
	mov	rdx, QWORD PTR ?g_Pipeline@@3PEAUVkPipeline_T@@EA
	test	rdx, rdx
	je	SHORT $LN8@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyPipeline
	mov	QWORD PTR ?g_Pipeline@@3PEAUVkPipeline_T@@EA, rbx
$LN8@ImGui_Impl:
; Line 808
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?ImGui_ImplVulkan_DestroyDeviceObjects@@YAXXZ ENDP	; ImGui_ImplVulkan_DestroyDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_CreateDeviceObjects@@YA_NXZ
_TEXT	SEGMENT
layout_info$1 = 48
alloc_info$2 = 48
info$3 = 48
info$4 = 48
vert_info$5 = 48
set_layout$6 = 128
sampler$7 = 128
dynamic_states$ = 136
vert_module$ = 144
frag_module$ = 152
raster_info$ = 160
vertex_info$ = 224
viewport_info$ = 272
ia_info$ = 320
dynamic_state$ = 352
stage$ = 384
info$ = 480
ms_info$ = 624
blend_info$ = 672
depth_info$ = 736
push_constants$8 = 848
binding$9 = 848
frag_info$10 = 848
binding_desc$ = 888
attribute_desc$ = 904
color_attachment$ = 952
__$ArrayPad$ = 984
?ImGui_ImplVulkan_CreateDeviceObjects@@YA_NXZ PROC	; ImGui_ImplVulkan_CreateDeviceObjects, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 590
$LN32:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rdi
	push	rbp
	lea	rbp, QWORD PTR [rsp-736]
	sub	rsp, 992				; 000003e0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
; Line 602
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	rax, OFFSET FLAT:?__glsl_shader_vert_spv@@3PAIA
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	lea	r9, QWORD PTR vert_module$[rbp-256]
	xorps	xmm0, xmm0
	mov	QWORD PTR vert_info$5[rsp+32], rax
	xor	ebx, ebx
	mov	DWORD PTR vert_info$5[rsp], 16
	lea	rdx, QWORD PTR vert_info$5[rsp]
	mov	DWORD PTR vert_info$5[rsp+20], ebx
	movdqu	XMMWORD PTR vert_info$5[rsp+4], xmm0
	mov	QWORD PTR vert_info$5[rsp+24], 1296	; 00000510H
	call	vkCreateShaderModule
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN9@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN9@ImGui_Impl:
; Line 608
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	rax, OFFSET FLAT:?__glsl_shader_frag_spv@@3PAIA
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	lea	r9, QWORD PTR frag_module$[rbp-256]
	xorps	xmm0, xmm0
	mov	QWORD PTR frag_info$10[rbp-224], rax
	lea	rdx, QWORD PTR frag_info$10[rbp-256]
	mov	DWORD PTR frag_info$10[rbp-236], ebx
	movdqu	XMMWORD PTR frag_info$10[rbp-252], xmm0
	mov	DWORD PTR frag_info$10[rbp-256], 16
	mov	QWORD PTR frag_info$10[rbp-232], 772	; 00000304H
	call	vkCreateShaderModule
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN12@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN12@ImGui_Impl:
; Line 612
	cmp	QWORD PTR ?g_FontSampler@@3PEAUVkSampler_T@@EA, rbx
	jne	$LN29@ImGui_Impl
; Line 622
	movss	xmm0, DWORD PTR __real@c47a0000
; Line 625
	lea	r9, OFFSET FLAT:?g_FontSampler@@3PEAUVkSampler_T@@EA
	movss	xmm1, DWORD PTR __real@447a0000
	lea	rdx, QWORD PTR info$4[rsp]
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	movss	DWORD PTR info$4[rsp+64], xmm0
	movss	DWORD PTR info$4[rsp+68], xmm1
	mov	QWORD PTR info$4[rsp+4], rbx
	mov	QWORD PTR info$4[rsp+12], rbx
	mov	QWORD PTR info$4[rsp+44], rbx
	mov	QWORD PTR info$4[rsp+56], rbx
	mov	QWORD PTR info$4[rsp+72], rbx
	mov	DWORD PTR info$4[rsp], 31
	mov	DWORD PTR info$4[rsp+20], 1
	mov	DWORD PTR info$4[rsp+24], 1
	mov	QWORD PTR info$4[rsp+28], 1
	mov	QWORD PTR info$4[rsp+36], rbx
	mov	DWORD PTR info$4[rsp+52], 1065353216	; 3f800000H
	call	vkCreateSampler
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN29@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN29@ImGui_Impl:
; Line 629
	cmp	QWORD PTR ?g_DescriptorSetLayout@@3PEAUVkDescriptorSetLayout_T@@EA, rbx
	lea	rdi, OFFSET FLAT:?g_DescriptorSetLayout@@3PEAUVkDescriptorSetLayout_T@@EA
	jne	$LN18@ImGui_Impl
; Line 631
	mov	rax, QWORD PTR ?g_FontSampler@@3PEAUVkSampler_T@@EA
; Line 641
	lea	rdx, QWORD PTR info$3[rsp]
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	xorps	xmm0, xmm0
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	mov	r9, rdi
	mov	QWORD PTR sampler$7[rbp-256], rax
	lea	rax, QWORD PTR sampler$7[rbp-256]
	mov	QWORD PTR binding$9[rbp-240], rax
	lea	rax, QWORD PTR binding$9[rbp-256]
	mov	QWORD PTR info$3[rsp+24], rax
	mov	DWORD PTR binding$9[rbp-256], ebx
	mov	DWORD PTR binding$9[rbp-252], 1
	mov	DWORD PTR binding$9[rbp-248], 1
	mov	DWORD PTR binding$9[rbp-244], 16
	movdqu	XMMWORD PTR info$3[rsp+4], xmm0
	mov	DWORD PTR info$3[rsp], 32		; 00000020H
	mov	DWORD PTR info$3[rsp+20], 1
	call	vkCreateDescriptorSetLayout
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN18@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN18@ImGui_Impl:
; Line 649
	mov	rax, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+48
; Line 652
	lea	r8, OFFSET FLAT:?g_DescriptorSet@@3PEAUVkDescriptorSet_T@@EA
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	lea	rdx, QWORD PTR alloc_info$2[rsp]
	mov	QWORD PTR alloc_info$2[rsp+16], rax
	mov	QWORD PTR alloc_info$2[rsp+4], rbx
	mov	DWORD PTR alloc_info$2[rsp+12], ebx
	mov	QWORD PTR alloc_info$2[rsp+24], 1
	mov	DWORD PTR alloc_info$2[rsp], 34		; 00000022H
	mov	QWORD PTR alloc_info$2[rsp+32], rdi
	call	vkAllocateDescriptorSets
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN21@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN21@ImGui_Impl:
; Line 656
	cmp	QWORD PTR ?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA, rbx
	jne	$LN30@ImGui_Impl
; Line 663
	mov	rax, QWORD PTR ?g_DescriptorSetLayout@@3PEAUVkDescriptorSetLayout_T@@EA
; Line 670
	lea	r9, OFFSET FLAT:?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	rdx, QWORD PTR layout_info$1[rsp]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	xorps	xmm0, xmm0
	mov	QWORD PTR set_layout$6[rbp-256], rax
	lea	rax, QWORD PTR set_layout$6[rbp-256]
	mov	QWORD PTR layout_info$1[rsp+24], rax
	lea	rax, QWORD PTR push_constants$8[rbp-256]
	mov	QWORD PTR layout_info$1[rsp+40], rax
	mov	QWORD PTR push_constants$8[rbp-256], 1
	mov	DWORD PTR push_constants$8[rbp-248], 16
	movdqu	XMMWORD PTR layout_info$1[rsp+4], xmm0
	mov	QWORD PTR layout_info$1[rsp+32], 1
	mov	DWORD PTR layout_info$1[rsp], 30
	mov	DWORD PTR layout_info$1[rsp+20], 1
	call	vkCreatePipelineLayout
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN30@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN30@ImGui_Impl:
; Line 677
	mov	rax, QWORD PTR vert_module$[rbp-256]
; Line 678
	lea	rcx, OFFSET FLAT:??_C@_04GHJNJNPO@main@
	xorps	xmm0, xmm0
; Line 684
	mov	DWORD PTR binding_desc$[rbp-256], ebx
	movups	XMMWORD PTR stage$[rbp-240], xmm0
	mov	QWORD PTR stage$[rbp-232], rax
	mov	rax, QWORD PTR frag_module$[rbp-256]
	xorps	xmm1, xmm1
	movups	XMMWORD PTR stage$[rbp-192], xmm0
	mov	QWORD PTR stage$[rbp-184], rax
; Line 705
	lea	rax, QWORD PTR binding_desc$[rbp-256]
	mov	QWORD PTR vertex_info$[rbp-232], rax
; Line 707
	lea	rax, QWORD PTR attribute_desc$[rbp-256]
	movups	XMMWORD PTR stage$[rbp-224], xmm0
	mov	QWORD PTR vertex_info$[rbp-216], rax
; Line 727
	mov	rax, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+64
	movups	XMMWORD PTR stage$[rbp-176], xmm0
	test	eax, eax
	mov	QWORD PTR stage$[rbp-224], rcx
	movups	XMMWORD PTR stage$[rbp-256], xmm0
	mov	QWORD PTR stage$[rbp-176], rcx
	mov	ecx, 1
	movups	XMMWORD PTR stage$[rbp-208], xmm0
	cmovne	ecx, eax
; Line 742
	xor	eax, eax
	movdqu	XMMWORD PTR vertex_info$[rbp-252], xmm0
	mov	DWORD PTR depth_info$[rbp-156], eax
	movdqu	XMMWORD PTR ia_info$[rbp-252], xmm0
	mov	DWORD PTR stage$[rbp-256], 18
	movdqu	XMMWORD PTR viewport_info$[rbp-252], xmm0
	mov	DWORD PTR stage$[rbp-236], 1
	movdqu	XMMWORD PTR ms_info$[rbp-252], xmm0
	mov	DWORD PTR stage$[rbp-208], 18
	movdqa	xmm0, XMMWORD PTR __xmm@00000007000000000000000700000006
	movdqu	XMMWORD PTR color_attachment$[rbp-252], xmm0
	mov	DWORD PTR stage$[rbp-188], 16
	xorps	xmm0, xmm0
	mov	QWORD PTR binding_desc$[rbp-252], 20
	mov	QWORD PTR attribute_desc$[rbp-256], rbx
	mov	QWORD PTR attribute_desc$[rbp-248], 103	; 00000067H
	mov	QWORD PTR attribute_desc$[rbp-240], 1
	mov	DWORD PTR attribute_desc$[rbp-232], 103	; 00000067H
	mov	DWORD PTR attribute_desc$[rbp-228], 8
	mov	QWORD PTR attribute_desc$[rbp-224], 2
	mov	DWORD PTR attribute_desc$[rbp-216], 37	; 00000025H
	mov	DWORD PTR attribute_desc$[rbp-212], 16
	mov	QWORD PTR vertex_info$[rbp-224], 3
	mov	DWORD PTR vertex_info$[rbp-256], 19
	mov	DWORD PTR vertex_info$[rbp-236], 1
	mov	QWORD PTR ia_info$[rbp-232], rbx
	mov	DWORD PTR ia_info$[rbp-256], 20
	mov	DWORD PTR ia_info$[rbp-236], 3
	mov	QWORD PTR viewport_info$[rbp-232], rbx
	mov	QWORD PTR viewport_info$[rbp-220], rbx
	mov	DWORD PTR viewport_info$[rbp-212], ebx
	mov	DWORD PTR viewport_info$[rbp-256], 22
	mov	DWORD PTR viewport_info$[rbp-236], 1
	mov	DWORD PTR viewport_info$[rbp-224], 1
	mov	QWORD PTR raster_info$[rbp-252], rbx
	mov	QWORD PTR raster_info$[rbp-244], rbx
	mov	QWORD PTR raster_info$[rbp-236], rbx
	mov	QWORD PTR raster_info$[rbp-216], rbx
	mov	QWORD PTR raster_info$[rbp-208], rbx
	mov	QWORD PTR raster_info$[rbp-200], 1065353216 ; 3f800000H
	mov	DWORD PTR raster_info$[rbp-256], 23
	mov	QWORD PTR raster_info$[rbp-228], rbx
	mov	DWORD PTR raster_info$[rbp-220], ebx
	movdqu	XMMWORD PTR ms_info$[rbp-232], xmm1
	mov	QWORD PTR ms_info$[rbp-216], rbx
	mov	DWORD PTR ms_info$[rbp-256], 24
	mov	DWORD PTR ms_info$[rbp-236], ecx
	mov	DWORD PTR color_attachment$[rbp-256], 1
	mov	QWORD PTR color_attachment$[rbp-236], rbx
	mov	DWORD PTR color_attachment$[rbp-228], 15
	movups	XMMWORD PTR depth_info$[rbp-252], xmm0
; Line 743
	mov	DWORD PTR depth_info$[rbp-256], 25
	movups	XMMWORD PTR depth_info$[rbp-236], xmm0
	movups	XMMWORD PTR depth_info$[rbp-220], xmm0
	movups	XMMWORD PTR depth_info$[rbp-204], xmm0
	movups	XMMWORD PTR depth_info$[rbp-188], xmm0
	movups	XMMWORD PTR depth_info$[rbp-172], xmm0
; Line 771
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+40
	lea	rax, QWORD PTR color_attachment$[rbp-256]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	lea	r9, QWORD PTR info$[rbp-256]
	mov	QWORD PTR blend_info$[rbp-224], rax
	mov	r8d, 1
	lea	rax, QWORD PTR dynamic_states$[rbp-256]
	mov	QWORD PTR blend_info$[rbp-236], rbx
	mov	QWORD PTR dynamic_state$[rbp-232], rax
	xor	eax, eax
	mov	QWORD PTR info$[rbp-252], rax
	mov	DWORD PTR info$[rbp-244], eax
	mov	QWORD PTR info$[rbp-208], rax
	mov	QWORD PTR info$[rbp-120], rax
	mov	eax, DWORD PTR ?g_PipelineCreateFlags@@3IA
	mov	DWORD PTR info$[rbp-240], eax
	lea	rax, QWORD PTR stage$[rbp-256]
	mov	QWORD PTR info$[rbp-232], rax
	lea	rax, QWORD PTR vertex_info$[rbp-256]
	mov	QWORD PTR info$[rbp-224], rax
	lea	rax, QWORD PTR ia_info$[rbp-256]
	mov	QWORD PTR info$[rbp-216], rax
	lea	rax, QWORD PTR viewport_info$[rbp-256]
	mov	QWORD PTR info$[rbp-200], rax
	lea	rax, QWORD PTR raster_info$[rbp-256]
	mov	QWORD PTR info$[rbp-192], rax
	lea	rax, QWORD PTR ms_info$[rbp-256]
	mov	QWORD PTR info$[rbp-184], rax
	lea	rax, QWORD PTR depth_info$[rbp-256]
	mov	QWORD PTR info$[rbp-176], rax
	lea	rax, QWORD PTR blend_info$[rbp-256]
	mov	QWORD PTR info$[rbp-168], rax
	lea	rax, QWORD PTR dynamic_state$[rbp-256]
	mov	QWORD PTR info$[rbp-160], rax
	mov	rax, QWORD PTR ?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA
	mov	QWORD PTR info$[rbp-152], rax
	mov	rax, QWORD PTR ?g_RenderPass@@3PEAUVkRenderPass_T@@EA
	mov	QWORD PTR info$[rbp-144], rax
	lea	rax, OFFSET FLAT:?g_Pipeline@@3PEAUVkPipeline_T@@EA
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	QWORD PTR [rsp+32], rax
	movdqu	XMMWORD PTR blend_info$[rbp-252], xmm0
	mov	DWORD PTR blend_info$[rbp-256], 26
	movdqu	XMMWORD PTR blend_info$[rbp-216], xmm1
	mov	DWORD PTR blend_info$[rbp-228], 1
	mov	DWORD PTR dynamic_states$[rbp-256], ebx
	mov	DWORD PTR dynamic_states$[rbp-252], 1
	movdqu	XMMWORD PTR dynamic_state$[rbp-252], xmm0
	mov	DWORD PTR dynamic_state$[rbp-256], 27
	mov	DWORD PTR dynamic_state$[rbp-236], 2
	movups	XMMWORD PTR info$[rbp-136], xmm0
	mov	DWORD PTR info$[rbp-256], 28
	mov	DWORD PTR info$[rbp-236], 2
	call	vkCreateGraphicsPipelines
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN27@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN27@ImGui_Impl:
; Line 774
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rdx, QWORD PTR vert_module$[rbp-256]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyShaderModule
; Line 775
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rdx, QWORD PTR frag_module$[rbp-256]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyShaderModule
; Line 777
	mov	al, 1
; Line 778
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+992]
	mov	rbx, QWORD PTR [r11+16]
	mov	rdi, QWORD PTR [r11+24]
	mov	rsp, r11
	pop	rbp
	ret	0
?ImGui_ImplVulkan_CreateDeviceObjects@@YA_NXZ ENDP	; ImGui_ImplVulkan_CreateDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImGui_ImplVulkanH_Window@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImGui_ImplVulkanH_Window@@QEAA@XZ PROC		; ImGui_ImplVulkanH_Window::ImGui_ImplVulkanH_Window, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.h
; Line 119
	xorps	xmm0, xmm0
; Line 124
	mov	rax, rcx
	movups	XMMWORD PTR [rcx], xmm0
	movups	XMMWORD PTR [rcx+16], xmm0
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	XMMWORD PTR [rcx+48], xmm0
	movups	XMMWORD PTR [rcx+64], xmm0
	movups	XMMWORD PTR [rcx+80], xmm0
	mov	DWORD PTR [rcx+32], 2147483647		; 7fffffffH
	mov	BYTE PTR [rcx+48], 1
	ret	0
??0ImGui_ImplVulkanH_Window@@QEAA@XZ ENDP		; ImGui_ImplVulkanH_Window::ImGui_ImplVulkanH_Window
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_GetMinImageCountFromPresentMode@@YAHW4VkPresentModeKHR@@@Z
_TEXT	SEGMENT
present_mode$ = 48
?ImGui_ImplVulkanH_GetMinImageCountFromPresentMode@@YAHW4VkPresentModeKHR@@@Z PROC ; ImGui_ImplVulkanH_GetMinImageCountFromPresentMode, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 986
$LN11:
	sub	rsp, 40					; 00000028H
; Line 987
	cmp	ecx, 1
	jne	SHORT $LN2@ImGui_Impl
; Line 988
	mov	eax, 3
; Line 995
	add	rsp, 40					; 00000028H
	ret	0
$LN2@ImGui_Impl:
; Line 989
	lea	eax, DWORD PTR [rcx-2]
	cmp	eax, 1
	jbe	SHORT $LN4@ImGui_Impl
; Line 991
	test	ecx, ecx
	je	SHORT $LN9@ImGui_Impl
; Line 993
	mov	r8d, 993				; 000003e1H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
$LN9@ImGui_Impl:
; Line 995
	mov	eax, 1
	add	rsp, 40					; 00000028H
	ret	0
$LN4@ImGui_Impl:
; Line 990
	mov	eax, 2
; Line 995
	add	rsp, 40					; 00000028H
	ret	0
?ImGui_ImplVulkanH_GetMinImageCountFromPresentMode@@YAHW4VkPresentModeKHR@@@Z ENDP ; ImGui_ImplVulkanH_GetMinImageCountFromPresentMode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z
_TEXT	SEGMENT
avail_modes$ = 32
physical_device$ = 96
surface$ = 104
request_modes$ = 112
avail_count$ = 120
request_modes_count$ = 120
?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z PROC ; ImGui_ImplVulkanH_SelectPresentMode, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 917
$LN51:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
	movsxd	rbx, r9d
	mov	rsi, r8
	mov	rdi, rdx
	mov	r15, rcx
; Line 918
	test	r8, r8
	jne	SHORT $LN10@ImGui_Impl
	mov	r8d, 918				; 00000396H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CG@BMDGPKIK@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAm?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$CB@
	call	QWORD PTR __imp__wassert
$LN10@ImGui_Impl:
; Line 919
	test	ebx, ebx
	jg	SHORT $LN11@ImGui_Impl
	mov	r8d, 919				; 00000397H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DA@BJBCIAAE@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAm?$AAo?$AAd?$AAe?$AAs?$AA_?$AAc@
	call	QWORD PTR __imp__wassert
$LN11@ImGui_Impl:
; Line 922
	mov	DWORD PTR avail_count$[rsp], 0
; Line 923
	xor	r9d, r9d
	lea	r8, QWORD PTR avail_count$[rsp]
	mov	rdx, rdi
	mov	rcx, r15
	call	vkGetPhysicalDeviceSurfacePresentModesKHR
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	mov	QWORD PTR avail_modes$[rsp], 0
	xor	ebp, ebp
	mov	QWORD PTR avail_modes$[rsp+8], rbp
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 925
	mov	r14d, DWORD PTR avail_count$[rsp]
	test	r14d, r14d
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	jle	SHORT $LN23@ImGui_Impl
; Line 1340
	mov	eax, r14d
	mov	ecx, 8
	cmp	r14d, ecx
	cmovl	eax, ecx
; Line 1341
	test	eax, eax
; Line 1344
	jle	SHORT $LN23@ImGui_Impl
	movsxd	rcx, eax
	shl	rcx, 2
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	rbp, rax
$LN23@ImGui_Impl:
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 926
	mov	r9, rbp
	lea	r8, QWORD PTR avail_count$[rsp]
	mov	rdx, rdi
	mov	rcx, r15
	call	vkGetPhysicalDeviceSurfacePresentModesKHR
; Line 930
	mov	r12, rbx
	test	ebx, ebx
	jle	SHORT $LN47@ImGui_Impl
	xor	r15d, r15d
	mov	ecx, DWORD PTR avail_count$[rsp]
$LL4@ImGui_Impl:
; Line 931
	xor	ebx, ebx
	test	ecx, ecx
	je	SHORT $LN2@ImGui_Impl
	npad	4
$LL7@ImGui_Impl:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, r14d
	jl	SHORT $LN29@ImGui_Impl
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	mov	ecx, DWORD PTR avail_count$[rsp]
$LN29@ImGui_Impl:
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 932
	mov	edi, DWORD PTR [rsi]
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	movsxd	rax, ebx
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 932
	cmp	edi, DWORD PTR [rbp+rax*4]
	je	SHORT $LN13@ImGui_Impl
; Line 931
	inc	ebx
	cmp	ebx, ecx
	jb	SHORT $LL7@ImGui_Impl
$LN2@ImGui_Impl:
; Line 930
	inc	r15
	add	rsi, 4
	cmp	r15, r12
	jl	SHORT $LL4@ImGui_Impl
$LN47@ImGui_Impl:
; Line 935
	mov	edi, 2
$LN13@ImGui_Impl:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	test	rbp, rbp
	je	SHORT $LN48@ImGui_Impl
	mov	rcx, rbp
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN48@ImGui_Impl:
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 936
	mov	eax, edi
	mov	rbx, QWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+104]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
?ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z ENDP ; ImGui_ImplVulkanH_SelectPresentMode
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
avail_modes$ = 32
physical_device$ = 96
surface$ = 104
request_modes$ = 112
avail_count$ = 120
request_modes_count$ = 120
?dtor$0@?0??ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z@4HA PROC ; `ImGui_ImplVulkanH_SelectPresentMode'::`1'::dtor$0
	lea	rcx, QWORD PTR avail_modes$[rdx]
	jmp	??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ ; ImVector<enum VkPresentModeKHR>::~ImVector<enum VkPresentModeKHR>
?dtor$0@?0??ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z@4HA ENDP ; `ImGui_ImplVulkanH_SelectPresentMode'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
avail_modes$ = 32
physical_device$ = 96
surface$ = 104
request_modes$ = 112
avail_count$ = 120
request_modes_count$ = 120
?dtor$0@?0??ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z@4HA PROC ; `ImGui_ImplVulkanH_SelectPresentMode'::`1'::dtor$0
	lea	rcx, QWORD PTR avail_modes$[rdx]
	jmp	??1?$ImVector@W4VkPresentModeKHR@@@@QEAA@XZ ; ImVector<enum VkPresentModeKHR>::~ImVector<enum VkPresentModeKHR>
?dtor$0@?0??ImGui_ImplVulkanH_SelectPresentMode@@YA?AW4VkPresentModeKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW41@H@Z@4HA ENDP ; `ImGui_ImplVulkanH_SelectPresentMode'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z
_TEXT	SEGMENT
avail_format$ = 32
physical_device$ = 96
surface$ = 104
request_formats$ = 112
avail_count$ = 120
request_formats_count$ = 120
request_color_space$ = 128
?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z PROC ; ImGui_ImplVulkanH_SelectSurfaceFormat, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 873
$LN88:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
	movsxd	rbx, r9d
	mov	r15, r8
	mov	rsi, rdx
	mov	rbp, rcx
; Line 874
	test	r8, r8
	jne	SHORT $LN14@ImGui_Impl
	mov	r8d, 874				; 0000036aH
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CK@KGIELIHG@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAs@
	call	QWORD PTR __imp__wassert
$LN14@ImGui_Impl:
; Line 875
	test	ebx, ebx
	jg	SHORT $LN15@ImGui_Impl
	mov	r8d, 875				; 0000036bH
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DE@PDNAAGKG@?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA_?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAs@
	call	QWORD PTR __imp__wassert
$LN15@ImGui_Impl:
; Line 882
	xor	r9d, r9d
	lea	r8, QWORD PTR avail_count$[rsp]
	mov	rdx, rsi
	mov	rcx, rbp
	call	vkGetPhysicalDeviceSurfaceFormatsKHR
; File E:\reps\ocornut\imgui\imgui.h
; Line 1317
	xor	r12d, r12d
	mov	QWORD PTR avail_format$[rsp], r12
	mov	r14d, r12d
	mov	QWORD PTR avail_format$[rsp+8], r12
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 884
	mov	edi, DWORD PTR avail_count$[rsp]
	test	edi, edi
; File E:\reps\ocornut\imgui\imgui.h
; Line 1341
	jle	SHORT $LN29@ImGui_Impl
; Line 1340
	mov	eax, edi
	mov	ecx, 8
	cmp	edi, ecx
	cmovl	eax, ecx
; Line 1341
	test	eax, eax
; Line 1344
	jle	SHORT $LN29@ImGui_Impl
	movsxd	rcx, eax
	shl	rcx, 3
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	r14, rax
$LN29@ImGui_Impl:
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 885
	mov	r9, r14
	lea	r8, QWORD PTR avail_count$[rsp]
	mov	rdx, rsi
	mov	rcx, rbp
	call	vkGetPhysicalDeviceSurfaceFormatsKHR
; Line 888
	cmp	DWORD PTR avail_count$[rsp], 1
	jne	SHORT $LN8@ImGui_Impl
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	test	edi, edi
	jg	SHORT $LN35@ImGui_Impl
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN35@ImGui_Impl:
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 890
	cmp	DWORD PTR [r14], 0
	jne	$LN81@ImGui_Impl
; Line 894
	mov	ebx, DWORD PTR request_color_space$[rsp]
	shl	rbx, 32					; 00000020H
	mov	eax, DWORD PTR [r15]
	or	rbx, rax
	jmp	$LN19@ImGui_Impl
$LN8@ImGui_Impl:
; Line 906
	mov	r13, rbx
	test	ebx, ebx
	jle	SHORT $LN81@ImGui_Impl
	mov	ebp, DWORD PTR request_color_space$[rsp]
$LL4@ImGui_Impl:
; Line 907
	xor	ebx, ebx
	cmp	DWORD PTR avail_count$[rsp], ebx
	jbe	SHORT $LN2@ImGui_Impl
	npad	3
$LL7@ImGui_Impl:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, edi
	jl	SHORT $LN49@ImGui_Impl
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN49@ImGui_Impl:
	movsxd	rsi, ebx
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 908
	mov	eax, DWORD PTR [r15]
	cmp	DWORD PTR [r14+rsi*8], eax
	jne	SHORT $LN5@ImGui_Impl
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, edi
	jl	SHORT $LN52@ImGui_Impl
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN52@ImGui_Impl:
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 908
	cmp	DWORD PTR [r14+rsi*8+4], ebp
	je	SHORT $LN73@ImGui_Impl
$LN5@ImGui_Impl:
; Line 907
	inc	ebx
	cmp	ebx, DWORD PTR avail_count$[rsp]
	jb	SHORT $LL7@ImGui_Impl
$LN2@ImGui_Impl:
; Line 906
	inc	r12
	add	r15, 4
	cmp	r12, r13
	jl	SHORT $LL4@ImGui_Impl
$LN81@ImGui_Impl:
; Line 912
	test	edi, edi
	jg	SHORT $LN62@ImGui_Impl
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN62@ImGui_Impl:
	mov	rbx, QWORD PTR [r14]
$LN19@ImGui_Impl:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1320
	test	r14, r14
	je	SHORT $LN82@ImGui_Impl
	mov	rcx, r14
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN82@ImGui_Impl:
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 914
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+104]
	mov	rsi, QWORD PTR [rsp+112]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
$LN73@ImGui_Impl:
; File E:\reps\ocornut\imgui\imgui.h
; Line 1326
	cmp	ebx, edi
	jl	SHORT $LN55@ImGui_Impl
	mov	r8d, 1326				; 0000052eH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN55@ImGui_Impl:
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 909
	mov	rbx, QWORD PTR [r14+rsi*8]
; Line 912
	jmp	SHORT $LN19@ImGui_Impl
	int	3
?ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z ENDP ; ImGui_ImplVulkanH_SelectSurfaceFormat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
avail_format$ = 32
physical_device$ = 96
surface$ = 104
request_formats$ = 112
avail_count$ = 120
request_formats_count$ = 120
request_color_space$ = 128
?dtor$0@?0??ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z@4HA PROC ; `ImGui_ImplVulkanH_SelectSurfaceFormat'::`1'::dtor$0
	lea	rcx, QWORD PTR avail_format$[rdx]
	jmp	??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ ; ImVector<VkSurfaceFormatKHR>::~ImVector<VkSurfaceFormatKHR>
?dtor$0@?0??ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z@4HA ENDP ; `ImGui_ImplVulkanH_SelectSurfaceFormat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
avail_format$ = 32
physical_device$ = 96
surface$ = 104
request_formats$ = 112
avail_count$ = 120
request_formats_count$ = 120
request_color_space$ = 128
?dtor$0@?0??ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z@4HA PROC ; `ImGui_ImplVulkanH_SelectSurfaceFormat'::`1'::dtor$0
	lea	rcx, QWORD PTR avail_format$[rdx]
	jmp	??1?$ImVector@UVkSurfaceFormatKHR@@@@QEAA@XZ ; ImVector<VkSurfaceFormatKHR>::~ImVector<VkSurfaceFormatKHR>
?dtor$0@?0??ImGui_ImplVulkanH_SelectSurfaceFormat@@YA?AUVkSurfaceFormatKHR@@PEAUVkPhysicalDevice_T@@PEAUVkSurfaceKHR_T@@PEBW4VkFormat@@HW4VkColorSpaceKHR@@@Z@4HA ENDP ; `ImGui_ImplVulkanH_SelectSurfaceFormat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z
_TEXT	SEGMENT
$T1 = 32
instance$ = 176
device$ = 184
wd$ = 192
allocator$ = 200
?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z PROC ; ImGui_ImplVulkanH_DestroyWindow, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 1168
$LN17:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rdi
	push	r12
	push	r13
	push	r15
	sub	rsp, 128				; 00000080H
	mov	r13, rcx
	mov	r15, r9
; Line 1169
	mov	rcx, rdx
	mov	rbx, r8
	mov	rbp, rdx
	call	vkDeviceWaitIdle
; Line 1172
	xor	edi, edi
	mov	r12d, edi
	cmp	DWORD PTR [rbx+72], edi
	jbe	$LN3@ImGui_Impl
	mov	QWORD PTR [rsp+176], rsi
	mov	QWORD PTR [rsp+184], r14
	npad	10
$LL4@ImGui_Impl:
; Line 1174
	mov	r14d, r12d
; Line 1190
	mov	r8, r15
	mov	rcx, rbp
; Line 1174
	lea	rsi, QWORD PTR [r14+r14*2]
	shl	rsi, 4
	add	rsi, QWORD PTR [rbx+80]
; Line 1190
	mov	rdx, QWORD PTR [rsi+16]
	call	vkDestroyFence
; Line 1191
	mov	rdx, QWORD PTR [rsi]
	lea	r9, QWORD PTR [rsi+8]
	mov	r8d, 1
	mov	rcx, rbp
	call	vkFreeCommandBuffers
; Line 1192
	mov	rdx, QWORD PTR [rsi]
	mov	r8, r15
	mov	rcx, rbp
	call	vkDestroyCommandPool
; Line 1197
	mov	rdx, QWORD PTR [rsi+32]
	xor	eax, eax
	xor	edi, edi
	mov	QWORD PTR [rsi+16], rax
	mov	r8, r15
	mov	QWORD PTR [rsi+8], rax
	mov	rcx, rbp
	mov	QWORD PTR [rsi], rdi
	call	vkDestroyImageView
; Line 1198
	mov	rdx, QWORD PTR [rsi+40]
	mov	r8, r15
	mov	rcx, rbp
	call	vkDestroyFramebuffer
; Line 1175
	shl	r14, 4
; Line 1203
	mov	r8, r15
; Line 1175
	add	r14, QWORD PTR [rbx+88]
; Line 1203
	mov	rcx, rbp
	mov	rdx, QWORD PTR [r14]
	call	vkDestroySemaphore
; Line 1204
	mov	rdx, QWORD PTR [r14+8]
	mov	r8, r15
	mov	rcx, rbp
	call	vkDestroySemaphore
; Line 1172
	inc	r12d
; Line 1205
	mov	QWORD PTR [r14+8], rdi
	mov	QWORD PTR [r14], rdi
; Line 1172
	cmp	r12d, DWORD PTR [rbx+72]
	jb	$LL4@ImGui_Impl
	mov	r14, QWORD PTR [rsp+184]
	mov	rsi, QWORD PTR [rsp+176]
$LN3@ImGui_Impl:
; Line 1177
	mov	rcx, QWORD PTR [rbx+80]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 1178
	mov	rcx, QWORD PTR [rbx+88]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 1181
	mov	rdx, QWORD PTR [rbx+40]
	mov	r8, r15
	mov	rcx, rbp
	mov	QWORD PTR [rbx+80], rdi
	mov	QWORD PTR [rbx+88], rdi
	call	vkDestroyRenderPass
; Line 1182
	mov	rdx, QWORD PTR [rbx+8]
	mov	r8, r15
	mov	rcx, rbp
	call	vkDestroySwapchainKHR
; Line 1183
	mov	rdx, QWORD PTR [rbx+16]
	mov	r8, r15
	mov	rcx, r13
	call	vkDestroySurfaceKHR
	xorps	xmm2, xmm2
; Line 1185
	movups	XMMWORD PTR [rbx], xmm2
	movups	XMMWORD PTR [rbx+16], xmm2
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.h
; Line 121
	movups	XMMWORD PTR $T1[rsp+32], xmm2
; Line 122
	mov	DWORD PTR $T1[rsp+32], 2147483647	; 7fffffffH
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 1185
	movaps	xmm0, XMMWORD PTR $T1[rsp+32]
	movups	XMMWORD PTR [rbx+32], xmm0
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.h
; Line 121
	movups	XMMWORD PTR $T1[rsp+48], xmm2
; Line 123
	mov	BYTE PTR $T1[rsp+48], 1
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 1185
	movaps	xmm1, XMMWORD PTR $T1[rsp+48]
	movups	XMMWORD PTR [rbx+48], xmm1
	movups	XMMWORD PTR [rbx+64], xmm2
	movups	XMMWORD PTR [rbx+80], xmm2
; Line 1186
	mov	rbx, QWORD PTR [rsp+192]
	add	rsp, 128				; 00000080H
	pop	r15
	pop	r13
	pop	r12
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplVulkanH_DestroyWindow@@YAXPEAUVkInstance_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@@Z ENDP ; ImGui_ImplVulkanH_DestroyWindow
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkanH_CreateOrResizeWindow@@YAXPEAUVkInstance_T@@PEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@HHI@Z
_TEXT	SEGMENT
instance$ = 80
physical_device$ = 88
device$ = 96
wd$ = 104
queue_family$ = 112
allocator$ = 120
width$ = 128
height$ = 136
min_image_count$ = 144
?ImGui_ImplVulkanH_CreateOrResizeWindow@@YAXPEAUVkInstance_T@@PEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@HHI@Z PROC ; ImGui_ImplVulkanH_CreateOrResizeWindow, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 1161
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 1163
	mov	eax, DWORD PTR min_image_count$[rsp]
	mov	rdi, r9
	mov	rbx, QWORD PTR allocator$[rsp]
	mov	rsi, r8
	mov	DWORD PTR [rsp+48], eax
	mov	rbp, rdx
	mov	eax, DWORD PTR height$[rsp]
	mov	r9, rbx
	mov	DWORD PTR [rsp+40], eax
	mov	r8, rdi
	mov	eax, DWORD PTR width$[rsp]
	mov	rdx, rsi
	mov	rcx, rbp
	mov	DWORD PTR [rsp+32], eax
	call	?ImGui_ImplVulkanH_CreateWindowSwapChain@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@PEBUVkAllocationCallbacks@@HHI@Z ; ImGui_ImplVulkanH_CreateWindowSwapChain
; Line 1164
	mov	r9d, DWORD PTR queue_family$[rsp]
	mov	r8, rdi
	mov	rdx, rsi
	mov	QWORD PTR queue_family$[rsp], rbx
	mov	rcx, rbp
; Line 1165
	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
; Line 1164
	jmp	?ImGui_ImplVulkanH_CreateWindowCommandBuffers@@YAXPEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_CreateWindowCommandBuffers
?ImGui_ImplVulkanH_CreateOrResizeWindow@@YAXPEAUVkInstance_T@@PEAUVkPhysicalDevice_T@@PEAUVkDevice_T@@PEAUImGui_ImplVulkanH_Window@@IPEBUVkAllocationCallbacks@@HHI@Z ENDP ; ImGui_ImplVulkanH_CreateOrResizeWindow
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_SetMinImageCount@@YAXI@Z
_TEXT	SEGMENT
min_image_count$ = 48
?ImGui_ImplVulkan_SetMinImageCount@@YAXI@Z PROC		; ImGui_ImplVulkan_SetMinImageCount, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 843
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	ebx, ecx
; Line 844
	cmp	ecx, 2
	jae	SHORT $LN4@ImGui_Impl
	mov	r8d, 844				; 0000034cH
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CK@CFPAFBMF@?$AAm?$AAi?$AAn?$AA_?$AAi?$AAm?$AAa?$AAg?$AAe?$AA_?$AAc?$AAo?$AAu?$AAn?$AAt@
	call	QWORD PTR __imp__wassert
$LN4@ImGui_Impl:
; Line 845
	cmp	DWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+56, ebx
	je	SHORT $LN1@ImGui_Impl
; Line 849
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDeviceWaitIdle
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN6@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN6@ImGui_Impl:
; Line 851
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	rdx, OFFSET FLAT:?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_DestroyWindowRenderBuffers
; Line 852
	mov	DWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+56, ebx
$LN1@ImGui_Impl:
; Line 853
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?ImGui_ImplVulkan_SetMinImageCount@@YAXI@Z ENDP		; ImGui_ImplVulkan_SetMinImageCount
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_DestroyFontUploadObjects@@YAXXZ
_TEXT	SEGMENT
?ImGui_ImplVulkan_DestroyFontUploadObjects@@YAXXZ PROC	; ImGui_ImplVulkan_DestroyFontUploadObjects, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 781
$LN6:
	sub	rsp, 40					; 00000028H
; Line 783
	mov	rdx, QWORD PTR ?g_UploadBuffer@@3PEAUVkBuffer_T@@EA
	test	rdx, rdx
	je	SHORT $LN2@ImGui_Impl
; Line 785
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyBuffer
; Line 786
	mov	QWORD PTR ?g_UploadBuffer@@3PEAUVkBuffer_T@@EA, 0
$LN2@ImGui_Impl:
; Line 788
	mov	rdx, QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA
	test	rdx, rdx
	je	SHORT $LN3@ImGui_Impl
; Line 790
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkFreeMemory
; Line 791
	mov	QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA, 0
$LN3@ImGui_Impl:
; Line 793
	add	rsp, 40					; 00000028H
	ret	0
?ImGui_ImplVulkan_DestroyFontUploadObjects@@YAXXZ ENDP	; ImGui_ImplVulkan_DestroyFontUploadObjects
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_CreateFontsTexture@@YA_NPEAUVkCommandBuffer_T@@@Z
_TEXT	SEGMENT
width$ = 80
height$ = 84
map$1 = 88
pixels$ = 96
copy_barrier$2 = 112
info$3 = 112
info$4 = 112
region$5 = 208
range$6 = 208
alloc_info$7 = 208
alloc_info$8 = 208
req$9 = 264
desc_image$10 = 264
req$11 = 264
use_barrier$12 = 288
buffer_info$13 = 288
write_desc$14 = 288
__$ArrayPad$ = 368
command_buffer$ = 416
?ImGui_ImplVulkan_CreateFontsTexture@@YA_NPEAUVkCommandBuffer_T@@@Z PROC ; ImGui_ImplVulkan_CreateFontsTexture, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 438
$LN31:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rbp
	push	rdi
	push	r14
	lea	rbp, QWORD PTR [rsp-128]
	sub	rsp, 384				; 00000180H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rdi, rcx
; Line 440
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
; Line 444
	xor	r14d, r14d
	lea	r9, QWORD PTR height$[rsp]
	lea	r8, QWORD PTR width$[rsp]
	mov	QWORD PTR [rsp+32], r14
	lea	rdx, QWORD PTR pixels$[rsp]
	mov	rsi, rax
	mov	rcx, QWORD PTR [rax+160]
	call	?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z ; ImFontAtlas::GetTexDataAsRGBA32
; Line 445
	mov	r8d, DWORD PTR width$[rsp]
; Line 465
	lea	r9, OFFSET FLAT:?g_FontImage@@3PEAUVkImage_T@@EA
	mov	edx, DWORD PTR height$[rsp]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR info$4[rbp-224], xmm0
	mov	ecx, r8d
	mov	DWORD PTR info$4[rbp-224], edx
	imul	ecx, edx
	xor	eax, eax
	movups	XMMWORD PTR info$4[rbp-240], xmm0
	mov	DWORD PTR info$4[rbp-228], r8d
	lea	rdx, QWORD PTR info$4[rsp]
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	movups	XMMWORD PTR info$4[rbp-208], xmm0
	shl	ecx, 2
	movsxd	rbx, ecx
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	movups	XMMWORD PTR info$4[rsp], xmm0
	mov	QWORD PTR info$4[rbp-176], rax
	movups	XMMWORD PTR info$4[rbp-192], xmm0
	mov	DWORD PTR info$4[rsp], 14
	mov	DWORD PTR info$4[rbp-236], 1
	mov	DWORD PTR info$4[rbp-232], 37		; 00000025H
	mov	DWORD PTR info$4[rbp-220], 1
	mov	DWORD PTR info$4[rbp-216], 1
	mov	DWORD PTR info$4[rbp-212], 1
	mov	QWORD PTR info$4[rbp-208], 1
	mov	QWORD PTR info$4[rbp-200], 6
	mov	DWORD PTR info$4[rbp-176], r14d
	call	vkCreateImage
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN4@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN4@ImGui_Impl:
; Line 468
	mov	rdx, QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA
	lea	r8, QWORD PTR req$11[rbp-256]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkGetImageMemoryRequirements
; Line 471
	mov	rax, QWORD PTR req$11[rbp-256]
; Line 472
	mov	ecx, 1
	mov	edx, DWORD PTR req$11[rbp-240]
	mov	QWORD PTR alloc_info$8[rbp-240], rax
	mov	QWORD PTR alloc_info$8[rbp-252], r14
	mov	DWORD PTR alloc_info$8[rbp-244], r14d
	mov	DWORD PTR alloc_info$8[rbp-228], r14d
	mov	DWORD PTR alloc_info$8[rbp-256], 5
	call	?ImGui_ImplVulkan_MemoryType@@YAIII@Z	; ImGui_ImplVulkan_MemoryType
; Line 473
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	r9, OFFSET FLAT:?g_FontMemory@@3PEAUVkDeviceMemory_T@@EA
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	lea	rdx, QWORD PTR alloc_info$8[rbp-256]
	mov	DWORD PTR alloc_info$8[rbp-232], eax
	call	vkAllocateMemory
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN7@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN7@ImGui_Impl:
; Line 475
	mov	r8, QWORD PTR ?g_FontMemory@@3PEAUVkDeviceMemory_T@@EA
	xor	r9d, r9d
	mov	rdx, QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkBindImageMemory
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN10@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN10@ImGui_Impl:
; Line 483
	mov	rax, QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA
; Line 489
	lea	r9, OFFSET FLAT:?g_FontView@@3PEAUVkImageView_T@@EA
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	rdx, QWORD PTR info$3[rsp]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	mov	QWORD PTR info$3[rbp-232], rax
	mov	QWORD PTR info$3[rsp+4], r14
	mov	QWORD PTR info$3[rsp+12], r14
	mov	DWORD PTR info$3[rbp-236], r14d
	mov	QWORD PTR info$3[rbp-216], r14
	mov	QWORD PTR info$3[rbp-208], r14
	mov	QWORD PTR info$3[rbp-200], 1
	mov	QWORD PTR info$3[rbp-192], 1
	mov	QWORD PTR info$3[rbp-184], 1
	mov	DWORD PTR info$3[rsp], 15
	mov	DWORD PTR info$3[rbp-224], 1
	mov	DWORD PTR info$3[rbp-220], 37		; 00000025H
	call	vkCreateImageView
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN13@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN13@ImGui_Impl:
; Line 496
	mov	rax, QWORD PTR ?g_FontSampler@@3PEAUVkSampler_T@@EA
; Line 505
	lea	r8, QWORD PTR write_desc$14[rbp-256]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	xor	r9d, r9d
	mov	QWORD PTR desc_image$10[rbp-256], rax
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?g_FontView@@3PEAUVkImageView_T@@EA
	mov	QWORD PTR desc_image$10[rbp-248], rax
	mov	rax, QWORD PTR ?g_DescriptorSet@@3PEAUVkDescriptorSet_T@@EA
	lea	edx, QWORD PTR [r9+1]
	mov	QWORD PTR write_desc$14[rbp-240], rax
	lea	rax, QWORD PTR desc_image$10[rbp-256]
	mov	QWORD PTR write_desc$14[rbp-216], rax
	mov	QWORD PTR desc_image$10[rbp-240], 5
	mov	QWORD PTR write_desc$14[rbp-252], r14
	mov	DWORD PTR write_desc$14[rbp-244], r14d
	mov	QWORD PTR write_desc$14[rbp-232], r14
	movdqa	XMMWORD PTR write_desc$14[rbp-208], xmm0
	mov	DWORD PTR write_desc$14[rbp-256], 35	; 00000023H
	mov	DWORD PTR write_desc$14[rbp-224], 1
	mov	DWORD PTR write_desc$14[rbp-220], 1
	mov	QWORD PTR [rsp+32], r14
	call	vkUpdateDescriptorSets
; Line 515
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	r9, OFFSET FLAT:?g_UploadBuffer@@3PEAUVkBuffer_T@@EA
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	lea	rdx, QWORD PTR buffer_info$13[rbp-256]
	xorps	xmm0, xmm0
	mov	DWORD PTR buffer_info$13[rbp-236], r14d
	xorps	xmm1, xmm1
	mov	DWORD PTR buffer_info$13[rbp-256], 12
	movdqu	XMMWORD PTR buffer_info$13[rbp-252], xmm0
	mov	QWORD PTR buffer_info$13[rbp-232], rbx
	movdqu	XMMWORD PTR buffer_info$13[rbp-216], xmm1
	mov	QWORD PTR buffer_info$13[rbp-224], 1
	call	vkCreateBuffer
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN16@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN16@ImGui_Impl:
; Line 518
	mov	rdx, QWORD PTR ?g_UploadBuffer@@3PEAUVkBuffer_T@@EA
	lea	r8, QWORD PTR req$9[rbp-256]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkGetBufferMemoryRequirements
; Line 519
	mov	rcx, QWORD PTR req$9[rbp-248]
	cmp	QWORD PTR ?g_BufferMemoryAlignment@@3_KA, rcx
; Line 522
	mov	rax, QWORD PTR req$9[rbp-256]
	cmova	rcx, QWORD PTR ?g_BufferMemoryAlignment@@3_KA
; Line 523
	mov	edx, DWORD PTR req$9[rbp-240]
	mov	QWORD PTR ?g_BufferMemoryAlignment@@3_KA, rcx
	mov	ecx, 2
	mov	QWORD PTR alloc_info$7[rbp-252], r14
	mov	DWORD PTR alloc_info$7[rbp-244], r14d
	mov	DWORD PTR alloc_info$7[rbp-228], r14d
	mov	DWORD PTR alloc_info$7[rbp-256], 5
	mov	QWORD PTR alloc_info$7[rbp-240], rax
	call	?ImGui_ImplVulkan_MemoryType@@YAIII@Z	; ImGui_ImplVulkan_MemoryType
; Line 524
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	r9, OFFSET FLAT:?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	lea	rdx, QWORD PTR alloc_info$7[rbp-256]
	mov	DWORD PTR alloc_info$7[rbp-232], eax
	call	vkAllocateMemory
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN19@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN19@ImGui_Impl:
; Line 526
	mov	r8, QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA
	xor	r9d, r9d
	mov	rdx, QWORD PTR ?g_UploadBuffer@@3PEAUVkBuffer_T@@EA
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkBindBufferMemory
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN22@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN22@ImGui_Impl:
; Line 533
	mov	rdx, QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA
	lea	rax, QWORD PTR map$1[rsp]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	mov	r9, rbx
	mov	QWORD PTR [rsp+40], rax
	xor	r8d, r8d
	mov	DWORD PTR [rsp+32], r14d
	mov	QWORD PTR map$1[rsp], r14
	call	vkMapMemory
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN25@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN25@ImGui_Impl:
; Line 535
	mov	rdx, QWORD PTR pixels$[rsp]
	mov	r8, rbx
	mov	rcx, QWORD PTR map$1[rsp]
	call	memcpy
; Line 538
	mov	rax, QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA
; Line 540
	lea	r8, QWORD PTR range$6[rbp-256]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	mov	edx, 1
	mov	QWORD PTR range$6[rbp-240], rax
	mov	QWORD PTR range$6[rbp-252], r14
	mov	DWORD PTR range$6[rbp-244], r14d
	mov	QWORD PTR range$6[rbp-232], r14
	mov	DWORD PTR range$6[rbp-256], 6
	mov	QWORD PTR range$6[rbp-224], rbx
	call	vkFlushMappedMemoryRanges
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN28@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN28@ImGui_Impl:
; Line 542
	mov	rdx, QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkUnmapMemory
; Line 554
	mov	rax, QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA
; Line 558
	xor	r9d, r9d
	mov	QWORD PTR copy_barrier$2[rbp-216], rax
	mov	edx, 16384				; 00004000H
	lea	rax, QWORD PTR copy_barrier$2[rsp]
	mov	QWORD PTR copy_barrier$2[rsp+4], r14
	mov	QWORD PTR [rsp+72], rax
	mov	r8d, 4096				; 00001000H
	mov	DWORD PTR [rsp+64], 1
	mov	rcx, rdi
	mov	QWORD PTR [rsp+56], r14
	mov	DWORD PTR [rsp+48], r14d
	mov	QWORD PTR [rsp+40], r14
	mov	DWORD PTR [rsp+32], r14d
	mov	QWORD PTR copy_barrier$2[rsp+12], r14
	mov	QWORD PTR copy_barrier$2[rbp-208], 1
	mov	QWORD PTR copy_barrier$2[rbp-200], 1
	mov	QWORD PTR copy_barrier$2[rbp-192], 1
	mov	DWORD PTR copy_barrier$2[rsp], 45	; 0000002dH
	mov	QWORD PTR copy_barrier$2[rbp-236], 4096	; 00001000H
	mov	DWORD PTR copy_barrier$2[rbp-228], 7
	mov	QWORD PTR copy_barrier$2[rbp-224], -1
	call	vkCmdPipelineBarrier
; Line 563
	mov	eax, DWORD PTR width$[rsp]
; Line 566
	mov	r9d, 7
	mov	r8, QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA
	mov	rcx, rdi
	mov	rdx, QWORD PTR ?g_UploadBuffer@@3PEAUVkBuffer_T@@EA
	mov	DWORD PTR region$5[rbp-212], eax
	mov	eax, DWORD PTR height$[rsp]
	mov	DWORD PTR region$5[rbp-208], eax
	lea	rax, QWORD PTR region$5[rbp-256]
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 1
	mov	QWORD PTR region$5[rbp-256], r14
	mov	QWORD PTR region$5[rbp-248], r14
	mov	QWORD PTR region$5[rbp-236], r14
	mov	QWORD PTR region$5[rbp-224], r14
	mov	DWORD PTR region$5[rbp-216], r14d
	mov	DWORD PTR region$5[rbp-240], 1
	mov	DWORD PTR region$5[rbp-228], 1
	mov	DWORD PTR region$5[rbp-204], 1
	call	vkCmdCopyBufferToImage
; Line 576
	mov	rax, QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA
; Line 580
	xor	r9d, r9d
	mov	QWORD PTR use_barrier$12[rbp-216], rax
	mov	edx, 4096				; 00001000H
	lea	rax, QWORD PTR use_barrier$12[rbp-256]
	mov	QWORD PTR use_barrier$12[rbp-252], r14
	mov	QWORD PTR [rsp+72], rax
	mov	r8d, 128				; 00000080H
	mov	DWORD PTR [rsp+64], 1
	mov	rcx, rdi
	mov	QWORD PTR [rsp+56], r14
	mov	DWORD PTR [rsp+48], r14d
	mov	QWORD PTR [rsp+40], r14
	mov	DWORD PTR [rsp+32], r14d
	mov	DWORD PTR use_barrier$12[rbp-244], r14d
	mov	QWORD PTR use_barrier$12[rbp-208], 1
	mov	QWORD PTR use_barrier$12[rbp-200], 1
	mov	QWORD PTR use_barrier$12[rbp-192], 1
	mov	DWORD PTR use_barrier$12[rbp-256], 45	; 0000002dH
	mov	DWORD PTR use_barrier$12[rbp-240], 4096	; 00001000H
	mov	DWORD PTR use_barrier$12[rbp-236], 32	; 00000020H
	mov	DWORD PTR use_barrier$12[rbp-232], 7
	mov	DWORD PTR use_barrier$12[rbp-228], 5
	mov	QWORD PTR use_barrier$12[rbp-224], -1
	call	vkCmdPipelineBarrier
; Line 584
	mov	rax, QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA
	mov	rcx, QWORD PTR [rsi+160]
	mov	QWORD PTR [rcx+8], rax
; Line 586
	mov	al, 1
; Line 587
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+384]
	mov	rbx, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplVulkan_CreateFontsTexture@@YA_NPEAUVkCommandBuffer_T@@@Z ENDP ; ImGui_ImplVulkan_CreateFontsTexture
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z
_TEXT	SEGMENT
global_vtx_offset$1$ = 48
idx_dst$1 = 48
fb_width$1$ = 56
global_idx_offset$1$ = 60
n$1$ = 64
vtx_dst$2 = 64
command_buffer$GSCopy$1$ = 72
tv1074 = 80
range$3 = 96
scissor$4 = 176
__$ArrayPad$ = 192
draw_data$ = 352
command_buffer$ = 360
?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z PROC ; ImGui_ImplVulkan_RenderDrawData, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 316
$LN67:
	mov	r11, rsp
	push	rbp
	push	rsi
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [r11-88]
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
; Line 318
	movss	xmm0, DWORD PTR [rcx+36]
	mov	r14, rdx
	mulss	xmm0, DWORD PTR [rcx+44]
	mov	r15, rcx
	mov	QWORD PTR command_buffer$GSCopy$1$[rsp], rdx
; Line 319
	movss	xmm1, DWORD PTR [rcx+48]
	mulss	xmm1, DWORD PTR [rcx+40]
	cvttss2si esi, xmm0
	cvttss2si r13d, xmm1
	mov	DWORD PTR fb_width$1$[rsp], esi
; Line 320
	test	esi, esi
	jle	$LN12@ImGui_Impl
	test	r13d, r13d
	jle	$LN12@ImGui_Impl
; Line 327
	mov	QWORD PTR [r11+24], rbx
	xor	ebx, ebx
	cmp	QWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A+8, rbx
	mov	QWORD PTR [r11-56], r12
	movaps	XMMWORD PTR [r11-88], xmm7
	movaps	XMMWORD PTR [r11-104], xmm8
	movaps	XMMWORD PTR [r11-120], xmm9
	movaps	XMMWORD PTR [r11-136], xmm10
	jne	SHORT $LN13@ImGui_Impl
; Line 330
	mov	rax, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+60
	mov	DWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A+4, eax
; Line 331
	mov	eax, eax
	mov	DWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A, ebx
	lea	rcx, QWORD PTR [rax+rax*2]
	shl	rcx, 4
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
; Line 332
	mov	ecx, DWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A+4
	xor	edx, edx
	mov	QWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A+8, rax
	lea	r8, QWORD PTR [rcx+rcx*2]
	mov	rcx, rax
	shl	r8, 4
	call	memset
$LN13@ImGui_Impl:
; Line 334
	mov	ecx, DWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A+4
	cmp	ecx, DWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+60
	je	SHORT $LN27@ImGui_Impl
	mov	r8d, 334				; 0000014eH
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DI@JLBGOBMP@?$AAw?$AAr?$AAb?$AA?9?$AA?$DO?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAv@
	call	QWORD PTR __imp__wassert
	mov	ecx, DWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A+4
$LN27@ImGui_Impl:
; Line 335
	mov	eax, DWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A
	xor	edx, edx
	inc	eax
	mov	QWORD PTR [rsp+296], rdi
	div	ecx
	mov	ecx, edx
	mov	DWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A, ecx
; Line 338
	movsxd	rax, DWORD PTR [r15+24]
	lea	r12, QWORD PTR [rdx+rdx*2]
	shl	r12, 4
	add	r12, QWORD PTR ?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A+8
	test	eax, eax
	jle	$LN14@ImGui_Impl
; Line 342
	movsxd	rdi, DWORD PTR [r15+20]
	lea	rbx, QWORD PTR [rax+rax*4]
	shl	rbx, 2
; Line 343
	lea	rcx, QWORD PTR [r12+32]
	add	rdi, rdi
	lea	r8, QWORD PTR [r12+16]
	cmp	QWORD PTR [rcx], 0
	je	SHORT $LN51@ImGui_Impl
	cmp	QWORD PTR [r8], rbx
	jae	SHORT $LN15@ImGui_Impl
$LN51@ImGui_Impl:
; Line 344
	mov	r9, rbx
	mov	DWORD PTR [rsp+32], 128			; 00000080H
	mov	rdx, r12
	call	?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z ; CreateOrResizeBuffer
$LN15@ImGui_Impl:
; Line 345
	cmp	QWORD PTR [r12+40], 0
	lea	rcx, QWORD PTR [r12+40]
	lea	r8, QWORD PTR [r12+24]
	je	SHORT $LN52@ImGui_Impl
	cmp	QWORD PTR [r8], rdi
	jae	SHORT $LN17@ImGui_Impl
$LN52@ImGui_Impl:
; Line 346
	lea	rdx, QWORD PTR [r12+8]
	mov	DWORD PTR [rsp+32], 64			; 00000040H
	mov	r9, rdi
	call	?CreateOrResizeBuffer@@YAXAEAPEAUVkBuffer_T@@AEAPEAUVkDeviceMemory_T@@AEA_K_KW4VkBufferUsageFlagBits@@@Z ; CreateOrResizeBuffer
$LN17@ImGui_Impl:
; Line 351
	mov	rdx, QWORD PTR [r12]
	lea	rax, QWORD PTR vtx_dst$2[rsp]
	xor	ecx, ecx
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], ecx
	mov	r9, rbx
	mov	QWORD PTR vtx_dst$2[rsp], rcx
	xor	r8d, r8d
	mov	QWORD PTR idx_dst$1[rsp], rcx
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkMapMemory
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN29@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN29@ImGui_Impl:
; Line 353
	mov	rdx, QWORD PTR [r12+8]
	lea	rax, QWORD PTR idx_dst$1[rsp]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	xor	ebx, ebx
	mov	QWORD PTR [rsp+40], rax
	mov	r9, rdi
	xor	r8d, r8d
	mov	DWORD PTR [rsp+32], ebx
	call	vkMapMemory
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN32@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN32@ImGui_Impl:
; Line 355
	mov	edi, ebx
	cmp	DWORD PTR [r15+16], ebx
	jle	SHORT $LN3@ImGui_Impl
; Line 345
	mov	r9, QWORD PTR vtx_dst$2[rsp]
	mov	rsi, rbx
	npad	5
$LL4@ImGui_Impl:
; Line 357
	mov	rax, QWORD PTR [r15+8]
; Line 358
	mov	rcx, r9
	mov	rbx, QWORD PTR [rsi+rax]
	movsxd	rax, DWORD PTR [rbx+32]
	mov	rdx, QWORD PTR [rbx+40]
	lea	r8, QWORD PTR [rax+rax*4]
	shl	r8, 2
	call	memcpy
; Line 359
	movsxd	r8, DWORD PTR [rbx+16]
	mov	rdx, QWORD PTR [rbx+24]
	add	r8, r8
	mov	rcx, QWORD PTR idx_dst$1[rsp]
	call	memcpy
; Line 360
	movsxd	rax, DWORD PTR [rbx+32]
	lea	rsi, QWORD PTR [rsi+8]
	inc	edi
	lea	rcx, QWORD PTR [rax+rax*4]
	mov	rax, QWORD PTR vtx_dst$2[rsp]
	lea	r9, QWORD PTR [rax+rcx*4]
; Line 361
	mov	rax, QWORD PTR idx_dst$1[rsp]
	mov	QWORD PTR vtx_dst$2[rsp], r9
	movsxd	rcx, DWORD PTR [rbx+16]
	lea	rcx, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR idx_dst$1[rsp], rcx
	cmp	edi, DWORD PTR [r15+16]
	jl	SHORT $LL4@ImGui_Impl
	mov	esi, DWORD PTR fb_width$1$[rsp]
	xor	ebx, ebx
$LN3@ImGui_Impl:
; Line 365
	mov	rax, QWORD PTR [r12]
; Line 370
	lea	r8, QWORD PTR range$3[rsp]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	mov	edx, 2
	mov	QWORD PTR range$3[rsp+16], rax
	mov	rax, QWORD PTR [r12+8]
	mov	QWORD PTR range$3[rbp-200], rax
	mov	QWORD PTR range$3[rsp+4], rbx
	mov	DWORD PTR range$3[rsp+12], ebx
	mov	QWORD PTR range$3[rsp+24], rbx
	mov	QWORD PTR range$3[rbp-212], rbx
	mov	DWORD PTR range$3[rbp-204], ebx
	mov	QWORD PTR range$3[rbp-192], rbx
	mov	DWORD PTR range$3[rsp], 6
	mov	QWORD PTR range$3[rbp-224], -1
	mov	DWORD PTR range$3[rbp-216], 6
	mov	QWORD PTR range$3[rbp-184], -1
	call	vkFlushMappedMemoryRanges
; Line 232
	mov	rdx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80
	test	rdx, rdx
	je	SHORT $LN35@ImGui_Impl
; Line 233
	mov	ecx, eax
	call	rdx
$LN35@ImGui_Impl:
; Line 372
	mov	rdx, QWORD PTR [r12]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkUnmapMemory
; Line 373
	mov	rdx, QWORD PTR [r12+8]
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkUnmapMemory
$LN14@ImGui_Impl:
; Line 377
	mov	r9d, esi
	mov	DWORD PTR [rsp+32], r13d
	mov	r8, r12
	mov	rdx, r14
	mov	rcx, r15
	call	?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z ; ImGui_ImplVulkan_SetupRenderState
; Line 387
	cmp	DWORD PTR [r15+16], 0
	mov	ecx, ebx
	movss	xmm7, DWORD PTR [r15+28]
	mov	edx, ebx
	movss	xmm8, DWORD PTR [r15+32]
	mov	r9d, ebx
	movss	xmm9, DWORD PTR [r15+44]
	movss	xmm10, DWORD PTR [r15+48]
	mov	DWORD PTR global_vtx_offset$1$[rsp], ebx
	mov	DWORD PTR global_idx_offset$1$[rsp], ebx
	mov	DWORD PTR n$1$[rsp], ebx
	jle	$LN64@ImGui_Impl
; Line 345
	movaps	XMMWORD PTR [rsp+272], xmm6
	mov	r8, rbx
	xorps	xmm6, xmm6
	mov	QWORD PTR tv1074[rsp], rbx
	npad	1
$LL7@ImGui_Impl:
; Line 389
	mov	rax, QWORD PTR [r15+8]
; Line 390
	mov	edi, ebx
	mov	rsi, QWORD PTR [r8+rax]
	mov	eax, DWORD PTR [rsi]
	test	eax, eax
	jle	$LN57@ImGui_Impl
; Line 392
	mov	r14, rbx
; File E:\reps\ocornut\imgui\imgui.h
; Line 1327
	cmp	ebx, eax
	jl	SHORT $LN39@ImGui_Impl
	mov	r8d, 1327				; 0000052fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN39@ImGui_Impl:
	mov	rbx, QWORD PTR [rsi+8]
	add	rbx, r14
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 393
	mov	rax, QWORD PTR [rbx+40]
	test	rax, rax
	je	SHORT $LN19@ImGui_Impl
; Line 397
	cmp	rax, -1
	jne	SHORT $LN21@ImGui_Impl
; Line 398
	mov	r9d, DWORD PTR fb_width$1$[rsp]
	mov	r8, r12
	mov	rdx, QWORD PTR command_buffer$GSCopy$1$[rsp]
	mov	rcx, r15
	mov	DWORD PTR [rsp+32], r13d
	call	?ImGui_ImplVulkan_SetupRenderState@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@PEAUImGui_ImplVulkanH_FrameRenderBuffers@@HH@Z ; ImGui_ImplVulkan_SetupRenderState
	jmp	$LN8@ImGui_Impl
$LN21@ImGui_Impl:
; Line 400
	mov	rdx, rbx
	mov	rcx, rsi
	call	rax
; Line 401
	jmp	$LN8@ImGui_Impl
$LN19@ImGui_Impl:
; Line 406
	movss	xmm1, DWORD PTR [rbx+4]
	xorps	xmm0, xmm0
; Line 411
	cvtsi2ss xmm0, DWORD PTR fb_width$1$[rsp]
	movss	xmm4, DWORD PTR [rbx+8]
	subss	xmm1, xmm7
	movss	xmm2, DWORD PTR [rbx+12]
	subss	xmm4, xmm8
	movss	xmm3, DWORD PTR [rbx+16]
	subss	xmm2, xmm7
	subss	xmm3, xmm8
	mulss	xmm1, xmm9
	mulss	xmm4, xmm10
	comiss	xmm0, xmm1
	mulss	xmm2, xmm9
	mulss	xmm3, xmm10
	jbe	$LN8@ImGui_Impl
	movd	xmm0, r13d
	cvtdq2ps xmm0, xmm0
	comiss	xmm0, xmm4
	jbe	$LN8@ImGui_Impl
	comiss	xmm2, xmm6
	jb	SHORT $LN8@ImGui_Impl
	comiss	xmm3, xmm6
	jb	SHORT $LN8@ImGui_Impl
; Line 425
	mov	rcx, QWORD PTR command_buffer$GSCopy$1$[rsp]
	lea	r9, QWORD PTR scissor$4[rbp-256]
	movaps	xmm0, xmm6
	xor	edx, edx
	maxss	xmm0, xmm1
	movaps	xmm1, xmm6
	maxss	xmm1, xmm4
	lea	r8d, QWORD PTR [rdx+1]
	cvttss2si eax, xmm0
	subss	xmm2, xmm0
	mov	DWORD PTR scissor$4[rbp-256], eax
	subss	xmm3, xmm1
	cvttss2si eax, xmm1
	mov	DWORD PTR scissor$4[rbp-252], eax
	cvttss2si rax, xmm2
	mov	DWORD PTR scissor$4[rbp-248], eax
	cvttss2si rax, xmm3
	mov	DWORD PTR scissor$4[rbp-244], eax
	call	vkCmdSetScissor
; Line 428
	mov	ecx, DWORD PTR global_vtx_offset$1$[rsp]
	mov	r8d, 1
	add	ecx, DWORD PTR [rbx+32]
	mov	r9d, DWORD PTR global_idx_offset$1$[rsp]
	add	r9d, DWORD PTR [rbx+36]
	mov	edx, DWORD PTR [rbx]
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], ecx
	mov	rcx, QWORD PTR command_buffer$GSCopy$1$[rsp]
	call	vkCmdDrawIndexed
$LN8@ImGui_Impl:
; Line 390
	mov	eax, DWORD PTR [rsi]
	inc	edi
	add	r14, 56					; 00000038H
	cmp	edi, eax
	jl	$LN39@ImGui_Impl
	mov	ecx, DWORD PTR global_vtx_offset$1$[rsp]
	xor	ebx, ebx
	mov	edx, DWORD PTR global_idx_offset$1$[rsp]
	mov	r8, QWORD PTR tv1074[rsp]
	mov	r9d, DWORD PTR n$1$[rsp]
$LN57@ImGui_Impl:
; Line 432
	add	edx, DWORD PTR [rsi+16]
	inc	r9d
; Line 433
	add	ecx, DWORD PTR [rsi+32]
	add	r8, 8
	mov	DWORD PTR global_idx_offset$1$[rsp], edx
	mov	DWORD PTR global_vtx_offset$1$[rsp], ecx
	mov	DWORD PTR n$1$[rsp], r9d
	mov	QWORD PTR tv1074[rsp], r8
	cmp	r9d, DWORD PTR [r15+16]
	jl	$LL7@ImGui_Impl
; Line 387
	movaps	xmm6, XMMWORD PTR [rsp+272]
$LN64@ImGui_Impl:
	mov	rdi, QWORD PTR [rsp+296]
	movaps	xmm8, XMMWORD PTR [rsp+240]
	movaps	xmm7, XMMWORD PTR [rsp+256]
	mov	r12, QWORD PTR [rsp+288]
	movaps	xmm9, XMMWORD PTR [rsp+224]
	mov	rbx, QWORD PTR [rsp+368]
	movaps	xmm10, XMMWORD PTR [rsp+208]
$LN12@ImGui_Impl:
; Line 435
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 304				; 00000130H
	pop	r15
	pop	r14
	pop	r13
	pop	rsi
	pop	rbp
	ret	0
?ImGui_ImplVulkan_RenderDrawData@@YAXPEAUImDrawData@@PEAUVkCommandBuffer_T@@@Z ENDP ; ImGui_ImplVulkan_RenderDrawData
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_NewFrame@@YAXXZ
_TEXT	SEGMENT
?ImGui_ImplVulkan_NewFrame@@YAXXZ PROC			; ImGui_ImplVulkan_NewFrame, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 840
	ret	0
?ImGui_ImplVulkan_NewFrame@@YAXXZ ENDP			; ImGui_ImplVulkan_NewFrame
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_Shutdown@@YAXXZ
_TEXT	SEGMENT
?ImGui_ImplVulkan_Shutdown@@YAXXZ PROC			; ImGui_ImplVulkan_Shutdown, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 834
$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
; Line 798
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	lea	rdx, OFFSET FLAT:?g_MainWindowRenderBuffers@@3UImGui_ImplVulkanH_WindowRenderBuffers@@A
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	?ImGui_ImplVulkanH_DestroyWindowRenderBuffers@@YAXPEAUVkDevice_T@@PEAUImGui_ImplVulkanH_WindowRenderBuffers@@PEBUVkAllocationCallbacks@@@Z ; ImGui_ImplVulkanH_DestroyWindowRenderBuffers
; Line 783
	mov	rdx, QWORD PTR ?g_UploadBuffer@@3PEAUVkBuffer_T@@EA
	xor	ebx, ebx
	test	rdx, rdx
	je	SHORT $LN13@ImGui_Impl
; Line 785
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyBuffer
; Line 786
	mov	QWORD PTR ?g_UploadBuffer@@3PEAUVkBuffer_T@@EA, rbx
$LN13@ImGui_Impl:
; Line 788
	mov	rdx, QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA
	test	rdx, rdx
	je	SHORT $LN14@ImGui_Impl
; Line 790
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkFreeMemory
; Line 791
	mov	QWORD PTR ?g_UploadBufferMemory@@3PEAUVkDeviceMemory_T@@EA, rbx
$LN14@ImGui_Impl:
; Line 801
	mov	rdx, QWORD PTR ?g_FontView@@3PEAUVkImageView_T@@EA
	test	rdx, rdx
	je	SHORT $LN4@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyImageView
	mov	QWORD PTR ?g_FontView@@3PEAUVkImageView_T@@EA, rbx
$LN4@ImGui_Impl:
; Line 802
	mov	rdx, QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA
	test	rdx, rdx
	je	SHORT $LN5@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyImage
	mov	QWORD PTR ?g_FontImage@@3PEAUVkImage_T@@EA, rbx
$LN5@ImGui_Impl:
; Line 803
	mov	rdx, QWORD PTR ?g_FontMemory@@3PEAUVkDeviceMemory_T@@EA
	test	rdx, rdx
	je	SHORT $LN6@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkFreeMemory
	mov	QWORD PTR ?g_FontMemory@@3PEAUVkDeviceMemory_T@@EA, rbx
$LN6@ImGui_Impl:
; Line 804
	mov	rdx, QWORD PTR ?g_FontSampler@@3PEAUVkSampler_T@@EA
	test	rdx, rdx
	je	SHORT $LN7@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroySampler
	mov	QWORD PTR ?g_FontSampler@@3PEAUVkSampler_T@@EA, rbx
$LN7@ImGui_Impl:
; Line 805
	mov	rdx, QWORD PTR ?g_DescriptorSetLayout@@3PEAUVkDescriptorSetLayout_T@@EA
	test	rdx, rdx
	je	SHORT $LN8@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyDescriptorSetLayout
	mov	QWORD PTR ?g_DescriptorSetLayout@@3PEAUVkDescriptorSetLayout_T@@EA, rbx
$LN8@ImGui_Impl:
; Line 806
	mov	rdx, QWORD PTR ?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA
	test	rdx, rdx
	je	SHORT $LN9@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyPipelineLayout
	mov	QWORD PTR ?g_PipelineLayout@@3PEAUVkPipelineLayout_T@@EA, rbx
$LN9@ImGui_Impl:
; Line 807
	mov	rdx, QWORD PTR ?g_Pipeline@@3PEAUVkPipeline_T@@EA
	test	rdx, rdx
	je	SHORT $LN10@ImGui_Impl
	mov	r8, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+72
	mov	rcx, QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16
	call	vkDestroyPipeline
	mov	QWORD PTR ?g_Pipeline@@3PEAUVkPipeline_T@@EA, rbx
$LN10@ImGui_Impl:
; Line 836
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?ImGui_ImplVulkan_Shutdown@@YAXXZ ENDP			; ImGui_ImplVulkan_Shutdown
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ImGui_ImplVulkan_Init@@YA_NPEAUImGui_ImplVulkan_InitInfo@@PEAUVkRenderPass_T@@@Z
_TEXT	SEGMENT
info$ = 48
render_pass$ = 56
?ImGui_ImplVulkan_Init@@YA_NPEAUImGui_ImplVulkan_InitInfo@@PEAUVkRenderPass_T@@@Z PROC ; ImGui_ImplVulkan_Init, COMDAT
; File E:\reps\ocornut\imgui\examples\imgui_impl_vulkan.cpp
; Line 811
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx
; Line 813
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
; Line 814
	lea	rcx, OFFSET FLAT:??_C@_0BC@CDBPHIBM@imgui_impl_vulkan@
; Line 815
	or	DWORD PTR [rax+4], 8
	mov	QWORD PTR [rax+216], rcx
; Line 817
	cmp	QWORD PTR [rbx], 0
	jne	SHORT $LN3@ImGui_Impl
	mov	r8d, 817				; 00000331H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CI@BJEDLNB@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?5@
	call	QWORD PTR __imp__wassert
$LN3@ImGui_Impl:
; Line 818
	cmp	QWORD PTR [rbx+8], 0
	jne	SHORT $LN4@ImGui_Impl
	mov	r8d, 818				; 00000332H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DE@KKOBOIGD@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AAD@
	call	QWORD PTR __imp__wassert
$LN4@ImGui_Impl:
; Line 819
	cmp	QWORD PTR [rbx+16], 0
	jne	SHORT $LN5@ImGui_Impl
	mov	r8d, 819				; 00000333H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CE@PJDNKGKP@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CB?$AA?$DN@
	call	QWORD PTR __imp__wassert
$LN5@ImGui_Impl:
; Line 820
	cmp	QWORD PTR [rbx+32], 0
	jne	SHORT $LN6@ImGui_Impl
	mov	r8d, 820				; 00000334H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CC@OENKIMLO@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
	call	QWORD PTR __imp__wassert
$LN6@ImGui_Impl:
; Line 821
	cmp	QWORD PTR [rbx+48], 0
	jne	SHORT $LN7@ImGui_Impl
	mov	r8d, 821				; 00000335H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DE@PIBAMHLP@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo@
	call	QWORD PTR __imp__wassert
$LN7@ImGui_Impl:
; Line 822
	mov	eax, DWORD PTR [rbx+56]
	cmp	eax, 2
	jae	SHORT $LN8@ImGui_Impl
	mov	r8d, 822				; 00000336H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DC@FFONJKND@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAM?$AAi?$AAn?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC@
	call	QWORD PTR __imp__wassert
	mov	eax, DWORD PTR [rbx+56]
$LN8@ImGui_Impl:
; Line 823
	cmp	DWORD PTR [rbx+60], eax
	jae	SHORT $LN9@ImGui_Impl
	mov	r8d, 823				; 00000337H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1FA@GGGJGPKH@?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAI?$AAm?$AAa?$AAg?$AAe?$AAC?$AAo?$AAu?$AAn@
	call	QWORD PTR __imp__wassert
$LN9@ImGui_Impl:
; Line 824
	test	rdi, rdi
	jne	SHORT $LN10@ImGui_Impl
	mov	r8d, 824				; 00000338H
	lea	rdx, OFFSET FLAT:??_C@_1GK@JEOGKMKA@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1CC@GENAFDPP@?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AA_?$AAp?$AAa?$AAs?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
	call	QWORD PTR __imp__wassert
$LN10@ImGui_Impl:
; Line 826
	movups	xmm0, XMMWORD PTR [rbx]
; Line 827
	mov	QWORD PTR ?g_RenderPass@@3PEAUVkRenderPass_T@@EA, rdi
	movaps	XMMWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A, xmm0
	movups	xmm1, XMMWORD PTR [rbx+16]
	movaps	XMMWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+16, xmm1
	movups	xmm0, XMMWORD PTR [rbx+32]
	movaps	XMMWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+32, xmm0
	movups	xmm1, XMMWORD PTR [rbx+48]
	movaps	XMMWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+48, xmm1
	movups	xmm0, XMMWORD PTR [rbx+64]
	movaps	XMMWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+64, xmm0
	movsd	xmm1, QWORD PTR [rbx+80]
	movsd	QWORD PTR ?g_VulkanInitInfo@@3UImGui_ImplVulkan_InitInfo@@A+80, xmm1
; Line 828
	call	?ImGui_ImplVulkan_CreateDeviceObjects@@YA_NXZ ; ImGui_ImplVulkan_CreateDeviceObjects
; Line 831
	mov	rbx, QWORD PTR [rsp+48]
	mov	al, 1
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?ImGui_ImplVulkan_Init@@YA_NPEAUImGui_ImplVulkan_InitInfo@@PEAUVkRenderPass_T@@@Z ENDP ; ImGui_ImplVulkan_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??A?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@H@Z PROC	; ImVector<ImDrawCmd>::operator[], COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 1327
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rbx, edx
	mov	rdi, rcx
	cmp	ebx, DWORD PTR [rcx]
	jl	SHORT $LN3@operator
	mov	r8d, 1327				; 0000052fH
	lea	rdx, OFFSET FLAT:??_C@_1DM@FHBHLGAJ@?$AAE?$AA?3?$AA?1?$AAr?$AAe?$AAp?$AAs?$AA?1?$AAo?$AAc?$AAo?$AAr?$AAn?$AAu?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1BC@DCMHDKFO@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
$LN3@operator:
	imul	rax, rbx, 56				; 00000038H
	mov	rbx, QWORD PTR [rsp+48]
	add	rax, QWORD PTR [rdi+8]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@H@Z ENDP	; ImVector<ImDrawCmd>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ImVec4@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ImVec4@@QEAA@XZ PROC					; ImVec4::ImVec4, COMDAT
; File E:\reps\ocornut\imgui\imgui.h
; Line 224
	xor	eax, eax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0ImVec4@@QEAA@XZ ENDP					; ImVec4::ImVec4
_TEXT	ENDS
END
