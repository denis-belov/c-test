; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?premul32@QUAT@DATA@XGK@@YAXPEAX0@Z		; XGK::DATA::QUAT::premul32
PUBLIC	?postmul32@QUAT@DATA@XGK@@YAXPEAX0@Z		; XGK::DATA::QUAT::postmul32
PUBLIC	?makeRotation32@QUAT@DATA@XGK@@YAXPEAX0M@Z	; XGK::DATA::QUAT::makeRotation32
PUBLIC	__real@3f000000
EXTRN	cosf:PROC
EXTRN	sinf:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?premul32@QUAT@DATA@XGK@@YAXPEAX0@Z DD imagerel $LN4
	DD	imagerel $LN4+225
	DD	imagerel $unwind$?premul32@QUAT@DATA@XGK@@YAXPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?postmul32@QUAT@DATA@XGK@@YAXPEAX0@Z DD imagerel $LN4
	DD	imagerel $LN4+225
	DD	imagerel $unwind$?postmul32@QUAT@DATA@XGK@@YAXPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?makeRotation32@QUAT@DATA@XGK@@YAXPEAX0M@Z DD imagerel $LN9
	DD	imagerel $LN9+103
	DD	imagerel $unwind$?makeRotation32@QUAT@DATA@XGK@@YAXPEAX0M@Z
pdata	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?makeRotation32@QUAT@DATA@XGK@@YAXPEAX0M@Z DD 060f01H
	DD	02680fH
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?postmul32@QUAT@DATA@XGK@@YAXPEAX0@Z DD 052e01H
	DD	0782eH
	DD	016822H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?premul32@QUAT@DATA@XGK@@YAXPEAX0@Z DD 052601H
	DD	07826H
	DD	01681aH
	DD	04204H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?makeRotation32@QUAT@DATA@XGK@@YAXPEAX0M@Z
_TEXT	SEGMENT
data$ = 64
axis$ = 72
angle$ = 80
?makeRotation32@QUAT@DATA@XGK@@YAXPEAX0M@Z PROC		; XGK::DATA::QUAT::makeRotation32, COMDAT
; File E:\reps\denis-belov\xgk_\src\data\quat\quat-32.cpp
; Line 45
$LN9:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	movaps	XMMWORD PTR [rsp+32], xmm6
	mov	rbx, rdx
	movaps	xmm6, xmm2
	mov	rdi, rcx
	mulss	xmm6, DWORD PTR __real@3f000000
	movaps	xmm0, xmm6
	call	sinf
	movaps	xmm1, xmm0
	movaps	xmm2, xmm0
	mulss	xmm1, DWORD PTR [rbx]
	movss	DWORD PTR [rdi], xmm1
	mulss	xmm2, DWORD PTR [rbx+4]
	movss	DWORD PTR [rdi+4], xmm2
	mulss	xmm0, DWORD PTR [rbx+8]
	movss	DWORD PTR [rdi+8], xmm0
	movaps	xmm0, xmm6
	call	cosf
	mov	rbx, QWORD PTR [rsp+64]
	movaps	xmm6, XMMWORD PTR [rsp+32]
	movss	DWORD PTR [rdi+12], xmm0
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?makeRotation32@QUAT@DATA@XGK@@YAXPEAX0M@Z ENDP		; XGK::DATA::QUAT::makeRotation32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?postmul32@QUAT@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
data0$ = 48
data1$ = 56
?postmul32@QUAT@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::QUAT::postmul32, COMDAT
; File E:\reps\denis-belov\xgk_\src\data\quat\quat-32.cpp
; Line 27
$LN4:
	sub	rsp, 40					; 00000028H
; Line 32
	movss	xmm4, DWORD PTR [rcx]
; Line 33
	movss	xmm5, DWORD PTR [rcx+4]
; Line 37
	movaps	xmm2, xmm4
	mulss	xmm2, DWORD PTR [rdx+12]
	movaps	xmm1, xmm5
	mulss	xmm1, DWORD PTR [rdx+8]
	movaps	XMMWORD PTR [rsp+16], xmm6
	movss	xmm6, DWORD PTR [rcx+12]
	movaps	xmm0, xmm6
	movaps	XMMWORD PTR [rsp], xmm7
	mulss	xmm0, DWORD PTR [rdx]
; Line 38
	movaps	xmm3, xmm6
	movss	xmm7, DWORD PTR [rcx+8]
	addss	xmm2, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, DWORD PTR [rdx+4]
	addss	xmm2, xmm1
	movaps	xmm1, xmm7
	subss	xmm2, xmm0
	movaps	xmm0, xmm5
	movss	DWORD PTR [rcx], xmm2
; Line 39
	movaps	xmm2, xmm6
	mulss	xmm0, DWORD PTR [rdx+12]
	mulss	xmm3, DWORD PTR [rdx+4]
	mulss	xmm1, DWORD PTR [rdx]
	addss	xmm3, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR [rdx+8]
	addss	xmm3, xmm1
	movaps	xmm1, xmm4
	subss	xmm3, xmm0
	movaps	xmm0, xmm7
	movss	DWORD PTR [rcx+4], xmm3
	mulss	xmm2, DWORD PTR [rdx+8]
	mulss	xmm0, DWORD PTR [rdx+12]
	mulss	xmm1, DWORD PTR [rdx+4]
	addss	xmm2, xmm0
	movaps	xmm0, xmm5
	mulss	xmm0, DWORD PTR [rdx]
	addss	xmm2, xmm1
	subss	xmm2, xmm0
	movss	DWORD PTR [rcx+8], xmm2
; Line 40
	mulss	xmm6, DWORD PTR [rdx+12]
	mulss	xmm7, DWORD PTR [rdx+8]
	mulss	xmm4, DWORD PTR [rdx]
	mulss	xmm5, DWORD PTR [rdx+4]
	subss	xmm6, xmm4
	subss	xmm6, xmm5
	addss	xmm6, xmm7
; Line 41
	movaps	xmm7, XMMWORD PTR [rsp]
	movss	DWORD PTR [rcx+12], xmm6
	movaps	xmm6, XMMWORD PTR [rsp+16]
	add	rsp, 40					; 00000028H
	ret	0
?postmul32@QUAT@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::QUAT::postmul32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?premul32@QUAT@DATA@XGK@@YAXPEAX0@Z
_TEXT	SEGMENT
data0$ = 48
data1$ = 56
?premul32@QUAT@DATA@XGK@@YAXPEAX0@Z PROC		; XGK::DATA::QUAT::premul32, COMDAT
; File E:\reps\denis-belov\xgk_\src\data\quat\quat-32.cpp
; Line 9
$LN4:
	sub	rsp, 40					; 00000028H
; Line 14
	movss	xmm4, DWORD PTR [rcx]
; Line 15
	movss	xmm5, DWORD PTR [rcx+4]
; Line 19
	movaps	xmm2, xmm4
	mulss	xmm2, DWORD PTR [rdx+12]
	movaps	XMMWORD PTR [rsp+16], xmm6
	movss	xmm6, DWORD PTR [rcx+12]
	movaps	xmm0, xmm6
	movaps	XMMWORD PTR [rsp], xmm7
	mulss	xmm0, DWORD PTR [rdx]
; Line 20
	movaps	xmm3, xmm6
	movss	xmm7, DWORD PTR [rcx+8]
	movaps	xmm1, xmm7
	mulss	xmm1, DWORD PTR [rdx+4]
	addss	xmm2, xmm0
	movaps	xmm0, xmm5
	mulss	xmm0, DWORD PTR [rdx+8]
	addss	xmm2, xmm1
	movaps	xmm1, xmm4
	subss	xmm2, xmm0
	movaps	xmm0, xmm5
	movss	DWORD PTR [rcx], xmm2
; Line 21
	movaps	xmm2, xmm6
	mulss	xmm0, DWORD PTR [rdx+12]
	mulss	xmm3, DWORD PTR [rdx+4]
	mulss	xmm1, DWORD PTR [rdx+8]
	addss	xmm3, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, DWORD PTR [rdx]
	addss	xmm3, xmm1
	movaps	xmm1, xmm5
	subss	xmm3, xmm0
	movaps	xmm0, xmm7
	movss	DWORD PTR [rcx+4], xmm3
	mulss	xmm2, DWORD PTR [rdx+8]
	mulss	xmm0, DWORD PTR [rdx+12]
	mulss	xmm1, DWORD PTR [rdx]
	addss	xmm2, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR [rdx+4]
	addss	xmm2, xmm1
	subss	xmm2, xmm0
	movss	DWORD PTR [rcx+8], xmm2
; Line 22
	mulss	xmm6, DWORD PTR [rdx+12]
	mulss	xmm7, DWORD PTR [rdx+8]
	mulss	xmm4, DWORD PTR [rdx]
	mulss	xmm5, DWORD PTR [rdx+4]
	subss	xmm6, xmm4
	subss	xmm6, xmm5
	addss	xmm6, xmm7
; Line 23
	movaps	xmm7, XMMWORD PTR [rsp]
	movss	DWORD PTR [rcx+12], xmm6
	movaps	xmm6, XMMWORD PTR [rsp+16]
	add	rsp, 40					; 00000028H
	ret	0
?premul32@QUAT@DATA@XGK@@YAXPEAX0@Z ENDP		; XGK::DATA::QUAT::premul32
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 8
?sin@@YAMM@Z PROC					; sin, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\cmath
; Line 230
	jmp	sinf
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 8
?cos@@YAMM@Z PROC					; cos, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\cmath
; Line 66
	jmp	cosf
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
END
